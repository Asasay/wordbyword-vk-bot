//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org
/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
/*!
 * clipboard.js v2.0.6
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
/* ItemSlide.js - Licensed under the MIT license - itemslide.org/license.html */
/* touchSideSwipe v0.3.1
 * https://github.com/Lucyway/touch-sideswipe
 * 2018 (c) Mititelu Nick (aka freetitelu). MIT license.
 */
var requirejs, require, define;
(function (ba) {
	function G(e) {
		return "[object Function]" === K.call(e);
	}

	function H(e) {
		return "[object Array]" === K.call(e);
	}

	function v(e, t) {
		if (e) {
			var n;
			for (n = 0; n < e.length && (!e[n] || !t(e[n], n, e)); n += 1);
		}
	}

	function T(e, t) {
		if (e) {
			var n;
			for (n = e.length - 1; -1 < n && (!e[n] || !t(e[n], n, e)); n -= 1);
		}
	}

	function t(e, t) {
		return fa.call(e, t);
	}

	function m(e, n) {
		return t(e, n) && e[n];
	}

	function B(e, n) {
		for (var r in e) if (t(e, r) && n(e[r], r)) break;
	}

	function U(e, n, r, i) {
		return (
			n &&
				B(n, function (n, s) {
					if (r || !t(e, s))
						i && "object" == typeof n && n && !H(n) && !G(n) && !(n instanceof RegExp)
							? (e[s] || (e[s] = {}), U(e[s], n, r, i))
							: (e[s] = n);
				}),
			e
		);
	}

	function u(e, t) {
		return function () {
			return t.apply(e, arguments);
		};
	}

	function ca(e) {
		throw e;
	}

	function da(e) {
		if (!e) return e;
		var t = ba;
		return (
			v(e.split("."), function (e) {
				t = t[e];
			}),
			t
		);
	}

	function C(e, t, n, r) {
		return (
			(t = Error(t + "\nhttp://requirejs.org/docs/errors.html#" + e)),
			(t.requireType = e),
			(t.requireModules = r),
			n && (t.originalError = n),
			t
		);
	}

	function ga(e) {
		function n(e, t, n) {
			var r,
				i,
				s,
				o,
				u,
				a,
				f,
				l,
				t = t && t.split("/"),
				c = A.map,
				h = c && c["*"];
			if (e) {
				(e = e.split("/")),
					(i = e.length - 1),
					A.nodeIdCompat && Q.test(e[i]) && (e[i] = e[i].replace(Q, "")),
					"." === e[0].charAt(0) && t && ((i = t.slice(0, t.length - 1)), (e = i.concat(e))),
					(i = e);
				for (s = 0; s < i.length; s++)
					((o = i[s]), "." === o)
						? (i.splice(s, 1), (s -= 1))
						: ".." === o &&
						  0 !== s &&
						  (1 != s || ".." !== i[2]) &&
						  ".." !== i[s - 1] &&
						  0 < s &&
						  (i.splice(s - 1, 2), (s -= 2));
				e = e.join("/");
			}
			if (n && c && (t || h)) {
				(i = e.split("/")), (s = i.length);
				e: for (; 0 < s; s -= 1) {
					u = i.slice(0, s).join("/");
					if (t)
						for (o = t.length; 0 < o; o -= 1)
							if ((n = m(c, t.slice(0, o).join("/"))))
								if ((n = m(n, u))) {
									(r = n), (a = s);
									break e;
								}
					!f && h && m(h, u) && ((f = m(h, u)), (l = s));
				}
				!r && f && ((r = f), (a = l)), r && (i.splice(0, a, r), (e = i.join("/")));
			}
			return (r = m(A.pkgs, e)) ? r : e;
		}

		function r(e) {
			z &&
				v(document.getElementsByTagName("script"), function (t) {
					if (
						t.getAttribute("data-requiremodule") === e &&
						t.getAttribute("data-requirecontext") === x.contextName
					)
						return t.parentNode.removeChild(t), !0;
				});
		}

		function i(e) {
			var t = m(A.paths, e);
			if (t && H(t) && 1 < t.length)
				return (
					t.shift(),
					x.require.undef(e),
					x.makeRequire(null, {
						skipMap: !0,
					})([e]),
					!0
				);
		}

		function s(e) {
			var t,
				n = e ? e.indexOf("!") : -1;
			return -1 < n && ((t = e.substring(0, n)), (e = e.substring(n + 1, e.length))), [t, e];
		}

		function o(e, t, r, i) {
			var o,
				u,
				a = null,
				f = t ? t.name : null,
				l = e,
				c = !0,
				h = "";
			return (
				e || ((c = !1), (e = "_@r" + (q += 1))),
				(e = s(e)),
				(a = e[0]),
				(e = e[1]),
				a && ((a = n(a, f, i)), (u = m(j, a))),
				e &&
					(a
						? (h =
								u && u.normalize
									? u.normalize(e, function (e) {
											return n(e, f, i);
									  })
									: -1 === e.indexOf("!")
									? n(e, f, i)
									: e)
						: ((h = n(e, f, i)),
						  (e = s(h)),
						  (a = e[0]),
						  (h = e[1]),
						  (r = !0),
						  (o = x.nameToUrl(h)))),
				(r = a && !u && !r ? "_unnormalized" + (W += 1) : ""),
				{
					prefix: a,
					name: h,
					parentMap: t,
					unnormalized: !!r,
					url: o,
					originalName: l,
					isDefine: c,
					id: (a ? a + "!" + h : h) + r,
				}
			);
		}

		function a(e) {
			var t = e.id,
				n = m(O, t);
			return n || (n = O[t] = new x.Module(e)), n;
		}

		function f(e, n, r) {
			var i = e.id,
				s = m(O, i);
			t(j, i) && (!s || s.defineEmitComplete)
				? "defined" === n && r(j[i])
				: ((s = a(e)), s.error && "error" === n)
				? r(s.error)
				: s.on(n, r);
		}

		function l(e, t) {
			var n = e.requireModules,
				r = !1;
			t
				? t(e)
				: (v(n, function (t) {
						if ((t = m(O, t))) (t.error = e), t.events.error && ((r = !0), t.emit("error", e));
				  }),
				  !r) && g.onError(e);
		}

		function c() {
			R.length && (ha.apply(P, [P.length, 0].concat(R)), (R = []));
		}

		function h(e) {
			delete O[e], delete _[e];
		}

		function p(e, t, n) {
			var r = e.map.id;
			e.error
				? e.emit("error", e.error)
				: ((t[r] = !0),
				  v(e.depMaps, function (r, i) {
						var s = r.id,
							o = m(O, s);
						o &&
							!e.depMatched[i] &&
							!n[s] &&
							(m(t, s) ? (e.defineDep(i, j[s]), e.check()) : p(o, t, n));
				  }),
				  (n[r] = !0));
		}

		function d() {
			var e,
				t,
				n = (e = 1e3 * A.waitSeconds) && x.startTime + e < new Date().getTime(),
				s = [],
				o = [],
				u = !1,
				a = !0;
			if (!E) {
				(E = !0),
					B(_, function (e) {
						var f = e.map,
							l = f.id;
						if (e.enabled && (f.isDefine || o.push(e), !e.error))
							if (!e.inited && n) i(l) ? (u = t = !0) : (s.push(l), r(l));
							else if (!e.inited && e.fetched && f.isDefine && ((u = !0), !f.prefix))
								return (a = !1);
					});
				if (n && s.length)
					return (
						(e = C("timeout", "Load timeout for modules: " + s, null, s)),
						(e.contextName = x.contextName),
						l(e)
					);
				a &&
					v(o, function (e) {
						p(e, {}, {});
					}),
					(!n || t) &&
						u &&
						(z || ea) &&
						!L &&
						(L = setTimeout(function () {
							(L = 0), d();
						}, 50)),
					(E = !1);
			}
		}

		function y(e) {
			t(j, e[0]) || a(o(e[0], null, !0)).init(e[1], e[2]);
		}

		function b(e) {
			var e = e.currentTarget || e.srcElement,
				t = x.onScriptLoad;
			return (
				e.detachEvent && !Y
					? e.detachEvent("onreadystatechange", t)
					: e.removeEventListener("load", t, !1),
				(t = x.onScriptError),
				(!e.detachEvent || Y) && e.removeEventListener("error", t, !1),
				{
					node: e,
					id: e && e.getAttribute("data-requiremodule"),
				}
			);
		}

		function w() {
			var e;
			for (c(); P.length; ) {
				e = P.shift();
				if (null === e[0])
					return l(C("mismatch", "Mismatched anonymous define() module: " + e[e.length - 1]));
				y(e);
			}
		}
		var E,
			S,
			x,
			k,
			L,
			A = {
				waitSeconds: 7,
				baseUrl: "./",
				paths: {},
				bundles: {},
				pkgs: {},
				shim: {},
				config: {},
			},
			O = {},
			_ = {},
			D = {},
			P = [],
			j = {},
			F = {},
			I = {},
			q = 1,
			W = 1;
		return (
			(k = {
				require: function (e) {
					return e.require ? e.require : (e.require = x.makeRequire(e.map));
				},
				exports: function (e) {
					e.usingExports = !0;
					if (e.map.isDefine)
						return e.exports ? (j[e.map.id] = e.exports) : (e.exports = j[e.map.id] = {});
				},
				module: function (e) {
					return e.module
						? e.module
						: (e.module = {
								id: e.map.id,
								uri: e.map.url,
								config: function () {
									return m(A.config, e.map.id) || {};
								},
								exports: e.exports || (e.exports = {}),
						  });
				},
			}),
			(S = function (e) {
				(this.events = m(D, e.id) || {}),
					(this.map = e),
					(this.shim = m(A.shim, e.id)),
					(this.depExports = []),
					(this.depMaps = []),
					(this.depMatched = []),
					(this.pluginMaps = {}),
					(this.depCount = 0);
			}),
			(S.prototype = {
				init: function (e, t, n, r) {
					(r = r || {}),
						this.inited ||
							((this.factory = t),
							n
								? this.on("error", n)
								: this.events.error &&
								  (n = u(this, function (e) {
										this.emit("error", e);
								  })),
							(this.depMaps = e && e.slice(0)),
							(this.errback = n),
							(this.inited = !0),
							(this.ignore = r.ignore),
							r.enabled || this.enabled ? this.enable() : this.check());
				},
				defineDep: function (e, t) {
					this.depMatched[e] ||
						((this.depMatched[e] = !0), (this.depCount -= 1), (this.depExports[e] = t));
				},
				fetch: function () {
					if (!this.fetched) {
						(this.fetched = !0), (x.startTime = new Date().getTime());
						var e = this.map;
						if (!this.shim) return e.prefix ? this.callPlugin() : this.load();
						x.makeRequire(this.map, {
							enableBuildCallback: !0,
						})(
							this.shim.deps || [],
							u(this, function () {
								return e.prefix ? this.callPlugin() : this.load();
							})
						);
					}
				},
				load: function () {
					var e = this.map.url;
					F[e] || ((F[e] = !0), x.load(this.map.id, e));
				},
				check: function () {
					if (this.enabled && !this.enabling) {
						var e,
							t,
							n = this.map.id;
						t = this.depExports;
						var r = this.exports,
							i = this.factory;
						if (this.inited) {
							if (this.error) this.emit("error", this.error);
							else if (!this.defining) {
								this.defining = !0;
								if (1 > this.depCount && !this.defined) {
									if (G(i)) {
										if ((this.events.error && this.map.isDefine) || g.onError !== ca)
											try {
												r = x.execCb(n, i, t, r);
											} catch (s) {
												e = s;
											}
										else r = x.execCb(n, i, t, r);
										this.map.isDefine &&
											void 0 === r &&
											((t = this.module)
												? (r = t.exports)
												: this.usingExports && (r = this.exports));
										if (e)
											return (
												(e.requireMap = this.map),
												(e.requireModules = this.map.isDefine ? [this.map.id] : null),
												(e.requireType = this.map.isDefine ? "define" : "require"),
												l((this.error = e))
											);
									} else r = i;
									(this.exports = r),
										this.map.isDefine &&
											!this.ignore &&
											((j[n] = r), g.onResourceLoad) &&
											g.onResourceLoad(x, this.map, this.depMaps),
										h(n),
										(this.defined = !0);
								}
								(this.defining = !1),
									this.defined &&
										!this.defineEmitted &&
										((this.defineEmitted = !0),
										this.emit("defined", this.exports),
										(this.defineEmitComplete = !0));
							}
						} else this.fetch();
					}
				},
				callPlugin: function () {
					var e = this.map,
						r = e.id,
						i = o(e.prefix);
					this.depMaps.push(i),
						f(
							i,
							"defined",
							u(this, function (i) {
								var s, c;
								c = m(I, this.map.id);
								var p = this.map.name,
									d = this.map.parentMap ? this.map.parentMap.name : null,
									v = x.makeRequire(e.parentMap, {
										enableBuildCallback: !0,
									});
								if (this.map.unnormalized) {
									if (
										(i.normalize &&
											(p =
												i.normalize(p, function (e) {
													return n(e, d, !0);
												}) || ""),
										(i = o(e.prefix + "!" + p, this.map.parentMap)),
										f(
											i,
											"defined",
											u(this, function (e) {
												this.init(
													[],
													function () {
														return e;
													},
													null,
													{
														enabled: !0,
														ignore: !0,
													}
												);
											})
										),
										(c = m(O, i.id)))
									)
										this.depMaps.push(i),
											this.events.error &&
												c.on(
													"error",
													u(this, function (e) {
														this.emit("error", e);
													})
												),
											c.enable();
								} else
									c
										? ((this.map.url = x.nameToUrl(c)), this.load())
										: ((s = u(this, function (e) {
												this.init(
													[],
													function () {
														return e;
													},
													null,
													{
														enabled: !0,
													}
												);
										  })),
										  (s.error = u(this, function (e) {
												(this.inited = !0),
													(this.error = e),
													(e.requireModules = [r]),
													B(O, function (e) {
														0 === e.map.id.indexOf(r + "_unnormalized") && h(e.map.id);
													}),
													l(e);
										  })),
										  (s.fromText = u(this, function (n, i) {
												var u = e.name,
													f = o(u),
													c = M;
												i && (n = i),
													c && (M = !1),
													a(f),
													t(A.config, r) && (A.config[u] = A.config[r]);
												try {
													g.exec(n);
												} catch (h) {
													return l(
														C("fromtexteval", "fromText eval for " + r + " failed: " + h, h, [r])
													);
												}
												c && (M = !0), this.depMaps.push(f), x.completeLoad(u), v([u], s);
										  })),
										  i.load(e.name, v, s, A));
							})
						),
						x.enable(i, this),
						(this.pluginMaps[i.id] = i);
				},
				enable: function () {
					(_[this.map.id] = this),
						(this.enabling = this.enabled = !0),
						v(
							this.depMaps,
							u(this, function (e, n) {
								var r, i;
								if ("string" == typeof e) {
									(e = o(e, this.map.isDefine ? this.map : this.map.parentMap, !1, !this.skipMap)),
										(this.depMaps[n] = e);
									if ((r = m(k, e.id))) {
										this.depExports[n] = r(this);
										return;
									}
									(this.depCount += 1),
										f(
											e,
											"defined",
											u(this, function (e) {
												this.defineDep(n, e), this.check();
											})
										),
										this.errback && f(e, "error", u(this, this.errback));
								}
								(r = e.id), (i = O[r]), !t(k, r) && i && !i.enabled && x.enable(e, this);
							})
						),
						B(
							this.pluginMaps,
							u(this, function (e) {
								var t = m(O, e.id);
								t && !t.enabled && x.enable(e, this);
							})
						),
						(this.enabling = !1),
						this.check();
				},
				on: function (e, t) {
					var n = this.events[e];
					n || (n = this.events[e] = []), n.push(t);
				},
				emit: function (e, t) {
					v(this.events[e], function (e) {
						e(t);
					}),
						"error" === e && delete this.events[e];
				},
			}),
			(x = {
				config: A,
				contextName: e,
				registry: O,
				defined: j,
				urlFetched: F,
				defQueue: P,
				Module: S,
				makeModuleMap: o,
				nextTick: g.nextTick,
				onError: l,
				configure: function (e) {
					e.baseUrl && "/" !== e.baseUrl.charAt(e.baseUrl.length - 1) && (e.baseUrl += "/");
					var t = A.shim,
						n = {
							paths: !0,
							bundles: !0,
							config: !0,
							map: !0,
						};
					B(e, function (e, t) {
						n[t] ? (A[t] || (A[t] = {}), U(A[t], e, !0, !0)) : (A[t] = e);
					}),
						e.bundles &&
							B(e.bundles, function (e, t) {
								v(e, function (e) {
									e !== t && (I[e] = t);
								});
							}),
						e.shim &&
							(B(e.shim, function (e, n) {
								H(e) &&
									(e = {
										deps: e,
									}),
									(e.exports || e.init) && !e.exportsFn && (e.exportsFn = x.makeShimExports(e)),
									(t[n] = e);
							}),
							(A.shim = t)),
						e.packages &&
							v(e.packages, function (e) {
								var t,
									e =
										"string" == typeof e
											? {
													name: e,
											  }
											: e;
								(t = e.name),
									e.location && (A.paths[t] = e.location),
									(A.pkgs[t] = e.name + "/" + (e.main || "main").replace(ia, "").replace(Q, ""));
							}),
						B(O, function (e, t) {
							!e.inited && !e.map.unnormalized && (e.map = o(t));
						}),
						(e.deps || e.callback) && x.require(e.deps || [], e.callback);
				},
				makeShimExports: function (e) {
					return function () {
						var t;
						return e.init && (t = e.init.apply(ba, arguments)), t || (e.exports && da(e.exports));
					};
				},
				makeRequire: function (i, s) {
					function u(n, r, f) {
						var c, h;
						return (
							s.enableBuildCallback && r && G(r) && (r.__requireJsBuild = !0),
							"string" == typeof n
								? G(r)
									? l(C("requireargs", "Invalid require call"), f)
									: i && t(k, n)
									? k[n](O[i.id])
									: g.get
									? g.get(x, n, i, u)
									: ((c = o(n, i, !1, !0)),
									  (c = c.id),
									  t(j, c)
											? j[c]
											: l(
													C(
														"notloaded",
														'Module name "' +
															c +
															'" has not been loaded yet for context: ' +
															e +
															(i ? "" : ". Use require([])")
													)
											  ))
								: (w(),
								  x.nextTick(function () {
										w(),
											(h = a(o(null, i))),
											(h.skipMap = s.skipMap),
											h.init(n, r, f, {
												enabled: !0,
											}),
											d();
								  }),
								  u)
						);
					}
					return (
						(s = s || {}),
						U(u, {
							isBrowser: z,
							toUrl: function (e) {
								var t,
									r = e.lastIndexOf("."),
									s = e.split("/")[0];
								return (
									-1 !== r &&
										(("." !== s && ".." !== s) || 1 < r) &&
										((t = e.substring(r, e.length)), (e = e.substring(0, r))),
									x.nameToUrl(n(e, i && i.id, !0), t, !0)
								);
							},
							defined: function (e) {
								return t(j, o(e, i, !1, !0).id);
							},
							specified: function (e) {
								return (e = o(e, i, !1, !0).id), t(j, e) || t(O, e);
							},
						}),
						i ||
							(u.undef = function (e) {
								c();
								var t = o(e, i, !0),
									n = m(O, e);
								r(e),
									delete j[e],
									delete F[t.url],
									delete D[e],
									T(P, function (t, n) {
										t[0] === e && P.splice(n, 1);
									}),
									n && (n.events.defined && (D[e] = n.events), h(e));
							}),
						u
					);
				},
				enable: function (e) {
					m(O, e.id) && a(e).enable();
				},
				completeLoad: function (e) {
					var n,
						r,
						s = m(A.shim, e) || {},
						o = s.exports;
					for (c(); P.length; ) {
						r = P.shift();
						if (null === r[0]) {
							r[0] = e;
							if (n) break;
							n = !0;
						} else r[0] === e && (n = !0);
						y(r);
					}
					r = m(O, e);
					if (!n && !t(j, e) && r && !r.inited) {
						if (A.enforceDefine && (!o || !da(o)))
							return i(e) ? void 0 : l(C("nodefine", "No define call for " + e, null, [e]));
						y([e, s.deps || [], s.exportsFn]);
					}
					d();
				},
				nameToUrl: function (e, t, n) {
					var r, i, s;
					(r = m(A.pkgs, e)) && (e = r);
					if ((r = m(I, e))) return x.nameToUrl(r, t, n);
					if (g.jsExtRegExp.test(e)) r = e + (t || "");
					else {
						(r = A.paths), (e = e.split("/"));
						for (i = e.length; 0 < i; i -= 1)
							if (((s = e.slice(0, i).join("/")), (s = m(r, s)))) {
								H(s) && (s = s[0]), e.splice(0, i, s);
								break;
							}
						(r = e.join("/")),
							(r += t || (/^data\:|\?/.test(r) || n ? "" : ".js")),
							(r = ("/" === r.charAt(0) || r.match(/^[\w\+\.\-]+:/) ? "" : A.baseUrl) + r);
					}
					return A.urlArgs ? r + ((-1 === r.indexOf("?") ? "?" : "&") + A.urlArgs) : r;
				},
				load: function (e, t) {
					g.load(x, e, t);
				},
				execCb: function (e, t, n, r) {
					return t.apply(r, n);
				},
				onScriptLoad: function (e) {
					if ("load" === e.type || ja.test((e.currentTarget || e.srcElement).readyState))
						(N = null), (e = b(e)), x.completeLoad(e.id);
				},
				onScriptError: function (e) {
					var t = b(e);
					if (!i(t.id)) return l(C("scripterror", "Script error for: " + t.id, e, [t.id]));
				},
			}),
			(x.require = x.makeRequire()),
			x
		);
	}
	var g,
		x,
		y,
		D,
		I,
		E,
		N,
		J,
		s,
		O,
		ka = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,
		la = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
		Q = /\.js$/,
		ia = /^\.\//;
	x = Object.prototype;
	var K = x.toString,
		fa = x.hasOwnProperty,
		ha = Array.prototype.splice,
		z = "undefined" != typeof window && "undefined" != typeof navigator && !!window.document,
		ea = !z && "undefined" != typeof importScripts,
		ja = z && "PLAYSTATION 3" === navigator.platform ? /^complete$/ : /^(complete|loaded)$/,
		Y = "undefined" != typeof opera && "[object Opera]" === opera.toString(),
		F = {},
		q = {},
		R = [],
		M = !1;
	if ("undefined" == typeof define) {
		if ("undefined" != typeof requirejs) {
			if (G(requirejs)) return;
			(q = requirejs), (requirejs = void 0);
		}
		"undefined" != typeof require && !G(require) && ((q = require), (require = void 0)),
			(g = requirejs =
				function (e, t, n, r) {
					var i,
						s = "_";
					return (
						!H(e) &&
							"string" != typeof e &&
							((i = e), H(t) ? ((e = t), (t = n), (n = r)) : (e = [])),
						i && i.context && (s = i.context),
						(r = m(F, s)) || (r = F[s] = g.s.newContext(s)),
						i && r.configure(i),
						r.require(e, t, n)
					);
				}),
			(g.config = function (e) {
				return g(e);
			}),
			(g.nextTick =
				"undefined" != typeof setTimeout
					? function (e) {
							setTimeout(e, 4);
					  }
					: function (e) {
							e();
					  }),
			require || (require = g),
			(g.version = "2.1.14"),
			(g.jsExtRegExp = /^\/|:|\?|\.js$/),
			(g.isBrowser = z),
			(x = g.s =
				{
					contexts: F,
					newContext: ga,
				}),
			g({}),
			v(["toUrl", "undef", "defined", "specified"], function (e) {
				g[e] = function () {
					var t = F._;
					return t.require[e].apply(t, arguments);
				};
			}),
			z &&
				((y = x.head = document.getElementsByTagName("head")[0]),
				(D = document.getElementsByTagName("base")[0])) &&
				(y = x.head = D.parentNode),
			(g.onError = ca),
			(g.createNode = function (e) {
				var t = e.xhtml
					? document.createElementNS("http://www.w3.org/1999/xhtml", "html:script")
					: document.createElement("script");
				return (
					(t.type = e.scriptType || "text/javascript"), (t.charset = "utf-8"), (t.async = !0), t
				);
			}),
			(g.load = function (e, t, n) {
				var r = (e && e.config) || {};
				if (z)
					return (
						(r = g.createNode(r, t, n)),
						r.setAttribute("data-requirecontext", e.contextName),
						r.setAttribute("data-requiremodule", t),
						r.attachEvent &&
						!(r.attachEvent.toString && 0 > r.attachEvent.toString().indexOf("[native code")) &&
						!Y
							? ((M = !0), r.attachEvent("onreadystatechange", e.onScriptLoad))
							: (r.addEventListener("load", e.onScriptLoad, !1),
							  r.addEventListener("error", e.onScriptError, !1)),
						(r.src = n),
						(J = r),
						D ? y.insertBefore(r, D) : y.appendChild(r),
						(J = null),
						r
					);
				if (ea)
					try {
						importScripts(n), e.completeLoad(t);
					} catch (i) {
						e.onError(C("importscripts", "importScripts failed for " + t + " at " + n, i, [t]));
					}
			}),
			z &&
				!q.skipDataMain &&
				T(document.getElementsByTagName("script"), function (e) {
					y || (y = e.parentNode);
					if ((I = e.getAttribute("data-main")))
						return (
							(s = I),
							q.baseUrl ||
								((E = s.split("/")),
								(s = E.pop()),
								(O = E.length ? E.join("/") + "/" : "./"),
								(q.baseUrl = O)),
							(s = s.replace(Q, "")),
							g.jsExtRegExp.test(s) && (s = I),
							(q.deps = q.deps ? q.deps.concat(s) : [s]),
							!0
						);
				}),
			(define = function (e, t, n) {
				var r, i;
				"string" != typeof e && ((n = t), (t = e), (e = null)),
					H(t) || ((n = t), (t = null)),
					!t &&
						G(n) &&
						((t = []),
						n.length &&
							(n
								.toString()
								.replace(ka, "")
								.replace(la, function (e, n) {
									t.push(n);
								}),
							(t = (1 === n.length ? ["require"] : ["require", "exports", "module"]).concat(t)))),
					M &&
						((r = J) ||
							((N && "interactive" === N.readyState) ||
								T(document.getElementsByTagName("script"), function (e) {
									if ("interactive" === e.readyState) return (N = e);
								}),
							(r = N)),
						r &&
							(e || (e = r.getAttribute("data-requiremodule")),
							(i = F[r.getAttribute("data-requirecontext")]))),
					(i ? i.defQueue : R).push([e, t, n]);
			}),
			(define.amd = {
				jQuery: !0,
			}),
			(g.exec = function (b) {
				return eval(b);
			}),
			g(q);
	}
})(this),
	define("requireLib", function () {}),
	function () {
		var e = this,
			t = e._,
			n = {},
			r = Array.prototype,
			i = Object.prototype,
			s = Function.prototype,
			o = r.push,
			u = r.slice,
			a = r.concat,
			f = i.toString,
			l = i.hasOwnProperty,
			c = r.forEach,
			h = r.map,
			p = r.reduce,
			d = r.reduceRight,
			v = r.filter,
			m = r.every,
			g = r.some,
			y = r.indexOf,
			b = r.lastIndexOf,
			w = Array.isArray,
			E = Object.keys,
			S = s.bind,
			x = function (e) {
				if (e instanceof x) return e;
				if (!(this instanceof x)) return new x(e);
				this._wrapped = e;
			};
		typeof exports != "undefined"
			? (typeof module != "undefined" && module.exports && (exports = module.exports = x),
			  (exports._ = x))
			: (e._ = x),
			(x.VERSION = "1.6.0");
		var T =
			(x.each =
			x.forEach =
				function (e, t, r) {
					if (e == null) return e;
					if (c && e.forEach === c) e.forEach(t, r);
					else if (e.length === +e.length) {
						for (var i = 0, s = e.length; i < s; i++) if (t.call(r, e[i], i, e) === n) return;
					} else {
						var o = x.keys(e);
						for (var i = 0, s = o.length; i < s; i++) if (t.call(r, e[o[i]], o[i], e) === n) return;
					}
					return e;
				});
		x.map = x.collect = function (e, t, n) {
			var r = [];
			return e == null
				? r
				: h && e.map === h
				? e.map(t, n)
				: (T(e, function (e, i, s) {
						r.push(t.call(n, e, i, s));
				  }),
				  r);
		};
		var N = "Reduce of empty array with no initial value";
		(x.reduce =
			x.foldl =
			x.inject =
				function (e, t, n, r) {
					var i = arguments.length > 2;
					e == null && (e = []);
					if (p && e.reduce === p) return r && (t = x.bind(t, r)), i ? e.reduce(t, n) : e.reduce(t);
					T(e, function (e, s, o) {
						i ? (n = t.call(r, n, e, s, o)) : ((n = e), (i = !0));
					});
					if (!i) throw new TypeError(N);
					return n;
				}),
			(x.reduceRight = x.foldr =
				function (e, t, n, r) {
					var i = arguments.length > 2;
					e == null && (e = []);
					if (d && e.reduceRight === d)
						return r && (t = x.bind(t, r)), i ? e.reduceRight(t, n) : e.reduceRight(t);
					var s = e.length;
					if (s !== +s) {
						var o = x.keys(e);
						s = o.length;
					}
					T(e, function (u, a, f) {
						(a = o ? o[--s] : --s), i ? (n = t.call(r, n, e[a], a, f)) : ((n = e[a]), (i = !0));
					});
					if (!i) throw new TypeError(N);
					return n;
				}),
			(x.find = x.detect =
				function (e, t, n) {
					var r;
					return (
						C(e, function (e, i, s) {
							if (t.call(n, e, i, s)) return (r = e), !0;
						}),
						r
					);
				}),
			(x.filter = x.select =
				function (e, t, n) {
					var r = [];
					return e == null
						? r
						: v && e.filter === v
						? e.filter(t, n)
						: (T(e, function (e, i, s) {
								t.call(n, e, i, s) && r.push(e);
						  }),
						  r);
				}),
			(x.reject = function (e, t, n) {
				return x.filter(
					e,
					function (e, r, i) {
						return !t.call(n, e, r, i);
					},
					n
				);
			}),
			(x.every = x.all =
				function (e, t, r) {
					t || (t = x.identity);
					var i = !0;
					return e == null
						? i
						: m && e.every === m
						? e.every(t, r)
						: (T(e, function (e, s, o) {
								if (!(i = i && t.call(r, e, s, o))) return n;
						  }),
						  !!i);
				});
		var C =
			(x.some =
			x.any =
				function (e, t, r) {
					t || (t = x.identity);
					var i = !1;
					return e == null
						? i
						: g && e.some === g
						? e.some(t, r)
						: (T(e, function (e, s, o) {
								if (i || (i = t.call(r, e, s, o))) return n;
						  }),
						  !!i);
				});
		(x.contains = x.include =
			function (e, t) {
				return e == null
					? !1
					: y && e.indexOf === y
					? e.indexOf(t) != -1
					: C(e, function (e) {
							return e === t;
					  });
			}),
			(x.invoke = function (e, t) {
				var n = u.call(arguments, 2),
					r = x.isFunction(t);
				return x.map(e, function (e) {
					return (r ? t : e[t]).apply(e, n);
				});
			}),
			(x.pluck = function (e, t) {
				return x.map(e, x.property(t));
			}),
			(x.where = function (e, t) {
				return x.filter(e, x.matches(t));
			}),
			(x.findWhere = function (e, t) {
				return x.find(e, x.matches(t));
			}),
			(x.max = function (e, t, n) {
				if (!t && x.isArray(e) && e[0] === +e[0] && e.length < 65535)
					return Math.max.apply(Math, e);
				var r = -Infinity,
					i = -Infinity;
				return (
					T(e, function (e, s, o) {
						var u = t ? t.call(n, e, s, o) : e;
						u > i && ((r = e), (i = u));
					}),
					r
				);
			}),
			(x.min = function (e, t, n) {
				if (!t && x.isArray(e) && e[0] === +e[0] && e.length < 65535)
					return Math.min.apply(Math, e);
				var r = Infinity,
					i = Infinity;
				return (
					T(e, function (e, s, o) {
						var u = t ? t.call(n, e, s, o) : e;
						u < i && ((r = e), (i = u));
					}),
					r
				);
			}),
			(x.shuffle = function (e) {
				var t,
					n = 0,
					r = [];
				return (
					T(e, function (e) {
						(t = x.random(n++)), (r[n - 1] = r[t]), (r[t] = e);
					}),
					r
				);
			}),
			(x.sample = function (e, t, n) {
				return t == null || n
					? (e.length !== +e.length && (e = x.values(e)), e[x.random(e.length - 1)])
					: x.shuffle(e).slice(0, Math.max(0, t));
			});
		var k = function (e) {
			return e == null ? x.identity : x.isFunction(e) ? e : x.property(e);
		};
		x.sortBy = function (e, t, n) {
			return (
				(t = k(t)),
				x.pluck(
					x
						.map(e, function (e, r, i) {
							return {
								value: e,
								index: r,
								criteria: t.call(n, e, r, i),
							};
						})
						.sort(function (e, t) {
							var n = e.criteria,
								r = t.criteria;
							if (n !== r) {
								if (n > r || n === void 0) return 1;
								if (n < r || r === void 0) return -1;
							}
							return e.index - t.index;
						}),
					"value"
				)
			);
		};
		var L = function (e) {
			return function (t, n, r) {
				var i = {};
				return (
					(n = k(n)),
					T(t, function (s, o) {
						var u = n.call(r, s, o, t);
						e(i, u, s);
					}),
					i
				);
			};
		};
		(x.groupBy = L(function (e, t, n) {
			x.has(e, t) ? e[t].push(n) : (e[t] = [n]);
		})),
			(x.indexBy = L(function (e, t, n) {
				e[t] = n;
			})),
			(x.countBy = L(function (e, t) {
				x.has(e, t) ? e[t]++ : (e[t] = 1);
			})),
			(x.sortedIndex = function (e, t, n, r) {
				n = k(n);
				var i = n.call(r, t),
					s = 0,
					o = e.length;
				while (s < o) {
					var u = (s + o) >>> 1;
					n.call(r, e[u]) < i ? (s = u + 1) : (o = u);
				}
				return s;
			}),
			(x.toArray = function (e) {
				return e
					? x.isArray(e)
						? u.call(e)
						: e.length === +e.length
						? x.map(e, x.identity)
						: x.values(e)
					: [];
			}),
			(x.size = function (e) {
				return e == null ? 0 : e.length === +e.length ? e.length : x.keys(e).length;
			}),
			(x.first =
				x.head =
				x.take =
					function (e, t, n) {
						return e == null ? void 0 : t == null || n ? e[0] : t < 0 ? [] : u.call(e, 0, t);
					}),
			(x.initial = function (e, t, n) {
				return u.call(e, 0, e.length - (t == null || n ? 1 : t));
			}),
			(x.last = function (e, t, n) {
				return e == null
					? void 0
					: t == null || n
					? e[e.length - 1]
					: u.call(e, Math.max(e.length - t, 0));
			}),
			(x.rest =
				x.tail =
				x.drop =
					function (e, t, n) {
						return u.call(e, t == null || n ? 1 : t);
					}),
			(x.compact = function (e) {
				return x.filter(e, x.identity);
			});
		var A = function (e, t, n) {
			return t && x.every(e, x.isArray)
				? a.apply(n, e)
				: (T(e, function (e) {
						x.isArray(e) || x.isArguments(e) ? (t ? o.apply(n, e) : A(e, t, n)) : n.push(e);
				  }),
				  n);
		};
		(x.flatten = function (e, t) {
			return A(e, t, []);
		}),
			(x.without = function (e) {
				return x.difference(e, u.call(arguments, 1));
			}),
			(x.partition = function (e, t, n) {
				t = k(t);
				var r = [],
					i = [];
				return (
					T(e, function (e) {
						(t.call(n, e) ? r : i).push(e);
					}),
					[r, i]
				);
			}),
			(x.uniq = x.unique =
				function (e, t, n, r) {
					x.isFunction(t) && ((r = n), (n = t), (t = !1));
					var i = n ? x.map(e, n, r) : e,
						s = [],
						o = [];
					return (
						T(i, function (n, r) {
							if (t ? !r || o[o.length - 1] !== n : !x.contains(o, n)) o.push(n), s.push(e[r]);
						}),
						s
					);
				}),
			(x.union = function () {
				return x.uniq(x.flatten(arguments, !0));
			}),
			(x.intersection = function (e) {
				var t = u.call(arguments, 1);
				return x.filter(x.uniq(e), function (e) {
					return x.every(t, function (t) {
						return x.contains(t, e);
					});
				});
			}),
			(x.difference = function (e) {
				var t = a.apply(r, u.call(arguments, 1));
				return x.filter(e, function (e) {
					return !x.contains(t, e);
				});
			}),
			(x.zip = function () {
				var e = x.max(x.pluck(arguments, "length").concat(0)),
					t = new Array(e);
				for (var n = 0; n < e; n++) t[n] = x.pluck(arguments, "" + n);
				return t;
			}),
			(x.object = function (e, t) {
				if (e == null) return {};
				var n = {};
				for (var r = 0, i = e.length; r < i; r++) t ? (n[e[r]] = t[r]) : (n[e[r][0]] = e[r][1]);
				return n;
			}),
			(x.indexOf = function (e, t, n) {
				if (e == null) return -1;
				var r = 0,
					i = e.length;
				if (n) {
					if (typeof n != "number") return (r = x.sortedIndex(e, t)), e[r] === t ? r : -1;
					r = n < 0 ? Math.max(0, i + n) : n;
				}
				if (y && e.indexOf === y) return e.indexOf(t, n);
				for (; r < i; r++) if (e[r] === t) return r;
				return -1;
			}),
			(x.lastIndexOf = function (e, t, n) {
				if (e == null) return -1;
				var r = n != null;
				if (b && e.lastIndexOf === b) return r ? e.lastIndexOf(t, n) : e.lastIndexOf(t);
				var i = r ? n : e.length;
				while (i--) if (e[i] === t) return i;
				return -1;
			}),
			(x.range = function (e, t, n) {
				arguments.length <= 1 && ((t = e || 0), (e = 0)), (n = arguments[2] || 1);
				var r = Math.max(Math.ceil((t - e) / n), 0),
					i = 0,
					s = new Array(r);
				while (i < r) (s[i++] = e), (e += n);
				return s;
			});
		var O = function () {};
		(x.bind = function (e, t) {
			var n, r;
			if (S && e.bind === S) return S.apply(e, u.call(arguments, 1));
			if (!x.isFunction(e)) throw new TypeError();
			return (
				(n = u.call(arguments, 2)),
				(r = function () {
					if (this instanceof r) {
						O.prototype = e.prototype;
						var i = new O();
						O.prototype = null;
						var s = e.apply(i, n.concat(u.call(arguments)));
						return Object(s) === s ? s : i;
					}
					return e.apply(t, n.concat(u.call(arguments)));
				})
			);
		}),
			(x.partial = function (e) {
				var t = u.call(arguments, 1);
				return function () {
					var n = 0,
						r = t.slice();
					for (var i = 0, s = r.length; i < s; i++) r[i] === x && (r[i] = arguments[n++]);
					while (n < arguments.length) r.push(arguments[n++]);
					return e.apply(this, r);
				};
			}),
			(x.bindAll = function (e) {
				var t = u.call(arguments, 1);
				if (t.length === 0) throw new Error("bindAll must be passed function names");
				return (
					T(t, function (t) {
						e[t] = x.bind(e[t], e);
					}),
					e
				);
			}),
			(x.memoize = function (e, t) {
				var n = {};
				return (
					t || (t = x.identity),
					function () {
						var r = t.apply(this, arguments);
						return x.has(n, r) ? n[r] : (n[r] = e.apply(this, arguments));
					}
				);
			}),
			(x.delay = function (e, t) {
				var n = u.call(arguments, 2);
				return setTimeout(function () {
					return e.apply(null, n);
				}, t);
			}),
			(x.defer = function (e) {
				return x.delay.apply(x, [e, 1].concat(u.call(arguments, 1)));
			}),
			(x.throttle = function (e, t, n) {
				var r,
					i,
					s,
					o = null,
					u = 0;
				n || (n = {});
				var a = function () {
					(u = n.leading === !1 ? 0 : x.now()), (o = null), (s = e.apply(r, i)), (r = i = null);
				};
				return function () {
					var f = x.now();
					!u && n.leading === !1 && (u = f);
					var l = t - (f - u);
					return (
						(r = this),
						(i = arguments),
						l <= 0
							? (clearTimeout(o), (o = null), (u = f), (s = e.apply(r, i)), (r = i = null))
							: !o && n.trailing !== !1 && (o = setTimeout(a, l)),
						s
					);
				};
			}),
			(x.debounce = function (e, t, n) {
				var r,
					i,
					s,
					o,
					u,
					a = function () {
						var f = x.now() - o;
						f < t
							? (r = setTimeout(a, t - f))
							: ((r = null), n || ((u = e.apply(s, i)), (s = i = null)));
					};
				return function () {
					(s = this), (i = arguments), (o = x.now());
					var f = n && !r;
					return r || (r = setTimeout(a, t)), f && ((u = e.apply(s, i)), (s = i = null)), u;
				};
			}),
			(x.once = function (e) {
				var t = !1,
					n;
				return function () {
					return t ? n : ((t = !0), (n = e.apply(this, arguments)), (e = null), n);
				};
			}),
			(x.wrap = function (e, t) {
				return x.partial(t, e);
			}),
			(x.compose = function () {
				var e = arguments;
				return function () {
					var t = arguments;
					for (var n = e.length - 1; n >= 0; n--) t = [e[n].apply(this, t)];
					return t[0];
				};
			}),
			(x.after = function (e, t) {
				return function () {
					if (--e < 1) return t.apply(this, arguments);
				};
			}),
			(x.keys = function (e) {
				if (!x.isObject(e)) return [];
				if (E) return E(e);
				var t = [];
				for (var n in e) x.has(e, n) && t.push(n);
				return t;
			}),
			(x.values = function (e) {
				var t = x.keys(e),
					n = t.length,
					r = new Array(n);
				for (var i = 0; i < n; i++) r[i] = e[t[i]];
				return r;
			}),
			(x.pairs = function (e) {
				var t = x.keys(e),
					n = t.length,
					r = new Array(n);
				for (var i = 0; i < n; i++) r[i] = [t[i], e[t[i]]];
				return r;
			}),
			(x.invert = function (e) {
				var t = {},
					n = x.keys(e);
				for (var r = 0, i = n.length; r < i; r++) t[e[n[r]]] = n[r];
				return t;
			}),
			(x.functions = x.methods =
				function (e) {
					var t = [];
					for (var n in e) x.isFunction(e[n]) && t.push(n);
					return t.sort();
				}),
			(x.extend = function (e) {
				return (
					T(u.call(arguments, 1), function (t) {
						if (t) for (var n in t) e[n] = t[n];
					}),
					e
				);
			}),
			(x.pick = function (e) {
				var t = {},
					n = a.apply(r, u.call(arguments, 1));
				return (
					T(n, function (n) {
						n in e && (t[n] = e[n]);
					}),
					t
				);
			}),
			(x.omit = function (e) {
				var t = {},
					n = a.apply(r, u.call(arguments, 1));
				for (var i in e) x.contains(n, i) || (t[i] = e[i]);
				return t;
			}),
			(x.defaults = function (e) {
				return (
					T(u.call(arguments, 1), function (t) {
						if (t) for (var n in t) e[n] === void 0 && (e[n] = t[n]);
					}),
					e
				);
			}),
			(x.clone = function (e) {
				return x.isObject(e) ? (x.isArray(e) ? e.slice() : x.extend({}, e)) : e;
			}),
			(x.tap = function (e, t) {
				return t(e), e;
			});
		var M = function (e, t, n, r) {
			if (e === t) return e !== 0 || 1 / e == 1 / t;
			if (e == null || t == null) return e === t;
			e instanceof x && (e = e._wrapped), t instanceof x && (t = t._wrapped);
			var i = f.call(e);
			if (i != f.call(t)) return !1;
			switch (i) {
				case "[object String]":
					return e == String(t);
				case "[object Number]":
					return e != +e ? t != +t : e == 0 ? 1 / e == 1 / t : e == +t;
				case "[object Date]":
				case "[object Boolean]":
					return +e == +t;
				case "[object RegExp]":
					return (
						e.source == t.source &&
						e.global == t.global &&
						e.multiline == t.multiline &&
						e.ignoreCase == t.ignoreCase
					);
			}
			if (typeof e != "object" || typeof t != "object") return !1;
			var s = n.length;
			while (s--) if (n[s] == e) return r[s] == t;
			var o = e.constructor,
				u = t.constructor;
			if (
				o !== u &&
				!(x.isFunction(o) && o instanceof o && x.isFunction(u) && u instanceof u) &&
				"constructor" in e &&
				"constructor" in t
			)
				return !1;
			n.push(e), r.push(t);
			var a = 0,
				l = !0;
			if (i == "[object Array]") {
				(a = e.length), (l = a == t.length);
				if (l) while (a--) if (!(l = M(e[a], t[a], n, r))) break;
			} else {
				for (var c in e)
					if (x.has(e, c)) {
						a++;
						if (!(l = x.has(t, c) && M(e[c], t[c], n, r))) break;
					}
				if (l) {
					for (c in t) if (x.has(t, c) && !a--) break;
					l = !a;
				}
			}
			return n.pop(), r.pop(), l;
		};
		(x.isEqual = function (e, t) {
			return M(e, t, [], []);
		}),
			(x.isEmpty = function (e) {
				if (e == null) return !0;
				if (x.isArray(e) || x.isString(e)) return e.length === 0;
				for (var t in e) if (x.has(e, t)) return !1;
				return !0;
			}),
			(x.isElement = function (e) {
				return !!e && e.nodeType === 1;
			}),
			(x.isArray =
				w ||
				function (e) {
					return f.call(e) == "[object Array]";
				}),
			(x.isObject = function (e) {
				return e === Object(e);
			}),
			T(["Arguments", "Function", "String", "Number", "Date", "RegExp"], function (e) {
				x["is" + e] = function (t) {
					return f.call(t) == "[object " + e + "]";
				};
			}),
			x.isArguments(arguments) ||
				(x.isArguments = function (e) {
					return !!e && !!x.has(e, "callee");
				}),
			typeof /./ != "function" &&
				(x.isFunction = function (e) {
					return typeof e == "function";
				}),
			(x.isFinite = function (e) {
				return isFinite(e) && !isNaN(parseFloat(e));
			}),
			(x.isNaN = function (e) {
				return x.isNumber(e) && e != +e;
			}),
			(x.isBoolean = function (e) {
				return e === !0 || e === !1 || f.call(e) == "[object Boolean]";
			}),
			(x.isNull = function (e) {
				return e === null;
			}),
			(x.isUndefined = function (e) {
				return e === void 0;
			}),
			(x.has = function (e, t) {
				return l.call(e, t);
			}),
			(x.noConflict = function () {
				return (e._ = t), this;
			}),
			(x.identity = function (e) {
				return e;
			}),
			(x.constant = function (e) {
				return function () {
					return e;
				};
			}),
			(x.property = function (e) {
				return function (t) {
					return t[e];
				};
			}),
			(x.matches = function (e) {
				return function (t) {
					if (t === e) return !0;
					for (var n in e) if (e[n] !== t[n]) return !1;
					return !0;
				};
			}),
			(x.times = function (e, t, n) {
				var r = Array(Math.max(0, e));
				for (var i = 0; i < e; i++) r[i] = t.call(n, i);
				return r;
			}),
			(x.random = function (e, t) {
				return t == null && ((t = e), (e = 0)), e + Math.floor(Math.random() * (t - e + 1));
			}),
			(x.now =
				Date.now ||
				function () {
					return new Date().getTime();
				});
		var _ = {
			escape: {
				"&": "&amp;",
				"<": "&lt;",
				">": "&gt;",
				'"': "&quot;",
				"'": "&#x27;",
			},
		};
		_.unescape = x.invert(_.escape);
		var D = {
			escape: new RegExp("[" + x.keys(_.escape).join("") + "]", "g"),
			unescape: new RegExp("(" + x.keys(_.unescape).join("|") + ")", "g"),
		};
		x.each(["escape", "unescape"], function (e) {
			x[e] = function (t) {
				return t == null
					? ""
					: ("" + t).replace(D[e], function (t) {
							return _[e][t];
					  });
			};
		}),
			(x.result = function (e, t) {
				if (e == null) return void 0;
				var n = e[t];
				return x.isFunction(n) ? n.call(e) : n;
			}),
			(x.mixin = function (e) {
				T(x.functions(e), function (t) {
					var n = (x[t] = e[t]);
					x.prototype[t] = function () {
						var e = [this._wrapped];
						return o.apply(e, arguments), F.call(this, n.apply(x, e));
					};
				});
			});
		var P = 0;
		(x.uniqueId = function (e) {
			var t = ++P + "";
			return e ? e + t : t;
		}),
			(x.templateSettings = {
				evaluate: /<%([\s\S]+?)%>/g,
				interpolate: /<%=([\s\S]+?)%>/g,
				escape: /<%-([\s\S]+?)%>/g,
			});
		var H = /(.)^/,
			B = {
				"'": "'",
				"\\": "\\",
				"\r": "r",
				"\n": "n",
				"	": "t",
				"\u2028": "u2028",
				"\u2029": "u2029",
			},
			j = /\\|'|\r|\n|\t|\u2028|\u2029/g;
		(x.template = function (e, t, n) {
			var r;
			n = x.defaults({}, n, x.templateSettings);
			var i = new RegExp(
					[(n.escape || H).source, (n.interpolate || H).source, (n.evaluate || H).source].join(
						"|"
					) + "|$",
					"g"
				),
				s = 0,
				o = "__p+='";
			e.replace(i, function (t, n, r, i, u) {
				return (
					(o += e.slice(s, u).replace(j, function (e) {
						return "\\" + B[e];
					})),
					n && (o += "'+\n((__t=(" + n + "))==null?'':_.escape(__t))+\n'"),
					r && (o += "'+\n((__t=(" + r + "))==null?'':__t)+\n'"),
					i && (o += "';\n" + i + "\n__p+='"),
					(s = u + t.length),
					t
				);
			}),
				(o += "';\n"),
				n.variable || (o = "with(obj||{}){\n" + o + "}\n"),
				(o =
					"var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" +
					o +
					"return __p;\n");
			try {
				r = new Function(n.variable || "obj", "_", o);
			} catch (u) {
				throw ((u.source = o), u);
			}
			if (t) return r(t, x);
			var a = function (e) {
				return r.call(this, e, x);
			};
			return (a.source = "function(" + (n.variable || "obj") + "){\n" + o + "}"), a;
		}),
			(x.chain = function (e) {
				return x(e).chain();
			});
		var F = function (e) {
			return this._chain ? x(e).chain() : e;
		};
		x.mixin(x),
			T(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (e) {
				var t = r[e];
				x.prototype[e] = function () {
					var n = this._wrapped;
					return (
						t.apply(n, arguments),
						(e == "shift" || e == "splice") && n.length === 0 && delete n[0],
						F.call(this, n)
					);
				};
			}),
			T(["concat", "join", "slice"], function (e) {
				var t = r[e];
				x.prototype[e] = function () {
					return F.call(this, t.apply(this._wrapped, arguments));
				};
			}),
			x.extend(x.prototype, {
				chain: function () {
					return (this._chain = !0), this;
				},
				value: function () {
					return this._wrapped;
				},
			}),
			typeof define == "function" &&
				define.amd &&
				define("underscore", [], function () {
					return x;
				});
	}.call(this),
	!(function (e, t) {
		"object" == typeof module && "object" == typeof module.exports
			? (module.exports = e.document
					? t(e, !0)
					: function (e) {
							if (!e.document) throw new Error("jQuery requires a window with a document");
							return t(e);
					  })
			: t(e);
	})("undefined" != typeof window ? window : this, function (e, t) {
		function g(e) {
			var t = e.length,
				n = h.type(e);
			return "function" === n || h.isWindow(e)
				? !1
				: 1 === e.nodeType && t
				? !0
				: "array" === n || 0 === t || ("number" == typeof t && t > 0 && t - 1 in e);
		}

		function S(e, t, n) {
			if (h.isFunction(t))
				return h.grep(e, function (e, r) {
					return !!t.call(e, r, e) !== n;
				});
			if (t.nodeType)
				return h.grep(e, function (e) {
					return (e === t) !== n;
				});
			if ("string" == typeof t) {
				if (E.test(t)) return h.filter(t, e, n);
				t = h.filter(t, e);
			}
			return h.grep(e, function (e) {
				return h.inArray(e, t) >= 0 !== n;
			});
		}

		function A(e, t) {
			do e = e[t];
			while (e && 1 !== e.nodeType);
			return e;
		}

		function _(e) {
			var t = (M[e] = {});
			return (
				h.each(e.match(O) || [], function (e, n) {
					t[n] = !0;
				}),
				t
			);
		}

		function P() {
			T.addEventListener
				? (T.removeEventListener("DOMContentLoaded", H, !1), e.removeEventListener("load", H, !1))
				: (T.detachEvent("onreadystatechange", H), e.detachEvent("onload", H));
		}

		function H() {
			(T.addEventListener || "load" === event.type || "complete" === T.readyState) &&
				(P(), h.ready());
		}

		function q(e, t, n) {
			if (void 0 === n && 1 === e.nodeType) {
				var r = "data-" + t.replace(I, "-$1").toLowerCase();
				if (((n = e.getAttribute(r)), "string" == typeof n)) {
					try {
						n =
							"true" === n
								? !0
								: "false" === n
								? !1
								: "null" === n
								? null
								: +n + "" === n
								? +n
								: F.test(n)
								? h.parseJSON(n)
								: n;
					} catch (i) {}
					h.data(e, t, n);
				} else n = void 0;
			}
			return n;
		}

		function R(e) {
			var t;
			for (t in e) if (("data" !== t || !h.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
			return !0;
		}

		function U(e, t, r, i) {
			if (h.acceptData(e)) {
				var s,
					o,
					u = h.expando,
					a = e.nodeType,
					f = a ? h.cache : e,
					l = a ? e[u] : e[u] && u;
				if ((l && f[l] && (i || f[l].data)) || void 0 !== r || "string" != typeof t)
					return (
						l || (l = a ? (e[u] = n.pop() || h.guid++) : u),
						f[l] ||
							(f[l] = a
								? {}
								: {
										toJSON: h.noop,
								  }),
						("object" == typeof t || "function" == typeof t) &&
							(i ? (f[l] = h.extend(f[l], t)) : (f[l].data = h.extend(f[l].data, t))),
						(o = f[l]),
						i || (o.data || (o.data = {}), (o = o.data)),
						void 0 !== r && (o[h.camelCase(t)] = r),
						"string" == typeof t ? ((s = o[t]), null == s && (s = o[h.camelCase(t)])) : (s = o),
						s
					);
			}
		}

		function z(e, t, n) {
			if (h.acceptData(e)) {
				var r,
					i,
					s = e.nodeType,
					o = s ? h.cache : e,
					u = s ? e[h.expando] : h.expando;
				if (o[u]) {
					if (t && (r = n ? o[u] : o[u].data)) {
						h.isArray(t)
							? (t = t.concat(h.map(t, h.camelCase)))
							: t in r
							? (t = [t])
							: ((t = h.camelCase(t)), (t = t in r ? [t] : t.split(" "))),
							(i = t.length);
						while (i--) delete r[t[i]];
						if (n ? !R(r) : !h.isEmptyObject(r)) return;
					}
					(n || (delete o[u].data, R(o[u]))) &&
						(s
							? h.cleanData([e], !0)
							: l.deleteExpando || o != o.window
							? delete o[u]
							: (o[u] = null));
				}
			}
		}

		function et() {
			return !0;
		}

		function tt() {
			return !1;
		}

		function nt() {
			try {
				return T.activeElement;
			} catch (e) {}
		}

		function rt(e) {
			var t = it.split("|"),
				n = e.createDocumentFragment();
			if (n.createElement) while (t.length) n.createElement(t.pop());
			return n;
		}

		function wt(e, t) {
			var n,
				r,
				i = 0,
				s =
					typeof e.getElementsByTagName !== B
						? e.getElementsByTagName(t || "*")
						: typeof e.querySelectorAll !== B
						? e.querySelectorAll(t || "*")
						: void 0;
			if (!s)
				for (s = [], n = e.childNodes || e; null != (r = n[i]); i++)
					!t || h.nodeName(r, t) ? s.push(r) : h.merge(s, wt(r, t));
			return void 0 === t || (t && h.nodeName(e, t)) ? h.merge([e], s) : s;
		}

		function Et(e) {
			J.test(e.type) && (e.defaultChecked = e.checked);
		}

		function St(e, t) {
			return h.nodeName(e, "table") && h.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr")
				? e.getElementsByTagName("tbody")[0] ||
						e.appendChild(e.ownerDocument.createElement("tbody"))
				: e;
		}

		function xt(e) {
			return (e.type = (null !== h.find.attr(e, "type")) + "/" + e.type), e;
		}

		function Tt(e) {
			var t = vt.exec(e.type);
			return t ? (e.type = t[1]) : e.removeAttribute("type"), e;
		}

		function Nt(e, t) {
			for (var n, r = 0; null != (n = e[r]); r++)
				h._data(n, "globalEval", !t || h._data(t[r], "globalEval"));
		}

		function Ct(e, t) {
			if (1 === t.nodeType && h.hasData(e)) {
				var n,
					r,
					i,
					s = h._data(e),
					o = h._data(t, s),
					u = s.events;
				if (u) {
					delete o.handle, (o.events = {});
					for (n in u) for (r = 0, i = u[n].length; i > r; r++) h.event.add(t, n, u[n][r]);
				}
				o.data && (o.data = h.extend({}, o.data));
			}
		}

		function kt(e, t) {
			var n, r, i;
			if (1 === t.nodeType) {
				if (((n = t.nodeName.toLowerCase()), !l.noCloneEvent && t[h.expando])) {
					i = h._data(t);
					for (r in i.events) h.removeEvent(t, r, i.handle);
					t.removeAttribute(h.expando);
				}
				"script" === n && t.text !== e.text
					? ((xt(t).text = e.text), Tt(t))
					: "object" === n
					? (t.parentNode && (t.outerHTML = e.outerHTML),
					  l.html5Clone && e.innerHTML && !h.trim(t.innerHTML) && (t.innerHTML = e.innerHTML))
					: "input" === n && J.test(e.type)
					? ((t.defaultChecked = t.checked = e.checked), t.value !== e.value && (t.value = e.value))
					: "option" === n
					? (t.defaultSelected = t.selected = e.defaultSelected)
					: ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue);
			}
		}

		function Ot(t, n) {
			var r,
				i = h(n.createElement(t)).appendTo(n.body),
				s =
					e.getDefaultComputedStyle && (r = e.getDefaultComputedStyle(i[0]))
						? r.display
						: h.css(i[0], "display");
			return i.detach(), s;
		}

		function Mt(e) {
			var t = T,
				n = At[e];
			return (
				n ||
					((n = Ot(e, t)),
					("none" !== n && n) ||
						((Lt = (Lt || h("<iframe frameborder='0' width='0' height='0'/>")).appendTo(
							t.documentElement
						)),
						(t = (Lt[0].contentWindow || Lt[0].contentDocument).document),
						t.write(),
						t.close(),
						(n = Ot(e, t)),
						Lt.detach()),
					(At[e] = n)),
				n
			);
		}

		function jt(e, t) {
			return {
				get: function () {
					var n = e();
					if (null != n) return n ? void delete this.get : (this.get = t).apply(this, arguments);
				},
			};
		}

		function Vt(e, t) {
			if (t in e) return t;
			var n = t.charAt(0).toUpperCase() + t.slice(1),
				r = t,
				i = Xt.length;
			while (i--) if (((t = Xt[i] + n), t in e)) return t;
			return r;
		}

		function $t(e, t) {
			for (var n, r, i, s = [], o = 0, u = e.length; u > o; o++)
				(r = e[o]),
					r.style &&
						((s[o] = h._data(r, "olddisplay")),
						(n = r.style.display),
						t
							? (s[o] || "none" !== n || (r.style.display = ""),
							  "" === r.style.display && V(r) && (s[o] = h._data(r, "olddisplay", Mt(r.nodeName))))
							: ((i = V(r)),
							  ((n && "none" !== n) || !i) &&
									h._data(r, "olddisplay", i ? n : h.css(r, "display"))));
			for (o = 0; u > o; o++)
				(r = e[o]),
					r.style &&
						((t && "none" !== r.style.display && "" !== r.style.display) ||
							(r.style.display = t ? s[o] || "" : "none"));
			return e;
		}

		function Jt(e, t, n) {
			var r = Rt.exec(t);
			return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t;
		}

		function Kt(e, t, n, r, i) {
			for (
				var s = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, o = 0;
				4 > s;
				s += 2
			)
				"margin" === n && (o += h.css(e, n + X[s], !0, i)),
					r
						? ("content" === n && (o -= h.css(e, "padding" + X[s], !0, i)),
						  "margin" !== n && (o -= h.css(e, "border" + X[s] + "Width", !0, i)))
						: ((o += h.css(e, "padding" + X[s], !0, i)),
						  "padding" !== n && (o += h.css(e, "border" + X[s] + "Width", !0, i)));
			return o;
		}

		function Qt(e, t, n) {
			var r = !0,
				i = "width" === t ? e.offsetWidth : e.offsetHeight,
				s = Pt(e),
				o = l.boxSizing && "border-box" === h.css(e, "boxSizing", !1, s);
			if (0 >= i || null == i) {
				if (((i = Ht(e, t, s)), (0 > i || null == i) && (i = e.style[t]), Dt.test(i))) return i;
				(r = o && (l.boxSizingReliable() || i === e.style[t])), (i = parseFloat(i) || 0);
			}
			return i + Kt(e, t, n || (o ? "border" : "content"), r, s) + "px";
		}

		function Gt(e, t, n, r, i) {
			return new Gt.prototype.init(e, t, n, r, i);
		}

		function on() {
			return (
				setTimeout(function () {
					Yt = void 0;
				}),
				(Yt = h.now())
			);
		}

		function un(e, t) {
			var n,
				r = {
					height: e,
				},
				i = 0;
			for (t = t ? 1 : 0; 4 > i; i += 2 - t) (n = X[i]), (r["margin" + n] = r["padding" + n] = e);
			return t && (r.opacity = r.width = e), r;
		}

		function an(e, t, n) {
			for (var r, i = (sn[t] || []).concat(sn["*"]), s = 0, o = i.length; o > s; s++)
				if ((r = i[s].call(n, t, e))) return r;
		}

		function fn(e, t, n) {
			var r,
				i,
				s,
				o,
				u,
				a,
				f,
				c,
				p = this,
				d = {},
				v = e.style,
				m = e.nodeType && V(e),
				g = h._data(e, "fxshow");
			n.queue ||
				((u = h._queueHooks(e, "fx")),
				null == u.unqueued &&
					((u.unqueued = 0),
					(a = u.empty.fire),
					(u.empty.fire = function () {
						u.unqueued || a();
					})),
				u.unqueued++,
				p.always(function () {
					p.always(function () {
						u.unqueued--, h.queue(e, "fx").length || u.empty.fire();
					});
				})),
				1 === e.nodeType &&
					("height" in t || "width" in t) &&
					((n.overflow = [v.overflow, v.overflowX, v.overflowY]),
					(f = h.css(e, "display")),
					(c = "none" === f ? h._data(e, "olddisplay") || Mt(e.nodeName) : f),
					"inline" === c &&
						"none" === h.css(e, "float") &&
						(l.inlineBlockNeedsLayout && "inline" !== Mt(e.nodeName)
							? (v.zoom = 1)
							: (v.display = "inline-block"))),
				n.overflow &&
					((v.overflow = "hidden"),
					l.shrinkWrapBlocks() ||
						p.always(function () {
							(v.overflow = n.overflow[0]),
								(v.overflowX = n.overflow[1]),
								(v.overflowY = n.overflow[2]);
						}));
			for (r in t)
				if (((i = t[r]), en.exec(i))) {
					if ((delete t[r], (s = s || "toggle" === i), i === (m ? "hide" : "show"))) {
						if ("show" !== i || !g || void 0 === g[r]) continue;
						m = !0;
					}
					d[r] = (g && g[r]) || h.style(e, r);
				} else f = void 0;
			if (h.isEmptyObject(d)) "inline" === ("none" === f ? Mt(e.nodeName) : f) && (v.display = f);
			else {
				g ? "hidden" in g && (m = g.hidden) : (g = h._data(e, "fxshow", {})),
					s && (g.hidden = !m),
					m
						? h(e).show()
						: p.done(function () {
								h(e).hide();
						  }),
					p.done(function () {
						var t;
						h._removeData(e, "fxshow");
						for (t in d) h.style(e, t, d[t]);
					});
				for (r in d)
					(o = an(m ? g[r] : 0, r, p)),
						r in g ||
							((g[r] = o.start),
							m && ((o.end = o.start), (o.start = "width" === r || "height" === r ? 1 : 0)));
			}
		}

		function ln(e, t) {
			var n, r, i, s, o;
			for (n in e)
				if (
					((r = h.camelCase(n)),
					(i = t[r]),
					(s = e[n]),
					h.isArray(s) && ((i = s[1]), (s = e[n] = s[0])),
					n !== r && ((e[r] = s), delete e[n]),
					(o = h.cssHooks[r]),
					o && "expand" in o)
				) {
					(s = o.expand(s)), delete e[r];
					for (n in s) n in e || ((e[n] = s[n]), (t[n] = i));
				} else t[r] = i;
		}

		function cn(e, t, n) {
			var r,
				i,
				s = 0,
				o = rn.length,
				u = h.Deferred().always(function () {
					delete a.elem;
				}),
				a = function () {
					if (i) return !1;
					for (
						var t = Yt || on(),
							n = Math.max(0, f.startTime + f.duration - t),
							r = n / f.duration || 0,
							s = 1 - r,
							o = 0,
							a = f.tweens.length;
						a > o;
						o++
					)
						f.tweens[o].run(s);
					return u.notifyWith(e, [f, s, n]), 1 > s && a ? n : (u.resolveWith(e, [f]), !1);
				},
				f = u.promise({
					elem: e,
					props: h.extend({}, t),
					opts: h.extend(
						!0,
						{
							specialEasing: {},
						},
						n
					),
					originalProperties: t,
					originalOptions: n,
					startTime: Yt || on(),
					duration: n.duration,
					tweens: [],
					createTween: function (t, n) {
						var r = h.Tween(e, f.opts, t, n, f.opts.specialEasing[t] || f.opts.easing);
						return f.tweens.push(r), r;
					},
					stop: function (t) {
						var n = 0,
							r = t ? f.tweens.length : 0;
						if (i) return this;
						for (i = !0; r > n; n++) f.tweens[n].run(1);
						return t ? u.resolveWith(e, [f, t]) : u.rejectWith(e, [f, t]), this;
					},
				}),
				l = f.props;
			for (ln(l, f.opts.specialEasing); o > s; s++) if ((r = rn[s].call(f, e, l, f.opts))) return r;
			return (
				h.map(l, an, f),
				h.isFunction(f.opts.start) && f.opts.start.call(e, f),
				h.fx.timer(
					h.extend(a, {
						elem: e,
						anim: f,
						queue: f.opts.queue,
					})
				),
				f
					.progress(f.opts.progress)
					.done(f.opts.done, f.opts.complete)
					.fail(f.opts.fail)
					.always(f.opts.always)
			);
		}

		function Fn(e) {
			return function (t, n) {
				"string" != typeof t && ((n = t), (t = "*"));
				var r,
					i = 0,
					s = t.toLowerCase().match(O) || [];
				if (h.isFunction(n))
					while ((r = s[i++]))
						"+" === r.charAt(0)
							? ((r = r.slice(1) || "*"), (e[r] = e[r] || []).unshift(n))
							: (e[r] = e[r] || []).push(n);
			};
		}

		function In(e, t, n, r) {
			function o(u) {
				var a;
				return (
					(i[u] = !0),
					h.each(e[u] || [], function (e, u) {
						var f = u(t, n, r);
						return "string" != typeof f || s || i[f]
							? s
								? !(a = f)
								: void 0
							: (t.dataTypes.unshift(f), o(f), !1);
					}),
					a
				);
			}
			var i = {},
				s = e === Hn;
			return o(t.dataTypes[0]) || (!i["*"] && o("*"));
		}

		function qn(e, t) {
			var n,
				r,
				i = h.ajaxSettings.flatOptions || {};
			for (r in t) void 0 !== t[r] && ((i[r] ? e : n || (n = {}))[r] = t[r]);
			return n && h.extend(!0, e, n), e;
		}

		function Rn(e, t, n) {
			var r,
				i,
				s,
				o,
				u = e.contents,
				a = e.dataTypes;
			while ("*" === a[0])
				a.shift(), void 0 === i && (i = e.mimeType || t.getResponseHeader("Content-Type"));
			if (i)
				for (o in u)
					if (u[o] && u[o].test(i)) {
						a.unshift(o);
						break;
					}
			if (a[0] in n) s = a[0];
			else {
				for (o in n) {
					if (!a[0] || e.converters[o + " " + a[0]]) {
						s = o;
						break;
					}
					r || (r = o);
				}
				s = s || r;
			}
			return s ? (s !== a[0] && a.unshift(s), n[s]) : void 0;
		}

		function Un(e, t, n, r) {
			var i,
				s,
				o,
				u,
				a,
				f = {},
				l = e.dataTypes.slice();
			if (l[1]) for (o in e.converters) f[o.toLowerCase()] = e.converters[o];
			s = l.shift();
			while (s)
				if (
					(e.responseFields[s] && (n[e.responseFields[s]] = t),
					!a && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
					(a = s),
					(s = l.shift()))
				)
					if ("*" === s) s = a;
					else if ("*" !== a && a !== s) {
						if (((o = f[a + " " + s] || f["* " + s]), !o))
							for (i in f)
								if (((u = i.split(" ")), u[1] === s && (o = f[a + " " + u[0]] || f["* " + u[0]]))) {
									o === !0 ? (o = f[i]) : f[i] !== !0 && ((s = u[0]), l.unshift(u[1]));
									break;
								}
						if (o !== !0)
							if (o && e["throws"]) t = o(t);
							else
								try {
									t = o(t);
								} catch (c) {
									return {
										state: "parsererror",
										error: o ? c : "No conversion from " + a + " to " + s,
									};
								}
					}
			return {
				state: "success",
				data: t,
			};
		}

		function Jn(e, t, n, r) {
			var i;
			if (h.isArray(t))
				h.each(t, function (t, i) {
					n || Wn.test(e) ? r(e, i) : Jn(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r);
				});
			else if (n || "object" !== h.type(t)) r(e, t);
			else for (i in t) Jn(e + "[" + i + "]", t[i], n, r);
		}

		function Yn() {
			try {
				return new e.XMLHttpRequest();
			} catch (t) {}
		}

		function Zn() {
			try {
				return new e.ActiveXObject("Microsoft.XMLHTTP");
			} catch (t) {}
		}

		function ir(e) {
			return h.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1;
		}
		var n = [],
			r = n.slice,
			i = n.concat,
			s = n.push,
			o = n.indexOf,
			u = {},
			a = u.toString,
			f = u.hasOwnProperty,
			l = {},
			c = "1.11.1",
			h = function (e, t) {
				return new h.fn.init(e, t);
			},
			p = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
			d = /^-ms-/,
			v = /-([\da-z])/gi,
			m = function (e, t) {
				return t.toUpperCase();
			};
		(h.fn = h.prototype =
			{
				jquery: c,
				constructor: h,
				selector: "",
				length: 0,
				toArray: function () {
					return r.call(this);
				},
				get: function (e) {
					return null != e ? (0 > e ? this[e + this.length] : this[e]) : r.call(this);
				},
				pushStack: function (e) {
					var t = h.merge(this.constructor(), e);
					return (t.prevObject = this), (t.context = this.context), t;
				},
				each: function (e, t) {
					return h.each(this, e, t);
				},
				map: function (e) {
					return this.pushStack(
						h.map(this, function (t, n) {
							return e.call(t, n, t);
						})
					);
				},
				slice: function () {
					return this.pushStack(r.apply(this, arguments));
				},
				first: function () {
					return this.eq(0);
				},
				last: function () {
					return this.eq(-1);
				},
				eq: function (e) {
					var t = this.length,
						n = +e + (0 > e ? t : 0);
					return this.pushStack(n >= 0 && t > n ? [this[n]] : []);
				},
				end: function () {
					return this.prevObject || this.constructor(null);
				},
				push: s,
				sort: n.sort,
				splice: n.splice,
			}),
			(h.extend = h.fn.extend =
				function () {
					var e,
						t,
						n,
						r,
						i,
						s,
						o = arguments[0] || {},
						u = 1,
						a = arguments.length,
						f = !1;
					for (
						"boolean" == typeof o && ((f = o), (o = arguments[u] || {}), u++),
							"object" == typeof o || h.isFunction(o) || (o = {}),
							u === a && ((o = this), u--);
						a > u;
						u++
					)
						if (null != (i = arguments[u]))
							for (r in i)
								(e = o[r]),
									(n = i[r]),
									o !== n &&
										(f && n && (h.isPlainObject(n) || (t = h.isArray(n)))
											? (t
													? ((t = !1), (s = e && h.isArray(e) ? e : []))
													: (s = e && h.isPlainObject(e) ? e : {}),
											  (o[r] = h.extend(f, s, n)))
											: void 0 !== n && (o[r] = n));
					return o;
				}),
			h.extend({
				expando: "jQuery" + (c + Math.random()).replace(/\D/g, ""),
				isReady: !0,
				error: function (e) {
					throw new Error(e);
				},
				noop: function () {},
				isFunction: function (e) {
					return "function" === h.type(e);
				},
				isArray:
					Array.isArray ||
					function (e) {
						return "array" === h.type(e);
					},
				isWindow: function (e) {
					return null != e && e == e.window;
				},
				isNumeric: function (e) {
					return !h.isArray(e) && e - parseFloat(e) >= 0;
				},
				isEmptyObject: function (e) {
					var t;
					for (t in e) return !1;
					return !0;
				},
				isPlainObject: function (e) {
					var t;
					if (!e || "object" !== h.type(e) || e.nodeType || h.isWindow(e)) return !1;
					try {
						if (
							e.constructor &&
							!f.call(e, "constructor") &&
							!f.call(e.constructor.prototype, "isPrototypeOf")
						)
							return !1;
					} catch (n) {
						return !1;
					}
					if (l.ownLast) for (t in e) return f.call(e, t);
					for (t in e);
					return void 0 === t || f.call(e, t);
				},
				type: function (e) {
					return null == e
						? e + ""
						: "object" == typeof e || "function" == typeof e
						? u[a.call(e)] || "object"
						: typeof e;
				},
				globalEval: function (t) {
					t &&
						h.trim(t) &&
						(
							e.execScript ||
							function (t) {
								e.eval.call(e, t);
							}
						)(t);
				},
				camelCase: function (e) {
					return e.replace(d, "ms-").replace(v, m);
				},
				nodeName: function (e, t) {
					return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
				},
				each: function (e, t, n) {
					var r,
						i = 0,
						s = e.length,
						o = g(e);
					if (n) {
						if (o) {
							for (; s > i; i++) if (((r = t.apply(e[i], n)), r === !1)) break;
						} else for (i in e) if (((r = t.apply(e[i], n)), r === !1)) break;
					} else if (o) {
						for (; s > i; i++) if (((r = t.call(e[i], i, e[i])), r === !1)) break;
					} else for (i in e) if (((r = t.call(e[i], i, e[i])), r === !1)) break;
					return e;
				},
				trim: function (e) {
					return null == e ? "" : (e + "").replace(p, "");
				},
				makeArray: function (e, t) {
					var n = t || [];
					return (
						null != e && (g(Object(e)) ? h.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)),
						n
					);
				},
				inArray: function (e, t, n) {
					var r;
					if (t) {
						if (o) return o.call(t, e, n);
						for (r = t.length, n = n ? (0 > n ? Math.max(0, r + n) : n) : 0; r > n; n++)
							if (n in t && t[n] === e) return n;
					}
					return -1;
				},
				merge: function (e, t) {
					var n = +t.length,
						r = 0,
						i = e.length;
					while (n > r) e[i++] = t[r++];
					if (n !== n) while (void 0 !== t[r]) e[i++] = t[r++];
					return (e.length = i), e;
				},
				grep: function (e, t, n) {
					for (var r, i = [], s = 0, o = e.length, u = !n; o > s; s++)
						(r = !t(e[s], s)), r !== u && i.push(e[s]);
					return i;
				},
				map: function (e, t, n) {
					var r,
						s = 0,
						o = e.length,
						u = g(e),
						a = [];
					if (u) for (; o > s; s++) (r = t(e[s], s, n)), null != r && a.push(r);
					else for (s in e) (r = t(e[s], s, n)), null != r && a.push(r);
					return i.apply([], a);
				},
				guid: 1,
				proxy: function (e, t) {
					var n, i, s;
					return (
						"string" == typeof t && ((s = e[t]), (t = e), (e = s)),
						h.isFunction(e)
							? ((n = r.call(arguments, 2)),
							  (i = function () {
									return e.apply(t || this, n.concat(r.call(arguments)));
							  }),
							  (i.guid = e.guid = e.guid || h.guid++),
							  i)
							: void 0
					);
				},
				now: function () {
					return +new Date();
				},
				support: l,
			}),
			h.each(
				"Boolean Number String Function Array Date RegExp Object Error".split(" "),
				function (e, t) {
					u["[object " + t + "]"] = t.toLowerCase();
				}
			);
		var y = (function (e) {
			function st(e, t, r, i) {
				var s, u, f, l, c, d, g, y, S, x;
				if (
					((t ? t.ownerDocument || t : E) !== p && h(t),
					(t = t || p),
					(r = r || []),
					!e || "string" != typeof e)
				)
					return r;
				if (1 !== (l = t.nodeType) && 9 !== l) return [];
				if (v && !i) {
					if ((s = Z.exec(e)))
						if ((f = s[1])) {
							if (9 === l) {
								if (((u = t.getElementById(f)), !u || !u.parentNode)) return r;
								if (u.id === f) return r.push(u), r;
							} else if (
								t.ownerDocument &&
								(u = t.ownerDocument.getElementById(f)) &&
								b(t, u) &&
								u.id === f
							)
								return r.push(u), r;
						} else {
							if (s[2]) return P.apply(r, t.getElementsByTagName(e)), r;
							if ((f = s[3]) && n.getElementsByClassName && t.getElementsByClassName)
								return P.apply(r, t.getElementsByClassName(f)), r;
						}
					if (n.qsa && (!m || !m.test(e))) {
						if (
							((y = g = w),
							(S = t),
							(x = 9 === l && e),
							1 === l && "object" !== t.nodeName.toLowerCase())
						) {
							(d = o(e)),
								(g = t.getAttribute("id")) ? (y = g.replace(tt, "\\$&")) : t.setAttribute("id", y),
								(y = "[id='" + y + "'] "),
								(c = d.length);
							while (c--) d[c] = y + mt(d[c]);
							(S = (et.test(e) && dt(t.parentNode)) || t), (x = d.join(","));
						}
						if (x)
							try {
								return P.apply(r, S.querySelectorAll(x)), r;
							} catch (T) {
							} finally {
								g || t.removeAttribute("id");
							}
					}
				}
				return a(e.replace(z, "$1"), t, r, i);
			}

			function ot() {
				function t(n, i) {
					return e.push(n + " ") > r.cacheLength && delete t[e.shift()], (t[n + " "] = i);
				}
				var e = [];
				return t;
			}

			function ut(e) {
				return (e[w] = !0), e;
			}

			function at(e) {
				var t = p.createElement("div");
				try {
					return !!e(t);
				} catch (n) {
					return !1;
				} finally {
					t.parentNode && t.parentNode.removeChild(t), (t = null);
				}
			}

			function ft(e, t) {
				var n = e.split("|"),
					i = e.length;
				while (i--) r.attrHandle[n[i]] = t;
			}

			function lt(e, t) {
				var n = t && e,
					r =
						n &&
						1 === e.nodeType &&
						1 === t.nodeType &&
						(~t.sourceIndex || A) - (~e.sourceIndex || A);
				if (r) return r;
				if (n) while ((n = n.nextSibling)) if (n === t) return -1;
				return e ? 1 : -1;
			}

			function ct(e) {
				return function (t) {
					var n = t.nodeName.toLowerCase();
					return "input" === n && t.type === e;
				};
			}

			function ht(e) {
				return function (t) {
					var n = t.nodeName.toLowerCase();
					return ("input" === n || "button" === n) && t.type === e;
				};
			}

			function pt(e) {
				return ut(function (t) {
					return (
						(t = +t),
						ut(function (n, r) {
							var i,
								s = e([], n.length, t),
								o = s.length;
							while (o--) n[(i = s[o])] && (n[i] = !(r[i] = n[i]));
						})
					);
				});
			}

			function dt(e) {
				return e && typeof e.getElementsByTagName !== L && e;
			}

			function vt() {}

			function mt(e) {
				for (var t = 0, n = e.length, r = ""; n > t; t++) r += e[t].value;
				return r;
			}

			function gt(e, t, n) {
				var r = t.dir,
					i = n && "parentNode" === r,
					s = x++;
				return t.first
					? function (t, n, s) {
							while ((t = t[r])) if (1 === t.nodeType || i) return e(t, n, s);
					  }
					: function (t, n, o) {
							var u,
								a,
								f = [S, s];
							if (o) {
								while ((t = t[r])) if ((1 === t.nodeType || i) && e(t, n, o)) return !0;
							} else
								while ((t = t[r]))
									if (1 === t.nodeType || i) {
										if (((a = t[w] || (t[w] = {})), (u = a[r]) && u[0] === S && u[1] === s))
											return (f[2] = u[2]);
										if (((a[r] = f), (f[2] = e(t, n, o)))) return !0;
									}
					  };
			}

			function yt(e) {
				return e.length > 1
					? function (t, n, r) {
							var i = e.length;
							while (i--) if (!e[i](t, n, r)) return !1;
							return !0;
					  }
					: e[0];
			}

			function bt(e, t, n) {
				for (var r = 0, i = t.length; i > r; r++) st(e, t[r], n);
				return n;
			}

			function wt(e, t, n, r, i) {
				for (var s, o = [], u = 0, a = e.length, f = null != t; a > u; u++)
					(s = e[u]) && (!n || n(s, r, i)) && (o.push(s), f && t.push(u));
				return o;
			}

			function Et(e, t, n, r, i, s) {
				return (
					r && !r[w] && (r = Et(r)),
					i && !i[w] && (i = Et(i, s)),
					ut(function (s, o, u, a) {
						var f,
							l,
							c,
							h = [],
							p = [],
							d = o.length,
							v = s || bt(t || "*", u.nodeType ? [u] : u, []),
							m = !e || (!s && t) ? v : wt(v, h, e, u, a),
							g = n ? (i || (s ? e : d || r) ? [] : o) : m;
						if ((n && n(m, g, u, a), r)) {
							(f = wt(g, p)), r(f, [], u, a), (l = f.length);
							while (l--) (c = f[l]) && (g[p[l]] = !(m[p[l]] = c));
						}
						if (s) {
							if (i || e) {
								if (i) {
									(f = []), (l = g.length);
									while (l--) (c = g[l]) && f.push((m[l] = c));
									i(null, (g = []), f, a);
								}
								l = g.length;
								while (l--)
									(c = g[l]) && (f = i ? B.call(s, c) : h[l]) > -1 && (s[f] = !(o[f] = c));
							}
						} else (g = wt(g === o ? g.splice(d, g.length) : g)), i ? i(null, o, g, a) : P.apply(o, g);
					})
				);
			}

			function St(e) {
				for (
					var t,
						n,
						i,
						s = e.length,
						o = r.relative[e[0].type],
						u = o || r.relative[" "],
						a = o ? 1 : 0,
						l = gt(
							function (e) {
								return e === t;
							},
							u,
							!0
						),
						c = gt(
							function (e) {
								return B.call(t, e) > -1;
							},
							u,
							!0
						),
						h = [
							function (e, n, r) {
								return (!o && (r || n !== f)) || ((t = n).nodeType ? l(e, n, r) : c(e, n, r));
							},
						];
					s > a;
					a++
				)
					if ((n = r.relative[e[a].type])) h = [gt(yt(h), n)];
					else {
						if (((n = r.filter[e[a].type].apply(null, e[a].matches)), n[w])) {
							for (i = ++a; s > i; i++) if (r.relative[e[i].type]) break;
							return Et(
								a > 1 && yt(h),
								a > 1 &&
									mt(
										e.slice(0, a - 1).concat({
											value: " " === e[a - 2].type ? "*" : "",
										})
									).replace(z, "$1"),
								n,
								i > a && St(e.slice(a, i)),
								s > i && St((e = e.slice(i))),
								s > i && mt(e)
							);
						}
						h.push(n);
					}
				return yt(h);
			}

			function xt(e, t) {
				var n = t.length > 0,
					i = e.length > 0,
					s = function (s, o, u, a, l) {
						var c,
							h,
							d,
							v = 0,
							m = "0",
							g = s && [],
							y = [],
							b = f,
							w = s || (i && r.find.TAG("*", l)),
							E = (S += null == b ? 1 : Math.random() || 0.1),
							x = w.length;
						for (l && (f = o !== p && o); m !== x && null != (c = w[m]); m++) {
							if (i && c) {
								h = 0;
								while ((d = e[h++]))
									if (d(c, o, u)) {
										a.push(c);
										break;
									}
								l && (S = E);
							}
							n && ((c = !d && c) && v--, s && g.push(c));
						}
						if (((v += m), n && m !== v)) {
							h = 0;
							while ((d = t[h++])) d(g, y, o, u);
							if (s) {
								if (v > 0) while (m--) g[m] || y[m] || (y[m] = _.call(a));
								y = wt(y);
							}
							P.apply(a, y), l && !s && y.length > 0 && v + t.length > 1 && st.uniqueSort(a);
						}
						return l && ((S = E), (f = b)), g;
					};
				return n ? ut(s) : s;
			}
			var t,
				n,
				r,
				i,
				s,
				o,
				u,
				a,
				f,
				l,
				c,
				h,
				p,
				d,
				v,
				m,
				g,
				y,
				b,
				w = "sizzle" + -new Date(),
				E = e.document,
				S = 0,
				x = 0,
				T = ot(),
				N = ot(),
				C = ot(),
				k = function (e, t) {
					return e === t && (c = !0), 0;
				},
				L = "undefined",
				A = 1 << 31,
				O = {}.hasOwnProperty,
				M = [],
				_ = M.pop,
				D = M.push,
				P = M.push,
				H = M.slice,
				B =
					M.indexOf ||
					function (e) {
						for (var t = 0, n = this.length; n > t; t++) if (this[t] === e) return t;
						return -1;
					},
				j =
					"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
				F = "[\\x20\\t\\r\\n\\f]",
				I = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
				q = I.replace("w", "w#"),
				R =
					"\\[" +
					F +
					"*(" +
					I +
					")(?:" +
					F +
					"*([*^$|!~]?=)" +
					F +
					"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
					q +
					"))|)" +
					F +
					"*\\]",
				U =
					":(" +
					I +
					")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
					R +
					")*)|.*)\\)|)",
				z = new RegExp("^" + F + "+|((?:^|[^\\\\])(?:\\\\.)*)" + F + "+$", "g"),
				W = new RegExp("^" + F + "*," + F + "*"),
				X = new RegExp("^" + F + "*([>+~]|" + F + ")" + F + "*"),
				V = new RegExp("=" + F + "*([^\\]'\"]*?)" + F + "*\\]", "g"),
				$ = new RegExp(U),
				J = new RegExp("^" + q + "$"),
				K = {
					ID: new RegExp("^#(" + I + ")"),
					CLASS: new RegExp("^\\.(" + I + ")"),
					TAG: new RegExp("^(" + I.replace("w", "w*") + ")"),
					ATTR: new RegExp("^" + R),
					PSEUDO: new RegExp("^" + U),
					CHILD: new RegExp(
						"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
							F +
							"*(even|odd|(([+-]|)(\\d*)n|)" +
							F +
							"*(?:([+-]|)" +
							F +
							"*(\\d+)|))" +
							F +
							"*\\)|)",
						"i"
					),
					bool: new RegExp("^(?:" + j + ")$", "i"),
					needsContext: new RegExp(
						"^" +
							F +
							"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
							F +
							"*((?:-\\d)?\\d*)" +
							F +
							"*\\)|)(?=[^-]|$)",
						"i"
					),
				},
				Q = /^(?:input|select|textarea|button)$/i,
				G = /^h\d$/i,
				Y = /^[^{]+\{\s*\[native \w/,
				Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
				et = /[+~]/,
				tt = /'|\\/g,
				nt = new RegExp("\\\\([\\da-f]{1,6}" + F + "?|(" + F + ")|.)", "ig"),
				rt = function (e, t, n) {
					var r = "0x" + t - 65536;
					return r !== r || n
						? t
						: 0 > r
						? String.fromCharCode(r + 65536)
						: String.fromCharCode((r >> 10) | 55296, (1023 & r) | 56320);
				};
			try {
				P.apply((M = H.call(E.childNodes)), E.childNodes), M[E.childNodes.length].nodeType;
			} catch (it) {
				P = {
					apply: M.length
						? function (e, t) {
								D.apply(e, H.call(t));
						  }
						: function (e, t) {
								var n = e.length,
									r = 0;
								while ((e[n++] = t[r++]));
								e.length = n - 1;
						  },
				};
			}
			(n = st.support = {}),
				(s = st.isXML =
					function (e) {
						var t = e && (e.ownerDocument || e).documentElement;
						return t ? "HTML" !== t.nodeName : !1;
					}),
				(h = st.setDocument =
					function (e) {
						var t,
							i = e ? e.ownerDocument || e : E,
							o = i.defaultView;
						return i !== p && 9 === i.nodeType && i.documentElement
							? ((p = i),
							  (d = i.documentElement),
							  (v = !s(i)),
							  o &&
									o !== o.top &&
									(o.addEventListener
										? o.addEventListener(
												"unload",
												function () {
													h();
												},
												!1
										  )
										: o.attachEvent &&
										  o.attachEvent("onunload", function () {
												h();
										  })),
							  (n.attributes = at(function (e) {
									return (e.className = "i"), !e.getAttribute("className");
							  })),
							  (n.getElementsByTagName = at(function (e) {
									return e.appendChild(i.createComment("")), !e.getElementsByTagName("*").length;
							  })),
							  (n.getElementsByClassName =
									Y.test(i.getElementsByClassName) &&
									at(function (e) {
										return (
											(e.innerHTML = "<div class='a'></div><div class='a i'></div>"),
											(e.firstChild.className = "i"),
											2 === e.getElementsByClassName("i").length
										);
									})),
							  (n.getById = at(function (e) {
									return (
										(d.appendChild(e).id = w),
										!i.getElementsByName || !i.getElementsByName(w).length
									);
							  })),
							  n.getById
									? ((r.find.ID = function (e, t) {
											if (typeof t.getElementById !== L && v) {
												var n = t.getElementById(e);
												return n && n.parentNode ? [n] : [];
											}
									  }),
									  (r.filter.ID = function (e) {
											var t = e.replace(nt, rt);
											return function (e) {
												return e.getAttribute("id") === t;
											};
									  }))
									: (delete r.find.ID,
									  (r.filter.ID = function (e) {
											var t = e.replace(nt, rt);
											return function (e) {
												var n = typeof e.getAttributeNode !== L && e.getAttributeNode("id");
												return n && n.value === t;
											};
									  })),
							  (r.find.TAG = n.getElementsByTagName
									? function (e, t) {
											return typeof t.getElementsByTagName !== L
												? t.getElementsByTagName(e)
												: void 0;
									  }
									: function (e, t) {
											var n,
												r = [],
												i = 0,
												s = t.getElementsByTagName(e);
											if ("*" === e) {
												while ((n = s[i++])) 1 === n.nodeType && r.push(n);
												return r;
											}
											return s;
									  }),
							  (r.find.CLASS =
									n.getElementsByClassName &&
									function (e, t) {
										return typeof t.getElementsByClassName !== L && v
											? t.getElementsByClassName(e)
											: void 0;
									}),
							  (g = []),
							  (m = []),
							  (n.qsa = Y.test(i.querySelectorAll)) &&
									(at(function (e) {
										(e.innerHTML = "<select msallowclip=''><option selected=''></option></select>"),
											e.querySelectorAll("[msallowclip^='']").length &&
												m.push("[*^$]=" + F + "*(?:''|\"\")"),
											e.querySelectorAll("[selected]").length ||
												m.push("\\[" + F + "*(?:value|" + j + ")"),
											e.querySelectorAll(":checked").length || m.push(":checked");
									}),
									at(function (e) {
										var t = i.createElement("input");
										t.setAttribute("type", "hidden"),
											e.appendChild(t).setAttribute("name", "D"),
											e.querySelectorAll("[name=d]").length && m.push("name" + F + "*[*^$|!~]?="),
											e.querySelectorAll(":enabled").length || m.push(":enabled", ":disabled"),
											e.querySelectorAll("*,:x"),
											m.push(",.*:");
									})),
							  (n.matchesSelector = Y.test(
									(y =
										d.matches ||
										d.webkitMatchesSelector ||
										d.mozMatchesSelector ||
										d.oMatchesSelector ||
										d.msMatchesSelector)
							  )) &&
									at(function (e) {
										(n.disconnectedMatch = y.call(e, "div")),
											y.call(e, "[s!='']:x"),
											g.push("!=", U);
									}),
							  (m = m.length && new RegExp(m.join("|"))),
							  (g = g.length && new RegExp(g.join("|"))),
							  (t = Y.test(d.compareDocumentPosition)),
							  (b =
									t || Y.test(d.contains)
										? function (e, t) {
												var n = 9 === e.nodeType ? e.documentElement : e,
													r = t && t.parentNode;
												return (
													e === r ||
													(!!r &&
														1 === r.nodeType &&
														!!(n.contains
															? n.contains(r)
															: e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)))
												);
										  }
										: function (e, t) {
												if (t) while ((t = t.parentNode)) if (t === e) return !0;
												return !1;
										  }),
							  (k = t
									? function (e, t) {
											if (e === t) return (c = !0), 0;
											var r = !e.compareDocumentPosition - !t.compareDocumentPosition;
											return r
												? r
												: ((r =
														(e.ownerDocument || e) === (t.ownerDocument || t)
															? e.compareDocumentPosition(t)
															: 1),
												  1 & r || (!n.sortDetached && t.compareDocumentPosition(e) === r)
														? e === i || (e.ownerDocument === E && b(E, e))
															? -1
															: t === i || (t.ownerDocument === E && b(E, t))
															? 1
															: l
															? B.call(l, e) - B.call(l, t)
															: 0
														: 4 & r
														? -1
														: 1);
									  }
									: function (e, t) {
											if (e === t) return (c = !0), 0;
											var n,
												r = 0,
												s = e.parentNode,
												o = t.parentNode,
												u = [e],
												a = [t];
											if (!s || !o)
												return e === i
													? -1
													: t === i
													? 1
													: s
													? -1
													: o
													? 1
													: l
													? B.call(l, e) - B.call(l, t)
													: 0;
											if (s === o) return lt(e, t);
											n = e;
											while ((n = n.parentNode)) u.unshift(n);
											n = t;
											while ((n = n.parentNode)) a.unshift(n);
											while (u[r] === a[r]) r++;
											return r ? lt(u[r], a[r]) : u[r] === E ? -1 : a[r] === E ? 1 : 0;
									  }),
							  i)
							: p;
					}),
				(st.matches = function (e, t) {
					return st(e, null, null, t);
				}),
				(st.matchesSelector = function (e, t) {
					if (
						((e.ownerDocument || e) !== p && h(e),
						(t = t.replace(V, "='$1']")),
						!(!n.matchesSelector || !v || (g && g.test(t)) || (m && m.test(t))))
					)
						try {
							var r = y.call(e, t);
							if (r || n.disconnectedMatch || (e.document && 11 !== e.document.nodeType)) return r;
						} catch (i) {}
					return st(t, p, null, [e]).length > 0;
				}),
				(st.contains = function (e, t) {
					return (e.ownerDocument || e) !== p && h(e), b(e, t);
				}),
				(st.attr = function (e, t) {
					(e.ownerDocument || e) !== p && h(e);
					var i = r.attrHandle[t.toLowerCase()],
						s = i && O.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !v) : void 0;
					return void 0 !== s
						? s
						: n.attributes || !v
						? e.getAttribute(t)
						: (s = e.getAttributeNode(t)) && s.specified
						? s.value
						: null;
				}),
				(st.error = function (e) {
					throw new Error("Syntax error, unrecognized expression: " + e);
				}),
				(st.uniqueSort = function (e) {
					var t,
						r = [],
						i = 0,
						s = 0;
					if (((c = !n.detectDuplicates), (l = !n.sortStable && e.slice(0)), e.sort(k), c)) {
						while ((t = e[s++])) t === e[s] && (i = r.push(s));
						while (i--) e.splice(r[i], 1);
					}
					return (l = null), e;
				}),
				(i = st.getText =
					function (e) {
						var t,
							n = "",
							r = 0,
							s = e.nodeType;
						if (s) {
							if (1 === s || 9 === s || 11 === s) {
								if ("string" == typeof e.textContent) return e.textContent;
								for (e = e.firstChild; e; e = e.nextSibling) n += i(e);
							} else if (3 === s || 4 === s) return e.nodeValue;
						} else while ((t = e[r++])) n += i(t);
						return n;
					}),
				(r = st.selectors =
					{
						cacheLength: 50,
						createPseudo: ut,
						match: K,
						attrHandle: {},
						find: {},
						relative: {
							">": {
								dir: "parentNode",
								first: !0,
							},
							" ": {
								dir: "parentNode",
							},
							"+": {
								dir: "previousSibling",
								first: !0,
							},
							"~": {
								dir: "previousSibling",
							},
						},
						preFilter: {
							ATTR: function (e) {
								return (
									(e[1] = e[1].replace(nt, rt)),
									(e[3] = (e[3] || e[4] || e[5] || "").replace(nt, rt)),
									"~=" === e[2] && (e[3] = " " + e[3] + " "),
									e.slice(0, 4)
								);
							},
							CHILD: function (e) {
								return (
									(e[1] = e[1].toLowerCase()),
									"nth" === e[1].slice(0, 3)
										? (e[3] || st.error(e[0]),
										  (e[4] = +(e[4]
												? e[5] + (e[6] || 1)
												: 2 * ("even" === e[3] || "odd" === e[3]))),
										  (e[5] = +(e[7] + e[8] || "odd" === e[3])))
										: e[3] && st.error(e[0]),
									e
								);
							},
							PSEUDO: function (e) {
								var t,
									n = !e[6] && e[2];
								return K.CHILD.test(e[0])
									? null
									: (e[3]
											? (e[2] = e[4] || e[5] || "")
											: n &&
											  $.test(n) &&
											  (t = o(n, !0)) &&
											  (t = n.indexOf(")", n.length - t) - n.length) &&
											  ((e[0] = e[0].slice(0, t)), (e[2] = n.slice(0, t))),
									  e.slice(0, 3));
							},
						},
						filter: {
							TAG: function (e) {
								var t = e.replace(nt, rt).toLowerCase();
								return "*" === e
									? function () {
											return !0;
									  }
									: function (e) {
											return e.nodeName && e.nodeName.toLowerCase() === t;
									  };
							},
							CLASS: function (e) {
								var t = T[e + " "];
								return (
									t ||
									((t = new RegExp("(^|" + F + ")" + e + "(" + F + "|$)")) &&
										T(e, function (e) {
											return t.test(
												("string" == typeof e.className && e.className) ||
													(typeof e.getAttribute !== L && e.getAttribute("class")) ||
													""
											);
										}))
								);
							},
							ATTR: function (e, t, n) {
								return function (r) {
									var i = st.attr(r, e);
									return null == i
										? "!=" === t
										: t
										? ((i += ""),
										  "=" === t
												? i === n
												: "!=" === t
												? i !== n
												: "^=" === t
												? n && 0 === i.indexOf(n)
												: "*=" === t
												? n && i.indexOf(n) > -1
												: "$=" === t
												? n && i.slice(-n.length) === n
												: "~=" === t
												? (" " + i + " ").indexOf(n) > -1
												: "|=" === t
												? i === n || i.slice(0, n.length + 1) === n + "-"
												: !1)
										: !0;
								};
							},
							CHILD: function (e, t, n, r, i) {
								var s = "nth" !== e.slice(0, 3),
									o = "last" !== e.slice(-4),
									u = "of-type" === t;
								return 1 === r && 0 === i
									? function (e) {
											return !!e.parentNode;
									  }
									: function (t, n, a) {
											var f,
												l,
												c,
												h,
												p,
												d,
												v = s !== o ? "nextSibling" : "previousSibling",
												m = t.parentNode,
												g = u && t.nodeName.toLowerCase(),
												y = !a && !u;
											if (m) {
												if (s) {
													while (v) {
														c = t;
														while ((c = c[v]))
															if (u ? c.nodeName.toLowerCase() === g : 1 === c.nodeType) return !1;
														d = v = "only" === e && !d && "nextSibling";
													}
													return !0;
												}
												if (((d = [o ? m.firstChild : m.lastChild]), o && y)) {
													(l = m[w] || (m[w] = {})),
														(f = l[e] || []),
														(p = f[0] === S && f[1]),
														(h = f[0] === S && f[2]),
														(c = p && m.childNodes[p]);
													while ((c = (++p && c && c[v]) || (h = p = 0) || d.pop()))
														if (1 === c.nodeType && ++h && c === t) {
															l[e] = [S, p, h];
															break;
														}
												} else if (y && (f = (t[w] || (t[w] = {}))[e]) && f[0] === S) h = f[1];
												else
													while ((c = (++p && c && c[v]) || (h = p = 0) || d.pop()))
														if (
															(u ? c.nodeName.toLowerCase() === g : 1 === c.nodeType) &&
															++h &&
															(y && ((c[w] || (c[w] = {}))[e] = [S, h]), c === t)
														)
															break;
												return (h -= i), h === r || (h % r === 0 && h / r >= 0);
											}
									  };
							},
							PSEUDO: function (e, t) {
								var n,
									i =
										r.pseudos[e] ||
										r.setFilters[e.toLowerCase()] ||
										st.error("unsupported pseudo: " + e);
								return i[w]
									? i(t)
									: i.length > 1
									? ((n = [e, e, "", t]),
									  r.setFilters.hasOwnProperty(e.toLowerCase())
											? ut(function (e, n) {
													var r,
														s = i(e, t),
														o = s.length;
													while (o--) (r = B.call(e, s[o])), (e[r] = !(n[r] = s[o]));
											  })
											: function (e) {
													return i(e, 0, n);
											  })
									: i;
							},
						},
						pseudos: {
							not: ut(function (e) {
								var t = [],
									n = [],
									r = u(e.replace(z, "$1"));
								return r[w]
									? ut(function (e, t, n, i) {
											var s,
												o = r(e, null, i, []),
												u = e.length;
											while (u--) (s = o[u]) && (e[u] = !(t[u] = s));
									  })
									: function (e, i, s) {
											return (t[0] = e), r(t, null, s, n), !n.pop();
									  };
							}),
							has: ut(function (e) {
								return function (t) {
									return st(e, t).length > 0;
								};
							}),
							contains: ut(function (e) {
								return function (t) {
									return (t.textContent || t.innerText || i(t)).indexOf(e) > -1;
								};
							}),
							lang: ut(function (e) {
								return (
									J.test(e || "") || st.error("unsupported lang: " + e),
									(e = e.replace(nt, rt).toLowerCase()),
									function (t) {
										var n;
										do
											if ((n = v ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")))
												return (n = n.toLowerCase()), n === e || 0 === n.indexOf(e + "-");
										while ((t = t.parentNode) && 1 === t.nodeType);
										return !1;
									}
								);
							}),
							target: function (t) {
								var n = e.location && e.location.hash;
								return n && n.slice(1) === t.id;
							},
							root: function (e) {
								return e === d;
							},
							focus: function (e) {
								return (
									e === p.activeElement &&
									(!p.hasFocus || p.hasFocus()) &&
									!!(e.type || e.href || ~e.tabIndex)
								);
							},
							enabled: function (e) {
								return e.disabled === !1;
							},
							disabled: function (e) {
								return e.disabled === !0;
							},
							checked: function (e) {
								var t = e.nodeName.toLowerCase();
								return ("input" === t && !!e.checked) || ("option" === t && !!e.selected);
							},
							selected: function (e) {
								return e.parentNode && e.parentNode.selectedIndex, e.selected === !0;
							},
							empty: function (e) {
								for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1;
								return !0;
							},
							parent: function (e) {
								return !r.pseudos.empty(e);
							},
							header: function (e) {
								return G.test(e.nodeName);
							},
							input: function (e) {
								return Q.test(e.nodeName);
							},
							button: function (e) {
								var t = e.nodeName.toLowerCase();
								return ("input" === t && "button" === e.type) || "button" === t;
							},
							text: function (e) {
								var t;
								return (
									"input" === e.nodeName.toLowerCase() &&
									"text" === e.type &&
									(null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
								);
							},
							first: pt(function () {
								return [0];
							}),
							last: pt(function (e, t) {
								return [t - 1];
							}),
							eq: pt(function (e, t, n) {
								return [0 > n ? n + t : n];
							}),
							even: pt(function (e, t) {
								for (var n = 0; t > n; n += 2) e.push(n);
								return e;
							}),
							odd: pt(function (e, t) {
								for (var n = 1; t > n; n += 2) e.push(n);
								return e;
							}),
							lt: pt(function (e, t, n) {
								for (var r = 0 > n ? n + t : n; --r >= 0; ) e.push(r);
								return e;
							}),
							gt: pt(function (e, t, n) {
								for (var r = 0 > n ? n + t : n; ++r < t; ) e.push(r);
								return e;
							}),
						},
					}),
				(r.pseudos.nth = r.pseudos.eq);
			for (t in {
				radio: !0,
				checkbox: !0,
				file: !0,
				password: !0,
				image: !0,
			})
				r.pseudos[t] = ct(t);
			for (t in {
				submit: !0,
				reset: !0,
			})
				r.pseudos[t] = ht(t);
			return (
				(vt.prototype = r.filters = r.pseudos),
				(r.setFilters = new vt()),
				(o = st.tokenize =
					function (e, t) {
						var n,
							i,
							s,
							o,
							u,
							a,
							f,
							l = N[e + " "];
						if (l) return t ? 0 : l.slice(0);
						(u = e), (a = []), (f = r.preFilter);
						while (u) {
							(!n || (i = W.exec(u))) && (i && (u = u.slice(i[0].length) || u), a.push((s = []))),
								(n = !1),
								(i = X.exec(u)) &&
									((n = i.shift()),
									s.push({
										value: n,
										type: i[0].replace(z, " "),
									}),
									(u = u.slice(n.length)));
							for (o in r.filter)
								!(i = K[o].exec(u)) ||
									(f[o] && !(i = f[o](i))) ||
									((n = i.shift()),
									s.push({
										value: n,
										type: o,
										matches: i,
									}),
									(u = u.slice(n.length)));
							if (!n) break;
						}
						return t ? u.length : u ? st.error(e) : N(e, a).slice(0);
					}),
				(u = st.compile =
					function (e, t) {
						var n,
							r = [],
							i = [],
							s = C[e + " "];
						if (!s) {
							t || (t = o(e)), (n = t.length);
							while (n--) (s = St(t[n])), s[w] ? r.push(s) : i.push(s);
							(s = C(e, xt(i, r))), (s.selector = e);
						}
						return s;
					}),
				(a = st.select =
					function (e, t, i, s) {
						var a,
							f,
							l,
							c,
							h,
							p = "function" == typeof e && e,
							d = !s && o((e = p.selector || e));
						if (((i = i || []), 1 === d.length)) {
							if (
								((f = d[0] = d[0].slice(0)),
								f.length > 2 &&
									"ID" === (l = f[0]).type &&
									n.getById &&
									9 === t.nodeType &&
									v &&
									r.relative[f[1].type])
							) {
								if (((t = (r.find.ID(l.matches[0].replace(nt, rt), t) || [])[0]), !t)) return i;
								p && (t = t.parentNode), (e = e.slice(f.shift().value.length));
							}
							a = K.needsContext.test(e) ? 0 : f.length;
							while (a--) {
								if (((l = f[a]), r.relative[(c = l.type)])) break;
								if (
									(h = r.find[c]) &&
									(s = h(
										l.matches[0].replace(nt, rt),
										(et.test(f[0].type) && dt(t.parentNode)) || t
									))
								) {
									if ((f.splice(a, 1), (e = s.length && mt(f)), !e)) return P.apply(i, s), i;
									break;
								}
							}
						}
						return (p || u(e, d))(s, t, !v, i, (et.test(e) && dt(t.parentNode)) || t), i;
					}),
				(n.sortStable = w.split("").sort(k).join("") === w),
				(n.detectDuplicates = !!c),
				h(),
				(n.sortDetached = at(function (e) {
					return 1 & e.compareDocumentPosition(p.createElement("div"));
				})),
				at(function (e) {
					return (e.innerHTML = "<a href='#'></a>"), "#" === e.firstChild.getAttribute("href");
				}) ||
					ft("type|href|height|width", function (e, t, n) {
						return n ? void 0 : e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
					}),
				(n.attributes &&
					at(function (e) {
						return (
							(e.innerHTML = "<input/>"),
							e.firstChild.setAttribute("value", ""),
							"" === e.firstChild.getAttribute("value")
						);
					})) ||
					ft("value", function (e, t, n) {
						return n || "input" !== e.nodeName.toLowerCase() ? void 0 : e.defaultValue;
					}),
				at(function (e) {
					return null == e.getAttribute("disabled");
				}) ||
					ft(j, function (e, t, n) {
						var r;
						return n
							? void 0
							: e[t] === !0
							? t.toLowerCase()
							: (r = e.getAttributeNode(t)) && r.specified
							? r.value
							: null;
					}),
				st
			);
		})(e);
		(h.find = y),
			(h.expr = y.selectors),
			(h.expr[":"] = h.expr.pseudos),
			(h.unique = y.uniqueSort),
			(h.text = y.getText),
			(h.isXMLDoc = y.isXML),
			(h.contains = y.contains);
		var b = h.expr.match.needsContext,
			w = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
			E = /^.[^:#\[\.,]*$/;
		(h.filter = function (e, t, n) {
			var r = t[0];
			return (
				n && (e = ":not(" + e + ")"),
				1 === t.length && 1 === r.nodeType
					? h.find.matchesSelector(r, e)
						? [r]
						: []
					: h.find.matches(
							e,
							h.grep(t, function (e) {
								return 1 === e.nodeType;
							})
					  )
			);
		}),
			h.fn.extend({
				find: function (e) {
					var t,
						n = [],
						r = this,
						i = r.length;
					if ("string" != typeof e)
						return this.pushStack(
							h(e).filter(function () {
								for (t = 0; i > t; t++) if (h.contains(r[t], this)) return !0;
							})
						);
					for (t = 0; i > t; t++) h.find(e, r[t], n);
					return (
						(n = this.pushStack(i > 1 ? h.unique(n) : n)),
						(n.selector = this.selector ? this.selector + " " + e : e),
						n
					);
				},
				filter: function (e) {
					return this.pushStack(S(this, e || [], !1));
				},
				not: function (e) {
					return this.pushStack(S(this, e || [], !0));
				},
				is: function (e) {
					return !!S(this, "string" == typeof e && b.test(e) ? h(e) : e || [], !1).length;
				},
			});
		var x,
			T = e.document,
			N = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
			C = (h.fn.init = function (e, t) {
				var n, r;
				if (!e) return this;
				if ("string" == typeof e) {
					if (
						((n =
							"<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3
								? [null, e, null]
								: N.exec(e)),
						!n || (!n[1] && t))
					)
						return !t || t.jquery ? (t || x).find(e) : this.constructor(t).find(e);
					if (n[1]) {
						if (
							((t = t instanceof h ? t[0] : t),
							h.merge(this, h.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : T, !0)),
							w.test(n[1]) && h.isPlainObject(t))
						)
							for (n in t) h.isFunction(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
						return this;
					}
					if (((r = T.getElementById(n[2])), r && r.parentNode)) {
						if (r.id !== n[2]) return x.find(e);
						(this.length = 1), (this[0] = r);
					}
					return (this.context = T), (this.selector = e), this;
				}
				return e.nodeType
					? ((this.context = this[0] = e), (this.length = 1), this)
					: h.isFunction(e)
					? "undefined" != typeof x.ready
						? x.ready(e)
						: e(h)
					: (void 0 !== e.selector && ((this.selector = e.selector), (this.context = e.context)),
					  h.makeArray(e, this));
			});
		(C.prototype = h.fn), (x = h(T));
		var k = /^(?:parents|prev(?:Until|All))/,
			L = {
				children: !0,
				contents: !0,
				next: !0,
				prev: !0,
			};
		h.extend({
			dir: function (e, t, n) {
				var r = [],
					i = e[t];
				while (i && 9 !== i.nodeType && (void 0 === n || 1 !== i.nodeType || !h(i).is(n)))
					1 === i.nodeType && r.push(i), (i = i[t]);
				return r;
			},
			sibling: function (e, t) {
				for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
				return n;
			},
		}),
			h.fn.extend({
				has: function (e) {
					var t,
						n = h(e, this),
						r = n.length;
					return this.filter(function () {
						for (t = 0; r > t; t++) if (h.contains(this, n[t])) return !0;
					});
				},
				closest: function (e, t) {
					for (
						var n,
							r = 0,
							i = this.length,
							s = [],
							o = b.test(e) || "string" != typeof e ? h(e, t || this.context) : 0;
						i > r;
						r++
					)
						for (n = this[r]; n && n !== t; n = n.parentNode)
							if (
								n.nodeType < 11 &&
								(o ? o.index(n) > -1 : 1 === n.nodeType && h.find.matchesSelector(n, e))
							) {
								s.push(n);
								break;
							}
					return this.pushStack(s.length > 1 ? h.unique(s) : s);
				},
				index: function (e) {
					return e
						? "string" == typeof e
							? h.inArray(this[0], h(e))
							: h.inArray(e.jquery ? e[0] : e, this)
						: this[0] && this[0].parentNode
						? this.first().prevAll().length
						: -1;
				},
				add: function (e, t) {
					return this.pushStack(h.unique(h.merge(this.get(), h(e, t))));
				},
				addBack: function (e) {
					return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
				},
			}),
			h.each(
				{
					parent: function (e) {
						var t = e.parentNode;
						return t && 11 !== t.nodeType ? t : null;
					},
					parents: function (e) {
						return h.dir(e, "parentNode");
					},
					parentsUntil: function (e, t, n) {
						return h.dir(e, "parentNode", n);
					},
					next: function (e) {
						return A(e, "nextSibling");
					},
					prev: function (e) {
						return A(e, "previousSibling");
					},
					nextAll: function (e) {
						return h.dir(e, "nextSibling");
					},
					prevAll: function (e) {
						return h.dir(e, "previousSibling");
					},
					nextUntil: function (e, t, n) {
						return h.dir(e, "nextSibling", n);
					},
					prevUntil: function (e, t, n) {
						return h.dir(e, "previousSibling", n);
					},
					siblings: function (e) {
						return h.sibling((e.parentNode || {}).firstChild, e);
					},
					children: function (e) {
						return h.sibling(e.firstChild);
					},
					contents: function (e) {
						return h.nodeName(e, "iframe")
							? e.contentDocument || e.contentWindow.document
							: h.merge([], e.childNodes);
					},
				},
				function (e, t) {
					h.fn[e] = function (n, r) {
						var i = h.map(this, t, n);
						return (
							"Until" !== e.slice(-5) && (r = n),
							r && "string" == typeof r && (i = h.filter(r, i)),
							this.length > 1 && (L[e] || (i = h.unique(i)), k.test(e) && (i = i.reverse())),
							this.pushStack(i)
						);
					};
				}
			);
		var O = /\S+/g,
			M = {};
		(h.Callbacks = function (e) {
			e = "string" == typeof e ? M[e] || _(e) : h.extend({}, e);
			var t,
				n,
				r,
				i,
				s,
				o,
				u = [],
				a = !e.once && [],
				f = function (c) {
					for (n = e.memory && c, r = !0, s = o || 0, o = 0, i = u.length, t = !0; u && i > s; s++)
						if (u[s].apply(c[0], c[1]) === !1 && e.stopOnFalse) {
							n = !1;
							break;
						}
					(t = !1), u && (a ? a.length && f(a.shift()) : n ? (u = []) : l.disable());
				},
				l = {
					add: function () {
						if (u) {
							var r = u.length;
							!(function s(t) {
								h.each(t, function (t, n) {
									var r = h.type(n);
									"function" === r
										? (e.unique && l.has(n)) || u.push(n)
										: n && n.length && "string" !== r && s(n);
								});
							})(arguments),
								t ? (i = u.length) : n && ((o = r), f(n));
						}
						return this;
					},
					remove: function () {
						return (
							u &&
								h.each(arguments, function (e, n) {
									var r;
									while ((r = h.inArray(n, u, r)) > -1)
										u.splice(r, 1), t && (i >= r && i--, s >= r && s--);
								}),
							this
						);
					},
					has: function (e) {
						return e ? h.inArray(e, u) > -1 : !!u && !!u.length;
					},
					empty: function () {
						return (u = []), (i = 0), this;
					},
					disable: function () {
						return (u = a = n = void 0), this;
					},
					disabled: function () {
						return !u;
					},
					lock: function () {
						return (a = void 0), n || l.disable(), this;
					},
					locked: function () {
						return !a;
					},
					fireWith: function (e, n) {
						return (
							!u ||
								(r && !a) ||
								((n = n || []), (n = [e, n.slice ? n.slice() : n]), t ? a.push(n) : f(n)),
							this
						);
					},
					fire: function () {
						return l.fireWith(this, arguments), this;
					},
					fired: function () {
						return !!r;
					},
				};
			return l;
		}),
			h.extend({
				Deferred: function (e) {
					var t = [
							["resolve", "done", h.Callbacks("once memory"), "resolved"],
							["reject", "fail", h.Callbacks("once memory"), "rejected"],
							["notify", "progress", h.Callbacks("memory")],
						],
						n = "pending",
						r = {
							state: function () {
								return n;
							},
							always: function () {
								return i.done(arguments).fail(arguments), this;
							},
							then: function () {
								var e = arguments;
								return h
									.Deferred(function (n) {
										h.each(t, function (t, s) {
											var o = h.isFunction(e[t]) && e[t];
											i[s[1]](function () {
												var e = o && o.apply(this, arguments);
												e && h.isFunction(e.promise)
													? e.promise().done(n.resolve).fail(n.reject).progress(n.notify)
													: n[s[0] + "With"](this === r ? n.promise() : this, o ? [e] : arguments);
											});
										}),
											(e = null);
									})
									.promise();
							},
							promise: function (e) {
								return null != e ? h.extend(e, r) : r;
							},
						},
						i = {};
					return (
						(r.pipe = r.then),
						h.each(t, function (e, s) {
							var o = s[2],
								u = s[3];
							(r[s[1]] = o.add),
								u &&
									o.add(
										function () {
											n = u;
										},
										t[1 ^ e][2].disable,
										t[2][2].lock
									),
								(i[s[0]] = function () {
									return i[s[0] + "With"](this === i ? r : this, arguments), this;
								}),
								(i[s[0] + "With"] = o.fireWith);
						}),
						r.promise(i),
						e && e.call(i, i),
						i
					);
				},
				when: function (e) {
					var t = 0,
						n = r.call(arguments),
						i = n.length,
						s = 1 !== i || (e && h.isFunction(e.promise)) ? i : 0,
						o = 1 === s ? e : h.Deferred(),
						u = function (e, t, n) {
							return function (i) {
								(t[e] = this),
									(n[e] = arguments.length > 1 ? r.call(arguments) : i),
									n === a ? o.notifyWith(t, n) : --s || o.resolveWith(t, n);
							};
						},
						a,
						f,
						l;
					if (i > 1)
						for (a = new Array(i), f = new Array(i), l = new Array(i); i > t; t++)
							n[t] && h.isFunction(n[t].promise)
								? n[t].promise().done(u(t, l, n)).fail(o.reject).progress(u(t, f, a))
								: --s;
					return s || o.resolveWith(l, n), o.promise();
				},
			});
		var D;
		(h.fn.ready = function (e) {
			return h.ready.promise().done(e), this;
		}),
			h.extend({
				isReady: !1,
				readyWait: 1,
				holdReady: function (e) {
					e ? h.readyWait++ : h.ready(!0);
				},
				ready: function (e) {
					if (e === !0 ? !--h.readyWait : !h.isReady) {
						if (!T.body) return setTimeout(h.ready);
						(h.isReady = !0),
							(e !== !0 && --h.readyWait > 0) ||
								(D.resolveWith(T, [h]),
								h.fn.triggerHandler && (h(T).triggerHandler("ready"), h(T).off("ready")));
					}
				},
			}),
			(h.ready.promise = function (t) {
				if (!D)
					if (((D = h.Deferred()), "complete" === T.readyState)) setTimeout(h.ready);
					else if (T.addEventListener)
						T.addEventListener("DOMContentLoaded", H, !1), e.addEventListener("load", H, !1);
					else {
						T.attachEvent("onreadystatechange", H), e.attachEvent("onload", H);
						var n = !1;
						try {
							n = null == e.frameElement && T.documentElement;
						} catch (r) {}
						n &&
							n.doScroll &&
							!(function i() {
								if (!h.isReady) {
									try {
										n.doScroll("left");
									} catch (e) {
										return setTimeout(i, 50);
									}
									P(), h.ready();
								}
							})();
					}
				return D.promise(t);
			});
		var B = "undefined",
			j;
		for (j in h(l)) break;
		(l.ownLast = "0" !== j),
			(l.inlineBlockNeedsLayout = !1),
			h(function () {
				var e, t, n, r;
				(n = T.getElementsByTagName("body")[0]),
					n &&
						n.style &&
						((t = T.createElement("div")),
						(r = T.createElement("div")),
						(r.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
						n.appendChild(r).appendChild(t),
						typeof t.style.zoom !== B &&
							((t.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1"),
							(l.inlineBlockNeedsLayout = e = 3 === t.offsetWidth),
							e && (n.style.zoom = 1)),
						n.removeChild(r));
			}),
			(function () {
				var e = T.createElement("div");
				if (null == l.deleteExpando) {
					l.deleteExpando = !0;
					try {
						delete e.test;
					} catch (t) {
						l.deleteExpando = !1;
					}
				}
				e = null;
			})(),
			(h.acceptData = function (e) {
				var t = h.noData[(e.nodeName + " ").toLowerCase()],
					n = +e.nodeType || 1;
				return 1 !== n && 9 !== n ? !1 : !t || (t !== !0 && e.getAttribute("classid") === t);
			});
		var F = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
			I = /([A-Z])/g;
		h.extend({
			cache: {},
			noData: {
				"applet ": !0,
				"embed ": !0,
				"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
			},
			hasData: function (e) {
				return (e = e.nodeType ? h.cache[e[h.expando]] : e[h.expando]), !!e && !R(e);
			},
			data: function (e, t, n) {
				return U(e, t, n);
			},
			removeData: function (e, t) {
				return z(e, t);
			},
			_data: function (e, t, n) {
				return U(e, t, n, !0);
			},
			_removeData: function (e, t) {
				return z(e, t, !0);
			},
		}),
			h.fn.extend({
				data: function (e, t) {
					var n,
						r,
						i,
						s = this[0],
						o = s && s.attributes;
					if (void 0 === e) {
						if (this.length && ((i = h.data(s)), 1 === s.nodeType && !h._data(s, "parsedAttrs"))) {
							n = o.length;
							while (n--)
								o[n] &&
									((r = o[n].name),
									0 === r.indexOf("data-") && ((r = h.camelCase(r.slice(5))), q(s, r, i[r])));
							h._data(s, "parsedAttrs", !0);
						}
						return i;
					}
					return "object" == typeof e
						? this.each(function () {
								h.data(this, e);
						  })
						: arguments.length > 1
						? this.each(function () {
								h.data(this, e, t);
						  })
						: s
						? q(s, e, h.data(s, e))
						: void 0;
				},
				removeData: function (e) {
					return this.each(function () {
						h.removeData(this, e);
					});
				},
			}),
			h.extend({
				queue: function (e, t, n) {
					var r;
					return e
						? ((t = (t || "fx") + "queue"),
						  (r = h._data(e, t)),
						  n && (!r || h.isArray(n) ? (r = h._data(e, t, h.makeArray(n))) : r.push(n)),
						  r || [])
						: void 0;
				},
				dequeue: function (e, t) {
					t = t || "fx";
					var n = h.queue(e, t),
						r = n.length,
						i = n.shift(),
						s = h._queueHooks(e, t),
						o = function () {
							h.dequeue(e, t);
						};
					"inprogress" === i && ((i = n.shift()), r--),
						i && ("fx" === t && n.unshift("inprogress"), delete s.stop, i.call(e, o, s)),
						!r && s && s.empty.fire();
				},
				_queueHooks: function (e, t) {
					var n = t + "queueHooks";
					return (
						h._data(e, n) ||
						h._data(e, n, {
							empty: h.Callbacks("once memory").add(function () {
								h._removeData(e, t + "queue"), h._removeData(e, n);
							}),
						})
					);
				},
			}),
			h.fn.extend({
				queue: function (e, t) {
					var n = 2;
					return (
						"string" != typeof e && ((t = e), (e = "fx"), n--),
						arguments.length < n
							? h.queue(this[0], e)
							: void 0 === t
							? this
							: this.each(function () {
									var n = h.queue(this, e, t);
									h._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && h.dequeue(this, e);
							  })
					);
				},
				dequeue: function (e) {
					return this.each(function () {
						h.dequeue(this, e);
					});
				},
				clearQueue: function (e) {
					return this.queue(e || "fx", []);
				},
				promise: function (e, t) {
					var n,
						r = 1,
						i = h.Deferred(),
						s = this,
						o = this.length,
						u = function () {
							--r || i.resolveWith(s, [s]);
						};
					"string" != typeof e && ((t = e), (e = void 0)), (e = e || "fx");
					while (o--) (n = h._data(s[o], e + "queueHooks")), n && n.empty && (r++, n.empty.add(u));
					return u(), i.promise(t);
				},
			});
		var W = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
			X = ["Top", "Right", "Bottom", "Left"],
			V = function (e, t) {
				return (e = t || e), "none" === h.css(e, "display") || !h.contains(e.ownerDocument, e);
			},
			$ = (h.access = function (e, t, n, r, i, s, o) {
				var u = 0,
					a = e.length,
					f = null == n;
				if ("object" === h.type(n)) {
					i = !0;
					for (u in n) h.access(e, t, u, n[u], !0, s, o);
				} else if (
					void 0 !== r &&
					((i = !0),
					h.isFunction(r) || (o = !0),
					f &&
						(o
							? (t.call(e, r), (t = null))
							: ((f = t),
							  (t = function (e, t, n) {
									return f.call(h(e), n);
							  }))),
					t)
				)
					for (; a > u; u++) t(e[u], n, o ? r : r.call(e[u], u, t(e[u], n)));
				return i ? e : f ? t.call(e) : a ? t(e[0], n) : s;
			}),
			J = /^(?:checkbox|radio)$/i;
		!(function () {
			var e = T.createElement("input"),
				t = T.createElement("div"),
				n = T.createDocumentFragment();
			if (
				((t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
				(l.leadingWhitespace = 3 === t.firstChild.nodeType),
				(l.tbody = !t.getElementsByTagName("tbody").length),
				(l.htmlSerialize = !!t.getElementsByTagName("link").length),
				(l.html5Clone = "<:nav></:nav>" !== T.createElement("nav").cloneNode(!0).outerHTML),
				(e.type = "checkbox"),
				(e.checked = !0),
				n.appendChild(e),
				(l.appendChecked = e.checked),
				(t.innerHTML = "<textarea>x</textarea>"),
				(l.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue),
				n.appendChild(t),
				(t.innerHTML = "<input type='radio' checked='checked' name='t'/>"),
				(l.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked),
				(l.noCloneEvent = !0),
				t.attachEvent &&
					(t.attachEvent("onclick", function () {
						l.noCloneEvent = !1;
					}),
					t.cloneNode(!0).click()),
				null == l.deleteExpando)
			) {
				l.deleteExpando = !0;
				try {
					delete t.test;
				} catch (r) {
					l.deleteExpando = !1;
				}
			}
		})(),
			(function () {
				var t,
					n,
					r = T.createElement("div");
				for (t in {
					submit: !0,
					change: !0,
					focusin: !0,
				})
					(n = "on" + t),
						(l[t + "Bubbles"] = n in e) ||
							(r.setAttribute(n, "t"), (l[t + "Bubbles"] = r.attributes[n].expando === !1));
				r = null;
			})();
		var K = /^(?:input|select|textarea)$/i,
			Q = /^key/,
			G = /^(?:mouse|pointer|contextmenu)|click/,
			Y = /^(?:focusinfocus|focusoutblur)$/,
			Z = /^([^.]*)(?:\.(.+)|)$/;
		(h.event = {
			global: {},
			add: function (e, t, n, r, i) {
				var s,
					o,
					u,
					a,
					f,
					l,
					c,
					p,
					d,
					v,
					m,
					g = h._data(e);
				if (g) {
					n.handler && ((a = n), (n = a.handler), (i = a.selector)),
						n.guid || (n.guid = h.guid++),
						(o = g.events) || (o = g.events = {}),
						(l = g.handle) ||
							((l = g.handle =
								function (e) {
									return typeof h === B || (e && h.event.triggered === e.type)
										? void 0
										: h.event.dispatch.apply(l.elem, arguments);
								}),
							(l.elem = e)),
						(t = (t || "").match(O) || [""]),
						(u = t.length);
					while (u--)
						(s = Z.exec(t[u]) || []),
							(d = m = s[1]),
							(v = (s[2] || "").split(".").sort()),
							d &&
								((f = h.event.special[d] || {}),
								(d = (i ? f.delegateType : f.bindType) || d),
								(f = h.event.special[d] || {}),
								(c = h.extend(
									{
										type: d,
										origType: m,
										data: r,
										handler: n,
										guid: n.guid,
										selector: i,
										needsContext: i && h.expr.match.needsContext.test(i),
										namespace: v.join("."),
									},
									a
								)),
								(p = o[d]) ||
									((p = o[d] = []),
									(p.delegateCount = 0),
									(f.setup && f.setup.call(e, r, v, l) !== !1) ||
										(e.addEventListener
											? e.addEventListener(d, l, !1)
											: e.attachEvent && e.attachEvent("on" + d, l))),
								f.add && (f.add.call(e, c), c.handler.guid || (c.handler.guid = n.guid)),
								i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
								(h.event.global[d] = !0));
					e = null;
				}
			},
			remove: function (e, t, n, r, i) {
				var s,
					o,
					u,
					a,
					f,
					l,
					c,
					p,
					d,
					v,
					m,
					g = h.hasData(e) && h._data(e);
				if (g && (l = g.events)) {
					(t = (t || "").match(O) || [""]), (f = t.length);
					while (f--)
						if (
							((u = Z.exec(t[f]) || []), (d = m = u[1]), (v = (u[2] || "").split(".").sort()), d)
						) {
							(c = h.event.special[d] || {}),
								(d = (r ? c.delegateType : c.bindType) || d),
								(p = l[d] || []),
								(u = u[2] && new RegExp("(^|\\.)" + v.join("\\.(?:.*\\.|)") + "(\\.|$)")),
								(a = s = p.length);
							while (s--)
								(o = p[s]),
									(!i && m !== o.origType) ||
										(n && n.guid !== o.guid) ||
										(u && !u.test(o.namespace)) ||
										(r && r !== o.selector && ("**" !== r || !o.selector)) ||
										(p.splice(s, 1),
										o.selector && p.delegateCount--,
										c.remove && c.remove.call(e, o));
							a &&
								!p.length &&
								((c.teardown && c.teardown.call(e, v, g.handle) !== !1) ||
									h.removeEvent(e, d, g.handle),
								delete l[d]);
						} else for (d in l) h.event.remove(e, d + t[f], n, r, !0);
					h.isEmptyObject(l) && (delete g.handle, h._removeData(e, "events"));
				}
			},
			trigger: function (t, n, r, i) {
				var s,
					o,
					u,
					a,
					l,
					c,
					p,
					d = [r || T],
					v = f.call(t, "type") ? t.type : t,
					m = f.call(t, "namespace") ? t.namespace.split(".") : [];
				if (
					((u = c = r = r || T),
					3 !== r.nodeType &&
						8 !== r.nodeType &&
						!Y.test(v + h.event.triggered) &&
						(v.indexOf(".") >= 0 && ((m = v.split(".")), (v = m.shift()), m.sort()),
						(o = v.indexOf(":") < 0 && "on" + v),
						(t = t[h.expando] ? t : new h.Event(v, "object" == typeof t && t)),
						(t.isTrigger = i ? 2 : 3),
						(t.namespace = m.join(".")),
						(t.namespace_re = t.namespace
							? new RegExp("(^|\\.)" + m.join("\\.(?:.*\\.|)") + "(\\.|$)")
							: null),
						(t.result = void 0),
						t.target || (t.target = r),
						(n = null == n ? [t] : h.makeArray(n, [t])),
						(l = h.event.special[v] || {}),
						i || !l.trigger || l.trigger.apply(r, n) !== !1))
				) {
					if (!i && !l.noBubble && !h.isWindow(r)) {
						for (a = l.delegateType || v, Y.test(a + v) || (u = u.parentNode); u; u = u.parentNode)
							d.push(u), (c = u);
						c === (r.ownerDocument || T) && d.push(c.defaultView || c.parentWindow || e);
					}
					p = 0;
					while ((u = d[p++]) && !t.isPropagationStopped())
						(t.type = p > 1 ? a : l.bindType || v),
							(s = (h._data(u, "events") || {})[t.type] && h._data(u, "handle")),
							s && s.apply(u, n),
							(s = o && u[o]),
							s &&
								s.apply &&
								h.acceptData(u) &&
								((t.result = s.apply(u, n)), t.result === !1 && t.preventDefault());
					if (
						((t.type = v),
						!i &&
							!t.isDefaultPrevented() &&
							(!l._default || l._default.apply(d.pop(), n) === !1) &&
							h.acceptData(r) &&
							o &&
							r[v] &&
							!h.isWindow(r))
					) {
						(c = r[o]), c && (r[o] = null), (h.event.triggered = v);
						try {
							r[v]();
						} catch (g) {}
						(h.event.triggered = void 0), c && (r[o] = c);
					}
					return t.result;
				}
			},
			dispatch: function (e) {
				e = h.event.fix(e);
				var t,
					n,
					i,
					s,
					o,
					u = [],
					a = r.call(arguments),
					f = (h._data(this, "events") || {})[e.type] || [],
					l = h.event.special[e.type] || {};
				if (
					((a[0] = e),
					(e.delegateTarget = this),
					!l.preDispatch || l.preDispatch.call(this, e) !== !1)
				) {
					(u = h.event.handlers.call(this, e, f)), (t = 0);
					while ((s = u[t++]) && !e.isPropagationStopped()) {
						(e.currentTarget = s.elem), (o = 0);
						while ((i = s.handlers[o++]) && !e.isImmediatePropagationStopped())
							(!e.namespace_re || e.namespace_re.test(i.namespace)) &&
								((e.handleObj = i),
								(e.data = i.data),
								(n = ((h.event.special[i.origType] || {}).handle || i.handler).apply(s.elem, a)),
								void 0 !== n && (e.result = n) === !1 && (e.preventDefault(), e.stopPropagation()));
					}
					return l.postDispatch && l.postDispatch.call(this, e), e.result;
				}
			},
			handlers: function (e, t) {
				var n,
					r,
					i,
					s,
					o = [],
					u = t.delegateCount,
					a = e.target;
				if (u && a.nodeType && (!e.button || "click" !== e.type))
					for (; a != this; a = a.parentNode || this)
						if (1 === a.nodeType && (a.disabled !== !0 || "click" !== e.type)) {
							for (i = [], s = 0; u > s; s++)
								(r = t[s]),
									(n = r.selector + " "),
									void 0 === i[n] &&
										(i[n] = r.needsContext
											? h(n, this).index(a) >= 0
											: h.find(n, this, null, [a]).length),
									i[n] && i.push(r);
							i.length &&
								o.push({
									elem: a,
									handlers: i,
								});
						}
				return (
					u < t.length &&
						o.push({
							elem: this,
							handlers: t.slice(u),
						}),
					o
				);
			},
			fix: function (e) {
				if (e[h.expando]) return e;
				var t,
					n,
					r,
					i = e.type,
					s = e,
					o = this.fixHooks[i];
				o || (this.fixHooks[i] = o = G.test(i) ? this.mouseHooks : Q.test(i) ? this.keyHooks : {}),
					(r = o.props ? this.props.concat(o.props) : this.props),
					(e = new h.Event(s)),
					(t = r.length);
				while (t--) (n = r[t]), (e[n] = s[n]);
				return (
					e.target || (e.target = s.srcElement || T),
					3 === e.target.nodeType && (e.target = e.target.parentNode),
					(e.metaKey = !!e.metaKey),
					o.filter ? o.filter(e, s) : e
				);
			},
			props:
				"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp views which".split(
					" "
				),
			fixHooks: {},
			keyHooks: {
				props: "char charCode key keyCode".split(" "),
				filter: function (e, t) {
					return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e;
				},
			},
			mouseHooks: {
				props:
					"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(
						" "
					),
				filter: function (e, t) {
					var n,
						r,
						i,
						s = t.button,
						o = t.fromElement;
					return (
						null == e.pageX &&
							null != t.clientX &&
							((r = e.target.ownerDocument || T),
							(i = r.documentElement),
							(n = r.body),
							(e.pageX =
								t.clientX +
								((i && i.scrollLeft) || (n && n.scrollLeft) || 0) -
								((i && i.clientLeft) || (n && n.clientLeft) || 0)),
							(e.pageY =
								t.clientY +
								((i && i.scrollTop) || (n && n.scrollTop) || 0) -
								((i && i.clientTop) || (n && n.clientTop) || 0))),
						!e.relatedTarget && o && (e.relatedTarget = o === e.target ? t.toElement : o),
						e.which || void 0 === s || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0),
						e
					);
				},
			},
			special: {
				load: {
					noBubble: !0,
				},
				focus: {
					trigger: function () {
						if (this !== nt() && this.focus)
							try {
								return this.focus(), !1;
							} catch (e) {}
					},
					delegateType: "focusin",
				},
				blur: {
					trigger: function () {
						return this === nt() && this.blur ? (this.blur(), !1) : void 0;
					},
					delegateType: "focusout",
				},
				click: {
					trigger: function () {
						return h.nodeName(this, "input") && "checkbox" === this.type && this.click
							? (this.click(), !1)
							: void 0;
					},
					_default: function (e) {
						return h.nodeName(e.target, "a");
					},
				},
				beforeunload: {
					postDispatch: function (e) {
						void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
					},
				},
			},
			simulate: function (e, t, n, r) {
				var i = h.extend(new h.Event(), n, {
					type: e,
					isSimulated: !0,
					originalEvent: {},
				});
				r ? h.event.trigger(i, null, t) : h.event.dispatch.call(t, i),
					i.isDefaultPrevented() && n.preventDefault();
			},
		}),
			(h.removeEvent = T.removeEventListener
				? function (e, t, n) {
						e.removeEventListener && e.removeEventListener(t, n, !1);
				  }
				: function (e, t, n) {
						var r = "on" + t;
						e.detachEvent && (typeof e[r] === B && (e[r] = null), e.detachEvent(r, n));
				  }),
			(h.Event = function (e, t) {
				return this instanceof h.Event
					? (e && e.type
							? ((this.originalEvent = e),
							  (this.type = e.type),
							  (this.isDefaultPrevented =
									e.defaultPrevented || (void 0 === e.defaultPrevented && e.returnValue === !1)
										? et
										: tt))
							: (this.type = e),
					  t && h.extend(this, t),
					  (this.timeStamp = (e && e.timeStamp) || h.now()),
					  void (this[h.expando] = !0))
					: new h.Event(e, t);
			}),
			(h.Event.prototype = {
				isDefaultPrevented: tt,
				isPropagationStopped: tt,
				isImmediatePropagationStopped: tt,
				preventDefault: function () {
					var e = this.originalEvent;
					(this.isDefaultPrevented = et),
						e && (e.preventDefault ? e.preventDefault() : (e.returnValue = !1));
				},
				stopPropagation: function () {
					var e = this.originalEvent;
					(this.isPropagationStopped = et),
						e && (e.stopPropagation && e.stopPropagation(), (e.cancelBubble = !0));
				},
				stopImmediatePropagation: function () {
					var e = this.originalEvent;
					(this.isImmediatePropagationStopped = et),
						e && e.stopImmediatePropagation && e.stopImmediatePropagation(),
						this.stopPropagation();
				},
			}),
			h.each(
				{
					mouseenter: "mouseover",
					mouseleave: "mouseout",
					pointerenter: "pointerover",
					pointerleave: "pointerout",
				},
				function (e, t) {
					h.event.special[e] = {
						delegateType: t,
						bindType: t,
						handle: function (e) {
							var n,
								r = this,
								i = e.relatedTarget,
								s = e.handleObj;
							return (
								(!i || (i !== r && !h.contains(r, i))) &&
									((e.type = s.origType), (n = s.handler.apply(this, arguments)), (e.type = t)),
								n
							);
						},
					};
				}
			),
			l.submitBubbles ||
				(h.event.special.submit = {
					setup: function () {
						return h.nodeName(this, "form")
							? !1
							: void h.event.add(this, "click._submit keypress._submit", function (e) {
									var t = e.target,
										n = h.nodeName(t, "input") || h.nodeName(t, "button") ? t.form : void 0;
									n &&
										!h._data(n, "submitBubbles") &&
										(h.event.add(n, "submit._submit", function (e) {
											e._submit_bubble = !0;
										}),
										h._data(n, "submitBubbles", !0));
							  });
					},
					postDispatch: function (e) {
						e._submit_bubble &&
							(delete e._submit_bubble,
							this.parentNode &&
								!e.isTrigger &&
								h.event.simulate("submit", this.parentNode, e, !0));
					},
					teardown: function () {
						return h.nodeName(this, "form") ? !1 : void h.event.remove(this, "._submit");
					},
				}),
			l.changeBubbles ||
				(h.event.special.change = {
					setup: function () {
						return K.test(this.nodeName)
							? (("checkbox" === this.type || "radio" === this.type) &&
									(h.event.add(this, "propertychange._change", function (e) {
										"checked" === e.originalEvent.propertyName && (this._just_changed = !0);
									}),
									h.event.add(this, "click._change", function (e) {
										this._just_changed && !e.isTrigger && (this._just_changed = !1),
											h.event.simulate("change", this, e, !0);
									})),
							  !1)
							: void h.event.add(this, "beforeactivate._change", function (e) {
									var t = e.target;
									K.test(t.nodeName) &&
										!h._data(t, "changeBubbles") &&
										(h.event.add(t, "change._change", function (e) {
											!this.parentNode ||
												e.isSimulated ||
												e.isTrigger ||
												h.event.simulate("change", this.parentNode, e, !0);
										}),
										h._data(t, "changeBubbles", !0));
							  });
					},
					handle: function (e) {
						var t = e.target;
						return this !== t ||
							e.isSimulated ||
							e.isTrigger ||
							("radio" !== t.type && "checkbox" !== t.type)
							? e.handleObj.handler.apply(this, arguments)
							: void 0;
					},
					teardown: function () {
						return h.event.remove(this, "._change"), !K.test(this.nodeName);
					},
				}),
			l.focusinBubbles ||
				h.each(
					{
						focus: "focusin",
						blur: "focusout",
					},
					function (e, t) {
						var n = function (e) {
							h.event.simulate(t, e.target, h.event.fix(e), !0);
						};
						h.event.special[t] = {
							setup: function () {
								var r = this.ownerDocument || this,
									i = h._data(r, t);
								i || r.addEventListener(e, n, !0), h._data(r, t, (i || 0) + 1);
							},
							teardown: function () {
								var r = this.ownerDocument || this,
									i = h._data(r, t) - 1;
								i ? h._data(r, t, i) : (r.removeEventListener(e, n, !0), h._removeData(r, t));
							},
						};
					}
				),
			h.fn.extend({
				on: function (e, t, n, r, i) {
					var s, o;
					if ("object" == typeof e) {
						"string" != typeof t && ((n = n || t), (t = void 0));
						for (s in e) this.on(s, t, n, e[s], i);
						return this;
					}
					if (
						(null == n && null == r
							? ((r = t), (n = t = void 0))
							: null == r &&
							  ("string" == typeof t ? ((r = n), (n = void 0)) : ((r = n), (n = t), (t = void 0))),
						r === !1)
					)
						r = tt;
					else if (!r) return this;
					return (
						1 === i &&
							((o = r),
							(r = function (e) {
								return h().off(e), o.apply(this, arguments);
							}),
							(r.guid = o.guid || (o.guid = h.guid++))),
						this.each(function () {
							h.event.add(this, e, r, n, t);
						})
					);
				},
				one: function (e, t, n, r) {
					return this.on(e, t, n, r, 1);
				},
				off: function (e, t, n) {
					var r, i;
					if (e && e.preventDefault && e.handleObj)
						return (
							(r = e.handleObj),
							h(e.delegateTarget).off(
								r.namespace ? r.origType + "." + r.namespace : r.origType,
								r.selector,
								r.handler
							),
							this
						);
					if ("object" == typeof e) {
						for (i in e) this.off(i, t, e[i]);
						return this;
					}
					return (
						(t === !1 || "function" == typeof t) && ((n = t), (t = void 0)),
						n === !1 && (n = tt),
						this.each(function () {
							h.event.remove(this, e, n, t);
						})
					);
				},
				trigger: function (e, t) {
					return this.each(function () {
						h.event.trigger(e, t, this);
					});
				},
				triggerHandler: function (e, t) {
					var n = this[0];
					return n ? h.event.trigger(e, t, n, !0) : void 0;
				},
			});
		var it =
				"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
			st = / jQuery\d+="(?:null|\d+)"/g,
			ot = new RegExp("<(?:" + it + ")[\\s/>]", "i"),
			ut = /^\s+/,
			at = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
			ft = /<([\w:]+)/,
			lt = /<tbody/i,
			ct = /<|&#?\w+;/,
			ht = /<(?:script|style|link)/i,
			pt = /checked\s*(?:[^=]|=\s*.checked.)/i,
			dt = /^$|\/(?:java|ecma)script/i,
			vt = /^true\/(.*)/,
			mt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
			gt = {
				option: [1, "<select multiple='multiple'>", "</select>"],
				legend: [1, "<fieldset>", "</fieldset>"],
				area: [1, "<map>", "</map>"],
				param: [1, "<object>", "</object>"],
				thead: [1, "<table>", "</table>"],
				tr: [2, "<table><tbody>", "</tbody></table>"],
				col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
				td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
				_default: l.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"],
			},
			yt = rt(T),
			bt = yt.appendChild(T.createElement("div"));
		(gt.optgroup = gt.option),
			(gt.tbody = gt.tfoot = gt.colgroup = gt.caption = gt.thead),
			(gt.th = gt.td),
			h.extend({
				clone: function (e, t, n) {
					var r,
						i,
						s,
						o,
						u,
						a = h.contains(e.ownerDocument, e);
					if (
						(l.html5Clone || h.isXMLDoc(e) || !ot.test("<" + e.nodeName + ">")
							? (s = e.cloneNode(!0))
							: ((bt.innerHTML = e.outerHTML), bt.removeChild((s = bt.firstChild))),
						!(
							(l.noCloneEvent && l.noCloneChecked) ||
							(1 !== e.nodeType && 11 !== e.nodeType) ||
							h.isXMLDoc(e)
						))
					)
						for (r = wt(s), u = wt(e), o = 0; null != (i = u[o]); ++o) r[o] && kt(i, r[o]);
					if (t)
						if (n) for (u = u || wt(e), r = r || wt(s), o = 0; null != (i = u[o]); o++) Ct(i, r[o]);
						else Ct(e, s);
					return (
						(r = wt(s, "script")),
						r.length > 0 && Nt(r, !a && wt(e, "script")),
						(r = u = i = null),
						s
					);
				},
				buildFragment: function (e, t, n, r) {
					for (var i, s, o, u, a, f, c, p = e.length, d = rt(t), v = [], m = 0; p > m; m++)
						if (((s = e[m]), s || 0 === s))
							if ("object" === h.type(s)) h.merge(v, s.nodeType ? [s] : s);
							else if (ct.test(s)) {
								(u = u || d.appendChild(t.createElement("div"))),
									(a = (ft.exec(s) || ["", ""])[1].toLowerCase()),
									(c = gt[a] || gt._default),
									(u.innerHTML = c[1] + s.replace(at, "<$1></$2>") + c[2]),
									(i = c[0]);
								while (i--) u = u.lastChild;
								if (
									(!l.leadingWhitespace && ut.test(s) && v.push(t.createTextNode(ut.exec(s)[0])),
									!l.tbody)
								) {
									(s =
										"table" !== a || lt.test(s)
											? "<table>" !== c[1] || lt.test(s)
												? 0
												: u
											: u.firstChild),
										(i = s && s.childNodes.length);
									while (i--)
										h.nodeName((f = s.childNodes[i]), "tbody") &&
											!f.childNodes.length &&
											s.removeChild(f);
								}
								h.merge(v, u.childNodes), (u.textContent = "");
								while (u.firstChild) u.removeChild(u.firstChild);
								u = d.lastChild;
							} else v.push(t.createTextNode(s));
					u && d.removeChild(u), l.appendChecked || h.grep(wt(v, "input"), Et), (m = 0);
					while ((s = v[m++]))
						if (
							(!r || -1 === h.inArray(s, r)) &&
							((o = h.contains(s.ownerDocument, s)),
							(u = wt(d.appendChild(s), "script")),
							o && Nt(u),
							n)
						) {
							i = 0;
							while ((s = u[i++])) dt.test(s.type || "") && n.push(s);
						}
					return (u = null), d;
				},
				cleanData: function (e, t) {
					for (
						var r,
							i,
							s,
							o,
							u = 0,
							a = h.expando,
							f = h.cache,
							c = l.deleteExpando,
							p = h.event.special;
						null != (r = e[u]);
						u++
					)
						if ((t || h.acceptData(r)) && ((s = r[a]), (o = s && f[s]))) {
							if (o.events)
								for (i in o.events) p[i] ? h.event.remove(r, i) : h.removeEvent(r, i, o.handle);
							f[s] &&
								(delete f[s],
								c
									? delete r[a]
									: typeof r.removeAttribute !== B
									? r.removeAttribute(a)
									: (r[a] = null),
								n.push(s));
						}
				},
			}),
			h.fn.extend({
				text: function (e) {
					return $(
						this,
						function (e) {
							return void 0 === e
								? h.text(this)
								: this.empty().append(((this[0] && this[0].ownerDocument) || T).createTextNode(e));
						},
						null,
						e,
						arguments.length
					);
				},
				append: function () {
					return this.domManip(arguments, function (e) {
						if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
							var t = St(this, e);
							t.appendChild(e);
						}
					});
				},
				prepend: function () {
					return this.domManip(arguments, function (e) {
						if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
							var t = St(this, e);
							t.insertBefore(e, t.firstChild);
						}
					});
				},
				before: function () {
					return this.domManip(arguments, function (e) {
						this.parentNode && this.parentNode.insertBefore(e, this);
					});
				},
				after: function () {
					return this.domManip(arguments, function (e) {
						this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
					});
				},
				remove: function (e, t) {
					for (var n, r = e ? h.filter(e, this) : this, i = 0; null != (n = r[i]); i++)
						t || 1 !== n.nodeType || h.cleanData(wt(n)),
							n.parentNode &&
								(t && h.contains(n.ownerDocument, n) && Nt(wt(n, "script")),
								n.parentNode.removeChild(n));
					return this;
				},
				empty: function () {
					for (var e, t = 0; null != (e = this[t]); t++) {
						1 === e.nodeType && h.cleanData(wt(e, !1));
						while (e.firstChild) e.removeChild(e.firstChild);
						e.options && h.nodeName(e, "select") && (e.options.length = 0);
					}
					return this;
				},
				clone: function (e, t) {
					return (
						(e = null == e ? !1 : e),
						(t = null == t ? e : t),
						this.map(function () {
							return h.clone(this, e, t);
						})
					);
				},
				html: function (e) {
					return $(
						this,
						function (e) {
							var t = this[0] || {},
								n = 0,
								r = this.length;
							if (void 0 === e) return 1 === t.nodeType ? t.innerHTML.replace(st, "") : void 0;
							if (
								!(
									"string" != typeof e ||
									ht.test(e) ||
									(!l.htmlSerialize && ot.test(e)) ||
									(!l.leadingWhitespace && ut.test(e)) ||
									gt[(ft.exec(e) || ["", ""])[1].toLowerCase()]
								)
							) {
								e = e.replace(at, "<$1></$2>");
								try {
									for (; r > n; n++)
										(t = this[n] || {}),
											1 === t.nodeType && (h.cleanData(wt(t, !1)), (t.innerHTML = e));
									t = 0;
								} catch (i) {}
							}
							t && this.empty().append(e);
						},
						null,
						e,
						arguments.length
					);
				},
				replaceWith: function () {
					var e = arguments[0];
					return (
						this.domManip(arguments, function (t) {
							(e = this.parentNode), h.cleanData(wt(this)), e && e.replaceChild(t, this);
						}),
						e && (e.length || e.nodeType) ? this : this.remove()
					);
				},
				detach: function (e) {
					return this.remove(e, !0);
				},
				domManip: function (e, t) {
					e = i.apply([], e);
					var n,
						r,
						s,
						o,
						u,
						a,
						f = 0,
						c = this.length,
						p = this,
						d = c - 1,
						v = e[0],
						m = h.isFunction(v);
					if (m || (c > 1 && "string" == typeof v && !l.checkClone && pt.test(v)))
						return this.each(function (n) {
							var r = p.eq(n);
							m && (e[0] = v.call(this, n, r.html())), r.domManip(e, t);
						});
					if (
						c &&
						((a = h.buildFragment(e, this[0].ownerDocument, !1, this)),
						(n = a.firstChild),
						1 === a.childNodes.length && (a = n),
						n)
					) {
						for (o = h.map(wt(a, "script"), xt), s = o.length; c > f; f++)
							(r = a),
								f !== d && ((r = h.clone(r, !0, !0)), s && h.merge(o, wt(r, "script"))),
								t.call(this[f], r, f);
						if (s)
							for (u = o[o.length - 1].ownerDocument, h.map(o, Tt), f = 0; s > f; f++)
								(r = o[f]),
									dt.test(r.type || "") &&
										!h._data(r, "globalEval") &&
										h.contains(u, r) &&
										(r.src
											? h._evalUrl && h._evalUrl(r.src)
											: h.globalEval(
													(r.text || r.textContent || r.innerHTML || "").replace(mt, "")
											  ));
						a = n = null;
					}
					return this;
				},
			}),
			h.each(
				{
					appendTo: "append",
					prependTo: "prepend",
					insertBefore: "before",
					insertAfter: "after",
					replaceAll: "replaceWith",
				},
				function (e, t) {
					h.fn[e] = function (e) {
						for (var n, r = 0, i = [], o = h(e), u = o.length - 1; u >= r; r++)
							(n = r === u ? this : this.clone(!0)), h(o[r])[t](n), s.apply(i, n.get());
						return this.pushStack(i);
					};
				}
			);
		var Lt,
			At = {};
		!(function () {
			var e;
			l.shrinkWrapBlocks = function () {
				if (null != e) return e;
				e = !1;
				var t, n, r;
				return (
					(n = T.getElementsByTagName("body")[0]),
					n && n.style
						? ((t = T.createElement("div")),
						  (r = T.createElement("div")),
						  (r.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
						  n.appendChild(r).appendChild(t),
						  typeof t.style.zoom !== B &&
								((t.style.cssText =
									"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1"),
								(t.appendChild(T.createElement("div")).style.width = "5px"),
								(e = 3 !== t.offsetWidth)),
						  n.removeChild(r),
						  e)
						: void 0
				);
			};
		})();
		var _t = /^margin/,
			Dt = new RegExp("^(" + W + ")(?!px)[a-z%]+$", "i"),
			Pt,
			Ht,
			Bt = /^(top|right|bottom|left)$/;
		e.getComputedStyle
			? ((Pt = function (e) {
					return e.ownerDocument.defaultView.getComputedStyle(e, null);
			  }),
			  (Ht = function (e, t, n) {
					var r,
						i,
						s,
						o,
						u = e.style;
					return (
						(n = n || Pt(e)),
						(o = n ? n.getPropertyValue(t) || n[t] : void 0),
						n &&
							("" !== o || h.contains(e.ownerDocument, e) || (o = h.style(e, t)),
							Dt.test(o) &&
								_t.test(t) &&
								((r = u.width),
								(i = u.minWidth),
								(s = u.maxWidth),
								(u.minWidth = u.maxWidth = u.width = o),
								(o = n.width),
								(u.width = r),
								(u.minWidth = i),
								(u.maxWidth = s))),
						void 0 === o ? o : o + ""
					);
			  }))
			: T.documentElement.currentStyle &&
			  ((Pt = function (e) {
					return e.currentStyle;
			  }),
			  (Ht = function (e, t, n) {
					var r,
						i,
						s,
						o,
						u = e.style;
					return (
						(n = n || Pt(e)),
						(o = n ? n[t] : void 0),
						null == o && u && u[t] && (o = u[t]),
						Dt.test(o) &&
							!Bt.test(t) &&
							((r = u.left),
							(i = e.runtimeStyle),
							(s = i && i.left),
							s && (i.left = e.currentStyle.left),
							(u.left = "fontSize" === t ? "1em" : o),
							(o = u.pixelLeft + "px"),
							(u.left = r),
							s && (i.left = s)),
						void 0 === o ? o : o + "" || "auto"
					);
			  })),
			!(function () {
				var t, n, r, i, s, o, u;
				if (
					((t = T.createElement("div")),
					(t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
					(r = t.getElementsByTagName("a")[0]),
					(n = r && r.style))
				) {
					(n.cssText = "float:left;opacity:.5"),
						(l.opacity = "0.5" === n.opacity),
						(l.cssFloat = !!n.cssFloat),
						(t.style.backgroundClip = "content-box"),
						(t.cloneNode(!0).style.backgroundClip = ""),
						(l.clearCloneStyle = "content-box" === t.style.backgroundClip),
						(l.boxSizing = "" === n.boxSizing || "" === n.MozBoxSizing || "" === n.WebkitBoxSizing),
						h.extend(l, {
							reliableHiddenOffsets: function () {
								return null == o && a(), o;
							},
							boxSizingReliable: function () {
								return null == s && a(), s;
							},
							pixelPosition: function () {
								return null == i && a(), i;
							},
							reliableMarginRight: function () {
								return null == u && a(), u;
							},
						});

					function a() {
						var t, n, r, a;
						(n = T.getElementsByTagName("body")[0]),
							n &&
								n.style &&
								((t = T.createElement("div")),
								(r = T.createElement("div")),
								(r.style.cssText =
									"position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
								n.appendChild(r).appendChild(t),
								(t.style.cssText =
									"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute"),
								(i = s = !1),
								(u = !0),
								e.getComputedStyle &&
									((i = "1%" !== (e.getComputedStyle(t, null) || {}).top),
									(s =
										"4px" ===
										(
											e.getComputedStyle(t, null) || {
												width: "4px",
											}
										).width),
									(a = t.appendChild(T.createElement("div"))),
									(a.style.cssText = t.style.cssText =
										"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0"),
									(a.style.marginRight = a.style.width = "0"),
									(t.style.width = "1px"),
									(u = !parseFloat((e.getComputedStyle(a, null) || {}).marginRight))),
								(t.innerHTML = "<table><tr><td></td><td>t</td></tr></table>"),
								(a = t.getElementsByTagName("td")),
								(a[0].style.cssText = "margin:0;border:0;padding:0;display:none"),
								(o = 0 === a[0].offsetHeight),
								o &&
									((a[0].style.display = ""),
									(a[1].style.display = "none"),
									(o = 0 === a[0].offsetHeight)),
								n.removeChild(r));
					}
				}
			})(),
			(h.swap = function (e, t, n, r) {
				var i,
					s,
					o = {};
				for (s in t) (o[s] = e.style[s]), (e.style[s] = t[s]);
				i = n.apply(e, r || []);
				for (s in t) e.style[s] = o[s];
				return i;
			});
		var Ft = /alpha\([^)]*\)/i,
			It = /opacity\s*=\s*([^)]*)/,
			qt = /^(none|table(?!-c[ea]).+)/,
			Rt = new RegExp("^(" + W + ")(.*)$", "i"),
			Ut = new RegExp("^([+-])=(" + W + ")", "i"),
			zt = {
				position: "absolute",
				visibility: "hidden",
				display: "block",
			},
			Wt = {
				letterSpacing: "0",
				fontWeight: "400",
			},
			Xt = ["Webkit", "O", "Moz", "ms"];
		h.extend({
			cssHooks: {
				opacity: {
					get: function (e, t) {
						if (t) {
							var n = Ht(e, "opacity");
							return "" === n ? "1" : n;
						}
					},
				},
			},
			cssNumber: {
				columnCount: !0,
				fillOpacity: !0,
				flexGrow: !0,
				flexShrink: !0,
				fontWeight: !0,
				lineHeight: !0,
				opacity: !0,
				order: !0,
				orphans: !0,
				widows: !0,
				zIndex: !0,
				zoom: !0,
			},
			cssProps: {
				float: l.cssFloat ? "cssFloat" : "styleFloat",
			},
			style: function (e, t, n, r) {
				if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
					var i,
						s,
						o,
						u = h.camelCase(t),
						a = e.style;
					if (
						((t = h.cssProps[u] || (h.cssProps[u] = Vt(a, u))),
						(o = h.cssHooks[t] || h.cssHooks[u]),
						void 0 === n)
					)
						return o && "get" in o && void 0 !== (i = o.get(e, !1, r)) ? i : a[t];
					if (
						((s = typeof n),
						"string" === s &&
							(i = Ut.exec(n)) &&
							((n = (i[1] + 1) * i[2] + parseFloat(h.css(e, t))), (s = "number")),
						null != n &&
							n === n &&
							("number" !== s || h.cssNumber[u] || (n += "px"),
							l.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (a[t] = "inherit"),
							!(o && "set" in o && void 0 === (n = o.set(e, n, r)))))
					)
						try {
							a[t] = n;
						} catch (f) {}
				}
			},
			css: function (e, t, n, r) {
				var i,
					s,
					o,
					u = h.camelCase(t);
				return (
					(t = h.cssProps[u] || (h.cssProps[u] = Vt(e.style, u))),
					(o = h.cssHooks[t] || h.cssHooks[u]),
					o && "get" in o && (s = o.get(e, !0, n)),
					void 0 === s && (s = Ht(e, t, r)),
					"normal" === s && t in Wt && (s = Wt[t]),
					"" === n || n ? ((i = parseFloat(s)), n === !0 || h.isNumeric(i) ? i || 0 : s) : s
				);
			},
		}),
			h.each(["height", "width"], function (e, t) {
				h.cssHooks[t] = {
					get: function (e, n, r) {
						return n
							? qt.test(h.css(e, "display")) && 0 === e.offsetWidth
								? h.swap(e, zt, function () {
										return Qt(e, t, r);
								  })
								: Qt(e, t, r)
							: void 0;
					},
					set: function (e, n, r) {
						var i = r && Pt(e);
						return Jt(
							e,
							n,
							r ? Kt(e, t, r, l.boxSizing && "border-box" === h.css(e, "boxSizing", !1, i), i) : 0
						);
					},
				};
			}),
			l.opacity ||
				(h.cssHooks.opacity = {
					get: function (e, t) {
						return It.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "")
							? 0.01 * parseFloat(RegExp.$1) + ""
							: t
							? "1"
							: "";
					},
					set: function (e, t) {
						var n = e.style,
							r = e.currentStyle,
							i = h.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
							s = (r && r.filter) || n.filter || "";
						(n.zoom = 1),
							((t >= 1 || "" === t) &&
								"" === h.trim(s.replace(Ft, "")) &&
								n.removeAttribute &&
								(n.removeAttribute("filter"), "" === t || (r && !r.filter))) ||
								(n.filter = Ft.test(s) ? s.replace(Ft, i) : s + " " + i);
					},
				}),
			(h.cssHooks.marginRight = jt(l.reliableMarginRight, function (e, t) {
				return t
					? h.swap(
							e,
							{
								display: "inline-block",
							},
							Ht,
							[e, "marginRight"]
					  )
					: void 0;
			})),
			h.each(
				{
					margin: "",
					padding: "",
					border: "Width",
				},
				function (e, t) {
					(h.cssHooks[e + t] = {
						expand: function (n) {
							for (var r = 0, i = {}, s = "string" == typeof n ? n.split(" ") : [n]; 4 > r; r++)
								i[e + X[r] + t] = s[r] || s[r - 2] || s[0];
							return i;
						},
					}),
						_t.test(e) || (h.cssHooks[e + t].set = Jt);
				}
			),
			h.fn.extend({
				css: function (e, t) {
					return $(
						this,
						function (e, t, n) {
							var r,
								i,
								s = {},
								o = 0;
							if (h.isArray(t)) {
								for (r = Pt(e), i = t.length; i > o; o++) s[t[o]] = h.css(e, t[o], !1, r);
								return s;
							}
							return void 0 !== n ? h.style(e, t, n) : h.css(e, t);
						},
						e,
						t,
						arguments.length > 1
					);
				},
				show: function () {
					return $t(this, !0);
				},
				hide: function () {
					return $t(this);
				},
				toggle: function (e) {
					return "boolean" == typeof e
						? e
							? this.show()
							: this.hide()
						: this.each(function () {
								V(this) ? h(this).show() : h(this).hide();
						  });
				},
			}),
			(h.Tween = Gt),
			(Gt.prototype = {
				constructor: Gt,
				init: function (e, t, n, r, i, s) {
					(this.elem = e),
						(this.prop = n),
						(this.easing = i || "swing"),
						(this.options = t),
						(this.start = this.now = this.cur()),
						(this.end = r),
						(this.unit = s || (h.cssNumber[n] ? "" : "px"));
				},
				cur: function () {
					var e = Gt.propHooks[this.prop];
					return e && e.get ? e.get(this) : Gt.propHooks._default.get(this);
				},
				run: function (e) {
					var t,
						n = Gt.propHooks[this.prop];
					return (
						(this.pos = t =
							this.options.duration
								? h.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration)
								: e),
						(this.now = (this.end - this.start) * t + this.start),
						this.options.step && this.options.step.call(this.elem, this.now, this),
						n && n.set ? n.set(this) : Gt.propHooks._default.set(this),
						this
					);
				},
			}),
			(Gt.prototype.init.prototype = Gt.prototype),
			(Gt.propHooks = {
				_default: {
					get: function (e) {
						var t;
						return null == e.elem[e.prop] || (e.elem.style && null != e.elem.style[e.prop])
							? ((t = h.css(e.elem, e.prop, "")), t && "auto" !== t ? t : 0)
							: e.elem[e.prop];
					},
					set: function (e) {
						h.fx.step[e.prop]
							? h.fx.step[e.prop](e)
							: e.elem.style && (null != e.elem.style[h.cssProps[e.prop]] || h.cssHooks[e.prop])
							? h.style(e.elem, e.prop, e.now + e.unit)
							: (e.elem[e.prop] = e.now);
					},
				},
			}),
			(Gt.propHooks.scrollTop = Gt.propHooks.scrollLeft =
				{
					set: function (e) {
						e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
					},
				}),
			(h.easing = {
				linear: function (e) {
					return e;
				},
				swing: function (e) {
					return 0.5 - Math.cos(e * Math.PI) / 2;
				},
			}),
			(h.fx = Gt.prototype.init),
			(h.fx.step = {});
		var Yt,
			Zt,
			en = /^(?:toggle|show|hide)$/,
			tn = new RegExp("^(?:([+-])=|)(" + W + ")([a-z%]*)$", "i"),
			nn = /queueHooks$/,
			rn = [fn],
			sn = {
				"*": [
					function (e, t) {
						var n = this.createTween(e, t),
							r = n.cur(),
							i = tn.exec(t),
							s = (i && i[3]) || (h.cssNumber[e] ? "" : "px"),
							o = (h.cssNumber[e] || ("px" !== s && +r)) && tn.exec(h.css(n.elem, e)),
							u = 1,
							a = 20;
						if (o && o[3] !== s) {
							(s = s || o[3]), (i = i || []), (o = +r || 1);
							do (u = u || ".5"), (o /= u), h.style(n.elem, e, o + s);
							while (u !== (u = n.cur() / r) && 1 !== u && --a);
						}
						return (
							i &&
								((o = n.start = +o || +r || 0),
								(n.unit = s),
								(n.end = i[1] ? o + (i[1] + 1) * i[2] : +i[2])),
							n
						);
					},
				],
			};
		(h.Animation = h.extend(cn, {
			tweener: function (e, t) {
				h.isFunction(e) ? ((t = e), (e = ["*"])) : (e = e.split(" "));
				for (var n, r = 0, i = e.length; i > r; r++)
					(n = e[r]), (sn[n] = sn[n] || []), sn[n].unshift(t);
			},
			prefilter: function (e, t) {
				t ? rn.unshift(e) : rn.push(e);
			},
		})),
			(h.speed = function (e, t, n) {
				var r =
					e && "object" == typeof e
						? h.extend({}, e)
						: {
								complete: n || (!n && t) || (h.isFunction(e) && e),
								duration: e,
								easing: (n && t) || (t && !h.isFunction(t) && t),
						  };
				return (
					(r.duration = h.fx.off
						? 0
						: "number" == typeof r.duration
						? r.duration
						: r.duration in h.fx.speeds
						? h.fx.speeds[r.duration]
						: h.fx.speeds._default),
					(null == r.queue || r.queue === !0) && (r.queue = "fx"),
					(r.old = r.complete),
					(r.complete = function () {
						h.isFunction(r.old) && r.old.call(this), r.queue && h.dequeue(this, r.queue);
					}),
					r
				);
			}),
			h.fn.extend({
				fadeTo: function (e, t, n, r) {
					return this.filter(V).css("opacity", 0).show().end().animate(
						{
							opacity: t,
						},
						e,
						n,
						r
					);
				},
				animate: function (e, t, n, r) {
					var i = h.isEmptyObject(e),
						s = h.speed(t, n, r),
						o = function () {
							var t = cn(this, h.extend({}, e), s);
							(i || h._data(this, "finish")) && t.stop(!0);
						};
					return (o.finish = o), i || s.queue === !1 ? this.each(o) : this.queue(s.queue, o);
				},
				stop: function (e, t, n) {
					var r = function (e) {
						var t = e.stop;
						delete e.stop, t(n);
					};
					return (
						"string" != typeof e && ((n = t), (t = e), (e = void 0)),
						t && e !== !1 && this.queue(e || "fx", []),
						this.each(function () {
							var t = !0,
								i = null != e && e + "queueHooks",
								s = h.timers,
								o = h._data(this);
							if (i) o[i] && o[i].stop && r(o[i]);
							else for (i in o) o[i] && o[i].stop && nn.test(i) && r(o[i]);
							for (i = s.length; i--; )
								s[i].elem !== this ||
									(null != e && s[i].queue !== e) ||
									(s[i].anim.stop(n), (t = !1), s.splice(i, 1));
							(t || !n) && h.dequeue(this, e);
						})
					);
				},
				finish: function (e) {
					return (
						e !== !1 && (e = e || "fx"),
						this.each(function () {
							var t,
								n = h._data(this),
								r = n[e + "queue"],
								i = n[e + "queueHooks"],
								s = h.timers,
								o = r ? r.length : 0;
							for (
								n.finish = !0,
									h.queue(this, e, []),
									i && i.stop && i.stop.call(this, !0),
									t = s.length;
								t--;

							)
								s[t].elem === this && s[t].queue === e && (s[t].anim.stop(!0), s.splice(t, 1));
							for (t = 0; o > t; t++) r[t] && r[t].finish && r[t].finish.call(this);
							delete n.finish;
						})
					);
				},
			}),
			h.each(["toggle", "show", "hide"], function (e, t) {
				var n = h.fn[t];
				h.fn[t] = function (e, r, i) {
					return null == e || "boolean" == typeof e
						? n.apply(this, arguments)
						: this.animate(un(t, !0), e, r, i);
				};
			}),
			h.each(
				{
					slideDown: un("show"),
					slideUp: un("hide"),
					slideToggle: un("toggle"),
					fadeIn: {
						opacity: "show",
					},
					fadeOut: {
						opacity: "hide",
					},
					fadeToggle: {
						opacity: "toggle",
					},
				},
				function (e, t) {
					h.fn[e] = function (e, n, r) {
						return this.animate(t, e, n, r);
					};
				}
			),
			(h.timers = []),
			(h.fx.tick = function () {
				var e,
					t = h.timers,
					n = 0;
				for (Yt = h.now(); n < t.length; n++) (e = t[n]), e() || t[n] !== e || t.splice(n--, 1);
				t.length || h.fx.stop(), (Yt = void 0);
			}),
			(h.fx.timer = function (e) {
				h.timers.push(e), e() ? h.fx.start() : h.timers.pop();
			}),
			(h.fx.interval = 13),
			(h.fx.start = function () {
				Zt || (Zt = setInterval(h.fx.tick, h.fx.interval));
			}),
			(h.fx.stop = function () {
				clearInterval(Zt), (Zt = null);
			}),
			(h.fx.speeds = {
				slow: 600,
				fast: 200,
				_default: 400,
			}),
			(h.fn.delay = function (e, t) {
				return (
					(e = h.fx ? h.fx.speeds[e] || e : e),
					(t = t || "fx"),
					this.queue(t, function (t, n) {
						var r = setTimeout(t, e);
						n.stop = function () {
							clearTimeout(r);
						};
					})
				);
			}),
			(function () {
				var e, t, n, r, i;
				(t = T.createElement("div")),
					t.setAttribute("className", "t"),
					(t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
					(r = t.getElementsByTagName("a")[0]),
					(n = T.createElement("select")),
					(i = n.appendChild(T.createElement("option"))),
					(e = t.getElementsByTagName("input")[0]),
					(r.style.cssText = "top:1px"),
					(l.getSetAttribute = "t" !== t.className),
					(l.style = /top/.test(r.getAttribute("style"))),
					(l.hrefNormalized = "/a" === r.getAttribute("href")),
					(l.checkOn = !!e.value),
					(l.optSelected = i.selected),
					(l.enctype = !!T.createElement("form").enctype),
					(n.disabled = !0),
					(l.optDisabled = !i.disabled),
					(e = T.createElement("input")),
					e.setAttribute("value", ""),
					(l.input = "" === e.getAttribute("value")),
					(e.value = "t"),
					e.setAttribute("type", "radio"),
					(l.radioValue = "t" === e.value);
			})();
		var hn = /\r/g;
		h.fn.extend({
			val: function (e) {
				var t,
					n,
					r,
					i = this[0];
				if (arguments.length)
					return (
						(r = h.isFunction(e)),
						this.each(function (n) {
							var i;
							1 === this.nodeType &&
								((i = r ? e.call(this, n, h(this).val()) : e),
								null == i
									? (i = "")
									: "number" == typeof i
									? (i += "")
									: h.isArray(i) &&
									  (i = h.map(i, function (e) {
											return null == e ? "" : e + "";
									  })),
								(t = h.valHooks[this.type] || h.valHooks[this.nodeName.toLowerCase()]),
								(t && "set" in t && void 0 !== t.set(this, i, "value")) || (this.value = i));
						})
					);
				if (i)
					return (
						(t = h.valHooks[i.type] || h.valHooks[i.nodeName.toLowerCase()]),
						t && "get" in t && void 0 !== (n = t.get(i, "value"))
							? n
							: ((n = i.value), "string" == typeof n ? n.replace(hn, "") : null == n ? "" : n)
					);
			},
		}),
			h.extend({
				valHooks: {
					option: {
						get: function (e) {
							var t = h.find.attr(e, "value");
							return null != t ? t : h.trim(h.text(e));
						},
					},
					select: {
						get: function (e) {
							for (
								var t,
									n,
									r = e.options,
									i = e.selectedIndex,
									s = "select-one" === e.type || 0 > i,
									o = s ? null : [],
									u = s ? i + 1 : r.length,
									a = 0 > i ? u : s ? i : 0;
								u > a;
								a++
							)
								if (
									((n = r[a]),
									!(
										(!n.selected && a !== i) ||
										(l.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) ||
										(n.parentNode.disabled && h.nodeName(n.parentNode, "optgroup"))
									))
								) {
									if (((t = h(n).val()), s)) return t;
									o.push(t);
								}
							return o;
						},
						set: function (e, t) {
							var n,
								r,
								i = e.options,
								s = h.makeArray(t),
								o = i.length;
							while (o--)
								if (((r = i[o]), h.inArray(h.valHooks.option.get(r), s) >= 0))
									try {
										r.selected = n = !0;
									} catch (u) {
										r.scrollHeight;
									}
								else r.selected = !1;
							return n || (e.selectedIndex = -1), i;
						},
					},
				},
			}),
			h.each(["radio", "checkbox"], function () {
				(h.valHooks[this] = {
					set: function (e, t) {
						return h.isArray(t) ? (e.checked = h.inArray(h(e).val(), t) >= 0) : void 0;
					},
				}),
					l.checkOn ||
						(h.valHooks[this].get = function (e) {
							return null === e.getAttribute("value") ? "on" : e.value;
						});
			});
		var pn,
			dn,
			vn = h.expr.attrHandle,
			mn = /^(?:checked|selected)$/i,
			gn = l.getSetAttribute,
			yn = l.input;
		h.fn.extend({
			attr: function (e, t) {
				return $(this, h.attr, e, t, arguments.length > 1);
			},
			removeAttr: function (e) {
				return this.each(function () {
					h.removeAttr(this, e);
				});
			},
		}),
			h.extend({
				attr: function (e, t, n) {
					var r,
						i,
						s = e.nodeType;
					if (e && 3 !== s && 8 !== s && 2 !== s)
						return typeof e.getAttribute === B
							? h.prop(e, t, n)
							: ((1 === s && h.isXMLDoc(e)) ||
									((t = t.toLowerCase()),
									(r = h.attrHooks[t] || (h.expr.match.bool.test(t) ? dn : pn))),
							  void 0 === n
									? r && "get" in r && null !== (i = r.get(e, t))
										? i
										: ((i = h.find.attr(e, t)), null == i ? void 0 : i)
									: null !== n
									? r && "set" in r && void 0 !== (i = r.set(e, n, t))
										? i
										: (e.setAttribute(t, n + ""), n)
									: void h.removeAttr(e, t));
				},
				removeAttr: function (e, t) {
					var n,
						r,
						i = 0,
						s = t && t.match(O);
					if (s && 1 === e.nodeType)
						while ((n = s[i++]))
							(r = h.propFix[n] || n),
								h.expr.match.bool.test(n)
									? (yn && gn) || !mn.test(n)
										? (e[r] = !1)
										: (e[h.camelCase("default-" + n)] = e[r] = !1)
									: h.attr(e, n, ""),
								e.removeAttribute(gn ? n : r);
				},
				attrHooks: {
					type: {
						set: function (e, t) {
							if (!l.radioValue && "radio" === t && h.nodeName(e, "input")) {
								var n = e.value;
								return e.setAttribute("type", t), n && (e.value = n), t;
							}
						},
					},
				},
			}),
			(dn = {
				set: function (e, t, n) {
					return (
						t === !1
							? h.removeAttr(e, n)
							: (yn && gn) || !mn.test(n)
							? e.setAttribute((!gn && h.propFix[n]) || n, n)
							: (e[h.camelCase("default-" + n)] = e[n] = !0),
						n
					);
				},
			}),
			h.each(h.expr.match.bool.source.match(/\w+/g), function (e, t) {
				var n = vn[t] || h.find.attr;
				vn[t] =
					(yn && gn) || !mn.test(t)
						? function (e, t, r) {
								var i, s;
								return (
									r ||
										((s = vn[t]),
										(vn[t] = i),
										(i = null != n(e, t, r) ? t.toLowerCase() : null),
										(vn[t] = s)),
									i
								);
						  }
						: function (e, t, n) {
								return n ? void 0 : e[h.camelCase("default-" + t)] ? t.toLowerCase() : null;
						  };
			}),
			(yn && gn) ||
				(h.attrHooks.value = {
					set: function (e, t, n) {
						return h.nodeName(e, "input") ? void (e.defaultValue = t) : pn && pn.set(e, t, n);
					},
				}),
			gn ||
				((pn = {
					set: function (e, t, n) {
						var r = e.getAttributeNode(n);
						return (
							r || e.setAttributeNode((r = e.ownerDocument.createAttribute(n))),
							(r.value = t += ""),
							"value" === n || t === e.getAttribute(n) ? t : void 0
						);
					},
				}),
				(vn.id =
					vn.name =
					vn.coords =
						function (e, t, n) {
							var r;
							return n ? void 0 : (r = e.getAttributeNode(t)) && "" !== r.value ? r.value : null;
						}),
				(h.valHooks.button = {
					get: function (e, t) {
						var n = e.getAttributeNode(t);
						return n && n.specified ? n.value : void 0;
					},
					set: pn.set,
				}),
				(h.attrHooks.contenteditable = {
					set: function (e, t, n) {
						pn.set(e, "" === t ? !1 : t, n);
					},
				}),
				h.each(["width", "height"], function (e, t) {
					h.attrHooks[t] = {
						set: function (e, n) {
							return "" === n ? (e.setAttribute(t, "auto"), n) : void 0;
						},
					};
				})),
			l.style ||
				(h.attrHooks.style = {
					get: function (e) {
						return e.style.cssText || void 0;
					},
					set: function (e, t) {
						return (e.style.cssText = t + "");
					},
				});
		var bn = /^(?:input|select|textarea|button|object)$/i,
			wn = /^(?:a|area)$/i;
		h.fn.extend({
			prop: function (e, t) {
				return $(this, h.prop, e, t, arguments.length > 1);
			},
			removeProp: function (e) {
				return (
					(e = h.propFix[e] || e),
					this.each(function () {
						try {
							(this[e] = void 0), delete this[e];
						} catch (t) {}
					})
				);
			},
		}),
			h.extend({
				propFix: {
					for: "htmlFor",
					class: "className",
				},
				prop: function (e, t, n) {
					var r,
						i,
						s,
						o = e.nodeType;
					if (e && 3 !== o && 8 !== o && 2 !== o)
						return (
							(s = 1 !== o || !h.isXMLDoc(e)),
							s && ((t = h.propFix[t] || t), (i = h.propHooks[t])),
							void 0 !== n
								? i && "set" in i && void 0 !== (r = i.set(e, n, t))
									? r
									: (e[t] = n)
								: i && "get" in i && null !== (r = i.get(e, t))
								? r
								: e[t]
						);
				},
				propHooks: {
					tabIndex: {
						get: function (e) {
							var t = h.find.attr(e, "tabindex");
							return t
								? parseInt(t, 10)
								: bn.test(e.nodeName) || (wn.test(e.nodeName) && e.href)
								? 0
								: -1;
						},
					},
				},
			}),
			l.hrefNormalized ||
				h.each(["href", "src"], function (e, t) {
					h.propHooks[t] = {
						get: function (e) {
							return e.getAttribute(t, 4);
						},
					};
				}),
			l.optSelected ||
				(h.propHooks.selected = {
					get: function (e) {
						var t = e.parentNode;
						return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null;
					},
				}),
			h.each(
				[
					"tabIndex",
					"readOnly",
					"maxLength",
					"cellSpacing",
					"cellPadding",
					"rowSpan",
					"colSpan",
					"useMap",
					"frameBorder",
					"contentEditable",
				],
				function () {
					h.propFix[this.toLowerCase()] = this;
				}
			),
			l.enctype || (h.propFix.enctype = "encoding");
		var En = /[\t\r\n\f]/g;
		h.fn.extend({
			addClass: function (e) {
				var t,
					n,
					r,
					i,
					s,
					o,
					u = 0,
					a = this.length,
					f = "string" == typeof e && e;
				if (h.isFunction(e))
					return this.each(function (t) {
						h(this).addClass(e.call(this, t, this.className));
					});
				if (f)
					for (t = (e || "").match(O) || []; a > u; u++)
						if (
							((n = this[u]),
							(r =
								1 === n.nodeType &&
								(n.className ? (" " + n.className + " ").replace(En, " ") : " ")))
						) {
							s = 0;
							while ((i = t[s++])) r.indexOf(" " + i + " ") < 0 && (r += i + " ");
							(o = h.trim(r)), n.className !== o && (n.className = o);
						}
				return this;
			},
			removeClass: function (e) {
				var t,
					n,
					r,
					i,
					s,
					o,
					u = 0,
					a = this.length,
					f = 0 === arguments.length || ("string" == typeof e && e);
				if (h.isFunction(e))
					return this.each(function (t) {
						h(this).removeClass(e.call(this, t, this.className));
					});
				if (f)
					for (t = (e || "").match(O) || []; a > u; u++)
						if (
							((n = this[u]),
							(r =
								1 === n.nodeType &&
								(n.className ? (" " + n.className + " ").replace(En, " ") : "")))
						) {
							s = 0;
							while ((i = t[s++]))
								while (r.indexOf(" " + i + " ") >= 0) r = r.replace(" " + i + " ", " ");
							(o = e ? h.trim(r) : ""), n.className !== o && (n.className = o);
						}
				return this;
			},
			toggleClass: function (e, t) {
				var n = typeof e;
				return "boolean" == typeof t && "string" === n
					? t
						? this.addClass(e)
						: this.removeClass(e)
					: this.each(
							h.isFunction(e)
								? function (n) {
										h(this).toggleClass(e.call(this, n, this.className, t), t);
								  }
								: function () {
										if ("string" === n) {
											var t,
												r = 0,
												i = h(this),
												s = e.match(O) || [];
											while ((t = s[r++])) i.hasClass(t) ? i.removeClass(t) : i.addClass(t);
										} else
											(n === B || "boolean" === n) &&
												(this.className && h._data(this, "__className__", this.className),
												(this.className =
													this.className || e === !1 ? "" : h._data(this, "__className__") || ""));
								  }
					  );
			},
			hasClass: function (e) {
				for (var t = " " + e + " ", n = 0, r = this.length; r > n; n++)
					if (
						1 === this[n].nodeType &&
						(" " + this[n].className + " ").replace(En, " ").indexOf(t) >= 0
					)
						return !0;
				return !1;
			},
		}),
			h.each(
				"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(
					" "
				),
				function (e, t) {
					h.fn[t] = function (e, n) {
						return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t);
					};
				}
			),
			h.fn.extend({
				hover: function (e, t) {
					return this.mouseenter(e).mouseleave(t || e);
				},
				bind: function (e, t, n) {
					return this.on(e, null, t, n);
				},
				unbind: function (e, t) {
					return this.off(e, null, t);
				},
				delegate: function (e, t, n, r) {
					return this.on(t, e, n, r);
				},
				undelegate: function (e, t, n) {
					return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
				},
			});
		var Sn = h.now(),
			xn = /\?/,
			Tn =
				/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
		(h.parseJSON = function (t) {
			if (e.JSON && e.JSON.parse) return e.JSON.parse(t + "");
			var n,
				r = null,
				i = h.trim(t + "");
			return i &&
				!h.trim(
					i.replace(Tn, function (e, t, i, s) {
						return n && t && (r = 0), 0 === r ? e : ((n = i || t), (r += !s - !i), "");
					})
				)
				? Function("return " + i)()
				: h.error("Invalid JSON: " + t);
		}),
			(h.parseXML = function (t) {
				var n, r;
				if (!t || "string" != typeof t) return null;
				try {
					e.DOMParser
						? ((r = new DOMParser()), (n = r.parseFromString(t, "text/xml")))
						: ((n = new ActiveXObject("Microsoft.XMLDOM")), (n.async = "false"), n.loadXML(t));
				} catch (i) {
					n = void 0;
				}
				return (
					(n && n.documentElement && !n.getElementsByTagName("parsererror").length) ||
						h.error("Invalid XML: " + t),
					n
				);
			});
		var Nn,
			Cn,
			kn = /#.*$/,
			Ln = /([?&])_=[^&]*/,
			An = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
			On = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
			Mn = /^(?:GET|HEAD)$/,
			_n = /^\/\//,
			Dn = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
			Pn = {},
			Hn = {},
			Bn = "*/".concat("*");
		try {
			Cn = location.href;
		} catch (jn) {
			(Cn = T.createElement("a")), (Cn.href = ""), (Cn = Cn.href);
		}
		(Nn = Dn.exec(Cn.toLowerCase()) || []),
			h.extend({
				active: 0,
				lastModified: {},
				etag: {},
				ajaxSettings: {
					url: Cn,
					type: "GET",
					isLocal: On.test(Nn[1]),
					global: !0,
					processData: !0,
					async: !0,
					contentType: "application/x-www-form-urlencoded; charset=UTF-8",
					accepts: {
						"*": Bn,
						text: "text/plain",
						html: "text/html",
						xml: "application/xml, text/xml",
						json: "application/json, text/javascript",
					},
					contents: {
						xml: /xml/,
						html: /html/,
						json: /json/,
					},
					responseFields: {
						xml: "responseXML",
						text: "responseText",
						json: "responseJSON",
					},
					converters: {
						"* text": String,
						"text html": !0,
						"text json": h.parseJSON,
						"text xml": h.parseXML,
					},
					flatOptions: {
						url: !0,
						context: !0,
					},
				},
				ajaxSetup: function (e, t) {
					return t ? qn(qn(e, h.ajaxSettings), t) : qn(h.ajaxSettings, e);
				},
				ajaxPrefilter: Fn(Pn),
				ajaxTransport: Fn(Hn),
				ajax: function (e, t) {
					function x(e, t, n, r) {
						var f,
							g,
							y,
							w,
							S,
							x = t;
						2 !== b &&
							((b = 2),
							o && clearTimeout(o),
							(a = void 0),
							(s = r || ""),
							(E.readyState = e > 0 ? 4 : 0),
							(f = (e >= 200 && 300 > e) || 304 === e),
							n && (w = Rn(l, E, n)),
							(w = Un(l, w, E, f)),
							f
								? (l.ifModified &&
										((S = E.getResponseHeader("Last-Modified")),
										S && (h.lastModified[i] = S),
										(S = E.getResponseHeader("etag")),
										S && (h.etag[i] = S)),
								  204 === e || "HEAD" === l.type
										? (x = "nocontent")
										: 304 === e
										? (x = "notmodified")
										: ((x = w.state), (g = w.data), (y = w.error), (f = !y)))
								: ((y = x), (e || !x) && ((x = "error"), 0 > e && (e = 0))),
							(E.status = e),
							(E.statusText = (t || x) + ""),
							f ? d.resolveWith(c, [g, x, E]) : d.rejectWith(c, [E, x, y]),
							E.statusCode(m),
							(m = void 0),
							u && p.trigger(f ? "ajaxSuccess" : "ajaxError", [E, l, f ? g : y]),
							v.fireWith(c, [E, x]),
							u && (p.trigger("ajaxComplete", [E, l]), --h.active || h.event.trigger("ajaxStop")));
					}
					"object" == typeof e && ((t = e), (e = void 0)), (t = t || {});
					var n,
						r,
						i,
						s,
						o,
						u,
						a,
						f,
						l = h.ajaxSetup({}, t),
						c = l.context || l,
						p = l.context && (c.nodeType || c.jquery) ? h(c) : h.event,
						d = h.Deferred(),
						v = h.Callbacks("once memory"),
						m = l.statusCode || {},
						g = {},
						y = {},
						b = 0,
						w = "canceled",
						E = {
							readyState: 0,
							getResponseHeader: function (e) {
								var t;
								if (2 === b) {
									if (!f) {
										f = {};
										while ((t = An.exec(s))) f[t[1].toLowerCase()] = t[2];
									}
									t = f[e.toLowerCase()];
								}
								return null == t ? null : t;
							},
							getAllResponseHeaders: function () {
								return 2 === b ? s : null;
							},
							setRequestHeader: function (e, t) {
								var n = e.toLowerCase();
								return b || ((e = y[n] = y[n] || e), (g[e] = t)), this;
							},
							overrideMimeType: function (e) {
								return b || (l.mimeType = e), this;
							},
							statusCode: function (e) {
								var t;
								if (e)
									if (2 > b) for (t in e) m[t] = [m[t], e[t]];
									else E.always(e[E.status]);
								return this;
							},
							abort: function (e) {
								var t = e || w;
								return a && a.abort(t), x(0, t), this;
							},
						};
					if (
						((d.promise(E).complete = v.add),
						(E.success = E.done),
						(E.error = E.fail),
						(l.url = ((e || l.url || Cn) + "").replace(kn, "").replace(_n, Nn[1] + "//")),
						(l.type = t.method || t.type || l.method || l.type),
						(l.dataTypes = h
							.trim(l.dataType || "*")
							.toLowerCase()
							.match(O) || [""]),
						null == l.crossDomain &&
							((n = Dn.exec(l.url.toLowerCase())),
							(l.crossDomain = !(
								!n ||
								(n[1] === Nn[1] &&
									n[2] === Nn[2] &&
									(n[3] || ("http:" === n[1] ? "80" : "443")) ===
										(Nn[3] || ("http:" === Nn[1] ? "80" : "443")))
							))),
						l.data &&
							l.processData &&
							"string" != typeof l.data &&
							(l.data = h.param(l.data, l.traditional)),
						In(Pn, l, t, E),
						2 === b)
					)
						return E;
					(u = l.global),
						u && 0 === h.active++ && h.event.trigger("ajaxStart"),
						(l.type = l.type.toUpperCase()),
						(l.hasContent = !Mn.test(l.type)),
						(i = l.url),
						l.hasContent ||
							(l.data && ((i = l.url += (xn.test(i) ? "&" : "?") + l.data), delete l.data),
							l.cache === !1 &&
								(l.url = Ln.test(i)
									? i.replace(Ln, "$1_=" + Sn++)
									: i + (xn.test(i) ? "&" : "?") + "_=" + Sn++)),
						l.ifModified &&
							(h.lastModified[i] && E.setRequestHeader("If-Modified-Since", h.lastModified[i]),
							h.etag[i] && E.setRequestHeader("If-None-Match", h.etag[i])),
						((l.data && l.hasContent && l.contentType !== !1) || t.contentType) &&
							E.setRequestHeader("Content-Type", l.contentType),
						E.setRequestHeader(
							"Accept",
							l.dataTypes[0] && l.accepts[l.dataTypes[0]]
								? l.accepts[l.dataTypes[0]] + ("*" !== l.dataTypes[0] ? ", " + Bn + "; q=0.01" : "")
								: l.accepts["*"]
						);
					for (r in l.headers) E.setRequestHeader(r, l.headers[r]);
					if (!l.beforeSend || (l.beforeSend.call(c, E, l) !== !1 && 2 !== b)) {
						w = "abort";
						for (r in {
							success: 1,
							error: 1,
							complete: 1,
						})
							E[r](l[r]);
						if ((a = In(Hn, l, t, E))) {
							(E.readyState = 1),
								u && p.trigger("ajaxSend", [E, l]),
								l.async &&
									l.timeout > 0 &&
									(o = setTimeout(function () {
										E.abort("timeout");
									}, l.timeout));
							try {
								(b = 1), a.send(g, x);
							} catch (S) {
								if (!(2 > b)) throw S;
								x(-1, S);
							}
						} else x(-1, "No Transport");
						return E;
					}
					return E.abort();
				},
				getJSON: function (e, t, n) {
					return h.get(e, t, n, "json");
				},
				getScript: function (e, t) {
					return h.get(e, void 0, t, "script");
				},
			}),
			h.each(["get", "post"], function (e, t) {
				h[t] = function (e, n, r, i) {
					return (
						h.isFunction(n) && ((i = i || r), (r = n), (n = void 0)),
						h.ajax({
							url: e,
							type: t,
							dataType: i,
							data: n,
							success: r,
						})
					);
				};
			}),
			h.each(
				["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"],
				function (e, t) {
					h.fn[t] = function (e) {
						return this.on(t, e);
					};
				}
			),
			(h._evalUrl = function (e) {
				return h.ajax({
					url: e,
					type: "GET",
					dataType: "script",
					async: !1,
					global: !1,
					throws: !0,
				});
			}),
			h.fn.extend({
				wrapAll: function (e) {
					if (h.isFunction(e))
						return this.each(function (t) {
							h(this).wrapAll(e.call(this, t));
						});
					if (this[0]) {
						var t = h(e, this[0].ownerDocument).eq(0).clone(!0);
						this[0].parentNode && t.insertBefore(this[0]),
							t
								.map(function () {
									var e = this;
									while (e.firstChild && 1 === e.firstChild.nodeType) e = e.firstChild;
									return e;
								})
								.append(this);
					}
					return this;
				},
				wrapInner: function (e) {
					return this.each(
						h.isFunction(e)
							? function (t) {
									h(this).wrapInner(e.call(this, t));
							  }
							: function () {
									var t = h(this),
										n = t.contents();
									n.length ? n.wrapAll(e) : t.append(e);
							  }
					);
				},
				wrap: function (e) {
					var t = h.isFunction(e);
					return this.each(function (n) {
						h(this).wrapAll(t ? e.call(this, n) : e);
					});
				},
				unwrap: function () {
					return this.parent()
						.each(function () {
							h.nodeName(this, "body") || h(this).replaceWith(this.childNodes);
						})
						.end();
				},
			}),
			(h.expr.filters.hidden = function (e) {
				return (
					(e.offsetWidth <= 0 && e.offsetHeight <= 0) ||
					(!l.reliableHiddenOffsets() &&
						"none" === ((e.style && e.style.display) || h.css(e, "display")))
				);
			}),
			(h.expr.filters.visible = function (e) {
				return !h.expr.filters.hidden(e);
			});
		var zn = /%20/g,
			Wn = /\[\]$/,
			Xn = /\r?\n/g,
			Vn = /^(?:submit|button|image|reset|file)$/i,
			$n = /^(?:input|select|textarea|keygen)/i;
		(h.param = function (e, t) {
			var n,
				r = [],
				i = function (e, t) {
					(t = h.isFunction(t) ? t() : null == t ? "" : t),
						(r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t));
				};
			if (
				(void 0 === t && (t = h.ajaxSettings && h.ajaxSettings.traditional),
				h.isArray(e) || (e.jquery && !h.isPlainObject(e)))
			)
				h.each(e, function () {
					i(this.name, this.value);
				});
			else for (n in e) Jn(n, e[n], t, i);
			return r.join("&").replace(zn, "+");
		}),
			h.fn.extend({
				serialize: function () {
					return h.param(this.serializeArray());
				},
				serializeArray: function () {
					return this.map(function () {
						var e = h.prop(this, "elements");
						return e ? h.makeArray(e) : this;
					})
						.filter(function () {
							var e = this.type;
							return (
								this.name &&
								!h(this).is(":disabled") &&
								$n.test(this.nodeName) &&
								!Vn.test(e) &&
								(this.checked || !J.test(e))
							);
						})
						.map(function (e, t) {
							var n = h(this).val();
							return null == n
								? null
								: h.isArray(n)
								? h.map(n, function (e) {
										return {
											name: t.name,
											value: e.replace(Xn, "\r\n"),
										};
								  })
								: {
										name: t.name,
										value: n.replace(Xn, "\r\n"),
								  };
						})
						.get();
				},
			}),
			(h.ajaxSettings.xhr =
				void 0 !== e.ActiveXObject
					? function () {
							return (
								(!this.isLocal &&
									/^(get|post|head|put|delete|options)$/i.test(this.type) &&
									Yn()) ||
								Zn()
							);
					  }
					: Yn);
		var Kn = 0,
			Qn = {},
			Gn = h.ajaxSettings.xhr();
		e.ActiveXObject &&
			h(e).on("unload", function () {
				for (var e in Qn) Qn[e](void 0, !0);
			}),
			(l.cors = !!Gn && "withCredentials" in Gn),
			(Gn = l.ajax = !!Gn),
			Gn &&
				h.ajaxTransport(function (e) {
					if (!e.crossDomain || l.cors) {
						var t;
						return {
							send: function (n, r) {
								var i,
									s = e.xhr(),
									o = ++Kn;
								if ((s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields))
									for (i in e.xhrFields) s[i] = e.xhrFields[i];
								e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType),
									e.crossDomain ||
										n["X-Requested-With"] ||
										(n["X-Requested-With"] = "XMLHttpRequest");
								for (i in n) void 0 !== n[i] && s.setRequestHeader(i, n[i] + "");
								s.send((e.hasContent && e.data) || null),
									(t = function (n, i) {
										var u, a, f;
										if (t && (i || 4 === s.readyState))
											if ((delete Qn[o], (t = void 0), (s.onreadystatechange = h.noop), i))
												4 !== s.readyState && s.abort();
											else {
												(f = {}),
													(u = s.status),
													"string" == typeof s.responseText && (f.text = s.responseText);
												try {
													a = s.statusText;
												} catch (l) {
													a = "";
												}
												u || !e.isLocal || e.crossDomain
													? 1223 === u && (u = 204)
													: (u = f.text ? 200 : 404);
											}
										f && r(u, a, f, s.getAllResponseHeaders());
									}),
									e.async
										? 4 === s.readyState
											? setTimeout(t)
											: (s.onreadystatechange = Qn[o] = t)
										: t();
							},
							abort: function () {
								t && t(void 0, !0);
							},
						};
					}
				}),
			h.ajaxSetup({
				accepts: {
					script:
						"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
				},
				contents: {
					script: /(?:java|ecma)script/,
				},
				converters: {
					"text script": function (e) {
						return h.globalEval(e), e;
					},
				},
			}),
			h.ajaxPrefilter("script", function (e) {
				void 0 === e.cache && (e.cache = !1), e.crossDomain && ((e.type = "GET"), (e.global = !1));
			}),
			h.ajaxTransport("script", function (e) {
				if (e.crossDomain) {
					var t,
						n = T.head || h("head")[0] || T.documentElement;
					return {
						send: function (r, i) {
							(t = T.createElement("script")),
								(t.async = !0),
								e.scriptCharset && (t.charset = e.scriptCharset),
								(t.src = e.url),
								(t.onload = t.onreadystatechange =
									function (e, n) {
										(n || !t.readyState || /loaded|complete/.test(t.readyState)) &&
											((t.onload = t.onreadystatechange = null),
											t.parentNode && t.parentNode.removeChild(t),
											(t = null),
											n || i(200, "success"));
									}),
								n.insertBefore(t, n.firstChild);
						},
						abort: function () {
							t && t.onload(void 0, !0);
						},
					};
				}
			});
		var er = [],
			tr = /(=)\?(?=&|$)|\?\?/;
		h.ajaxSetup({
			jsonp: "callback",
			jsonpCallback: function () {
				var e = er.pop() || h.expando + "_" + Sn++;
				return (this[e] = !0), e;
			},
		}),
			h.ajaxPrefilter("json jsonp", function (t, n, r) {
				var i,
					s,
					o,
					u =
						t.jsonp !== !1 &&
						(tr.test(t.url)
							? "url"
							: "string" == typeof t.data &&
							  !(t.contentType || "").indexOf("application/x-www-form-urlencoded") &&
							  tr.test(t.data) &&
							  "data");
				return u || "jsonp" === t.dataTypes[0]
					? ((i = t.jsonpCallback =
							h.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback),
					  u
							? (t[u] = t[u].replace(tr, "$1" + i))
							: t.jsonp !== !1 && (t.url += (xn.test(t.url) ? "&" : "?") + t.jsonp + "=" + i),
					  (t.converters["script json"] = function () {
							return o || h.error(i + " was not called"), o[0];
					  }),
					  (t.dataTypes[0] = "json"),
					  (s = e[i]),
					  (e[i] = function () {
							o = arguments;
					  }),
					  r.always(function () {
							(e[i] = s),
								t[i] && ((t.jsonpCallback = n.jsonpCallback), er.push(i)),
								o && h.isFunction(s) && s(o[0]),
								(o = s = void 0);
					  }),
					  "script")
					: void 0;
			}),
			(h.parseHTML = function (e, t, n) {
				if (!e || "string" != typeof e) return null;
				"boolean" == typeof t && ((n = t), (t = !1)), (t = t || T);
				var r = w.exec(e),
					i = !n && [];
				return r
					? [t.createElement(r[1])]
					: ((r = h.buildFragment([e], t, i)),
					  i && i.length && h(i).remove(),
					  h.merge([], r.childNodes));
			});
		var nr = h.fn.load;
		(h.fn.load = function (e, t, n) {
			if ("string" != typeof e && nr) return nr.apply(this, arguments);
			var r,
				i,
				s,
				o = this,
				u = e.indexOf(" ");
			return (
				u >= 0 && ((r = h.trim(e.slice(u, e.length))), (e = e.slice(0, u))),
				h.isFunction(t) ? ((n = t), (t = void 0)) : t && "object" == typeof t && (s = "POST"),
				o.length > 0 &&
					h
						.ajax({
							url: e,
							type: s,
							dataType: "html",
							data: t,
						})
						.done(function (e) {
							(i = arguments), o.html(r ? h("<div>").append(h.parseHTML(e)).find(r) : e);
						})
						.complete(
							n &&
								function (e, t) {
									o.each(n, i || [e.responseText, t, e]);
								}
						),
				this
			);
		}),
			(h.expr.filters.animated = function (e) {
				return h.grep(h.timers, function (t) {
					return e === t.elem;
				}).length;
			});
		var rr = e.document.documentElement;
		(h.offset = {
			setOffset: function (e, t, n) {
				var r,
					i,
					s,
					o,
					u,
					a,
					f,
					l = h.css(e, "position"),
					c = h(e),
					p = {};
				"static" === l && (e.style.position = "relative"),
					(u = c.offset()),
					(s = h.css(e, "top")),
					(a = h.css(e, "left")),
					(f = ("absolute" === l || "fixed" === l) && h.inArray("auto", [s, a]) > -1),
					f
						? ((r = c.position()), (o = r.top), (i = r.left))
						: ((o = parseFloat(s) || 0), (i = parseFloat(a) || 0)),
					h.isFunction(t) && (t = t.call(e, n, u)),
					null != t.top && (p.top = t.top - u.top + o),
					null != t.left && (p.left = t.left - u.left + i),
					"using" in t ? t.using.call(e, p) : c.css(p);
			},
		}),
			h.fn.extend({
				offset: function (e) {
					if (arguments.length)
						return void 0 === e
							? this
							: this.each(function (t) {
									h.offset.setOffset(this, e, t);
							  });
					var t,
						n,
						r = {
							top: 0,
							left: 0,
						},
						i = this[0],
						s = i && i.ownerDocument;
					if (s)
						return (
							(t = s.documentElement),
							h.contains(t, i)
								? (typeof i.getBoundingClientRect !== B && (r = i.getBoundingClientRect()),
								  (n = ir(s)),
								  {
										top: r.top + (n.pageYOffset || t.scrollTop) - (t.clientTop || 0),
										left: r.left + (n.pageXOffset || t.scrollLeft) - (t.clientLeft || 0),
								  })
								: r
						);
				},
				position: function () {
					if (this[0]) {
						var e,
							t,
							n = {
								top: 0,
								left: 0,
							},
							r = this[0];
						return (
							"fixed" === h.css(r, "position")
								? (t = r.getBoundingClientRect())
								: ((e = this.offsetParent()),
								  (t = this.offset()),
								  h.nodeName(e[0], "html") || (n = e.offset()),
								  (n.top += h.css(e[0], "borderTopWidth", !0)),
								  (n.left += h.css(e[0], "borderLeftWidth", !0))),
							{
								top: t.top - n.top - h.css(r, "marginTop", !0),
								left: t.left - n.left - h.css(r, "marginLeft", !0),
							}
						);
					}
				},
				offsetParent: function () {
					return this.map(function () {
						var e = this.offsetParent || rr;
						while (e && !h.nodeName(e, "html") && "static" === h.css(e, "position"))
							e = e.offsetParent;
						return e || rr;
					});
				},
			}),
			h.each(
				{
					scrollLeft: "pageXOffset",
					scrollTop: "pageYOffset",
				},
				function (e, t) {
					var n = /Y/.test(t);
					h.fn[e] = function (r) {
						return $(
							this,
							function (e, r, i) {
								var s = ir(e);
								return void 0 === i
									? s
										? t in s
											? s[t]
											: s.document.documentElement[r]
										: e[r]
									: void (s
											? s.scrollTo(n ? h(s).scrollLeft() : i, n ? i : h(s).scrollTop())
											: (e[r] = i));
							},
							e,
							r,
							arguments.length,
							null
						);
					};
				}
			),
			h.each(["top", "left"], function (e, t) {
				h.cssHooks[t] = jt(l.pixelPosition, function (e, n) {
					return n ? ((n = Ht(e, t)), Dt.test(n) ? h(e).position()[t] + "px" : n) : void 0;
				});
			}),
			h.each(
				{
					Height: "height",
					Width: "width",
				},
				function (e, t) {
					h.each(
						{
							padding: "inner" + e,
							content: t,
							"": "outer" + e,
						},
						function (n, r) {
							h.fn[r] = function (r, i) {
								var s = arguments.length && (n || "boolean" != typeof r),
									o = n || (r === !0 || i === !0 ? "margin" : "border");
								return $(
									this,
									function (t, n, r) {
										var i;
										return h.isWindow(t)
											? t.document.documentElement["client" + e]
											: 9 === t.nodeType
											? ((i = t.documentElement),
											  Math.max(
													t.body["scroll" + e],
													i["scroll" + e],
													t.body["offset" + e],
													i["offset" + e],
													i["client" + e]
											  ))
											: void 0 === r
											? h.css(t, n, o)
											: h.style(t, n, r, o);
									},
									t,
									s ? r : void 0,
									s,
									null
								);
							};
						}
					);
				}
			),
			(h.fn.size = function () {
				return this.length;
			}),
			(h.fn.andSelf = h.fn.addBack),
			"function" == typeof define &&
				define.amd &&
				define("jquery", [], function () {
					return h;
				});
		var sr = e.jQuery,
			or = e.$;
		return (
			(h.noConflict = function (t) {
				return e.$ === h && (e.$ = or), t && e.jQuery === h && (e.jQuery = sr), h;
			}),
			typeof t === B && (e.jQuery = e.$ = h),
			h
		);
	}),
	(function (e, t) {
		if (typeof define == "function" && define.amd)
			define("backbone", ["underscore", "jquery", "exports"], function (n, r, i) {
				e.Backbone = t(e, i, n, r);
			});
		else if (typeof exports != "undefined") {
			var n = require("underscore");
			t(e, exports, n);
		} else e.Backbone = t(e, {}, e._, e.jQuery || e.Zepto || e.ender || e.$);
	})(this, function (e, t, n, r) {
		var i = e.Backbone,
			s = [],
			o = s.push,
			u = s.slice,
			a = s.splice;
		(t.VERSION = "1.1.2"),
			(t.$ = r),
			(t.noConflict = function () {
				return (e.Backbone = i), this;
			}),
			(t.emulateHTTP = !1),
			(t.emulateJSON = !1);
		var f = (t.Events = {
				on: function (e, t, n) {
					if (!c(this, "on", e, [t, n]) || !t) return this;
					this._events || (this._events = {});
					var r = this._events[e] || (this._events[e] = []);
					return (
						r.push({
							callback: t,
							context: n,
							ctx: n || this,
						}),
						this
					);
				},
				once: function (e, t, r) {
					if (!c(this, "once", e, [t, r]) || !t) return this;
					var i = this,
						s = n.once(function () {
							i.off(e, s), t.apply(this, arguments);
						});
					return (s._callback = t), this.on(e, s, r);
				},
				off: function (e, t, r) {
					var i, s, o, u, a, f, l, h;
					if (!this._events || !c(this, "off", e, [t, r])) return this;
					if (!e && !t && !r) return (this._events = void 0), this;
					u = e ? [e] : n.keys(this._events);
					for (a = 0, f = u.length; a < f; a++) {
						e = u[a];
						if ((o = this._events[e])) {
							this._events[e] = i = [];
							if (t || r)
								for (l = 0, h = o.length; l < h; l++)
									(s = o[l]),
										((t && t !== s.callback && t !== s.callback._callback) ||
											(r && r !== s.context)) &&
											i.push(s);
							i.length || delete this._events[e];
						}
					}
					return this;
				},
				trigger: function (e) {
					if (!this._events) return this;
					var t = u.call(arguments, 1);
					if (!c(this, "trigger", e, t)) return this;
					var n = this._events[e],
						r = this._events.all;
					return n && h(n, t), r && h(r, arguments), this;
				},
				stopListening: function (e, t, r) {
					var i = this._listeningTo;
					if (!i) return this;
					var s = !t && !r;
					!r && typeof t == "object" && (r = this), e && ((i = {})[e._listenId] = e);
					for (var o in i)
						(e = i[o]),
							e.off(t, r, this),
							(s || n.isEmpty(e._events)) && delete this._listeningTo[o];
					return this;
				},
			}),
			l = /\s+/,
			c = function (e, t, n, r) {
				if (!n) return !0;
				if (typeof n == "object") {
					for (var i in n) e[t].apply(e, [i, n[i]].concat(r));
					return !1;
				}
				if (l.test(n)) {
					var s = n.split(l);
					for (var o = 0, u = s.length; o < u; o++) e[t].apply(e, [s[o]].concat(r));
					return !1;
				}
				return !0;
			},
			h = function (e, t) {
				var n,
					r = -1,
					i = e.length,
					s = t[0],
					o = t[1],
					u = t[2];
				switch (t.length) {
					case 0:
						while (++r < i) (n = e[r]).callback.call(n.ctx);
						return;
					case 1:
						while (++r < i) (n = e[r]).callback.call(n.ctx, s);
						return;
					case 2:
						while (++r < i) (n = e[r]).callback.call(n.ctx, s, o);
						return;
					case 3:
						while (++r < i) (n = e[r]).callback.call(n.ctx, s, o, u);
						return;
					default:
						while (++r < i) (n = e[r]).callback.apply(n.ctx, t);
						return;
				}
			},
			p = {
				listenTo: "on",
				listenToOnce: "once",
			};
		n.each(p, function (e, t) {
			f[t] = function (t, r, i) {
				var s = this._listeningTo || (this._listeningTo = {}),
					o = t._listenId || (t._listenId = n.uniqueId("l"));
				return (s[o] = t), !i && typeof r == "object" && (i = this), t[e](r, i, this), this;
			};
		}),
			(f.bind = f.on),
			(f.unbind = f.off),
			n.extend(t, f);
		var d = (t.Model = function (e, t) {
			var r = e || {};
			t || (t = {}),
				(this.cid = n.uniqueId("c")),
				(this.attributes = {}),
				t.collection && (this.collection = t.collection),
				t.parse && (r = this.parse(r, t) || {}),
				(r = n.defaults({}, r, n.result(this, "defaults"))),
				this.set(r, t),
				(this.changed = {}),
				this.initialize.apply(this, arguments);
		});
		n.extend(d.prototype, f, {
			changed: null,
			validationError: null,
			idAttribute: "id",
			initialize: function () {},
			toJSON: function (e) {
				return n.clone(this.attributes);
			},
			sync: function () {
				return t.sync.apply(this, arguments);
			},
			get: function (e) {
				return this.attributes[e];
			},
			escape: function (e) {
				return n.escape(this.get(e));
			},
			has: function (e) {
				return this.get(e) != null;
			},
			set: function (e, t, r) {
				var i, s, o, u, a, f, l, c;
				if (e == null) return this;
				typeof e == "object" ? ((s = e), (r = t)) : ((s = {})[e] = t), r || (r = {});
				if (!this._validate(s, r)) return !1;
				(o = r.unset),
					(a = r.silent),
					(u = []),
					(f = this._changing),
					(this._changing = !0),
					f || ((this._previousAttributes = n.clone(this.attributes)), (this.changed = {})),
					(c = this.attributes),
					(l = this._previousAttributes),
					this.idAttribute in s && (this.id = s[this.idAttribute]);
				for (i in s)
					(t = s[i]),
						n.isEqual(c[i], t) || u.push(i),
						n.isEqual(l[i], t) ? delete this.changed[i] : (this.changed[i] = t),
						o ? delete c[i] : (c[i] = t);
				if (!a) {
					u.length && (this._pending = r);
					for (var h = 0, p = u.length; h < p; h++)
						this.trigger("change:" + u[h], this, c[u[h]], r);
				}
				if (f) return this;
				if (!a)
					while (this._pending)
						(r = this._pending), (this._pending = !1), this.trigger("change", this, r);
				return (this._pending = !1), (this._changing = !1), this;
			},
			unset: function (e, t) {
				return this.set(
					e,
					void 0,
					n.extend({}, t, {
						unset: !0,
					})
				);
			},
			clear: function (e) {
				var t = {};
				for (var r in this.attributes) t[r] = void 0;
				return this.set(
					t,
					n.extend({}, e, {
						unset: !0,
					})
				);
			},
			hasChanged: function (e) {
				return e == null ? !n.isEmpty(this.changed) : n.has(this.changed, e);
			},
			changedAttributes: function (e) {
				if (!e) return this.hasChanged() ? n.clone(this.changed) : !1;
				var t,
					r = !1,
					i = this._changing ? this._previousAttributes : this.attributes;
				for (var s in e) {
					if (n.isEqual(i[s], (t = e[s]))) continue;
					(r || (r = {}))[s] = t;
				}
				return r;
			},
			previous: function (e) {
				return e == null || !this._previousAttributes ? null : this._previousAttributes[e];
			},
			previousAttributes: function () {
				return n.clone(this._previousAttributes);
			},
			fetch: function (e) {
				(e = e ? n.clone(e) : {}), e.parse === void 0 && (e.parse = !0);
				var t = this,
					r = e.success;
				return (
					(e.success = function (n) {
						if (!t.set(t.parse(n, e), e)) return !1;
						r && r(t, n, e), t.trigger("sync", t, n, e);
					}),
					I(this, e),
					this.sync("read", this, e)
				);
			},
			save: function (e, t, r) {
				var i,
					s,
					o,
					u = this.attributes;
				e == null || typeof e == "object" ? ((i = e), (r = t)) : ((i = {})[e] = t),
					(r = n.extend(
						{
							validate: !0,
						},
						r
					));
				if (i && !r.wait) {
					if (!this.set(i, r)) return !1;
				} else if (!this._validate(i, r)) return !1;
				i && r.wait && (this.attributes = n.extend({}, u, i)), r.parse === void 0 && (r.parse = !0);
				var a = this,
					f = r.success;
				return (
					(r.success = function (e) {
						a.attributes = u;
						var t = a.parse(e, r);
						r.wait && (t = n.extend(i || {}, t));
						if (n.isObject(t) && !a.set(t, r)) return !1;
						f && f(a, e, r), a.trigger("sync", a, e, r);
					}),
					I(this, r),
					(s = this.isNew() ? "create" : r.patch ? "patch" : "update"),
					s === "patch" && (r.attrs = i),
					(o = this.sync(s, this, r)),
					i && r.wait && (this.attributes = u),
					o
				);
			},
			destroy: function (e) {
				e = e ? n.clone(e) : {};
				var t = this,
					r = e.success,
					i = function () {
						t.trigger("destroy", t, t.collection, e);
					};
				e.success = function (n) {
					(e.wait || t.isNew()) && i(), r && r(t, n, e), t.isNew() || t.trigger("sync", t, n, e);
				};
				if (this.isNew()) return e.success(), !1;
				I(this, e);
				var s = this.sync("delete", this, e);
				return e.wait || i(), s;
			},
			url: function () {
				var e = n.result(this, "urlRoot") || n.result(this.collection, "url") || F();
				return this.isNew() ? e : e.replace(/([^\/])$/, "$1/") + encodeURIComponent(this.id);
			},
			parse: function (e, t) {
				return e;
			},
			clone: function () {
				return new this.constructor(this.attributes);
			},
			isNew: function () {
				return !this.has(this.idAttribute);
			},
			isValid: function (e) {
				return this._validate(
					{},
					n.extend(e || {}, {
						validate: !0,
					})
				);
			},
			_validate: function (e, t) {
				if (!t.validate || !this.validate) return !0;
				e = n.extend({}, this.attributes, e);
				var r = (this.validationError = this.validate(e, t) || null);
				return r
					? (this.trigger(
							"invalid",
							this,
							r,
							n.extend(t, {
								validationError: r,
							})
					  ),
					  !1)
					: !0;
			},
		});
		var v = ["keys", "values", "pairs", "invert", "pick", "omit"];
		n.each(v, function (e) {
			d.prototype[e] = function () {
				var t = u.call(arguments);
				return t.unshift(this.attributes), n[e].apply(n, t);
			};
		});
		var m = (t.Collection = function (e, t) {
				t || (t = {}),
					t.model && (this.model = t.model),
					t.comparator !== void 0 && (this.comparator = t.comparator),
					this._reset(),
					this.initialize.apply(this, arguments),
					e &&
						this.reset(
							e,
							n.extend(
								{
									silent: !0,
								},
								t
							)
						);
			}),
			g = {
				add: !0,
				remove: !0,
				merge: !0,
			},
			y = {
				add: !0,
				remove: !1,
			};
		n.extend(m.prototype, f, {
			model: d,
			initialize: function () {},
			toJSON: function (e) {
				return this.map(function (t) {
					return t.toJSON(e);
				});
			},
			sync: function () {
				return t.sync.apply(this, arguments);
			},
			add: function (e, t) {
				return this.set(
					e,
					n.extend(
						{
							merge: !1,
						},
						t,
						y
					)
				);
			},
			remove: function (e, t) {
				var r = !n.isArray(e);
				(e = r ? [e] : n.clone(e)), t || (t = {});
				var i, s, o, u;
				for (i = 0, s = e.length; i < s; i++) {
					u = e[i] = this.get(e[i]);
					if (!u) continue;
					delete this._byId[u.id],
						delete this._byId[u.cid],
						(o = this.indexOf(u)),
						this.models.splice(o, 1),
						this.length--,
						t.silent || ((t.index = o), u.trigger("remove", u, this, t)),
						this._removeReference(u, t);
				}
				return r ? e[0] : e;
			},
			set: function (e, t) {
				(t = n.defaults({}, t, g)), t.parse && (e = this.parse(e, t));
				var r = !n.isArray(e);
				e = r ? (e ? [e] : []) : n.clone(e);
				var i,
					s,
					o,
					u,
					a,
					f,
					l,
					c = t.at,
					h = this.model,
					p = this.comparator && c == null && t.sort !== !1,
					v = n.isString(this.comparator) ? this.comparator : null,
					m = [],
					y = [],
					b = {},
					w = t.add,
					E = t.merge,
					S = t.remove,
					x = !p && w && S ? [] : !1;
				for (i = 0, s = e.length; i < s; i++) {
					(a = e[i] || {}), a instanceof d ? (o = u = a) : (o = a[h.prototype.idAttribute || "id"]);
					if ((f = this.get(o)))
						S && (b[f.cid] = !0),
							E &&
								((a = a === u ? u.attributes : a),
								t.parse && (a = f.parse(a, t)),
								f.set(a, t),
								p && !l && f.hasChanged(v) && (l = !0)),
							(e[i] = f);
					else if (w) {
						u = e[i] = this._prepareModel(a, t);
						if (!u) continue;
						m.push(u), this._addReference(u, t);
					}
					(u = f || u), x && (u.isNew() || !b[u.id]) && x.push(u), (b[u.id] = !0);
				}
				if (S) {
					for (i = 0, s = this.length; i < s; ++i) b[(u = this.models[i]).cid] || y.push(u);
					y.length && this.remove(y, t);
				}
				if (m.length || (x && x.length)) {
					p && (l = !0), (this.length += m.length);
					if (c != null) for (i = 0, s = m.length; i < s; i++) this.models.splice(c + i, 0, m[i]);
					else {
						x && (this.models.length = 0);
						var T = x || m;
						for (i = 0, s = T.length; i < s; i++) this.models.push(T[i]);
					}
				}
				l &&
					this.sort({
						silent: !0,
					});
				if (!t.silent) {
					for (i = 0, s = m.length; i < s; i++) (u = m[i]).trigger("add", u, this, t);
					(l || (x && x.length)) && this.trigger("sort", this, t);
				}
				return r ? e[0] : e;
			},
			reset: function (e, t) {
				t || (t = {});
				for (var r = 0, i = this.models.length; r < i; r++)
					this._removeReference(this.models[r], t);
				return (
					(t.previousModels = this.models),
					this._reset(),
					(e = this.add(
						e,
						n.extend(
							{
								silent: !0,
							},
							t
						)
					)),
					t.silent || this.trigger("reset", this, t),
					e
				);
			},
			push: function (e, t) {
				return this.add(
					e,
					n.extend(
						{
							at: this.length,
						},
						t
					)
				);
			},
			pop: function (e) {
				var t = this.at(this.length - 1);
				return this.remove(t, e), t;
			},
			unshift: function (e, t) {
				return this.add(
					e,
					n.extend(
						{
							at: 0,
						},
						t
					)
				);
			},
			shift: function (e) {
				var t = this.at(0);
				return this.remove(t, e), t;
			},
			slice: function () {
				return u.apply(this.models, arguments);
			},
			get: function (e) {
				return e == null ? void 0 : this._byId[e] || this._byId[e.id] || this._byId[e.cid];
			},
			at: function (e) {
				return this.models[e];
			},
			where: function (e, t) {
				return n.isEmpty(e)
					? t
						? void 0
						: []
					: this[t ? "find" : "filter"](function (t) {
							for (var n in e) if (e[n] !== t.get(n)) return !1;
							return !0;
					  });
			},
			findWhere: function (e) {
				return this.where(e, !0);
			},
			sort: function (e) {
				if (!this.comparator) throw new Error("Cannot sort a set without a comparator");
				return (
					e || (e = {}),
					n.isString(this.comparator) || this.comparator.length === 1
						? (this.models = this.sortBy(this.comparator, this))
						: this.models.sort(n.bind(this.comparator, this)),
					e.silent || this.trigger("sort", this, e),
					this
				);
			},
			pluck: function (e) {
				return n.invoke(this.models, "get", e);
			},
			fetch: function (e) {
				(e = e ? n.clone(e) : {}), e.parse === void 0 && (e.parse = !0);
				var t = e.success,
					r = this;
				return (
					(e.success = function (n) {
						var i = e.reset ? "reset" : "set";
						r[i](n, e), t && t(r, n, e), r.trigger("sync", r, n, e);
					}),
					I(this, e),
					this.sync("read", this, e)
				);
			},
			create: function (e, t) {
				t = t ? n.clone(t) : {};
				if (!(e = this._prepareModel(e, t))) return !1;
				t.wait || this.add(e, t);
				var r = this,
					i = t.success;
				return (
					(t.success = function (e, n) {
						t.wait && r.add(e, t), i && i(e, n, t);
					}),
					e.save(null, t),
					e
				);
			},
			parse: function (e, t) {
				return e;
			},
			clone: function () {
				return new this.constructor(this.models);
			},
			_reset: function () {
				(this.length = 0), (this.models = []), (this._byId = {});
			},
			_prepareModel: function (e, t) {
				if (e instanceof d) return e;
				(t = t ? n.clone(t) : {}), (t.collection = this);
				var r = new this.model(e, t);
				return r.validationError ? (this.trigger("invalid", this, r.validationError, t), !1) : r;
			},
			_addReference: function (e, t) {
				(this._byId[e.cid] = e),
					e.id != null && (this._byId[e.id] = e),
					e.collection || (e.collection = this),
					e.on("all", this._onModelEvent, this);
			},
			_removeReference: function (e, t) {
				this === e.collection && delete e.collection, e.off("all", this._onModelEvent, this);
			},
			_onModelEvent: function (e, t, n, r) {
				if ((e === "add" || e === "remove") && n !== this) return;
				e === "destroy" && this.remove(t, r),
					t &&
						e === "change:" + t.idAttribute &&
						(delete this._byId[t.previous(t.idAttribute)], t.id != null && (this._byId[t.id] = t)),
					this.trigger.apply(this, arguments);
			},
		});
		var b = [
			"forEach",
			"each",
			"map",
			"collect",
			"reduce",
			"foldl",
			"inject",
			"reduceRight",
			"foldr",
			"find",
			"detect",
			"filter",
			"select",
			"reject",
			"every",
			"all",
			"some",
			"any",
			"include",
			"contains",
			"invoke",
			"max",
			"min",
			"toArray",
			"size",
			"first",
			"head",
			"take",
			"initial",
			"rest",
			"tail",
			"drop",
			"last",
			"without",
			"difference",
			"indexOf",
			"shuffle",
			"lastIndexOf",
			"isEmpty",
			"chain",
			"sample",
		];
		n.each(b, function (e) {
			m.prototype[e] = function () {
				var t = u.call(arguments);
				return t.unshift(this.models), n[e].apply(n, t);
			};
		});
		var w = ["groupBy", "countBy", "sortBy", "indexBy"];
		n.each(w, function (e) {
			m.prototype[e] = function (t, r) {
				var i = n.isFunction(t)
					? t
					: function (e) {
							return e.get(t);
					  };
				return n[e](this.models, i, r);
			};
		});
		var E = (t.View = function (e) {
				(this.cid = n.uniqueId("view")),
					e || (e = {}),
					n.extend(this, n.pick(e, x)),
					this._ensureElement(),
					this.initialize.apply(this, arguments),
					this.delegateEvents();
			}),
			S = /^(\S+)\s*(.*)$/,
			x = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
		n.extend(E.prototype, f, {
			tagName: "div",
			$: function (e) {
				return this.$el.find(e);
			},
			initialize: function () {},
			render: function () {
				return this;
			},
			remove: function () {
				return this.$el.remove(), this.stopListening(), this;
			},
			setElement: function (e, n) {
				return (
					this.$el && this.undelegateEvents(),
					(this.$el = e instanceof t.$ ? e : t.$(e)),
					(this.el = this.$el[0]),
					n !== !1 && this.delegateEvents(),
					this
				);
			},
			delegateEvents: function (e) {
				if (!e && !(e = n.result(this, "events"))) return this;
				this.undelegateEvents();
				for (var t in e) {
					var r = e[t];
					n.isFunction(r) || (r = this[e[t]]);
					if (!r) continue;
					var i = t.match(S),
						s = i[1],
						o = i[2];
					(r = n.bind(r, this)),
						(s += ".delegateEvents" + this.cid),
						o === "" ? this.$el.on(s, r) : this.$el.on(s, o, r);
				}
				return this;
			},
			undelegateEvents: function () {
				return this.$el.off(".delegateEvents" + this.cid), this;
			},
			_ensureElement: function () {
				if (!this.el) {
					var e = n.extend({}, n.result(this, "attributes"));
					this.id && (e.id = n.result(this, "id")),
						this.className && (e["class"] = n.result(this, "className"));
					var r = t.$("<" + n.result(this, "tagName") + ">").attr(e);
					this.setElement(r, !1);
				} else this.setElement(n.result(this, "el"), !1);
			},
		}),
			(t.sync = function (e, r, i) {
				var s = N[e];
				n.defaults(i || (i = {}), {
					emulateHTTP: t.emulateHTTP,
					emulateJSON: t.emulateJSON,
				});
				var o = {
					type: s,
					dataType: "json",
				};
				i.url || (o.url = n.result(r, "url") || F()),
					i.data == null &&
						r &&
						(e === "create" || e === "update" || e === "patch") &&
						((o.contentType = "application/json"),
						(o.data = JSON.stringify(i.attrs || r.toJSON(i)))),
					i.emulateJSON &&
						((o.contentType = "application/x-www-form-urlencoded"),
						(o.data = o.data
							? {
									model: o.data,
							  }
							: {}));
				if (i.emulateHTTP && (s === "PUT" || s === "DELETE" || s === "PATCH")) {
					(o.type = "POST"), i.emulateJSON && (o.data._method = s);
					var u = i.beforeSend;
					i.beforeSend = function (e) {
						e.setRequestHeader("X-HTTP-Method-Override", s);
						if (u) return u.apply(this, arguments);
					};
				}
				o.type !== "GET" && !i.emulateJSON && (o.processData = !1),
					o.type === "PATCH" &&
						T &&
						(o.xhr = function () {
							return new ActiveXObject("Microsoft.XMLHTTP");
						});
				var a = (i.xhr = t.ajax(n.extend(o, i)));
				return r.trigger("request", r, a, i), a;
			});
		var T =
				typeof window != "undefined" &&
				!!window.ActiveXObject &&
				(!window.XMLHttpRequest || !new XMLHttpRequest().dispatchEvent),
			N = {
				create: "POST",
				update: "PUT",
				patch: "PATCH",
				delete: "DELETE",
				read: "GET",
			};
		t.ajax = function () {
			return t.$.ajax.apply(t.$, arguments);
		};
		var C = (t.Router = function (e) {
				e || (e = {}),
					e.routes && (this.routes = e.routes),
					this._bindRoutes(),
					this.initialize.apply(this, arguments);
			}),
			k = /\((.*?)\)/g,
			L = /(\(\?)?:\w+/g,
			A = /\*\w+/g,
			O = /[\-{}\[\]+?.,\\\^$|#\s]/g;
		n.extend(C.prototype, f, {
			initialize: function () {},
			route: function (e, r, i) {
				n.isRegExp(e) || (e = this._routeToRegExp(e)),
					n.isFunction(r) && ((i = r), (r = "")),
					i || (i = this[r]);
				var s = this;
				return (
					t.history.route(e, function (n) {
						var o = s._extractParameters(e, n);
						s.execute(i, o),
							s.trigger.apply(s, ["route:" + r].concat(o)),
							s.trigger("route", r, o),
							t.history.trigger("route", s, r, o);
					}),
					this
				);
			},
			execute: function (e, t) {
				e && e.apply(this, t);
			},
			navigate: function (e, n) {
				return t.history.navigate(e, n), this;
			},
			_bindRoutes: function () {
				if (!this.routes) return;
				this.routes = n.result(this, "routes");
				var e,
					t = n.keys(this.routes);
				while ((e = t.pop()) != null) this.route(e, this.routes[e]);
			},
			_routeToRegExp: function (e) {
				return (
					(e = e
						.replace(O, "\\$&")
						.replace(k, "(?:$1)?")
						.replace(L, function (e, t) {
							return t ? e : "([^/?]+)";
						})
						.replace(A, "([^?]*?)")),
					new RegExp("^" + e + "(?:\\?([\\s\\S]*))?$")
				);
			},
			_extractParameters: function (e, t) {
				var r = e.exec(t).slice(1);
				return n.map(r, function (e, t) {
					return t === r.length - 1 ? e || null : e ? decodeURIComponent(e) : null;
				});
			},
		});
		var M = (t.History = function () {
				(this.handlers = []),
					n.bindAll(this, "checkUrl"),
					typeof window != "undefined" &&
						((this.location = window.location), (this.history = window.history));
			}),
			_ = /^[#\/]|\s+$/g,
			D = /^\/+|\/+$/g,
			P = /msie [\w.]+/,
			H = /\/$/,
			B = /#.*$/;
		(M.started = !1),
			n.extend(M.prototype, f, {
				interval: 50,
				atRoot: function () {
					return this.location.pathname.replace(/[^\/]$/, "$&/") === this.root;
				},
				getHash: function (e) {
					var t = (e || this).location.href.match(/#(.*)$/);
					return t ? t[1] : "";
				},
				getFragment: function (e, t) {
					if (e == null)
						if (this._hasPushState || !this._wantsHashChange || t) {
							e = decodeURI(this.location.pathname + this.location.search);
							var n = this.root.replace(H, "");
							e.indexOf(n) || (e = e.slice(n.length));
						} else e = this.getHash();
					return e.replace(_, "");
				},
				start: function (e) {
					if (M.started) throw new Error("Backbone.history has already been started");
					(M.started = !0),
						(this.options = n.extend(
							{
								root: "/",
							},
							this.options,
							e
						)),
						(this.root = this.options.root),
						(this._wantsHashChange = this.options.hashChange !== !1),
						(this._wantsPushState = !!this.options.pushState),
						(this._hasPushState = !!(
							this.options.pushState &&
							this.history &&
							this.history.pushState
						));
					var r = this.getFragment(),
						i = document.documentMode,
						s = P.exec(navigator.userAgent.toLowerCase()) && (!i || i <= 7);
					this.root = ("/" + this.root + "/").replace(D, "/");
					if (s && this._wantsHashChange) {
						var o = t.$('<iframe src="javascript:0" tabindex="-1">');
						(this.iframe = o.hide().appendTo("body")[0].contentWindow), this.navigate(r);
					}
					this._hasPushState
						? t.$(window).on("popstate", this.checkUrl)
						: this._wantsHashChange && "onhashchange" in window && !s
						? t.$(window).on("hashchange", this.checkUrl)
						: this._wantsHashChange &&
						  (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)),
						(this.fragment = r);
					var u = this.location;
					if (this._wantsHashChange && this._wantsPushState) {
						if (!this._hasPushState && !this.atRoot())
							return (
								(this.fragment = this.getFragment(null, !0)),
								this.location.replace(this.root + "#" + this.fragment),
								!0
							);
						this._hasPushState &&
							this.atRoot() &&
							u.hash &&
							((this.fragment = this.getHash().replace(_, "")),
							this.history.replaceState({}, document.title, this.root + this.fragment));
					}
					if (!this.options.silent) return this.loadUrl();
				},
				stop: function () {
					t.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl),
						this._checkUrlInterval && clearInterval(this._checkUrlInterval),
						(M.started = !1);
				},
				route: function (e, t) {
					this.handlers.unshift({
						route: e,
						callback: t,
					});
				},
				checkUrl: function (e) {
					var t = this.getFragment();
					t === this.fragment && this.iframe && (t = this.getFragment(this.getHash(this.iframe)));
					if (t === this.fragment) return !1;
					this.iframe && this.navigate(t), this.loadUrl();
				},
				loadUrl: function (e) {
					return (
						(e = this.fragment = this.getFragment(e)),
						n.any(this.handlers, function (t) {
							if (t.route.test(e)) return t.callback(e), !0;
						})
					);
				},
				navigate: function (e, t) {
					if (!M.started) return !1;
					if (!t || t === !0)
						t = {
							trigger: !!t,
						};
					var n = this.root + (e = this.getFragment(e || ""));
					e = e.replace(B, "");
					if (this.fragment === e) return;
					(this.fragment = e), e === "" && n !== "/" && (n = n.slice(0, -1));
					if (this._hasPushState)
						this.history[t.replace ? "replaceState" : "pushState"]({}, document.title, n);
					else {
						if (!this._wantsHashChange) return this.location.assign(n);
						this._updateHash(this.location, e, t.replace),
							this.iframe &&
								e !== this.getFragment(this.getHash(this.iframe)) &&
								(t.replace || this.iframe.document.open().close(),
								this._updateHash(this.iframe.location, e, t.replace));
					}
					if (t.trigger) return this.loadUrl(e);
				},
				_updateHash: function (e, t, n) {
					if (n) {
						var r = e.href.replace(/(javascript:|#).*$/, "");
						e.replace(r + "#" + t);
					} else e.hash = "#" + t;
				},
			}),
			(t.history = new M());
		var j = function (e, t) {
			var r = this,
				i;
			e && n.has(e, "constructor")
				? (i = e.constructor)
				: (i = function () {
						return r.apply(this, arguments);
				  }),
				n.extend(i, r, t);
			var s = function () {
				this.constructor = i;
			};
			return (
				(s.prototype = r.prototype),
				(i.prototype = new s()),
				e && n.extend(i.prototype, e),
				(i.__super__ = r.prototype),
				i
			);
		};
		d.extend = m.extend = C.extend = E.extend = M.extend = j;
		var F = function () {
				throw new Error('A "url" property or function must be specified');
			},
			I = function (e, t) {
				var n = t.error;
				t.error = function (r) {
					n && n(e, r, t), e.trigger("error", e, r, t);
				};
			};
		return t;
	}),
	define("params", [], function () {
		var e = {
			MAX_LEVEL: 44,
			winsForLevel: {},
			levelNames: {
				1: "Студент",
				2: "Постигающий слово",
				3: "Словотворец",
				4: "Адепт слова",
				5: "Слововед",
				6: "Словоборец",
				7: "Охотник за словами",
				8: "Находчивый умелец",
				9: "Собиратель слов",
				10: "Гроссмейстер",
				11: "Джедай",
				12: "Магистр",
				13: "Повелитель слов",
				14: "Очарованный словом",
				15: "Хранитель слов",
				16: "Профи слова",
				17: "Архитектор слова",
				18: "Чародей слова",
				19: "Ткач слов",
				20: "Страж речи",
				21: "Покоритель слов",
				22: "Наставник слова",
				23: "Легендарный искатель",
				24: "Гуру слова",
				25: "Царь слова",
				26: "Император слова",
				27: "Титан слова",
				28: "Властелин слова",
				29: "Всевидящее око",
				30: "Абсолютный разум",
				31: "Творец слова",
				32: "Темный рыцарь",
				33: "Мастер игры",
				34: "Композитор слов",
				35: "Слововержец",
				36: "Одаренный слововед",
				37: "Крещенный словом",
				38: "Чернокнижник",
				39: "Книжный мастер",
				40: "Мистик слов",
				41: "Заклинатель фраз",
				42: "Армариус",
				43: "Слововидящий",
				44: "Вершитель Слова",
			},
			LIBRARY_MAX_LEVEL: 100,
			cell: {
				x: 66,
				y: 66,
			},
			arrow: {
				height: 80,
				width: 14,
				count: 3,
				color: {
					hold: "#115fb4",
					tip: "#fea046",
				},
			},
			netType: {
				0: "vk",
				1: "fb",
				2: "fake",
				3: "ok",
				4: "mm",
				5: "fs",
				6: "gp",
				7: "apple",
				8: "fb-ig",
				9: "ya",
				10: "beeline",
			},
			availableSocialRV: social == "vk" || social == "ok" || social == "ya",
			availableSocialFriends: social != "beeline" && social != "ya" && social != "fb-ig",
			docs: {
				policy: {
					en: {
						url: "https://incrdbl.me/en/privacy_policy.html?source=clientHTML5",
						title: "Privacy Policy",
					},
					ru: {
						url: "https://incrdbl.me/ru/privacy_policy.html?source=clientHTML5",
						title: "Политика конфиденциальности",
					},
				},
				terms: {
					en: {
						url: "https://incrdbl.me/en/terms_of_use.html?source=clientHTML5",
						title: "Terms of Use Agreement",
					},
					ru: {
						url: "https://incrdbl.me/ru/terms_of_use.html?source=clientHTML5",
						title: "Пользовательское соглашение",
					},
				},
			},
			laurelsUrl: "https://cdn.wordbyword.me/content/user/laurels/",
			clothesUrl: "https://cdn.wordbyword.me/content/clothes/",
			customAvatarUrl: "https://cdn.wordbyword.me/content/user/customAvatar/element/",
			seasonPassStotsUrl: "https://cdn.wordbyword.me/content/seasonPass/slots/",
			appUrls: {
				appStore: {
					vk: "https://itunes.apple.com/ru/app/apple-store/id654661008?pt=572640&ct=social_game_vk&mt=8",
					ok: "https://itunes.apple.com/ru/app/apple-store/id654661008?pt=572640&ct=social_game_cm&mt=8",
					fb: "https://itunes.apple.com/ru/app/apple-store/id654661008?pt=572640&ct=social_game_fb&mt=8",
					mm: "https://itunes.apple.com/ru/app/apple-store/id654661008?pt=572640&ct=social_game_mm&mt=8",
					fs: "https://itunes.apple.com/ru/app/apple-store/id654661008?pt=572640&ct=social_game_fs&mt=8",
				},
				playMarket: {
					vk: "https://play.google.com/store/apps/details?id=me.incrdbl.android.wordbyword&hl=ru",
					ok: "https://play.google.com/store/apps/details?id=me.incrdbl.android.wordbyword&hl=ru",
					fb: "https://play.google.com/store/apps/details?id=me.incrdbl.android.wordbyword&hl=ru",
					mm: "https://play.google.com/store/apps/details?id=me.incrdbl.android.wordbyword&hl=ru",
				},
			},
			bonuses: [
				{
					type: "letter",
					value: 2,
					text: "bonusLetter2",
				},
				{
					type: "letter",
					value: 3,
					text: "bonusLetter3",
				},
				{
					type: "word",
					value: 2,
					text: "bonusWord2",
				},
				{
					type: "word",
					value: 3,
					text: "bonusWord3",
				},
			],
			inviteText: "Сразись со мной в битве интеллектов!",
			currency: {
				vk: ["голос", "голоса", "голосов"],
				ok: ["ОК", "ОК", "ОК"],
				fb: ["руб.", "руб.", "руб."],
				mm: ["мейлик", "мейлика", "мейликов"],
				"fb-ig": ["руб.", "руб.", "руб."],
				ya: ["YAN", "YAN", "YAN"],
				beeline: ["руб.", "руб.", "руб."],
			},
			revenue: {
				vk: 7,
				ok: 1,
				fb: 1,
				mm: 1,
				fs: 12,
				ya: 1,
				beeline: 1,
			},
			groupUrls: {
				vk: "//vk.com/topic-69578855_31562211",
				ok: "https://ok.ru/clovozaslo/topic/63692408960420",
				fb: "https://www.facebook.com/notes/c%D0%BB%D0%BE%D0%B2%D0%BE-%D0%B7%D0%B0-%D1%81%D0%BB%D0%BE%D0%B2%D0%BE-%D0%B8%D0%B3%D1%80%D0%B0-%D1%81-%D0%B4%D1%80%D1%83%D0%B7%D1%8C%D1%8F%D0%BC%D0%B8/%D1%81%D0%BB%D0%BE%D0%B2%D0%BE-%D0%B7%D0%B0-%D1%81%D0%BB%D0%BE%D0%B2%D0%BE-%D0%B8%D0%B3%D1%80%D0%B0-%D1%81-%D0%B4%D1%80%D1%83%D0%B7%D1%8C%D1%8F%D0%BC%D0%B8-facebook/1623403431224641",
				mm: "https://my.mail.ru/community/wordbword/multipost/96010000D3B98005.html",
			},
			faqUrls: {
				vk: "//vk.com/@wordbword-faq",
				ok: "https://wordbyword.me/ru/faq.html",
				fb: "https://wordbyword.me/ru/faq.html",
				mm: "https://wordbyword.me/ru/faq.html",
			},
			platform: {
				vk: "Вконтакте",
				ok: "Одноклассники",
				fb: "Фейсбук",
				mm: "Мой мир",
				ya: "Яндекс.Игры",
				beeline: "Билайн",
			},
			pagination: {
				friends: 10,
				friendsToInvite: 15,
				topUsers: 25,
			},
			sound: (function () {
				var e = JSON.parse(localStorage.getItem("sound"));
				return e === null ? !0 : e.enabled;
			})(),
			notificationBlock: (function () {
				var e = JSON.parse(localStorage.getItem("notificationBlock"));
				return e === null ? !1 : e.enabled;
			})(),
			testRound: (function () {
				var e = JSON.parse(localStorage.getItem("testRound"));
				return e === null ? !1 : e.enabled;
			})(),
			chats: {
				deleteChatAfter: {
					months: 1,
				},
			},
			tourneysTypes: {
				active: 1,
				user: 2,
				history: 3,
				all: 4,
			},
			tourneyStatus: {
				available: "1",
				joined: "2",
				completed: "3",
				ended: "4",
			},
			advice: [
				"Используя подсказки, ты узнаёшь новые слова и получаешь преимущество перед соперником",
				"Чтобы найти определённого игрока, воспользуйся функцией «Найти игрока»",
				"В Pro-версии бесконечные жизни",
				"Очки рейтинга даются за каждую выигранную игру",
				"Зарабатывай очки рейтинга и повышай свой уровень в игре",
				"Проигрывая игру, ты теряешь очки рейтинга",
				"Открывая достижения, ты получаешь бесплатные монеты",
				"В одном турнире можно сыграть только раз.",
				"Каждый день ты можешь принять участие в нескольких турнирах.",
				"Время проведения турнира ограничено — следи за ним.",
				"Существуют турниры в которых нельзя пользоваться подсказками.",
				"В турнире ты можешь выиграть как монеты, так и очки рейтинга.",
				"Чтобы не получать от игрока сообщения, добавь его в «Черный список»",
				"Если слова нет в нашем словаре, напиши нам в поддержку или в соцсеть",
				"Каждое непринятое слово в игре попадает на рассмотрение модератору",
				"Пополнить баланс можно на игровом поле или во вкладке «Мой баланс»",
				"При пополнении баланса на игровом поле время в раунде не останавливается",
			],
			clanRoles: {
				1: "Рекрут",
				2: "Старейшина",
				3: "Лидер клана",
				4: "Заместитель",
				5: "Новобранец",
			},
			GAprodGK: "de296bc7425000d58c85716d835f1c29",
			GAprodSK: "8cbfd345f7e13aa2c88a31372e3fdd079e8cd80a",
			GAtestGK: "2cf9fa7740e6b0353a59668d81e92669",
			GAtestSK: "37bf46db385d0900f031135cb5d8eb611b7dad9a",
			libraryElementDeclensionByType: {
				1: ["журнал", "журнала", "журналов"],
				2: ["книга", "книги", "книг"],
				3: ["трактат", "трактата", "трактатов"],
				4: ["энциклопедия", "энциклопедии", "энциклопедий"],
			},
			wardrobeItemRarity: {
				0: "base",
				1: "usual",
				2: "rare",
				3: "legendary",
				4: "epic",
				5: "event",
				6: "mythic",
			},
			wardrobeItemRarityLabel: {
				1: ["Обычная", "Обычный", "Обычный", "Обычная"],
				2: ["Редкая", "Редкий", "Редкий", "Редкая"],
				3: ["Легендарная", "Легендарный", "Легендарный", "Легендарная"],
				4: ["Эпическая", "Эпический", "Эпический", "Эпическая"],
				5: ["Ивентовая", "Ивентовый", "Ивентовый", "Ивентовая"],
				6: ["Мифическая", "Мифический", "Мифический", "Мифическая"],
			},
			wardrobePatternRarityLabel: {
				1: "Обычная",
				2: "Редкая",
				3: "Легендарная",
				4: "Эпическая",
				5: "Ивентовая",
				6: "Мифическая",
			},
			wardrobePatternDeclensionByType: {
				1: ["обычная выкройка", "обычные выкройки", "обычных выкроек"],
				2: ["редкая выкройка", "редкие выкройки", "редких выкроек"],
				3: ["легендарная выкройка", "легендарные выкройки", "легендарных выкроек"],
				4: ["эпическая выкройка", "эпические выкройки", "эпических выкроек"],
				5: ["ивентовая выкройка", "ивентовые выкройки", "ивентовых выкроек"],
				6: ["мифическая выкройка", "мифические выкройки", "мифических выкроек"],
			},
			wardrobeSetRarityLabel: {
				1: "Обычный",
				2: "Редкий",
				3: "Легендарный",
				4: "Эпический",
				5: "Ивентовый",
				6: "Мифический",
			},
			wardrobeItemType: ["hat", "hair", "feature", "aura"],
			wardrobeItemTypeLabel: ["шапка", "парик", "предмет", "аура"],
			wardrobeBaseItemType: ["body", "eyes", "mouth"],
		};
		return e;
	}),
	define("methods", ["params"], function (e) {
		function t() {
			var t = {
				ucwords: function (e) {
					return e.charAt(0).toUpperCase() + e.substr(1);
				},
				declension: function (e, t) {
					var n = [2, 0, 1, 1, 1, 2];
					return t[e % 100 > 4 && e % 100 < 20 ? 2 : n[e % 10 < 5 ? e % 10 : 5]];
				},
				getCurrentTimestamp: function () {
					return Math.floor(new Date().getTime() / 1e3);
				},
				getCurrentTimePoint: function () {
					return moment().format("DD-MM-YYYY HH:mm:ss");
				},
				getDaysHoursMinutesFromMS: function (e) {
					return e > 6e4
						? this.getDaysFromMS(e) + this.getHoursFromMS(e) + this.getMinutesFromMS(e)
						: "меньше минуты";
				},
				getHoursMinutesFromMS: function (e) {
					return e > 6e4 ? this.getHoursFromMS(e) + this.getMinutesFromMS(e) : "меньше минуты";
				},
				getDaysFromMS: function (e) {
					var t = moment.duration(e).days();
					return t > 0 ? t + " д. " : "";
				},
				getHoursFromMS: function (e) {
					var t = moment.duration(e).hours();
					return t > 0 ? t + " ч. " : "";
				},
				getMinutesFromMS: function (e) {
					var t = moment.duration(e).minutes();
					return t > 0 ? t + " мин." : "";
				},
				getFormattedTime: function (e, t) {
					function r(e) {
						var t = n == "withDot" ? " д. " : "д ",
							r = Math.floor(moment.duration(e).asDays());
						return r > 0 ? r + t : "";
					}

					function i(e) {
						var t = n == "withDot" ? " ч. " : "ч ",
							r = moment.duration(e).hours();
						return r > 0 ? r + t : "";
					}

					function s(e) {
						var t = 1,
							r = n == "withDot" ? " мин. " : "м ",
							i = moment.duration(e).minutes();
						return i > 0 ? i + t + r : "";
					}

					function o(e) {
						var t = n == "withDot" ? " сек. " : "с ",
							r = moment.duration(e).seconds();
						return r >= 0 ? r + "с" : "";
					}
					var n = t ? t : "";
					return e >= 6e4 ? r(e) + i(e) + s(e) : o(e);
				},
				play: function (t) {
					e.sound && document.visibilityState === "visible" && $.ionSound.play(t);
				},
				pause: function (t) {
					e.sound && $.ionSound.pause(t);
				},
				stop: function (t) {
					e.sound && $.ionSound.stop(t);
				},
				setCookie: function (e, t, n) {
					var r = new Date();
					r.setTime(r.getTime() + n * 24 * 60 * 60 * 1e3);
					var i = "expires=" + r.toUTCString();
					document.cookie = e + "=" + t + "; " + i;
				},
				getCookie: function (e) {
					var t = e + "=",
						n = document.cookie.split(";");
					for (var r = 0; r < n.length; r++) {
						var i = n[r];
						while (i.charAt(0) == " ") i = i.substring(1);
						if (i.indexOf(t) != -1) return i.substring(t.length, i.length);
					}
					return "";
				},
				roundTimer: function (e) {
					var t = Math.floor((e / 60) % 60),
						n = Math.floor(e % 60),
						r = t > 0 ? t + " м " : "",
						i = t == 0 && n < 10 ? "менее 10 с" : n + " c ";
					return r + i;
				},
				levelForUwins: function (t) {
					var n = 1,
						r;
					for (r = 1; r <= e.MAX_LEVEL; r++) {
						if (!(t >= e.winsForLevel[r])) break;
						n = r;
					}
					return n;
				},
				startUwinsForLevel: function (t) {
					var n, r, i;
					n = e.winsForLevel[t];
					for (r = 1; r < e.MAX_LEVEL; r++) {
						i = e.winsForLevel[r];
						if (n > i) continue;
						return i;
					}
					return 0;
				},
				levelNameByLevel: function (t) {
					return t ? e.levelNames[t] : "Студент";
				},
				getClanRole: function (t) {
					return e.clanRoles[t];
				},
				isLightColor: function (e) {
					e = +("0x" + e.slice(1).replace(e.length < 5 && /./g, "$&$&"));
					var t = (e >> 16) / 255,
						n = ((e >> 8) & 255) / 255,
						r = (e & 255) / 255,
						i = (Math.max(t, n, r) + Math.min(t, n, r)) / 2;
					return i >= 0.6;
				},
			};
			return t;
		}
		return t();
	}),
	define("version", [], function () {
		var e = "6.3.3";
		return {
			value: e,
		};
	}),
	define("application", ["params", "methods", "version"], function (e, t, n) {
		return {
			params: e,
			methods: t,
			version: n.value,
		};
	}),
	define("controllers/analytic", ["backbone", "application"], function (e, t) {
		var n = function () {
			(function (e, t, n, r, i, s, o) {
				(e.GoogleAnalyticsObject = i),
					(e[i] =
						e[i] ||
						function () {
							(e[i].q = e[i].q || []).push(arguments);
						}),
					(e[i].l = 1 * new Date()),
					(s = t.createElement(n)),
					(o = t.getElementsByTagName(n)[0]),
					(s.async = 1),
					(s.src = r),
					o.parentNode.insertBefore(s, o);
			})(window, document, "script", "//www.google-analytics.com/analytics.js", "ga"),
				ga("create", this.id, "auto"),
				ga("require", "ecommerce"),
				ga("set", {
					hostname: window.location.hostname,
				}),
				ga(function (e) {
					var t = e.get("page");
				});
		};
		return (
			(n.prototype = {
				id: "UA-68934183-2",
				pageview: function (e) {
					ga("send", "pageview", {
						page: window.location.pathname + "/" + e,
						title: e,
					});
				},
				event: function (e) {
					var t = {
						hitType: "event",
					};
					e.category && (t.eventCategory = e.category),
						e.action && (t.eventAction = e.action),
						e.label && (t.eventLabel = e.label),
						e.value && (t.eventValue = e.value),
						ga("send", t);
				},
				exception: function (e, t, n) {
					var r = {
						message: e,
						error: n.text,
						stack: n.stack,
					};
					ga("send", "exception", {
						exDescription: JSON.stringify(r),
						exFatal: t,
					});
				},
				ecommerce: function (e) {
					var n = Date.now(),
						r = e.price * t.params.revenue[social];
					ga("ecommerce:addTransaction", {
						id: n,
						revenue: r,
						currency: "RUB",
					}),
						ga("ecommerce:addItem", {
							id: n,
							name: e.description + " " + t.params.platform[social],
							sku: e._id,
							price: r,
							quantity: 1,
							currency: "RUB",
						}),
						ga("ecommerce:send"),
						ga("ecommerce:clear");
				},
			}),
			new n()
		);
	}),
	define("widgets/splash/advice", ["backbone", "params"], function (e, t) {
		var n = e.View.extend({
			initialize: function () {
				this.render();
			},
			render: function () {
				if (!!$(this.el)[0]) {
					var e = _.sample(t.advice);
					$(this.el).html(e);
				}
				setTimeout(this.render.bind(this), 3e3);
			},
		});
		return n;
	}),
	(function (e) {
		var t =
			t ||
			(function (e) {
				function t() {}
				var n = {},
					r = (n.lib = {}),
					i = (r.Base = {
						extend: function (e) {
							t.prototype = this;
							var n = new t();
							return (
								e && n.mixIn(e),
								n.hasOwnProperty("init") ||
									(n.init = function () {
										n.$super.init.apply(this, arguments);
									}),
								((n.init.prototype = n).$super = this),
								n
							);
						},
						create: function () {
							var e = this.extend();
							return e.init.apply(e, arguments), e;
						},
						init: function () {},
						mixIn: function (e) {
							for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
							e.hasOwnProperty("toString") && (this.toString = e.toString);
						},
						clone: function () {
							return this.init.prototype.extend(this);
						},
					}),
					s = (r.WordArray = i.extend({
						init: function (e, t) {
							(e = this.words = e || []), (this.sigBytes = null != t ? t : 4 * e.length);
						},
						toString: function (e) {
							return (e || u).stringify(this);
						},
						concat: function (e) {
							var t = this.words,
								n = e.words,
								r = this.sigBytes;
							if (((e = e.sigBytes), this.clamp(), r % 4))
								for (var i = 0; i < e; i++)
									t[(r + i) >>> 2] |=
										((n[i >>> 2] >>> (24 - (i % 4) * 8)) & 255) << (24 - ((r + i) % 4) * 8);
							else if (65535 < n.length) for (i = 0; i < e; i += 4) t[(r + i) >>> 2] = n[i >>> 2];
							else t.push.apply(t, n);
							return (this.sigBytes += e), this;
						},
						clamp: function () {
							var t = this.words,
								n = this.sigBytes;
							(t[n >>> 2] &= 4294967295 << (32 - (n % 4) * 8)), (t.length = e.ceil(n / 4));
						},
						clone: function () {
							var e = i.clone.call(this);
							return (e.words = this.words.slice(0)), e;
						},
						random: function (t) {
							for (var n = [], r = 0; r < t; r += 4) n.push((4294967296 * e.random()) | 0);
							return new s.init(n, t);
						},
					})),
					o = (n.enc = {}),
					u = (o.Hex = {
						stringify: function (e) {
							var t = e.words;
							e = e.sigBytes;
							for (var n = [], r = 0; r < e; r++) {
								var i = (t[r >>> 2] >>> (24 - (r % 4) * 8)) & 255;
								n.push((i >>> 4).toString(16)), n.push((15 & i).toString(16));
							}
							return n.join("");
						},
						parse: function (e) {
							for (var t = e.length, n = [], r = 0; r < t; r += 2)
								n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << (24 - (r % 8) * 4);
							return new s.init(n, t / 2);
						},
					}),
					a = (o.Latin1 = {
						stringify: function (e) {
							var t = e.words;
							e = e.sigBytes;
							for (var n = [], r = 0; r < e; r++)
								n.push(String.fromCharCode((t[r >>> 2] >>> (24 - (r % 4) * 8)) & 255));
							return n.join("");
						},
						parse: function (e) {
							for (var t = e.length, n = [], r = 0; r < t; r++)
								n[r >>> 2] |= (255 & e.charCodeAt(r)) << (24 - (r % 4) * 8);
							return new s.init(n, t);
						},
					}),
					f = (o.Utf8 = {
						stringify: function (e) {
							try {
								return decodeURIComponent(escape(a.stringify(e)));
							} catch (e) {
								throw Error("Malformed UTF-8 data");
							}
						},
						parse: function (e) {
							return a.parse(unescape(encodeURIComponent(e)));
						},
					}),
					l = (r.BufferedBlockAlgorithm = i.extend({
						reset: function () {
							(this._data = new s.init()), (this._nDataBytes = 0);
						},
						_append: function (e) {
							"string" == typeof e && (e = f.parse(e)),
								this._data.concat(e),
								(this._nDataBytes += e.sigBytes);
						},
						_process: function (t) {
							var n = this._data,
								r = n.words,
								i = n.sigBytes,
								o = this.blockSize,
								u = i / (4 * o);
							if (
								((t = (u = t ? e.ceil(u) : e.max((0 | u) - this._minBufferSize, 0)) * o),
								(i = e.min(4 * t, i)),
								t)
							) {
								for (var a = 0; a < t; a += o) this._doProcessBlock(r, a);
								(a = r.splice(0, t)), (n.sigBytes -= i);
							}
							return new s.init(a, i);
						},
						clone: function () {
							var e = i.clone.call(this);
							return (e._data = this._data.clone()), e;
						},
						_minBufferSize: 0,
					}));
				r.Hasher = l.extend({
					cfg: i.extend(),
					init: function (e) {
						(this.cfg = this.cfg.extend(e)), this.reset();
					},
					reset: function () {
						l.reset.call(this), this._doReset();
					},
					update: function (e) {
						return this._append(e), this._process(), this;
					},
					finalize: function (e) {
						return e && this._append(e), this._doFinalize();
					},
					blockSize: 16,
					_createHelper: function (e) {
						return function (t, n) {
							return new e.init(n).finalize(t);
						};
					},
					_createHmacHelper: function (e) {
						return function (t, n) {
							return new c.HMAC.init(e, n).finalize(t);
						};
					},
				});
				var c = (n.algo = {});
				return n;
			})(Math);
		!(function (e) {
			function n(e) {
				return (4294967296 * (e - (0 | e))) | 0;
			}
			for (
				var r = t,
					i = (o = r.lib).WordArray,
					s = o.Hasher,
					o = r.algo,
					u = [],
					a = [],
					f = 2,
					l = 0;
				l < 64;

			) {
				var c;
				e: {
					c = f;
					for (var h = e.sqrt(c), p = 2; p <= h; p++)
						if (!(c % p)) {
							c = !1;
							break e;
						}
					c = !0;
				}
				c && (l < 8 && (u[l] = n(e.pow(f, 0.5))), (a[l] = n(e.pow(f, 1 / 3))), l++), f++;
			}
			var d = [];
			(o = o.SHA256 =
				s.extend({
					_doReset: function () {
						this._hash = new i.init(u.slice(0));
					},
					_doProcessBlock: function (e, t) {
						for (
							var n = this._hash.words,
								r = n[0],
								i = n[1],
								s = n[2],
								o = n[3],
								u = n[4],
								f = n[5],
								l = n[6],
								c = n[7],
								h = 0;
							h < 64;
							h++
						) {
							if (h < 16) d[h] = 0 | e[t + h];
							else {
								var p = d[h - 15],
									v = d[h - 2];
								d[h] =
									(((p << 25) | (p >>> 7)) ^ ((p << 14) | (p >>> 18)) ^ (p >>> 3)) +
									d[h - 7] +
									(((v << 15) | (v >>> 17)) ^ ((v << 13) | (v >>> 19)) ^ (v >>> 10)) +
									d[h - 16];
							}
							(p =
								c +
								(((u << 26) | (u >>> 6)) ^ ((u << 21) | (u >>> 11)) ^ ((u << 7) | (u >>> 25))) +
								((u & f) ^ (~u & l)) +
								a[h] +
								d[h]),
								(v =
									(((r << 30) | (r >>> 2)) ^ ((r << 19) | (r >>> 13)) ^ ((r << 10) | (r >>> 22))) +
									((r & i) ^ (r & s) ^ (i & s))),
								(c = l),
								(l = f),
								(f = u),
								(u = (o + p) | 0),
								(o = s),
								(s = i),
								(i = r),
								(r = (p + v) | 0);
						}
						(n[0] = (n[0] + r) | 0),
							(n[1] = (n[1] + i) | 0),
							(n[2] = (n[2] + s) | 0),
							(n[3] = (n[3] + o) | 0),
							(n[4] = (n[4] + u) | 0),
							(n[5] = (n[5] + f) | 0),
							(n[6] = (n[6] + l) | 0),
							(n[7] = (n[7] + c) | 0);
					},
					_doFinalize: function () {
						var t = this._data,
							n = t.words,
							r = 8 * this._nDataBytes,
							i = 8 * t.sigBytes;
						return (
							(n[i >>> 5] |= 128 << (24 - (i % 32))),
							(n[14 + (((64 + i) >>> 9) << 4)] = e.floor(r / 4294967296)),
							(n[15 + (((64 + i) >>> 9) << 4)] = r),
							(t.sigBytes = 4 * n.length),
							this._process(),
							this._hash
						);
					},
					clone: function () {
						var e = s.clone.call(this);
						return (e._hash = this._hash.clone()), e;
					},
				})),
				(r.SHA256 = s._createHelper(o)),
				(r.HmacSHA256 = s._createHmacHelper(o));
		})(Math),
			(function () {
				var e = t.enc.Utf8;
				t.algo.HMAC = t.lib.Base.extend({
					init: function (t, n) {
						(t = this._hasher = new t.init()), "string" == typeof n && (n = e.parse(n));
						var r = t.blockSize,
							i = 4 * r;
						n.sigBytes > i && (n = t.finalize(n)), n.clamp();
						for (
							var s = (this._oKey = n.clone()),
								o = (this._iKey = n.clone()),
								a = s.words,
								f = o.words,
								l = 0;
							l < r;
							l++
						)
							(a[l] ^= 1549556828), (f[l] ^= 909522486);
						(s.sigBytes = o.sigBytes = i), this.reset();
					},
					reset: function () {
						var e = this._hasher;
						e.reset(), e.update(this._iKey);
					},
					update: function (e) {
						return this._hasher.update(e), this;
					},
					finalize: function (e) {
						var t = this._hasher;
						return (e = t.finalize(e)), t.reset(), t.finalize(this._oKey.clone().concat(e));
					},
				});
			})(),
			(function () {
				var e = t.lib.WordArray;
				t.enc.Base64 = {
					stringify: function (e) {
						var t = e.words,
							n = e.sigBytes,
							r = this._map;
						e.clamp(), (e = []);
						for (var i = 0; i < n; i += 3)
							for (
								var s =
										(((t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255) << 16) |
										(((t[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 255) << 8) |
										((t[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 255),
									o = 0;
								o < 4 && i + 0.75 * o < n;
								o++
							)
								e.push(r.charAt((s >>> (6 * (3 - o))) & 63));
						if ((t = r.charAt(64))) for (; e.length % 4; ) e.push(t);
						return e.join("");
					},
					parse: function (t) {
						var n = t.length,
							r = this._map;
						!(i = r.charAt(64)) || (-1 != (i = t.indexOf(i)) && (n = i));
						for (var i = [], s = 0, o = 0; o < n; o++)
							if (o % 4) {
								var u = r.indexOf(t.charAt(o - 1)) << ((o % 4) * 2),
									a = r.indexOf(t.charAt(o)) >>> (6 - (o % 4) * 2);
								(i[s >>> 2] |= (u | a) << (24 - (s % 4) * 8)), s++;
							}
						return e.create(i, s);
					},
					_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
				};
			})(),
			(function (e) {
				var t, n, r, i, s, o, u, a, f, l, c, h, p;
				((t = e.EGAErrorSeverity || (e.EGAErrorSeverity = {}))[(t.Undefined = 0)] = "Undefined"),
					(t[(t.Debug = 1)] = "Debug"),
					(t[(t.Info = 2)] = "Info"),
					(t[(t.Warning = 3)] = "Warning"),
					(t[(t.Error = 4)] = "Error"),
					(t[(t.Critical = 5)] = "Critical"),
					((n = e.EGAProgressionStatus || (e.EGAProgressionStatus = {}))[(n.Undefined = 0)] =
						"Undefined"),
					(n[(n.Start = 1)] = "Start"),
					(n[(n.Complete = 2)] = "Complete"),
					(n[(n.Fail = 3)] = "Fail"),
					((r = e.EGAResourceFlowType || (e.EGAResourceFlowType = {}))[(r.Undefined = 0)] =
						"Undefined"),
					(r[(r.Source = 1)] = "Source"),
					(r[(r.Sink = 2)] = "Sink"),
					((i = e.EGAAdAction || (e.EGAAdAction = {}))[(i.Undefined = 0)] = "Undefined"),
					(i[(i.Clicked = 1)] = "Clicked"),
					(i[(i.Show = 2)] = "Show"),
					(i[(i.FailedShow = 3)] = "FailedShow"),
					(i[(i.RewardReceived = 4)] = "RewardReceived"),
					((s = e.EGAAdError || (e.EGAAdError = {}))[(s.Undefined = 0)] = "Undefined"),
					(s[(s.Unknown = 1)] = "Unknown"),
					(s[(s.Offline = 2)] = "Offline"),
					(s[(s.NoFill = 3)] = "NoFill"),
					(s[(s.InternalError = 4)] = "InternalError"),
					(s[(s.InvalidRequest = 5)] = "InvalidRequest"),
					(s[(s.UnableToPrecache = 6)] = "UnableToPrecache"),
					((o = e.EGAAdType || (e.EGAAdType = {}))[(o.Undefined = 0)] = "Undefined"),
					(o[(o.Video = 1)] = "Video"),
					(o[(o.RewardedVideo = 2)] = "RewardedVideo"),
					(o[(o.Playable = 3)] = "Playable"),
					(o[(o.Interstitial = 4)] = "Interstitial"),
					(o[(o.OfferWall = 5)] = "OfferWall"),
					(o[(o.Banner = 6)] = "Banner"),
					(u = e.http || (e.http = {})),
					((a = u.EGAHTTPApiResponse || (u.EGAHTTPApiResponse = {}))[(a.NoResponse = 0)] =
						"NoResponse"),
					(a[(a.BadResponse = 1)] = "BadResponse"),
					(a[(a.RequestTimeout = 2)] = "RequestTimeout"),
					(a[(a.JsonEncodeFailed = 3)] = "JsonEncodeFailed"),
					(a[(a.JsonDecodeFailed = 4)] = "JsonDecodeFailed"),
					(a[(a.InternalServerError = 5)] = "InternalServerError"),
					(a[(a.BadRequest = 6)] = "BadRequest"),
					(a[(a.Unauthorized = 7)] = "Unauthorized"),
					(a[(a.UnknownResponseCode = 8)] = "UnknownResponseCode"),
					(a[(a.Ok = 9)] = "Ok"),
					(a[(a.Created = 10)] = "Created"),
					(f = e.events || (e.events = {})),
					((l = f.EGASdkErrorCategory || (f.EGASdkErrorCategory = {}))[(l.Undefined = 0)] =
						"Undefined"),
					(l[(l.EventValidation = 1)] = "EventValidation"),
					(l[(l.Database = 2)] = "Database"),
					(l[(l.Init = 3)] = "Init"),
					(l[(l.Http = 4)] = "Http"),
					(l[(l.Json = 5)] = "Json"),
					((c = f.EGASdkErrorArea || (f.EGASdkErrorArea = {}))[(c.Undefined = 0)] = "Undefined"),
					(c[(c.BusinessEvent = 1)] = "BusinessEvent"),
					(c[(c.ResourceEvent = 2)] = "ResourceEvent"),
					(c[(c.ProgressionEvent = 3)] = "ProgressionEvent"),
					(c[(c.DesignEvent = 4)] = "DesignEvent"),
					(c[(c.ErrorEvent = 5)] = "ErrorEvent"),
					(c[(c.InitHttp = 9)] = "InitHttp"),
					(c[(c.EventsHttp = 10)] = "EventsHttp"),
					(c[(c.ProcessEvents = 11)] = "ProcessEvents"),
					(c[(c.AddEventsToStore = 12)] = "AddEventsToStore"),
					(c[(c.AdEvent = 20)] = "AdEvent"),
					((h = f.EGASdkErrorAction || (f.EGASdkErrorAction = {}))[(h.Undefined = 0)] =
						"Undefined"),
					(h[(h.InvalidCurrency = 1)] = "InvalidCurrency"),
					(h[(h.InvalidShortString = 2)] = "InvalidShortString"),
					(h[(h.InvalidEventPartLength = 3)] = "InvalidEventPartLength"),
					(h[(h.InvalidEventPartCharacters = 4)] = "InvalidEventPartCharacters"),
					(h[(h.InvalidStore = 5)] = "InvalidStore"),
					(h[(h.InvalidFlowType = 6)] = "InvalidFlowType"),
					(h[(h.StringEmptyOrNull = 7)] = "StringEmptyOrNull"),
					(h[(h.NotFoundInAvailableCurrencies = 8)] = "NotFoundInAvailableCurrencies"),
					(h[(h.InvalidAmount = 9)] = "InvalidAmount"),
					(h[(h.NotFoundInAvailableItemTypes = 10)] = "NotFoundInAvailableItemTypes"),
					(h[(h.WrongProgressionOrder = 11)] = "WrongProgressionOrder"),
					(h[(h.InvalidEventIdLength = 12)] = "InvalidEventIdLength"),
					(h[(h.InvalidEventIdCharacters = 13)] = "InvalidEventIdCharacters"),
					(h[(h.InvalidProgressionStatus = 15)] = "InvalidProgressionStatus"),
					(h[(h.InvalidSeverity = 16)] = "InvalidSeverity"),
					(h[(h.InvalidLongString = 17)] = "InvalidLongString"),
					(h[(h.DatabaseTooLarge = 18)] = "DatabaseTooLarge"),
					(h[(h.DatabaseOpenOrCreate = 19)] = "DatabaseOpenOrCreate"),
					(h[(h.JsonError = 25)] = "JsonError"),
					(h[(h.FailHttpJsonDecode = 29)] = "FailHttpJsonDecode"),
					(h[(h.FailHttpJsonEncode = 30)] = "FailHttpJsonEncode"),
					(h[(h.InvalidAdAction = 31)] = "InvalidAdAction"),
					(h[(h.InvalidAdType = 32)] = "InvalidAdType"),
					(h[(h.InvalidString = 33)] = "InvalidString"),
					((p = f.EGASdkErrorParameter || (f.EGASdkErrorParameter = {}))[(p.Undefined = 0)] =
						"Undefined"),
					(p[(p.Currency = 1)] = "Currency"),
					(p[(p.CartType = 2)] = "CartType"),
					(p[(p.ItemType = 3)] = "ItemType"),
					(p[(p.ItemId = 4)] = "ItemId"),
					(p[(p.Store = 5)] = "Store"),
					(p[(p.FlowType = 6)] = "FlowType"),
					(p[(p.Amount = 7)] = "Amount"),
					(p[(p.Progression01 = 8)] = "Progression01"),
					(p[(p.Progression02 = 9)] = "Progression02"),
					(p[(p.Progression03 = 10)] = "Progression03"),
					(p[(p.EventId = 11)] = "EventId"),
					(p[(p.ProgressionStatus = 12)] = "ProgressionStatus"),
					(p[(p.Severity = 13)] = "Severity"),
					(p[(p.Message = 14)] = "Message"),
					(p[(p.AdAction = 15)] = "AdAction"),
					(p[(p.AdType = 16)] = "AdType"),
					(p[(p.AdSdkName = 17)] = "AdSdkName"),
					(p[(p.AdPlacement = 18)] = "AdPlacement");
			})((n = n || {}));
		var n,
			r = n.EGAErrorSeverity,
			i = n.EGAProgressionStatus,
			s = n.EGAResourceFlowType;
		!(function (e) {
			!(function (e) {
				function i() {
					i.debugEnabled = !1;
				}
				var t, n;
				((n = t = t || {})[(n.Error = 0)] = "Error"),
					(n[(n.Warning = 1)] = "Warning"),
					(n[(n.Info = 2)] = "Info"),
					(n[(n.Debug = 3)] = "Debug");
				var r =
					((i.setInfoLog = function (e) {
						i.instance.infoLogEnabled = e;
					}),
					(i.setVerboseLog = function (e) {
						i.instance.infoLogVerboseEnabled = e;
					}),
					(i.i = function (e) {
						if (i.instance.infoLogEnabled) {
							var n = "Info/" + i.Tag + ": " + e;
							i.instance.sendNotificationMessage(n, t.Info);
						}
					}),
					(i.w = function (e) {
						var n = "Warning/" + i.Tag + ": " + e;
						i.instance.sendNotificationMessage(n, t.Warning);
					}),
					(i.e = function (e) {
						var n = "Error/" + i.Tag + ": " + e;
						i.instance.sendNotificationMessage(n, t.Error);
					}),
					(i.ii = function (e) {
						if (i.instance.infoLogVerboseEnabled) {
							var n = "Verbose/" + i.Tag + ": " + e;
							i.instance.sendNotificationMessage(n, t.Info);
						}
					}),
					(i.d = function (e) {
						if (i.debugEnabled) {
							var n = "Debug/" + i.Tag + ": " + e;
							i.instance.sendNotificationMessage(n, t.Debug);
						}
					}),
					(i.prototype.sendNotificationMessage = function (e, n) {
						switch (n) {
							case t.Error:
								console.error(e);
								break;
							case t.Warning:
								console.warn(e);
								break;
							case t.Debug:
								"function" == typeof console.debug ? console.debug(e) : console.log(e);
								break;
							case t.Info:
								console.log(e);
						}
					}),
					(i.instance = new i()),
					(i.Tag = "GameAnalytics"),
					i);
				e.GALogger = r;
			})(e.logging || (e.logging = {}));
		})((n = n || {})),
			(function (e) {
				function s() {}
				var n, r, i;
				(n = e.utilities || (e.utilities = {})),
					(r = e.logging.GALogger),
					(s.getHmac = function (e, n) {
						var r = t.HmacSHA256(n, e);
						return t.enc.Base64.stringify(r);
					}),
					(s.stringMatch = function (e, t) {
						return !!e && !!t && t.test(e);
					}),
					(s.joinStringArray = function (e, t) {
						for (var n = "", r = 0, i = e.length; r < i; r++) 0 < r && (n += t), (n += e[r]);
						return n;
					}),
					(s.stringArrayContainsString = function (e, t) {
						if (0 === e.length) return !1;
						for (var n in e) if (e[n] === t) return !0;
						return !1;
					}),
					(s.encode64 = function (e) {
						e = encodeURI(e);
						for (
							var t, n, r, i, o, u = "", a = 0, f = 0, c = 0;
							(r = (t = e.charCodeAt(c++)) >> 2),
								(i = ((3 & t) << 4) | ((n = e.charCodeAt(c++)) >> 4)),
								(o = ((15 & n) << 2) | ((a = e.charCodeAt(c++)) >> 6)),
								(f = 63 & a),
								isNaN(n) ? (o = f = 64) : isNaN(a) && (f = 64),
								(u =
									u +
									s.keyStr.charAt(r) +
									s.keyStr.charAt(i) +
									s.keyStr.charAt(o) +
									s.keyStr.charAt(f)),
								(t = n = a = 0),
								(r = i = o = f = 0),
								c < e.length;

						);
						return u;
					}),
					(s.decode64 = function (e) {
						var t,
							n,
							i,
							o,
							a = "",
							f = 0,
							c = 0,
							h = 0;
						for (
							/[^A-Za-z0-9\+\/\=]/g.exec(e) &&
								r.w(
									"There were invalid base64 characters in the input text. Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='. Expect errors in decoding."
								),
								e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
							(t =
								(s.keyStr.indexOf(e.charAt(h++)) << 2) |
								((i = s.keyStr.indexOf(e.charAt(h++))) >> 4)),
								(n = ((15 & i) << 4) | ((o = s.keyStr.indexOf(e.charAt(h++))) >> 2)),
								(f = ((3 & o) << 6) | (c = s.keyStr.indexOf(e.charAt(h++)))),
								(a += String.fromCharCode(t)),
								64 != o && (a += String.fromCharCode(n)),
								64 != c && (a += String.fromCharCode(f)),
								(t = n = f = 0),
								(i = o = c = 0),
								h < e.length;

						);
						return decodeURI(a);
					}),
					(s.timeIntervalSince1970 = function () {
						var e = new Date();
						return Math.round(e.getTime() / 1e3);
					}),
					(s.createGuid = function () {
						return (
							s.s4() +
							s.s4() +
							"-" +
							s.s4() +
							"-4" +
							s.s4().substr(0, 3) +
							"-" +
							s.s4() +
							"-" +
							s.s4() +
							s.s4() +
							s.s4()
						).toLowerCase();
					}),
					(s.s4 = function () {
						return ((65536 * (1 + Math.random())) | 0).toString(16).substring(1);
					}),
					(s.keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="),
					(i = s),
					(n.GAUtilities = i);
			})((n = n || {})),
			(function (e) {
				!(function (t) {
					function l() {}
					var n = e.logging.GALogger,
						r = e.utilities.GAUtilities,
						i = e.events.EGASdkErrorCategory,
						s = e.events.EGASdkErrorArea,
						o = e.events.EGASdkErrorAction,
						u = e.events.EGASdkErrorParameter,
						a = function (e, t, n, r, i) {
							(this.category = e),
								(this.area = t),
								(this.action = n),
								(this.parameter = r),
								(this.reason = i);
						};
					t.ValidationResult = a;
					var f =
						((l.validateBusinessEvent = function (e, t, r, f, h) {
							return l.validateCurrency(e)
								? t < 0
									? (n.w(
											"Validation fail - business event - amount. Cannot be less than 0. Failed amount: " +
												t
									  ),
									  new a(i.EventValidation, s.BusinessEvent, o.InvalidAmount, u.Amount, t + ""))
									: l.validateShortString(r, !0)
									? l.validateEventPartLength(f, !1)
										? l.validateEventPartCharacters(f)
											? l.validateEventPartLength(h, !1)
												? l.validateEventPartCharacters(h)
													? null
													: (n.w(
															"Validation fail - business event - itemId: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
																h
													  ),
													  new a(
															i.EventValidation,
															s.BusinessEvent,
															o.InvalidEventPartCharacters,
															u.ItemId,
															h
													  ))
												: (n.w(
														"Validation fail - business event - itemId. Cannot be (null), empty or above 64 characters. String: " +
															h
												  ),
												  new a(
														i.EventValidation,
														s.BusinessEvent,
														o.InvalidEventPartLength,
														u.ItemId,
														h
												  ))
											: (n.w(
													"Validation fail - business event - itemType: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
														f
											  ),
											  new a(
													i.EventValidation,
													s.BusinessEvent,
													o.InvalidEventPartCharacters,
													u.ItemType,
													f
											  ))
										: (n.w(
												"Validation fail - business event - itemType: Cannot be (null), empty or above 64 characters. String: " +
													f
										  ),
										  new a(
												i.EventValidation,
												s.BusinessEvent,
												o.InvalidEventPartLength,
												u.ItemType,
												f
										  ))
									: (n.w(
											"Validation fail - business event - cartType. Cannot be above 32 length. String: " +
												r
									  ),
									  new a(i.EventValidation, s.BusinessEvent, o.InvalidShortString, u.CartType, r))
								: (n.w(
										"Validation fail - business event - currency: Cannot be (null) and need to be A-Z, 3 characters and in the standard at openexchangerates.org. Failed currency: " +
											e
								  ),
								  new a(i.EventValidation, s.BusinessEvent, o.InvalidCurrency, u.Currency, e));
						}),
						(l.validateResourceEvent = function (t, f, h, p, y, b, w) {
							return t == e.EGAResourceFlowType.Undefined
								? (n.w("Validation fail - resource event - flowType: Invalid flow type."),
								  new a(i.EventValidation, s.ResourceEvent, o.InvalidFlowType, u.FlowType, ""))
								: f
								? r.stringArrayContainsString(b, f)
									? 0 < h
										? p
											? l.validateEventPartLength(p, !1)
												? l.validateEventPartCharacters(p)
													? r.stringArrayContainsString(w, p)
														? l.validateEventPartLength(y, !1)
															? l.validateEventPartCharacters(y)
																? null
																: (n.w(
																		"Validation fail - resource event - itemId: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
																			y
																  ),
																  new a(
																		i.EventValidation,
																		s.ResourceEvent,
																		o.InvalidEventPartCharacters,
																		u.ItemId,
																		y
																  ))
															: (n.w(
																	"Validation fail - resource event - itemId: Cannot be (null), empty or above 64 characters. String: " +
																		y
															  ),
															  new a(
																	i.EventValidation,
																	s.ResourceEvent,
																	o.InvalidEventPartLength,
																	u.ItemId,
																	y
															  ))
														: (n.w(
																"Validation fail - resource event - itemType: Not found in list of pre-defined available resource itemTypes. String: " +
																	p
														  ),
														  new a(
																i.EventValidation,
																s.ResourceEvent,
																o.NotFoundInAvailableItemTypes,
																u.ItemType,
																p
														  ))
													: (n.w(
															"Validation fail - resource event - itemType: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
																p
													  ),
													  new a(
															i.EventValidation,
															s.ResourceEvent,
															o.InvalidEventPartCharacters,
															u.ItemType,
															p
													  ))
												: (n.w(
														"Validation fail - resource event - itemType: Cannot be (null), empty or above 64 characters. String: " +
															p
												  ),
												  new a(
														i.EventValidation,
														s.ResourceEvent,
														o.InvalidEventPartLength,
														u.ItemType,
														p
												  ))
											: (n.w("Validation fail - resource event - itemType: Cannot be (null)"),
											  new a(
													i.EventValidation,
													s.ResourceEvent,
													o.StringEmptyOrNull,
													u.ItemType,
													""
											  ))
										: (n.w(
												"Validation fail - resource event - amount: Float amount cannot be 0 or negative. Value: " +
													h
										  ),
										  new a(i.EventValidation, s.ResourceEvent, o.InvalidAmount, u.Amount, h + ""))
									: (n.w(
											"Validation fail - resource event - currency: Not found in list of pre-defined available resource currencies. String: " +
												f
									  ),
									  new a(
											i.EventValidation,
											s.ResourceEvent,
											o.NotFoundInAvailableCurrencies,
											u.Currency,
											f
									  ))
								: (n.w("Validation fail - resource event - currency: Cannot be (null)"),
								  new a(i.EventValidation, s.ResourceEvent, o.StringEmptyOrNull, u.Currency, ""));
						}),
						(l.validateProgressionEvent = function (t, r, f, h) {
							if (t == e.EGAProgressionStatus.Undefined)
								return (
									n.w("Validation fail - progression event: Invalid progression status."),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.InvalidProgressionStatus,
										u.ProgressionStatus,
										""
									)
								);
							if (h && !f && r)
								return (
									n.w(
										"Validation fail - progression event: 03 found but 01+02 are invalid. Progression must be set as either 01, 01+02 or 01+02+03."
									),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.WrongProgressionOrder,
										u.Undefined,
										r + ":" + f + ":" + h
									)
								);
							if (f && !r)
								return (
									n.w(
										"Validation fail - progression event: 02 found but not 01. Progression must be set as either 01, 01+02 or 01+02+03"
									),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.WrongProgressionOrder,
										u.Undefined,
										r + ":" + f + ":" + h
									)
								);
							if (!r)
								return (
									n.w(
										"Validation fail - progression event: progression01 not valid. Progressions must be set as either 01, 01+02 or 01+02+03"
									),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.WrongProgressionOrder,
										u.Undefined,
										(r || "") + ":" + (f || "") + ":" + (h || "")
									)
								);
							if (!l.validateEventPartLength(r, !1))
								return (
									n.w(
										"Validation fail - progression event - progression01: Cannot be (null), empty or above 64 characters. String: " +
											r
									),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.InvalidEventPartLength,
										u.Progression01,
										r
									)
								);
							if (!l.validateEventPartCharacters(r))
								return (
									n.w(
										"Validation fail - progression event - progression01: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
											r
									),
									new a(
										i.EventValidation,
										s.ProgressionEvent,
										o.InvalidEventPartCharacters,
										u.Progression01,
										r
									)
								);
							if (f) {
								if (!l.validateEventPartLength(f, !0))
									return (
										n.w(
											"Validation fail - progression event - progression02: Cannot be empty or above 64 characters. String: " +
												f
										),
										new a(
											i.EventValidation,
											s.ProgressionEvent,
											o.InvalidEventPartLength,
											u.Progression02,
											f
										)
									);
								if (!l.validateEventPartCharacters(f))
									return (
										n.w(
											"Validation fail - progression event - progression02: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
												f
										),
										new a(
											i.EventValidation,
											s.ProgressionEvent,
											o.InvalidEventPartCharacters,
											u.Progression02,
											f
										)
									);
							}
							if (h) {
								if (!l.validateEventPartLength(h, !0))
									return (
										n.w(
											"Validation fail - progression event - progression03: Cannot be empty or above 64 characters. String: " +
												h
										),
										new a(
											i.EventValidation,
											s.ProgressionEvent,
											o.InvalidEventPartLength,
											u.Progression03,
											h
										)
									);
								if (!l.validateEventPartCharacters(h))
									return (
										n.w(
											"Validation fail - progression event - progression03: Cannot contain other characters than A-z, 0-9, -_., ()!?. String: " +
												h
										),
										new a(
											i.EventValidation,
											s.ProgressionEvent,
											o.InvalidEventPartCharacters,
											u.Progression03,
											h
										)
									);
							}
							return null;
						}),
						(l.validateDesignEvent = function (e) {
							return l.validateEventIdLength(e)
								? l.validateEventIdCharacters(e)
									? null
									: (n.w(
											"Validation fail - design event - eventId: Non valid characters. Only allowed A-z, 0-9, -_., ()!?. String: " +
												e
									  ),
									  new a(
											i.EventValidation,
											s.DesignEvent,
											o.InvalidEventIdCharacters,
											u.EventId,
											e
									  ))
								: (n.w(
										"Validation fail - design event - eventId: Cannot be (null) or empty. Only 5 event parts allowed seperated by :. Each part need to be 64 characters or less. String: " +
											e
								  ),
								  new a(i.EventValidation, s.DesignEvent, o.InvalidEventIdLength, u.EventId, e));
						}),
						(l.validateErrorEvent = function (t, r) {
							return t == e.EGAErrorSeverity.Undefined
								? (n.w("Validation fail - error event - severity: Severity was unsupported value."),
								  new a(i.EventValidation, s.ErrorEvent, o.InvalidSeverity, u.Severity, ""))
								: l.validateLongString(r, !0)
								? null
								: (n.w(
										"Validation fail - error event - message: Message cannot be above 8192 characters."
								  ),
								  new a(i.EventValidation, s.ErrorEvent, o.InvalidLongString, u.Message, r));
						}),
						(l.validateAdEvent = function (t, r, f, h) {
							return t == e.EGAAdAction.Undefined
								? (n.w("Validation fail - error event - severity: Severity was unsupported value."),
								  new a(i.EventValidation, s.AdEvent, o.InvalidAdAction, u.AdAction, ""))
								: r == e.EGAAdType.Undefined
								? (n.w("Validation fail - ad event - adType: Ad type was unsupported value."),
								  new a(i.EventValidation, s.AdEvent, o.InvalidAdType, u.AdType, ""))
								: l.validateShortString(f, !1)
								? l.validateString(h, !1)
									? null
									: (n.w(
											"Validation fail - ad event - message: Ad placement cannot be above 64 characters."
									  ),
									  new a(i.EventValidation, s.AdEvent, o.InvalidString, u.AdPlacement, h))
								: (n.w(
										"Validation fail - ad event - message: Ad SDK name cannot be above 32 characters."
								  ),
								  new a(i.EventValidation, s.AdEvent, o.InvalidShortString, u.AdSdkName, f));
						}),
						(l.validateSdkErrorEvent = function (e, t, r, u, a) {
							return (
								!!l.validateKeys(e, t) &&
								!(r === i.Undefined
									? (n.w(
											"Validation fail - sdk error event - type: Category was unsupported value."
									  ),
									  1)
									: u === s.Undefined
									? (n.w("Validation fail - sdk error event - type: Area was unsupported value."),
									  1)
									: a === o.Undefined &&
									  (n.w("Validation fail - sdk error event - type: Action was unsupported value."),
									  1))
							);
						}),
						(l.validateKeys = function (e, t) {
							return !!r.stringMatch(e, /^[A-z0-9]{32}$/) && !!r.stringMatch(t, /^[A-z0-9]{40}$/);
						}),
						(l.validateCurrency = function (e) {
							return !!e && !!r.stringMatch(e, /^[A-Z]{3}$/);
						}),
						(l.validateEventPartLength = function (e, t) {
							return (!!t && !e) || (!!e && !(64 < e.length));
						}),
						(l.validateEventPartCharacters = function (e) {
							return !!r.stringMatch(e, /^[A-Za-z0-9\s\-_\.\(\)\!\?]{1,64}$/);
						}),
						(l.validateEventIdLength = function (e) {
							return !!e && !!r.stringMatch(e, /^[^:]{1,64}(?::[^:]{1,64}){0,4}$/);
						}),
						(l.validateEventIdCharacters = function (e) {
							return (
								!!e &&
								!!r.stringMatch(
									e,
									/^[A-Za-z0-9\s\-_\.\(\)\!\?]{1,64}(:[A-Za-z0-9\s\-_\.\(\)\!\?]{1,64}){0,4}$/
								)
							);
						}),
						(l.validateAndCleanInitRequestResponse = function (e, t) {
							if (null == e)
								return n.w("validateInitRequestResponse failed - no response dictionary."), null;
							var r = {};
							try {
								var i = e.server_ts;
								if (!(0 < i))
									return (
										n.w("validateInitRequestResponse failed - invalid value in 'server_ts' field."),
										null
									);
								r.server_ts = i;
							} catch (t) {
								return (
									n.w(
										"validateInitRequestResponse failed - invalid type in 'server_ts' field. type=" +
											typeof e.server_ts +
											", value=" +
											e.server_ts +
											", " +
											t
									),
									null
								);
							}
							if (t) {
								try {
									var s = e.configs;
									r.configs = s;
								} catch (t) {
									return (
										n.w(
											"validateInitRequestResponse failed - invalid type in 'configs' field. type=" +
												typeof e.configs +
												", value=" +
												e.configs +
												", " +
												t
										),
										null
									);
								}
								try {
									var o = e.configs_hash;
									r.configs_hash = o;
								} catch (t) {
									return (
										n.w(
											"validateInitRequestResponse failed - invalid type in 'configs_hash' field. type=" +
												typeof e.configs_hash +
												", value=" +
												e.configs_hash +
												", " +
												t
										),
										null
									);
								}
								try {
									var u = e.ab_id;
									r.ab_id = u;
								} catch (t) {
									return (
										n.w(
											"validateInitRequestResponse failed - invalid type in 'ab_id' field. type=" +
												typeof e.ab_id +
												", value=" +
												e.ab_id +
												", " +
												t
										),
										null
									);
								}
								try {
									var a = e.ab_variant_id;
									r.ab_variant_id = a;
								} catch (t) {
									return (
										n.w(
											"validateInitRequestResponse failed - invalid type in 'ab_variant_id' field. type=" +
												typeof e.ab_variant_id +
												", value=" +
												e.ab_variant_id +
												", " +
												t
										),
										null
									);
								}
							}
							return r;
						}),
						(l.validateBuild = function (e) {
							return !!l.validateShortString(e, !1);
						}),
						(l.validateSdkWrapperVersion = function (e) {
							return !!r.stringMatch(
								e,
								/^(unity|unreal|gamemaker|cocos2d|construct|defold|godot) [0-9]{0,5}(\.[0-9]{0,5}){0,2}$/
							);
						}),
						(l.validateEngineVersion = function (e) {
							return (
								!!e &&
								!!r.stringMatch(
									e,
									/^(unity|unreal|gamemaker|cocos2d|construct|defold|godot) [0-9]{0,5}(\.[0-9]{0,5}){0,2}$/
								)
							);
						}),
						(l.validateUserId = function (e) {
							return (
								!!l.validateString(e, !1) ||
								(n.w(
									"Validation fail - user id: id cannot be (null), empty or above 64 characters."
								),
								!1)
							);
						}),
						(l.validateShortString = function (e, t) {
							return (!!t && !e) || !(!e || 32 < e.length);
						}),
						(l.validateString = function (e, t) {
							return (!!t && !e) || !(!e || 64 < e.length);
						}),
						(l.validateLongString = function (e, t) {
							return (!!t && !e) || !(!e || 8192 < e.length);
						}),
						(l.validateConnectionType = function (e) {
							return r.stringMatch(e, /^(wwan|wifi|lan|offline)$/);
						}),
						(l.validateCustomDimensions = function (e) {
							return l.validateArrayOfStrings(20, 32, !1, "custom dimensions", e);
						}),
						(l.validateResourceCurrencies = function (e) {
							if (!l.validateArrayOfStrings(20, 64, !1, "resource currencies", e)) return !1;
							for (var t = 0; t < e.length; ++t)
								if (!r.stringMatch(e[t], /^[A-Za-z]+$/))
									return (
										n.w(
											"resource currencies validation failed: a resource currency can only be A-Z, a-z. String was: " +
												e[t]
										),
										!1
									);
							return !0;
						}),
						(l.validateResourceItemTypes = function (e) {
							if (!l.validateArrayOfStrings(20, 32, !1, "resource item types", e)) return !1;
							for (var t = 0; t < e.length; ++t)
								if (!l.validateEventPartCharacters(e[t]))
									return (
										n.w(
											"resource item types validation failed: a resource item type cannot contain other characters than A-z, 0-9, -_., ()!?. String was: " +
												e[t]
										),
										!1
									);
							return !0;
						}),
						(l.validateDimension01 = function (e, t) {
							return !e || !!r.stringArrayContainsString(t, e);
						}),
						(l.validateDimension02 = function (e, t) {
							return !e || !!r.stringArrayContainsString(t, e);
						}),
						(l.validateDimension03 = function (e, t) {
							return !e || !!r.stringArrayContainsString(t, e);
						}),
						(l.validateArrayOfStrings = function (e, t, r, i, s) {
							var o = i;
							if (((o = o || "Array"), !s))
								return n.w(o + " validation failed: array cannot be null. "), !1;
							if (0 == r && 0 == s.length)
								return n.w(o + " validation failed: array cannot be empty. "), !1;
							if (0 < e && s.length > e)
								return (
									n.w(
										o +
											" validation failed: array cannot exceed " +
											e +
											" values. It has " +
											s.length +
											" values."
									),
									!1
								);
							for (var u = 0; u < s.length; ++u) {
								var a = s[u] ? s[u].length : 0;
								if (0 === a)
									return (
										n.w(
											o +
												" validation failed: contained an empty string. Array=" +
												JSON.stringify(s)
										),
										!1
									);
								if (0 < t && t < a)
									return (
										n.w(
											o +
												" validation failed: a string exceeded max allowed length (which is: " +
												t +
												"). String was: " +
												s[u]
										),
										!1
									);
							}
							return !0;
						}),
						(l.validateClientTs = function (e) {
							return !(e < 0 || 99999999999 < e);
						}),
						l);
					t.GAValidator = f;
				})(e.validators || (e.validators = {}));
			})((n = n || {})),
			(function (e) {
				!(function (e) {
					function i() {}
					var t = function (e, t, n) {
						(this.name = e), (this.value = t), (this.version = n);
					};
					e.NameValueVersion = t;
					var n = function (e, t) {
						(this.name = e), (this.version = t);
					};
					e.NameVersion = n;
					var r =
						((i.touch = function () {}),
						(i.getRelevantSdkVersion = function () {
							return i.sdkGameEngineVersion ? i.sdkGameEngineVersion : i.sdkWrapperVersion;
						}),
						(i.getConnectionType = function () {
							return i.connectionType;
						}),
						(i.updateConnectionType = function () {
							navigator.onLine
								? (i.connectionType =
										"ios" === i.buildPlatform || "android" === i.buildPlatform ? "wwan" : "lan")
								: (i.connectionType = "offline");
						}),
						(i.getOSVersionString = function () {
							return i.buildPlatform + " " + i.osVersionPair.version;
						}),
						(i.runtimePlatformToString = function () {
							return i.osVersionPair.name;
						}),
						(i.getBrowserVersionString = function () {
							var e,
								t = navigator.userAgent,
								n =
									t.match(
										/(opera|chrome|safari|firefox|ubrowser|msie|trident|fbav(?=\/))\/?\s*(\d+)/i
									) || [];
							if (0 == n.length && "ios" === i.buildPlatform) return "webkit_" + i.osVersion;
							if (/trident/i.test(n[1]))
								return "IE " + ((e = /\brv[ :]+(\d+)/g.exec(t) || [])[1] || "");
							if ("Chrome" === n[1] && null != (e = t.match(/\b(OPR|Edge|UBrowser)\/(\d+)/)))
								return e
									.slice(1)
									.join(" ")
									.replace("OPR", "Opera")
									.replace("UBrowser", "UC")
									.toLowerCase();
							if (n[1] && "fbav" === n[1].toLowerCase() && ((n[1] = "facebook"), n[2]))
								return "facebook " + n[2];
							var r = n[2] ? [n[1], n[2]] : [navigator.appName, navigator.appVersion, "-?"];
							return (
								null != (e = t.match(/version\/(\d+)/i)) && r.splice(1, 1, e[1]),
								r.join(" ").toLowerCase()
							);
						}),
						(i.getDeviceModel = function () {
							return "unknown";
						}),
						(i.getDeviceManufacturer = function () {
							return "unknown";
						}),
						(i.matchItem = function (e, t) {
							var r,
								i,
								s,
								o,
								u = new n("unknown", "0.0.0"),
								a = 0,
								f = 0;
							for (a = 0; a < t.length; a += 1)
								if (new RegExp(t[a].value, "i").test(e)) {
									if (
										((r = new RegExp(t[a].version + "[- /:;]([\\d._]+)", "i")),
										(o = ""),
										(i = e.match(r)) && i[1] && (s = i[1]),
										s)
									) {
										var c = s.split(/[._]+/);
										for (f = 0; f < Math.min(c.length, 3); f += 1)
											o += c[f] + (f < Math.min(c.length, 3) - 1 ? "." : "");
									} else o = "0.0.0";
									return (u.name = t[a].name), (u.version = o), u;
								}
							return u;
						}),
						(i.sdkWrapperVersion = "javascript 4.2.1"),
						(i.osVersionPair = i.matchItem(
							[
								navigator.platform,
								navigator.userAgent,
								navigator.appVersion,
								navigator.vendor,
							].join(" "),
							[
								new t("windows_phone", "Windows Phone", "OS"),
								new t("windows", "Win", "NT"),
								new t("ios", "iPhone", "OS"),
								new t("ios", "iPad", "OS"),
								new t("ios", "iPod", "OS"),
								new t("android", "Android", "Android"),
								new t("blackBerry", "BlackBerry", "/"),
								new t("mac_osx", "Mac", "OS X"),
								new t("tizen", "Tizen", "Tizen"),
								new t("linux", "Linux", "rv"),
								new t("kai_os", "KAIOS", "KAIOS"),
							]
						)),
						(i.buildPlatform = i.runtimePlatformToString()),
						(i.deviceModel = i.getDeviceModel()),
						(i.deviceManufacturer = i.getDeviceManufacturer()),
						(i.osVersion = i.getOSVersionString()),
						(i.browserVersion = i.getBrowserVersionString()),
						i);
					e.GADevice = r;
				})(e.device || (e.device = {}));
			})((n = n || {})),
			(function (e) {
				function r(e) {
					(this.deadline = e),
						(this.ignore = !1),
						(this.async = !1),
						(this.running = !1),
						(this.id = ++r.idCounter);
				}
				var t, n;
				(t = e.threading || (e.threading = {})), (r.idCounter = 0), (n = r), (t.TimedBlock = n);
			})((n = n || {})),
			(function (e) {
				function r(e) {
					(this.comparer = e), (this._subQueues = {}), (this._sortedKeys = []);
				}
				var t, n;
				(t = e.threading || (e.threading = {})),
					(r.prototype.enqueue = function (e, t) {
						-1 === this._sortedKeys.indexOf(e) && this.addQueueOfPriority(e),
							this._subQueues[e].push(t);
					}),
					(r.prototype.addQueueOfPriority = function (e) {
						var t = this;
						this._sortedKeys.push(e),
							this._sortedKeys.sort(function (e, n) {
								return t.comparer.compare(e, n);
							}),
							(this._subQueues[e] = []);
					}),
					(r.prototype.peek = function () {
						if (this.hasItems()) return this._subQueues[this._sortedKeys[0]][0];
						throw new Error("The queue is empty");
					}),
					(r.prototype.hasItems = function () {
						return 0 < this._sortedKeys.length;
					}),
					(r.prototype.dequeue = function () {
						if (this.hasItems()) return this.dequeueFromHighPriorityQueue();
						throw new Error("The queue is empty");
					}),
					(r.prototype.dequeueFromHighPriorityQueue = function () {
						var e = this._sortedKeys[0],
							t = this._subQueues[e].shift();
						return (
							0 === this._subQueues[e].length &&
								(this._sortedKeys.shift(), delete this._subQueues[e]),
							t
						);
					}),
					(n = r),
					(t.PriorityQueue = n);
			})((n = n || {})),
			(function (e) {
				!(function (t) {
					function f() {
						(this.eventsStore = []),
							(this.sessionsStore = []),
							(this.progressionStore = []),
							(this.storeItems = {});
						try {
							"object" == typeof localStorage
								? (localStorage.setItem("testingLocalStorage", "yes"),
								  localStorage.removeItem("testingLocalStorage"),
								  (f.storageAvailable = !0))
								: (f.storageAvailable = !1);
						} catch (e) {}
					}
					var n,
						r,
						i,
						s,
						o = e.logging.GALogger;
					((r = n = t.EGAStoreArgsOperator || (t.EGAStoreArgsOperator = {}))[(r.Equal = 0)] =
						"Equal"),
						(r[(r.LessOrEqual = 1)] = "LessOrEqual"),
						(r[(r.NotEqual = 2)] = "NotEqual"),
						((s = i = t.EGAStore || (t.EGAStore = {}))[(s.Events = 0)] = "Events"),
						(s[(s.Sessions = 1)] = "Sessions"),
						(s[(s.Progression = 2)] = "Progression");
					var u =
						((f.isStorageAvailable = function () {
							return f.storageAvailable;
						}),
						(f.isStoreTooLargeForEvents = function () {
							return (
								f.instance.eventsStore.length + f.instance.sessionsStore.length >
								f.MaxNumberOfEntries
							);
						}),
						(f.select = function (e, t, r, i) {
							void 0 === t && (t = []), void 0 === r && (r = !1), void 0 === i && (i = 0);
							var s = f.getStore(e);
							if (!s) return null;
							for (var o = [], u = 0; u < s.length; ++u) {
								for (var a = s[u], l = !0, h = 0; h < t.length; ++h) {
									var p = t[h];
									if (a[p[0]])
										switch (p[1]) {
											case n.Equal:
												l = a[p[0]] == p[2];
												break;
											case n.LessOrEqual:
												l = a[p[0]] <= p[2];
												break;
											case n.NotEqual:
												l = a[p[0]] != p[2];
												break;
											default:
												l = !1;
										}
									else l = !1;
									if (!l) break;
								}
								l && o.push(a);
							}
							return (
								r &&
									o.sort(function (e, t) {
										return e.client_ts - t.client_ts;
									}),
								0 < i && o.length > i && (o = o.slice(0, i + 1)),
								o
							);
						}),
						(f.update = function (e, t, r) {
							void 0 === r && (r = []);
							var i = f.getStore(e);
							if (!i) return !1;
							for (var s = 0; s < i.length; ++s) {
								for (var o = i[s], u = !0, a = 0; a < r.length; ++a) {
									var l = r[a];
									if (o[l[0]])
										switch (l[1]) {
											case n.Equal:
												u = o[l[0]] == l[2];
												break;
											case n.LessOrEqual:
												u = o[l[0]] <= l[2];
												break;
											case n.NotEqual:
												u = o[l[0]] != l[2];
												break;
											default:
												u = !1;
										}
									else u = !1;
									if (!u) break;
								}
								if (u)
									for (a = 0; a < t.length; ++a) {
										var h = t[a];
										o[h[0]] = h[1];
									}
							}
							return !0;
						}),
						(f.delete = function (e, t) {
							var r = f.getStore(e);
							if (r)
								for (var i = 0; i < r.length; ++i) {
									for (var s = r[i], o = !0, u = 0; u < t.length; ++u) {
										var a = t[u];
										if (s[a[0]])
											switch (a[1]) {
												case n.Equal:
													o = s[a[0]] == a[2];
													break;
												case n.LessOrEqual:
													o = s[a[0]] <= a[2];
													break;
												case n.NotEqual:
													o = s[a[0]] != a[2];
													break;
												default:
													o = !1;
											}
										else o = !1;
										if (!o) break;
									}
									o && (r.splice(i, 1), --i);
								}
						}),
						(f.insert = function (e, t, n, r) {
							void 0 === n && (n = !1), void 0 === r && (r = null);
							var i = f.getStore(e);
							if (i)
								if (n) {
									if (!r) return;
									for (var s = !1, o = 0; o < i.length; ++o) {
										var u = i[o];
										if (u[r] == t[r]) {
											for (var a in t) u[a] = t[a];
											s = !0;
											break;
										}
									}
									s || i.push(t);
								} else i.push(t);
						}),
						(f.save = function (e) {
							f.isStorageAvailable()
								? (localStorage.setItem(
										f.StringFormat(f.KeyFormat, e, f.EventsStoreKey),
										JSON.stringify(f.instance.eventsStore)
								  ),
								  localStorage.setItem(
										f.StringFormat(f.KeyFormat, e, f.SessionsStoreKey),
										JSON.stringify(f.instance.sessionsStore)
								  ),
								  localStorage.setItem(
										f.StringFormat(f.KeyFormat, e, f.ProgressionStoreKey),
										JSON.stringify(f.instance.progressionStore)
								  ),
								  localStorage.setItem(
										f.StringFormat(f.KeyFormat, e, f.ItemsStoreKey),
										JSON.stringify(f.instance.storeItems)
								  ))
								: o.w("Storage is not available, cannot save.");
						}),
						(f.load = function (e) {
							if (f.isStorageAvailable()) {
								try {
									(f.instance.eventsStore = JSON.parse(
										localStorage.getItem(f.StringFormat(f.KeyFormat, e, f.EventsStoreKey))
									)),
										f.instance.eventsStore || (f.instance.eventsStore = []);
								} catch (e) {
									o.w("Load failed for 'events' store. Using empty store."),
										(f.instance.eventsStore = []);
								}
								try {
									(f.instance.sessionsStore = JSON.parse(
										localStorage.getItem(f.StringFormat(f.KeyFormat, e, f.SessionsStoreKey))
									)),
										f.instance.sessionsStore || (f.instance.sessionsStore = []);
								} catch (e) {
									o.w("Load failed for 'sessions' store. Using empty store."),
										(f.instance.sessionsStore = []);
								}
								try {
									(f.instance.progressionStore = JSON.parse(
										localStorage.getItem(f.StringFormat(f.KeyFormat, e, f.ProgressionStoreKey))
									)),
										f.instance.progressionStore || (f.instance.progressionStore = []);
								} catch (e) {
									o.w("Load failed for 'progression' store. Using empty store."),
										(f.instance.progressionStore = []);
								}
								try {
									(f.instance.storeItems = JSON.parse(
										localStorage.getItem(f.StringFormat(f.KeyFormat, e, f.ItemsStoreKey))
									)),
										f.instance.storeItems || (f.instance.storeItems = {});
								} catch (e) {
									o.w("Load failed for 'items' store. Using empty store."),
										(f.instance.progressionStore = []);
								}
							} else o.w("Storage is not available, cannot load.");
						}),
						(f.setItem = function (e, t, n) {
							var r = f.StringFormat(f.KeyFormat, e, t);
							n
								? (f.instance.storeItems[r] = n)
								: r in f.instance.storeItems && delete f.instance.storeItems[r];
						}),
						(f.getItem = function (e, t) {
							var n = f.StringFormat(f.KeyFormat, e, t);
							return n in f.instance.storeItems ? f.instance.storeItems[n] : null;
						}),
						(f.getStore = function (e) {
							switch (e) {
								case i.Events:
									return f.instance.eventsStore;
								case i.Sessions:
									return f.instance.sessionsStore;
								case i.Progression:
									return f.instance.progressionStore;
								default:
									return o.w("GAStore.getStore(): Cannot find store: " + e), null;
							}
						}),
						(f.instance = new f()),
						(f.MaxNumberOfEntries = 2e3),
						(f.StringFormat = function (e) {
							for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
							return e.replace(/{(\d+)}/g, function (e, n) {
								return t[n] || "";
							});
						}),
						(f.KeyFormat = "GA::{0}::{1}"),
						(f.EventsStoreKey = "ga_event"),
						(f.SessionsStoreKey = "ga_session"),
						(f.ProgressionStoreKey = "ga_progression"),
						(f.ItemsStoreKey = "ga_items"),
						f);
					t.GAStore = u;
				})(e.store || (e.store = {}));
			})((n = n || {})),
			(function (e) {
				function l() {
					(this.availableCustomDimensions01 = []),
						(this.availableCustomDimensions02 = []),
						(this.availableCustomDimensions03 = []),
						(this.availableResourceCurrencies = []),
						(this.availableResourceItemTypes = []),
						(this.configurations = {}),
						(this.remoteConfigsListeners = []),
						(this.beforeUnloadListeners = []),
						(this.sdkConfigDefault = {}),
						(this.sdkConfig = {}),
						(this.progressionTries = {}),
						(this._isEventSubmissionEnabled = !0),
						(this.isUnloading = !1);
				}
				var t, n, r, i, s, o, u, a, f;
				(t = e.state || (e.state = {})),
					(n = e.validators.GAValidator),
					(r = e.utilities.GAUtilities),
					(i = e.logging.GALogger),
					(s = e.store.GAStore),
					(o = e.device.GADevice),
					(u = e.store.EGAStore),
					(a = e.store.EGAStoreArgsOperator),
					(l.setUserId = function (e) {
						(l.instance.userId = e), l.cacheIdentifier();
					}),
					(l.getIdentifier = function () {
						return l.instance.identifier;
					}),
					(l.isInitialized = function () {
						return l.instance.initialized;
					}),
					(l.setInitialized = function (e) {
						l.instance.initialized = e;
					}),
					(l.getSessionStart = function () {
						return l.instance.sessionStart;
					}),
					(l.getSessionNum = function () {
						return l.instance.sessionNum;
					}),
					(l.getTransactionNum = function () {
						return l.instance.transactionNum;
					}),
					(l.getSessionId = function () {
						return l.instance.sessionId;
					}),
					(l.getCurrentCustomDimension01 = function () {
						return l.instance.currentCustomDimension01;
					}),
					(l.getCurrentCustomDimension02 = function () {
						return l.instance.currentCustomDimension02;
					}),
					(l.getCurrentCustomDimension03 = function () {
						return l.instance.currentCustomDimension03;
					}),
					(l.getGameKey = function () {
						return l.instance.gameKey;
					}),
					(l.getGameSecret = function () {
						return l.instance.gameSecret;
					}),
					(l.getAvailableCustomDimensions01 = function () {
						return l.instance.availableCustomDimensions01;
					}),
					(l.setAvailableCustomDimensions01 = function (e) {
						n.validateCustomDimensions(e) &&
							((l.instance.availableCustomDimensions01 = e),
							l.validateAndFixCurrentDimensions(),
							i.i("Set available custom01 dimension values: (" + r.joinStringArray(e, ", ") + ")"));
					}),
					(l.getAvailableCustomDimensions02 = function () {
						return l.instance.availableCustomDimensions02;
					}),
					(l.setAvailableCustomDimensions02 = function (e) {
						n.validateCustomDimensions(e) &&
							((l.instance.availableCustomDimensions02 = e),
							l.validateAndFixCurrentDimensions(),
							i.i("Set available custom02 dimension values: (" + r.joinStringArray(e, ", ") + ")"));
					}),
					(l.getAvailableCustomDimensions03 = function () {
						return l.instance.availableCustomDimensions03;
					}),
					(l.setAvailableCustomDimensions03 = function (e) {
						n.validateCustomDimensions(e) &&
							((l.instance.availableCustomDimensions03 = e),
							l.validateAndFixCurrentDimensions(),
							i.i("Set available custom03 dimension values: (" + r.joinStringArray(e, ", ") + ")"));
					}),
					(l.getAvailableResourceCurrencies = function () {
						return l.instance.availableResourceCurrencies;
					}),
					(l.setAvailableResourceCurrencies = function (e) {
						n.validateResourceCurrencies(e) &&
							((l.instance.availableResourceCurrencies = e),
							i.i("Set available resource currencies: (" + r.joinStringArray(e, ", ") + ")"));
					}),
					(l.getAvailableResourceItemTypes = function () {
						return l.instance.availableResourceItemTypes;
					}),
					(l.setAvailableResourceItemTypes = function (e) {
						n.validateResourceItemTypes(e) &&
							((l.instance.availableResourceItemTypes = e),
							i.i("Set available resource item types: (" + r.joinStringArray(e, ", ") + ")"));
					}),
					(l.getBuild = function () {
						return l.instance.build;
					}),
					(l.setBuild = function (e) {
						(l.instance.build = e), i.i("Set build version: " + e);
					}),
					(l.getUseManualSessionHandling = function () {
						return l.instance.useManualSessionHandling;
					}),
					(l.isEventSubmissionEnabled = function () {
						return l.instance._isEventSubmissionEnabled;
					}),
					(l.getABTestingId = function () {
						return l.instance.abId;
					}),
					(l.getABTestingVariantId = function () {
						return l.instance.abVariantId;
					}),
					(l.prototype.setDefaultId = function (e) {
						(this.defaultUserId = e || ""), l.cacheIdentifier();
					}),
					(l.getDefaultId = function () {
						return l.instance.defaultUserId;
					}),
					(l.getSdkConfig = function () {
						var e,
							t = 0;
						for (var n in l.instance.sdkConfig) 0 === t && (e = n), ++t;
						if (e && 0 < t) return l.instance.sdkConfig;
						for (var n in ((t = 0), l.instance.sdkConfigCached)) 0 === t && (e = n), ++t;
						return e && 0 < t ? l.instance.sdkConfigCached : l.instance.sdkConfigDefault;
					}),
					(l.isEnabled = function () {
						return !!l.instance.initAuthorized;
					}),
					(l.setCustomDimension01 = function (e) {
						(l.instance.currentCustomDimension01 = e),
							s.setItem(l.getGameKey(), l.Dimension01Key, e),
							i.i("Set custom01 dimension value: " + e);
					}),
					(l.setCustomDimension02 = function (e) {
						(l.instance.currentCustomDimension02 = e),
							s.setItem(l.getGameKey(), l.Dimension02Key, e),
							i.i("Set custom02 dimension value: " + e);
					}),
					(l.setCustomDimension03 = function (e) {
						(l.instance.currentCustomDimension03 = e),
							s.setItem(l.getGameKey(), l.Dimension03Key, e),
							i.i("Set custom03 dimension value: " + e);
					}),
					(l.incrementSessionNum = function () {
						var e = l.getSessionNum() + 1;
						l.instance.sessionNum = e;
					}),
					(l.incrementTransactionNum = function () {
						var e = l.getTransactionNum() + 1;
						l.instance.transactionNum = e;
					}),
					(l.incrementProgressionTries = function (e) {
						var t = l.getProgressionTries(e) + 1;
						l.instance.progressionTries[e] = t;
						var n = {};
						(n.progression = e), (n.tries = t), s.insert(u.Progression, n, !0, "progression");
					}),
					(l.getProgressionTries = function (e) {
						return e in l.instance.progressionTries ? l.instance.progressionTries[e] : 0;
					}),
					(l.clearProgressionTries = function (e) {
						e in l.instance.progressionTries && delete l.instance.progressionTries[e];
						var t = [];
						t.push(["progression", a.Equal, e]), s.delete(u.Progression, t);
					}),
					(l.setKeys = function (e, t) {
						(l.instance.gameKey = e), (l.instance.gameSecret = t);
					}),
					(l.setManualSessionHandling = function (e) {
						(l.instance.useManualSessionHandling = e), i.i("Use manual session handling: " + e);
					}),
					(l.setEnabledEventSubmission = function (e) {
						l.instance._isEventSubmissionEnabled = e;
					}),
					(l.getEventAnnotations = function () {
						var e = {
							v: 2,
						};
						(e.user_id = l.instance.identifier),
							(e.client_ts = l.getClientTsAdjusted()),
							(e.sdk_version = o.getRelevantSdkVersion()),
							(e.os_version = o.osVersion),
							(e.manufacturer = o.deviceManufacturer),
							(e.device = o.deviceModel),
							(e.browser_version = o.browserVersion),
							(e.platform = o.buildPlatform),
							(e.session_id = l.instance.sessionId),
							(e[l.SessionNumKey] = l.instance.sessionNum);
						var t = o.getConnectionType();
						if (
							(n.validateConnectionType(t) && (e.connection_type = t),
							o.gameEngineVersion && (e.engine_version = o.gameEngineVersion),
							l.instance.configurations)
						) {
							var r = 0;
							for (var i in l.instance.configurations) {
								r++;
								break;
							}
							0 < r && (e.configurations = l.instance.configurations);
						}
						return (
							l.instance.abId && (e.ab_id = l.instance.abId),
							l.instance.abVariantId && (e.ab_variant_id = l.instance.abVariantId),
							l.instance.build && (e.build = l.instance.build),
							e
						);
					}),
					(l.getSdkErrorEventAnnotations = function () {
						var e = {
							v: 2,
						};
						(e.category = l.CategorySdkError),
							(e.sdk_version = o.getRelevantSdkVersion()),
							(e.os_version = o.osVersion),
							(e.manufacturer = o.deviceManufacturer),
							(e.device = o.deviceModel),
							(e.platform = o.buildPlatform);
						var t = o.getConnectionType();
						return (
							n.validateConnectionType(t) && (e.connection_type = t),
							o.gameEngineVersion && (e.engine_version = o.gameEngineVersion),
							e
						);
					}),
					(l.getInitAnnotations = function () {
						var e = {};
						return (
							l.getIdentifier() || l.cacheIdentifier(),
							(e.user_id = l.getIdentifier()),
							(e.sdk_version = o.getRelevantSdkVersion()),
							(e.os_version = o.osVersion),
							(e.platform = o.buildPlatform),
							l.getBuild() ? (e.build = l.getBuild()) : (e.build = null),
							(e.session_num = l.getSessionNum()),
							(e.random_salt = l.getSessionNum()),
							e
						);
					}),
					(l.getClientTsAdjusted = function () {
						var e = r.timeIntervalSince1970(),
							t = e + l.instance.clientServerTimeOffset;
						return n.validateClientTs(t) ? t : e;
					}),
					(l.sessionIsStarted = function () {
						return 0 != l.instance.sessionStart;
					}),
					(l.cacheIdentifier = function () {
						l.instance.userId
							? (l.instance.identifier = l.instance.userId)
							: l.instance.defaultUserId && (l.instance.identifier = l.instance.defaultUserId);
					}),
					(l.ensurePersistedStates = function () {
						s.isStorageAvailable() && s.load(l.getGameKey());
						var e = l.instance;
						e.setDefaultId(
							null != s.getItem(l.getGameKey(), l.DefaultUserIdKey)
								? s.getItem(l.getGameKey(), l.DefaultUserIdKey)
								: r.createGuid()
						),
							(e.sessionNum =
								null != s.getItem(l.getGameKey(), l.SessionNumKey)
									? Number(s.getItem(l.getGameKey(), l.SessionNumKey))
									: 0),
							(e.transactionNum =
								null != s.getItem(l.getGameKey(), l.TransactionNumKey)
									? Number(s.getItem(l.getGameKey(), l.TransactionNumKey))
									: 0),
							e.currentCustomDimension01
								? s.setItem(l.getGameKey(), l.Dimension01Key, e.currentCustomDimension01)
								: ((e.currentCustomDimension01 =
										null != s.getItem(l.getGameKey(), l.Dimension01Key)
											? s.getItem(l.getGameKey(), l.Dimension01Key)
											: ""),
								  e.currentCustomDimension01),
							e.currentCustomDimension02
								? s.setItem(l.getGameKey(), l.Dimension02Key, e.currentCustomDimension02)
								: ((e.currentCustomDimension02 =
										null != s.getItem(l.getGameKey(), l.Dimension02Key)
											? s.getItem(l.getGameKey(), l.Dimension02Key)
											: ""),
								  e.currentCustomDimension02),
							e.currentCustomDimension03
								? s.setItem(l.getGameKey(), l.Dimension03Key, e.currentCustomDimension03)
								: ((e.currentCustomDimension03 =
										null != s.getItem(l.getGameKey(), l.Dimension03Key)
											? s.getItem(l.getGameKey(), l.Dimension03Key)
											: ""),
								  e.currentCustomDimension03);
						var t =
							null != s.getItem(l.getGameKey(), l.SdkConfigCachedKey)
								? s.getItem(l.getGameKey(), l.SdkConfigCachedKey)
								: "";
						if (t) {
							var n = JSON.parse(r.decode64(t));
							n && (e.sdkConfigCached = n);
						}
						var i = l.getSdkConfig();
						(e.configsHash = i.configs_hash ? i.configs_hash : ""),
							(e.abId = i.ab_id ? i.ab_id : ""),
							(e.abVariantId = i.ab_variant_id ? i.ab_variant_id : "");
						var o = s.select(u.Progression);
						if (o)
							for (var a = 0; a < o.length; ++a) {
								var f = o[a];
								f && (e.progressionTries[f.progression] = f.tries);
							}
					}),
					(l.calculateServerTimeOffset = function (e) {
						return e - r.timeIntervalSince1970();
					}),
					(l.validateAndCleanCustomFields = function (e) {
						var t = {};
						if (e) {
							var n = 0;
							for (var s in e) {
								var o = e[s];
								if (s && o)
									if (n < l.MAX_CUSTOM_FIELDS_COUNT) {
										var u = new RegExp("^[a-zA-Z0-9_]{1," + l.MAX_CUSTOM_FIELDS_KEY_LENGTH + "}$");
										if (r.stringMatch(s, u)) {
											var a = typeof o;
											if ("string" == a || o instanceof String)
												o.length <= l.MAX_CUSTOM_FIELDS_VALUE_STRING_LENGTH && 0 < o.length
													? ((t[s] = o), ++n)
													: i.w(
															"validateAndCleanCustomFields: entry with key=" +
																s +
																", value=" +
																o +
																" has been omitted because its value is an empty string or exceeds the max number of characters (" +
																l.MAX_CUSTOM_FIELDS_VALUE_STRING_LENGTH +
																")"
													  );
											else if ("number" == a || o instanceof Number) {
												var f = o;
												(t[s] = f), ++n;
											} else
												i.w(
													"validateAndCleanCustomFields: entry with key=" +
														s +
														", value=" +
														o +
														" has been omitted because its value is not a string or number"
												);
										} else
											i.w(
												"validateAndCleanCustomFields: entry with key=" +
													s +
													", value=" +
													o +
													" has been omitted because its key contains illegal character, is empty or exceeds the max number of characters (" +
													l.MAX_CUSTOM_FIELDS_KEY_LENGTH +
													")"
											);
									} else
										i.w(
											"validateAndCleanCustomFields: entry with key=" +
												s +
												", value=" +
												o +
												" has been omitted because it exceeds the max number of custom fields (" +
												l.MAX_CUSTOM_FIELDS_COUNT +
												")"
										);
								else
									i.w(
										"validateAndCleanCustomFields: entry with key=" +
											s +
											", value=" +
											o +
											" has been omitted because its key or value is null"
									);
							}
						}
						return t;
					}),
					(l.validateAndFixCurrentDimensions = function () {
						n.validateDimension01(
							l.getCurrentCustomDimension01(),
							l.getAvailableCustomDimensions01()
						) || l.setCustomDimension01(""),
							n.validateDimension02(
								l.getCurrentCustomDimension02(),
								l.getAvailableCustomDimensions02()
							) || l.setCustomDimension02(""),
							n.validateDimension03(
								l.getCurrentCustomDimension03(),
								l.getAvailableCustomDimensions03()
							) || l.setCustomDimension03("");
					}),
					(l.getConfigurationStringValue = function (e, t) {
						return l.instance.configurations[e] ? l.instance.configurations[e].toString() : t;
					}),
					(l.isRemoteConfigsReady = function () {
						return l.instance.remoteConfigsIsReady;
					}),
					(l.addRemoteConfigsListener = function (e) {
						l.instance.remoteConfigsListeners.indexOf(e) < 0 &&
							l.instance.remoteConfigsListeners.push(e);
					}),
					(l.removeRemoteConfigsListener = function (e) {
						var t = l.instance.remoteConfigsListeners.indexOf(e);
						-1 < t && l.instance.remoteConfigsListeners.splice(t, 1);
					}),
					(l.getRemoteConfigsContentAsString = function () {
						return JSON.stringify(l.instance.configurations);
					}),
					(l.populateConfigurations = function (e) {
						var t = e.configs;
						if (t) {
							l.instance.configurations = {};
							for (var n = 0; n < t.length; ++n) {
								var r = t[n];
								if (r) {
									var i = r.key,
										s = r.value,
										o = r.start_ts ? r.start_ts : Number.MIN_VALUE,
										u = r.end_ts ? r.end_ts : Number.MAX_VALUE,
										a = l.getClientTsAdjusted();
									i && s && o < a && a < u && (l.instance.configurations[i] = s);
								}
							}
						}
						l.instance.remoteConfigsIsReady = !0;
						var f = l.instance.remoteConfigsListeners;
						for (n = 0; n < f.length; ++n) f[n] && f[n].onRemoteConfigsUpdated();
					}),
					(l.addOnBeforeUnloadListener = function (e) {
						l.instance.beforeUnloadListeners.indexOf(e) < 0 &&
							l.instance.beforeUnloadListeners.push(e);
					}),
					(l.removeOnBeforeUnloadListener = function (e) {
						var t = l.instance.beforeUnloadListeners.indexOf(e);
						-1 < t && l.instance.beforeUnloadListeners.splice(t, 1);
					}),
					(l.notifyBeforeUnloadListeners = function () {
						for (var e = l.instance.beforeUnloadListeners, t = 0; t < e.length; ++t)
							e[t] && e[t].onBeforeUnload();
					}),
					(l.CategorySdkError = "sdk_error"),
					(l.MAX_CUSTOM_FIELDS_COUNT = 50),
					(l.MAX_CUSTOM_FIELDS_KEY_LENGTH = 64),
					(l.MAX_CUSTOM_FIELDS_VALUE_STRING_LENGTH = 256),
					(l.instance = new l()),
					(l.DefaultUserIdKey = "default_user_id"),
					(l.SessionNumKey = "session_num"),
					(l.TransactionNumKey = "transaction_num"),
					(l.Dimension01Key = "dimension01"),
					(l.Dimension02Key = "dimension02"),
					(l.Dimension03Key = "dimension03"),
					(l.SdkConfigCachedKey = "sdk_config_cached"),
					(f = l),
					(t.GAState = f);
			})((n = n || {})),
			(function (e) {
				function s() {}
				var t, n, r, i;
				(t = e.tasks || (e.tasks = {})),
					(n = e.utilities.GAUtilities),
					(r = e.logging.GALogger),
					(s.execute = function (e, t, i, o) {
						var a = new Date();
						if (
							(s.timestampMap[t] || (s.timestampMap[t] = a),
							s.countMap[t] || (s.countMap[t] = 0),
							3600 <= (a.getTime() - s.timestampMap[t].getTime()) / 1e3 &&
								((s.timestampMap[t] = a), (s.countMap[t] = 0)),
							!(s.countMap[t] >= s.MaxCount))
						) {
							var f = n.getHmac(o, i),
								l = new XMLHttpRequest();
							(l.onreadystatechange = function () {
								if (4 === l.readyState) {
									if (!l.responseText) return;
									if (200 != l.status)
										return void r.w(
											"sdk error failed. response code not 200. status code: " +
												l.status +
												", description: " +
												l.statusText +
												", body: " +
												l.responseText
										);
									s.countMap[t] = s.countMap[t] + 1;
								}
							}),
								l.open("POST", e, !0),
								l.setRequestHeader("Content-Type", "application/json"),
								l.setRequestHeader("Authorization", f);
							try {
								l.send(i);
							} catch (e) {
								console.error(e);
							}
						}
					}),
					(s.MaxCount = 10),
					(s.countMap = {}),
					(s.timestampMap = {}),
					(i = s),
					(t.SdkErrorTask = i);
			})((n = n || {})),
			(function (e) {
				function h() {
					(this.protocol = "https"),
						(this.hostName = "api.gameanalytics.com"),
						(this.version = "v2"),
						(this.remoteConfigsVersion = "v1"),
						(this.baseUrl = this.protocol + "://" + this.hostName + "/" + this.version),
						(this.remoteConfigsBaseUrl =
							this.protocol +
							"://" +
							this.hostName +
							"/remote_configs/" +
							this.remoteConfigsVersion),
						(this.initializeUrlPath = "init"),
						(this.eventsUrlPath = "events"),
						(this.useGzip = !1);
				}
				var t, n, r, i, s, o, u, a, f, l, c;
				(t = e.http || (e.http = {})),
					(n = e.state.GAState),
					(r = e.logging.GALogger),
					(i = e.utilities.GAUtilities),
					(s = e.validators.GAValidator),
					(o = e.tasks.SdkErrorTask),
					(u = e.events.EGASdkErrorCategory),
					(a = e.events.EGASdkErrorArea),
					(f = e.events.EGASdkErrorAction),
					(l = e.events.EGASdkErrorParameter),
					(h.prototype.requestInit = function (e, r) {
						var i = n.getGameKey(),
							s =
								this.remoteConfigsBaseUrl +
								"/" +
								this.initializeUrlPath +
								"?game_key=" +
								i +
								"&interval_seconds=0&configs_hash=" +
								e,
							o = n.getInitAnnotations(),
							u = JSON.stringify(o);
						if (u) {
							var a = this.createPayloadData(u, this.useGzip),
								f = [];
							f.push(u), h.sendRequest(s, a, f, this.useGzip, h.initRequestCallback, r);
						} else r(t.EGAHTTPApiResponse.JsonEncodeFailed, null);
					}),
					(h.prototype.sendEventsInArray = function (e, r, i) {
						if (0 != e.length) {
							var s = n.getGameKey(),
								o = this.baseUrl + "/" + s + "/" + this.eventsUrlPath,
								u = JSON.stringify(e);
							if (u) {
								var a = this.createPayloadData(u, this.useGzip),
									f = [];
								f.push(u),
									f.push(r),
									f.push(e.length.toString()),
									h.sendRequest(o, a, f, this.useGzip, h.sendEventInArrayRequestCallback, i);
							} else i(t.EGAHTTPApiResponse.JsonEncodeFailed, null, r, e.length);
						}
					}),
					(h.prototype.sendSdkErrorEvent = function (e, t, i, u, a, f, l) {
						if (n.isEventSubmissionEnabled() && s.validateSdkErrorEvent(f, l, e, t, i)) {
							var c,
								d = this.baseUrl + "/" + f + "/" + this.eventsUrlPath,
								v = "",
								m = n.getSdkErrorEventAnnotations(),
								g = h.sdkErrorCategoryString(e);
							v += m.error_category = g;
							var b = h.sdkErrorAreaString(t);
							v += ":" + (m.error_area = b);
							var w = h.sdkErrorActionString(i);
							m.error_action = w;
							var E = h.sdkErrorParameterString(u);
							if ((0 < E.length && (m.error_parameter = E), 0 < a.length)) {
								var x = a;
								a.length > h.MAX_ERROR_MESSAGE_LENGTH &&
									(x = a.substring(0, h.MAX_ERROR_MESSAGE_LENGTH)),
									(m.reason = x);
							}
							var T = [];
							T.push(m),
								(c = JSON.stringify(T))
									? o.execute(d, v, c, l)
									: r.w("sendSdkErrorEvent: JSON encoding failed.");
						}
					}),
					(h.sendEventInArrayRequestCallback = function (e, r, i, s) {
						void 0 === s && (s = null), s[0], s[1];
						var o,
							c,
							d = s[2],
							b = parseInt(s[3]);
						(o = e.responseText), (c = e.status);
						var w = h.instance.processRequestResponse(c, e.statusText, o, "Events");
						if (
							w == t.EGAHTTPApiResponse.Ok ||
							w == t.EGAHTTPApiResponse.Created ||
							w == t.EGAHTTPApiResponse.BadRequest
						) {
							var E = o ? JSON.parse(o) : {};
							if (null == E)
								return (
									i(t.EGAHTTPApiResponse.JsonDecodeFailed, null, d, b),
									void h.instance.sendSdkErrorEvent(
										u.Http,
										a.EventsHttp,
										f.FailHttpJsonDecode,
										l.Undefined,
										o,
										n.getGameKey(),
										n.getGameSecret()
									)
								);
							t.EGAHTTPApiResponse.BadRequest, i(w, E, d, b);
						} else i(w, null, d, b);
					}),
					(h.sendRequest = function (e, t, r, s, o, u) {
						var a = new XMLHttpRequest(),
							f = n.getGameSecret(),
							l = i.getHmac(f, t),
							c = [];
						for (var h in (c.push(l), r)) c.push(r[h]);
						if (
							((a.onreadystatechange = function () {
								4 === a.readyState && o(a, e, u, c);
							}),
							a.open("POST", e, !0),
							a.setRequestHeader("Content-Type", "application/json"),
							a.setRequestHeader("Authorization", l),
							s)
						)
							throw new Error("gzip not supported");
						try {
							a.send(t);
						} catch (e) {
							console.error(e.stack);
						}
					}),
					(h.initRequestCallback = function (e, r, i, o) {
						var c, d;
						void 0 === o && (o = null), o[0], o[1], (c = e.responseText), (d = e.status);
						var b = c ? JSON.parse(c) : {},
							w = h.instance.processRequestResponse(d, e.statusText, c, "Init");
						if (
							w == t.EGAHTTPApiResponse.Ok ||
							w == t.EGAHTTPApiResponse.Created ||
							w == t.EGAHTTPApiResponse.BadRequest
						) {
							if (null == b)
								return (
									i(t.EGAHTTPApiResponse.JsonDecodeFailed, null, "", 0),
									void h.instance.sendSdkErrorEvent(
										u.Http,
										a.InitHttp,
										f.FailHttpJsonDecode,
										l.Undefined,
										c,
										n.getGameKey(),
										n.getGameSecret()
									)
								);
							if (w !== t.EGAHTTPApiResponse.BadRequest) {
								var E = s.validateAndCleanInitRequestResponse(
									b,
									w === t.EGAHTTPApiResponse.Created
								);
								E ? i(w, E, "", 0) : i(t.EGAHTTPApiResponse.BadResponse, null, "", 0);
							} else i(w, null, "", 0);
						} else i(w, null, "", 0);
					}),
					(h.prototype.createPayloadData = function (e, t) {
						if (t) throw new Error("gzip not supported");
						return e;
					}),
					(h.prototype.processRequestResponse = function (e, n, r, i) {
						return r
							? 200 === e
								? t.EGAHTTPApiResponse.Ok
								: 201 === e
								? t.EGAHTTPApiResponse.Created
								: 0 === e || 401 === e
								? t.EGAHTTPApiResponse.Unauthorized
								: 400 === e
								? t.EGAHTTPApiResponse.BadRequest
								: 500 === e
								? t.EGAHTTPApiResponse.InternalServerError
								: t.EGAHTTPApiResponse.UnknownResponseCode
							: t.EGAHTTPApiResponse.NoResponse;
					}),
					(h.sdkErrorCategoryString = function (e) {
						switch (e) {
							case u.EventValidation:
								return "event_validation";
							case u.Database:
								return "db";
							case u.Init:
								return "init";
							case u.Http:
								return "http";
							case u.Json:
								return "json";
						}
						return "";
					}),
					(h.sdkErrorAreaString = function (e) {
						switch (e) {
							case a.BusinessEvent:
								return "business";
							case a.ResourceEvent:
								return "resource";
							case a.ProgressionEvent:
								return "progression";
							case a.DesignEvent:
								return "design";
							case a.ErrorEvent:
								return "error";
							case a.InitHttp:
								return "init_http";
							case a.EventsHttp:
								return "events_http";
							case a.ProcessEvents:
								return "process_events";
							case a.AddEventsToStore:
								return "add_events_to_store";
						}
						return "";
					}),
					(h.sdkErrorActionString = function (e) {
						switch (e) {
							case f.InvalidCurrency:
								return "invalid_currency";
							case f.InvalidShortString:
								return "invalid_short_string";
							case f.InvalidEventPartLength:
								return "invalid_event_part_length";
							case f.InvalidEventPartCharacters:
								return "invalid_event_part_characters";
							case f.InvalidStore:
								return "invalid_store";
							case f.InvalidFlowType:
								return "invalid_flow_type";
							case f.StringEmptyOrNull:
								return "string_empty_or_null";
							case f.NotFoundInAvailableCurrencies:
								return "not_found_in_available_currencies";
							case f.InvalidAmount:
								return "invalid_amount";
							case f.NotFoundInAvailableItemTypes:
								return "not_found_in_available_item_types";
							case f.WrongProgressionOrder:
								return "wrong_progression_order";
							case f.InvalidEventIdLength:
								return "invalid_event_id_length";
							case f.InvalidEventIdCharacters:
								return "invalid_event_id_characters";
							case f.InvalidProgressionStatus:
								return "invalid_progression_status";
							case f.InvalidSeverity:
								return "invalid_severity";
							case f.InvalidLongString:
								return "invalid_long_string";
							case f.DatabaseTooLarge:
								return "db_too_large";
							case f.DatabaseOpenOrCreate:
								return "db_open_or_create";
							case f.JsonError:
								return "json_error";
							case f.FailHttpJsonDecode:
								return "fail_http_json_decode";
							case f.FailHttpJsonEncode:
								return "fail_http_json_encode";
						}
						return "";
					}),
					(h.sdkErrorParameterString = function (e) {
						switch (e) {
							case l.Currency:
								return "currency";
							case l.CartType:
								return "cart_type";
							case l.ItemType:
								return "item_type";
							case l.ItemId:
								return "item_id";
							case l.Store:
								return "store";
							case l.FlowType:
								return "flow_type";
							case l.Amount:
								return "amount";
							case l.Progression01:
								return "progression01";
							case l.Progression02:
								return "progression02";
							case l.Progression03:
								return "progression03";
							case l.EventId:
								return "event_id";
							case l.ProgressionStatus:
								return "progression_status";
							case l.Severity:
								return "severity";
							case l.Message:
								return "message";
						}
						return "";
					}),
					(h.instance = new h()),
					(h.MAX_ERROR_MESSAGE_LENGTH = 256),
					(c = h),
					(t.GAHTTPApi = c);
			})((n = n || {})),
			(function (e) {
				function h() {}
				var t, n, r, i, s, o, u, a, f, l, c;
				(t = e.events || (e.events = {})),
					(n = e.store.GAStore),
					(r = e.store.EGAStore),
					(i = e.store.EGAStoreArgsOperator),
					(s = e.state.GAState),
					(o = e.logging.GALogger),
					(u = e.utilities.GAUtilities),
					(a = e.http.EGAHTTPApiResponse),
					(f = e.http.GAHTTPApi),
					(l = e.validators.GAValidator),
					(h.addSessionStartEvent = function () {
						if (s.isEventSubmissionEnabled()) {
							var e = {};
							(e.category = h.CategorySessionStart),
								s.incrementSessionNum(),
								n.setItem(s.getGameKey(), s.SessionNumKey, s.getSessionNum().toString()),
								h.addDimensionsToEvent(e),
								h.addEventToStore(e),
								o.i("Add SESSION START event"),
								h.processEvents(h.CategorySessionStart, !1);
						}
					}),
					(h.addSessionEndEvent = function () {
						if (s.isEventSubmissionEnabled()) {
							var e = s.getSessionStart(),
								t = s.getClientTsAdjusted() - e;
							t < 0 &&
								(o.w(
									"Session length was calculated to be less then 0. Should not be possible. Resetting to 0."
								),
								(t = 0));
							var n = {};
							(n.category = h.CategorySessionEnd),
								(n.length = t),
								h.addDimensionsToEvent(n),
								h.addEventToStore(n),
								o.i("Add SESSION END event."),
								h.processEvents("", !1);
						}
					}),
					(h.addBusinessEvent = function (e, t, r, i, u, a) {
						if ((void 0 === u && (u = null), s.isEventSubmissionEnabled())) {
							var c = l.validateBusinessEvent(e, t, u, r, i);
							if (null == c) {
								var p = {};
								s.incrementTransactionNum(),
									n.setItem(s.getGameKey(), s.TransactionNumKey, s.getTransactionNum().toString()),
									(p.event_id = r + ":" + i),
									(p.category = h.CategoryBusiness),
									(p.currency = e),
									(p.amount = t),
									(p[s.TransactionNumKey] = s.getTransactionNum()),
									u && (p.cart_type = u),
									h.addDimensionsToEvent(p),
									h.addFieldsToEvent(p, s.validateAndCleanCustomFields(a)),
									o.i(
										"Add BUSINESS event: {currency:" +
											e +
											", amount:" +
											t +
											", itemType:" +
											r +
											", itemId:" +
											i +
											", cartType:" +
											u +
											"}"
									),
									h.addEventToStore(p);
							} else
								f.instance.sendSdkErrorEvent(
									c.category,
									c.area,
									c.action,
									c.parameter,
									c.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.addResourceEvent = function (t, n, r, i, u, a) {
						if (s.isEventSubmissionEnabled()) {
							var c = l.validateResourceEvent(
								t,
								n,
								r,
								i,
								u,
								s.getAvailableResourceCurrencies(),
								s.getAvailableResourceItemTypes()
							);
							if (null == c) {
								t === e.EGAResourceFlowType.Sink && (r *= -1);
								var p = {},
									d = h.resourceFlowTypeToString(t);
								(p.event_id = d + ":" + n + ":" + i + ":" + u),
									(p.category = h.CategoryResource),
									(p.amount = r),
									h.addDimensionsToEvent(p),
									h.addFieldsToEvent(p, s.validateAndCleanCustomFields(a)),
									o.i(
										"Add RESOURCE event: {currency:" +
											n +
											", amount:" +
											r +
											", itemType:" +
											i +
											", itemId:" +
											u +
											"}"
									),
									h.addEventToStore(p);
							} else
								f.instance.sendSdkErrorEvent(
									c.category,
									c.area,
									c.action,
									c.parameter,
									c.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.addProgressionEvent = function (t, n, r, i, u, a, c) {
						if (s.isEventSubmissionEnabled()) {
							var p = h.progressionStatusToString(t),
								d = l.validateProgressionEvent(t, n, r, i);
							if (null == d) {
								var v,
									m = {};
								(v = r ? (i ? n + ":" + r + ":" + i : n + ":" + r) : n),
									(m.category = h.CategoryProgression),
									(m.event_id = p + ":" + v);
								var w = 0;
								a && t != e.EGAProgressionStatus.Start && (m.score = u),
									t === e.EGAProgressionStatus.Fail && s.incrementProgressionTries(v),
									t === e.EGAProgressionStatus.Complete &&
										(s.incrementProgressionTries(v),
										(w = s.getProgressionTries(v)),
										(m.attempt_num = w),
										s.clearProgressionTries(v)),
									h.addDimensionsToEvent(m),
									h.addFieldsToEvent(m, s.validateAndCleanCustomFields(c)),
									o.i(
										"Add PROGRESSION event: {status:" +
											p +
											", progression01:" +
											n +
											", progression02:" +
											r +
											", progression03:" +
											i +
											", score:" +
											u +
											", attempt:" +
											w +
											"}"
									),
									h.addEventToStore(m);
							} else
								f.instance.sendSdkErrorEvent(
									d.category,
									d.area,
									d.action,
									d.parameter,
									d.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.addDesignEvent = function (e, t, n, r) {
						if (s.isEventSubmissionEnabled()) {
							var i = l.validateDesignEvent(e);
							if (null == i) {
								var u = {};
								(u.category = h.CategoryDesign),
									(u.event_id = e),
									n && (u.value = t),
									h.addDimensionsToEvent(u),
									h.addFieldsToEvent(u, s.validateAndCleanCustomFields(r)),
									o.i("Add DESIGN event: {eventId:" + e + ", value:" + t + "}"),
									h.addEventToStore(u);
							} else
								f.instance.sendSdkErrorEvent(
									i.category,
									i.area,
									i.action,
									i.parameter,
									i.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.addErrorEvent = function (e, t, n) {
						if (s.isEventSubmissionEnabled()) {
							var r = h.errorSeverityToString(e),
								i = l.validateErrorEvent(e, t);
							if (null == i) {
								var u = {};
								(u.category = h.CategoryError),
									(u.severity = r),
									(u.message = t),
									h.addDimensionsToEvent(u),
									h.addFieldsToEvent(u, s.validateAndCleanCustomFields(n)),
									o.i("Add ERROR event: {severity:" + r + ", message:" + t + "}"),
									h.addEventToStore(u);
							} else
								f.instance.sendSdkErrorEvent(
									i.category,
									i.area,
									i.action,
									i.parameter,
									i.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.addAdEvent = function (t, n, r, i, u, a, c, p) {
						if (s.isEventSubmissionEnabled()) {
							var d = h.adActionToString(t),
								v = h.adTypeToString(n),
								m = h.adErrorToString(u),
								w = l.validateAdEvent(t, n, r, i);
							if (null == w) {
								var E = {};
								(E.category = h.CategoryAds),
									(E.ad_sdk_name = r),
									(E.ad_placement = i),
									(E.ad_type = v),
									(E.ad_action = d),
									t == e.EGAAdAction.FailedShow && 0 < m.length && (E.ad_fail_show_reason = m),
									!c ||
										(n != e.EGAAdType.RewardedVideo && n != e.EGAAdType.Video) ||
										(E.ad_duration = a),
									h.addDimensionsToEvent(E),
									h.addFieldsToEvent(E, s.validateAndCleanCustomFields(p)),
									o.i(
										"Add AD event: {ad_sdk_name:" +
											r +
											", ad_placement:" +
											i +
											", ad_type:" +
											v +
											", ad_action:" +
											d +
											(t == e.EGAAdAction.FailedShow && 0 < m.length
												? ", ad_fail_show_reason:" + m
												: "") +
											(!c || (n != e.EGAAdType.RewardedVideo && n != e.EGAAdType.Video)
												? ""
												: ", ad_duration:" + a) +
											"}"
									),
									h.addEventToStore(E);
							} else
								f.instance.sendSdkErrorEvent(
									w.category,
									w.area,
									w.action,
									w.parameter,
									w.reason,
									s.getGameKey(),
									s.getGameSecret()
								);
						}
					}),
					(h.processEvents = function (e, a) {
						if (s.isEventSubmissionEnabled())
							try {
								var c = u.createGuid();
								a && (h.cleanupEvents(), h.fixMissingSessionEndEvents());
								var d = [];
								d.push(["status", i.Equal, "new"]);
								var v = [];
								v.push(["status", i.Equal, "new"]),
									e && (d.push(["category", i.Equal, e]), v.push(["category", i.Equal, e]));
								var g = [];
								g.push(["status", c]);
								var w = n.select(r.Events, d);
								if (!w || 0 == w.length)
									return o.i("Event queue: No events to send"), void h.updateSessionStore();
								if (w.length > h.MaxEventCount) {
									if (!(w = n.select(r.Events, d, !0, h.MaxEventCount))) return;
									var x = w[w.length - 1].client_ts;
									if ((d.push(["client_ts", i.LessOrEqual, x]), !(w = n.select(r.Events, d))))
										return;
									v.push(["client_ts", i.LessOrEqual, x]);
								}
								if (
									(o.i("Event queue: Sending " + w.length + " events."), !n.update(r.Events, g, v))
								)
									return;
								for (var T = [], N = 0; N < w.length; ++N) {
									var k = w[N],
										L = JSON.parse(u.decode64(k.event));
									if (0 != L.length) {
										var O = L.client_ts;
										O && !l.validateClientTs(O) && delete L.client_ts, T.push(L);
									}
								}
								f.instance.sendEventsInArray(T, c, h.processEventsCallback);
							} catch (e) {
								o.e("Error during ProcessEvents(): " + e.stack),
									f.instance.sendSdkErrorEvent(
										t.EGASdkErrorCategory.Json,
										t.EGASdkErrorArea.ProcessEvents,
										t.EGASdkErrorAction.JsonError,
										t.EGASdkErrorParameter.Undefined,
										e.stack,
										s.getGameKey(),
										s.getGameSecret()
									);
							}
					}),
					(h.processEventsCallback = function (e, t, s, u) {
						var f = [];
						if ((f.push(["status", i.Equal, s]), e === a.Ok))
							n.delete(r.Events, f), o.i("Event queue: " + u + " events sent.");
						else if (e === a.NoResponse) {
							var l = [];
							l.push(["status", "new"]),
								o.w("Event queue: Failed to send events to collector - Retrying next time"),
								n.update(r.Events, l, f);
						} else {
							if (t) {
								var c,
									h = 0;
								for (var d in t) 0 == h && (c = t[d]), ++h;
								e === a.BadRequest && c.constructor === Array
									? o.w(
											"Event queue: " +
												u +
												" events sent. " +
												h +
												" events failed GA server validation."
									  )
									: o.w("Event queue: Failed to send events.");
							} else o.w("Event queue: Failed to send events.");
							n.delete(r.Events, f);
						}
					}),
					(h.cleanupEvents = function () {
						n.update(r.Events, [["status", "new"]]);
					}),
					(h.fixMissingSessionEndEvents = function () {
						if (s.isEventSubmissionEnabled()) {
							var e = [];
							e.push(["session_id", i.NotEqual, s.getSessionId()]);
							var t = n.select(r.Sessions, e);
							if (t && 0 != t.length) {
								o.i(t.length + " session(s) located with missing session_end event.");
								for (var a = 0; a < t.length; ++a) {
									var f = JSON.parse(u.decode64(t[a].event)),
										l = f.client_ts - t[a].timestamp;
									(l = Math.max(0, l)),
										(f.category = h.CategorySessionEnd),
										(f.length = l),
										h.addEventToStore(f);
								}
							}
						}
					}),
					(h.addEventToStore = function (e) {
						if (s.isEventSubmissionEnabled())
							if (s.isInitialized())
								try {
									if (
										n.isStoreTooLargeForEvents() &&
										!u.stringMatch(e.category, /^(user|session_end|business)$/)
									)
										return (
											o.w("Database too large. Event has been blocked."),
											void f.instance.sendSdkErrorEvent(
												t.EGASdkErrorCategory.Database,
												t.EGASdkErrorArea.AddEventsToStore,
												t.EGASdkErrorAction.DatabaseTooLarge,
												t.EGASdkErrorParameter.Undefined,
												"",
												s.getGameKey(),
												s.getGameSecret()
											)
										);
									var a = s.getEventAnnotations(),
										l = u.encode64(JSON.stringify(a));
									for (var c in e) a[c] = e[c];
									var d = JSON.stringify(a);
									o.ii("Event added to queue: " + d);
									var v = {
										status: "new",
									};
									(v.category = a.category),
										(v.session_id = a.session_id),
										(v.client_ts = a.client_ts),
										(v.event = u.encode64(JSON.stringify(a))),
										n.insert(r.Events, v),
										e.category == h.CategorySessionEnd
											? n.delete(r.Sessions, [["session_id", i.Equal, a.session_id]])
											: (((v = {}).session_id = a.session_id),
											  (v.timestamp = s.getSessionStart()),
											  (v.event = l),
											  n.insert(r.Sessions, v, !0, "session_id")),
										n.isStorageAvailable() && n.save(s.getGameKey());
								} catch (c) {
									o.e("addEventToStore: error"),
										o.e(c.stack),
										f.instance.sendSdkErrorEvent(
											t.EGASdkErrorCategory.Database,
											t.EGASdkErrorArea.AddEventsToStore,
											t.EGASdkErrorAction.DatabaseTooLarge,
											t.EGASdkErrorParameter.Undefined,
											c.stack,
											s.getGameKey(),
											s.getGameSecret()
										);
								}
							else o.w("Could not add event: SDK is not initialized");
					}),
					(h.updateSessionStore = function () {
						if (s.sessionIsStarted()) {
							var e = {};
							(e.session_id = s.instance.sessionId),
								(e.timestamp = s.getSessionStart()),
								(e.event = u.encode64(JSON.stringify(s.getEventAnnotations()))),
								n.insert(r.Sessions, e, !0, "session_id"),
								n.isStorageAvailable() && n.save(s.getGameKey());
						}
					}),
					(h.addDimensionsToEvent = function (e) {
						e &&
							(s.getCurrentCustomDimension01() && (e.custom_01 = s.getCurrentCustomDimension01()),
							s.getCurrentCustomDimension02() && (e.custom_02 = s.getCurrentCustomDimension02()),
							s.getCurrentCustomDimension03() && (e.custom_03 = s.getCurrentCustomDimension03()));
					}),
					(h.addFieldsToEvent = function (e, t) {
						e && t && 0 < Object.keys(t).length && (e.custom_fields = t);
					}),
					(h.resourceFlowTypeToString = function (t) {
						return t == e.EGAResourceFlowType.Source ||
							t == e.EGAResourceFlowType[e.EGAResourceFlowType.Source]
							? "Source"
							: t == e.EGAResourceFlowType.Sink ||
							  t == e.EGAResourceFlowType[e.EGAResourceFlowType.Sink]
							? "Sink"
							: "";
					}),
					(h.progressionStatusToString = function (t) {
						return t == e.EGAProgressionStatus.Start ||
							t == e.EGAProgressionStatus[e.EGAProgressionStatus.Start]
							? "Start"
							: t == e.EGAProgressionStatus.Complete ||
							  t == e.EGAProgressionStatus[e.EGAProgressionStatus.Complete]
							? "Complete"
							: t == e.EGAProgressionStatus.Fail ||
							  t == e.EGAProgressionStatus[e.EGAProgressionStatus.Fail]
							? "Fail"
							: "";
					}),
					(h.errorSeverityToString = function (t) {
						return t == e.EGAErrorSeverity.Debug ||
							t == e.EGAErrorSeverity[e.EGAErrorSeverity.Debug]
							? "debug"
							: t == e.EGAErrorSeverity.Info || t == e.EGAErrorSeverity[e.EGAErrorSeverity.Info]
							? "info"
							: t == e.EGAErrorSeverity.Warning ||
							  t == e.EGAErrorSeverity[e.EGAErrorSeverity.Warning]
							? "warning"
							: t == e.EGAErrorSeverity.Error || t == e.EGAErrorSeverity[e.EGAErrorSeverity.Error]
							? "error"
							: t == e.EGAErrorSeverity.Critical ||
							  t == e.EGAErrorSeverity[e.EGAErrorSeverity.Critical]
							? "critical"
							: "";
					}),
					(h.adActionToString = function (t) {
						return t == e.EGAAdAction.Clicked || t == e.EGAAdAction[e.EGAAdAction.Clicked]
							? "clicked"
							: t == e.EGAAdAction.Show || t == e.EGAAdAction[e.EGAAdAction.Show]
							? "show"
							: t == e.EGAAdAction.FailedShow || t == e.EGAAdAction[e.EGAAdAction.FailedShow]
							? "failed_show"
							: t == e.EGAAdAction.RewardReceived ||
							  t == e.EGAAdAction[e.EGAAdAction.RewardReceived]
							? "reward_received"
							: "";
					}),
					(h.adErrorToString = function (t) {
						return t == e.EGAAdError.Unknown || t == e.EGAAdError[e.EGAAdError.Unknown]
							? "unknown"
							: t == e.EGAAdError.Offline || t == e.EGAAdError[e.EGAAdError.Offline]
							? "offline"
							: t == e.EGAAdError.NoFill || t == e.EGAAdError[e.EGAAdError.NoFill]
							? "no_fill"
							: t == e.EGAAdError.InternalError || t == e.EGAAdError[e.EGAAdError.InternalError]
							? "internal_error"
							: t == e.EGAAdError.InvalidRequest || t == e.EGAAdError[e.EGAAdError.InvalidRequest]
							? "invalid_request"
							: t == e.EGAAdError.UnableToPrecache ||
							  t == e.EGAAdError[e.EGAAdError.UnableToPrecache]
							? "unable_to_precache"
							: "";
					}),
					(h.adTypeToString = function (t) {
						return t == e.EGAAdType.Video || t == e.EGAAdType[e.EGAAdType.Video]
							? "video"
							: t == e.EGAAdType.RewardedVideo || t == e.EGAAdError[e.EGAAdType.RewardedVideo]
							? "rewarded_video"
							: t == e.EGAAdType.Playable || t == e.EGAAdError[e.EGAAdType.Playable]
							? "playable"
							: t == e.EGAAdType.Interstitial || t == e.EGAAdError[e.EGAAdType.Interstitial]
							? "interstitial"
							: t == e.EGAAdType.OfferWall || t == e.EGAAdError[e.EGAAdType.OfferWall]
							? "offer_wall"
							: t == e.EGAAdType.Banner || t == e.EGAAdError[e.EGAAdType.Banner]
							? "banner"
							: "";
					}),
					(h.CategorySessionStart = "user"),
					(h.CategorySessionEnd = "session_end"),
					(h.CategoryDesign = "design"),
					(h.CategoryBusiness = "business"),
					(h.CategoryProgression = "progression"),
					(h.CategoryResource = "resource"),
					(h.CategoryError = "error"),
					(h.CategoryAds = "ads"),
					(h.MaxEventCount = 500),
					(c = h),
					(t.GAEvents = c);
			})((n = n || {})),
			(function (e) {
				function o() {
					(this.blocks = new t.PriorityQueue({
						compare: function (e, t) {
							return e - t;
						},
					})),
						(this.id2TimedBlockMap = {}),
						o.startThread();
				}
				var t, n, r, i, s;
				(t = e.threading || (e.threading = {})),
					(n = e.logging.GALogger),
					(r = e.state.GAState),
					(i = e.events.GAEvents),
					(o.createTimedBlock = function (e) {
						void 0 === e && (e = 0);
						var n = new Date();
						return n.setSeconds(n.getSeconds() + e), new t.TimedBlock(n);
					}),
					(o.performTaskOnGAThread = function (e, n) {
						void 0 === n && (n = 0);
						var r = new Date();
						r.setSeconds(r.getSeconds() + n);
						var i = new t.TimedBlock(r);
						(i.block = e), (o.instance.id2TimedBlockMap[i.id] = i), o.instance.addTimedBlock(i);
					}),
					(o.performTimedBlockOnGAThread = function (e) {
						(o.instance.id2TimedBlockMap[e.id] = e), o.instance.addTimedBlock(e);
					}),
					(o.scheduleTimer = function (e, n) {
						var r = new Date();
						r.setSeconds(r.getSeconds() + e);
						var i = new t.TimedBlock(r);
						return (
							(i.block = n),
							(o.instance.id2TimedBlockMap[i.id] = i),
							o.instance.addTimedBlock(i),
							i.id
						);
					}),
					(o.getTimedBlockById = function (e) {
						return e in o.instance.id2TimedBlockMap ? o.instance.id2TimedBlockMap[e] : null;
					}),
					(o.ensureEventQueueIsRunning = function () {
						(o.instance.keepRunning = !0),
							o.instance.isRunning ||
								((o.instance.isRunning = !0),
								o.scheduleTimer(o.ProcessEventsIntervalInSeconds, o.processEventQueue));
					}),
					(o.endSessionAndStopQueue = function () {
						r.isInitialized() &&
							(n.i("Ending session."),
							o.stopEventQueue(),
							r.isEnabled() &&
								r.sessionIsStarted() &&
								(i.addSessionEndEvent(), (r.instance.sessionStart = 0)));
					}),
					(o.stopEventQueue = function () {
						o.instance.keepRunning = !1;
					}),
					(o.ignoreTimer = function (e) {
						e in o.instance.id2TimedBlockMap && (o.instance.id2TimedBlockMap[e].ignore = !0);
					}),
					(o.setEventProcessInterval = function (e) {
						0 < e && (o.ProcessEventsIntervalInSeconds = e);
					}),
					(o.prototype.addTimedBlock = function (e) {
						this.blocks.enqueue(e.deadline.getTime(), e);
					}),
					(o.run = function () {
						clearTimeout(o.runTimeoutId);
						try {
							for (var e; (e = o.getNextBlock()); )
								if (!e.ignore)
									if (e.async) {
										if (!e.running) {
											(e.running = !0), e.block();
											break;
										}
									} else e.block();
							return void (o.runTimeoutId = setTimeout(o.run, o.ThreadWaitTimeInMs));
						} catch (e) {
							n.e("Error on GA thread"), n.e(e.stack);
						}
					}),
					(o.startThread = function () {
						o.runTimeoutId = setTimeout(o.run, 0);
					}),
					(o.getNextBlock = function () {
						var e = new Date();
						return o.instance.blocks.hasItems() &&
							o.instance.blocks.peek().deadline.getTime() <= e.getTime()
							? o.instance.blocks.peek().async && o.instance.blocks.peek().running
								? o.instance.blocks.peek()
								: o.instance.blocks.dequeue()
							: null;
					}),
					(o.processEventQueue = function () {
						i.processEvents("", !0),
							o.instance.keepRunning
								? o.scheduleTimer(o.ProcessEventsIntervalInSeconds, o.processEventQueue)
								: (o.instance.isRunning = !1);
					}),
					(o.instance = new o()),
					(o.ThreadWaitTimeInMs = 1e3),
					(o.ProcessEventsIntervalInSeconds = 8),
					(s = o),
					(t.GAThreading = s);
			})((n = n || {})),
			(function (e) {
				function h() {}
				var t = e.threading.GAThreading,
					n = e.logging.GALogger,
					r = e.store.GAStore,
					i = e.state.GAState,
					s = e.http.GAHTTPApi,
					o = e.device.GADevice,
					u = e.validators.GAValidator,
					a = e.http.EGAHTTPApiResponse,
					f = e.utilities.GAUtilities,
					l = e.events.GAEvents,
					c =
						((h.getGlobalObject = function () {
							return "undefined" != typeof globalThis
								? globalThis
								: "undefined" != typeof self
								? self
								: "undefined" != typeof window
								? window
								: "undefined" != typeof global
								? global
								: void 0;
						}),
						(h.init = function () {
							if (
								(o.touch(),
								(h.methodMap.configureAvailableCustomDimensions01 =
									h.configureAvailableCustomDimensions01),
								(h.methodMap.configureAvailableCustomDimensions02 =
									h.configureAvailableCustomDimensions02),
								(h.methodMap.configureAvailableCustomDimensions03 =
									h.configureAvailableCustomDimensions03),
								(h.methodMap.configureAvailableResourceCurrencies =
									h.configureAvailableResourceCurrencies),
								(h.methodMap.configureAvailableResourceItemTypes =
									h.configureAvailableResourceItemTypes),
								(h.methodMap.configureBuild = h.configureBuild),
								(h.methodMap.configureSdkGameEngineVersion = h.configureSdkGameEngineVersion),
								(h.methodMap.configureGameEngineVersion = h.configureGameEngineVersion),
								(h.methodMap.configureUserId = h.configureUserId),
								(h.methodMap.initialize = h.initialize),
								(h.methodMap.addBusinessEvent = h.addBusinessEvent),
								(h.methodMap.addResourceEvent = h.addResourceEvent),
								(h.methodMap.addProgressionEvent = h.addProgressionEvent),
								(h.methodMap.addDesignEvent = h.addDesignEvent),
								(h.methodMap.addErrorEvent = h.addErrorEvent),
								(h.methodMap.addAdEvent = h.addAdEvent),
								(h.methodMap.setEnabledInfoLog = h.setEnabledInfoLog),
								(h.methodMap.setEnabledVerboseLog = h.setEnabledVerboseLog),
								(h.methodMap.setEnabledManualSessionHandling = h.setEnabledManualSessionHandling),
								(h.methodMap.setEnabledEventSubmission = h.setEnabledEventSubmission),
								(h.methodMap.setCustomDimension01 = h.setCustomDimension01),
								(h.methodMap.setCustomDimension02 = h.setCustomDimension02),
								(h.methodMap.setCustomDimension03 = h.setCustomDimension03),
								(h.methodMap.setEventProcessInterval = h.setEventProcessInterval),
								(h.methodMap.startSession = h.startSession),
								(h.methodMap.endSession = h.endSession),
								(h.methodMap.onStop = h.onStop),
								(h.methodMap.onResume = h.onResume),
								(h.methodMap.addRemoteConfigsListener = h.addRemoteConfigsListener),
								(h.methodMap.removeRemoteConfigsListener = h.removeRemoteConfigsListener),
								(h.methodMap.getRemoteConfigsValueAsString = h.getRemoteConfigsValueAsString),
								(h.methodMap.isRemoteConfigsReady = h.isRemoteConfigsReady),
								(h.methodMap.getRemoteConfigsContentAsString = h.getRemoteConfigsContentAsString),
								(h.methodMap.addOnBeforeUnloadListener = h.addOnBeforeUnloadListener),
								(h.methodMap.removeOnBeforeUnloadListener = h.removeOnBeforeUnloadListener),
								void 0 !== h.getGlobalObject() &&
									void 0 !== h.getGlobalObject().GameAnalytics &&
									void 0 !== h.getGlobalObject().GameAnalytics.q)
							) {
								var e = h.getGlobalObject().GameAnalytics.q;
								for (var n in e) h.gaCommand.apply(null, e[n]);
							}
							window.addEventListener("beforeunload", function (e) {
								console.log("addEventListener unload"),
									(i.instance.isUnloading = !0),
									i.notifyBeforeUnloadListeners(),
									t.endSessionAndStopQueue(),
									(i.instance.isUnloading = !1);
							});
						}),
						(h.gaCommand = function () {
							for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
							0 < t.length &&
								t[0] in e.GameAnalytics.methodMap &&
								(1 < t.length
									? e.GameAnalytics.methodMap[t[0]].apply(null, Array.prototype.slice.call(t, 1))
									: e.GameAnalytics.methodMap[t[0]]());
						}),
						(h.configureAvailableCustomDimensions01 = function (e) {
							void 0 === e && (e = []),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Available custom dimensions must be set before SDK is initialized")
										: i.setAvailableCustomDimensions01(e);
								});
						}),
						(h.configureAvailableCustomDimensions02 = function (e) {
							void 0 === e && (e = []),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Available custom dimensions must be set before SDK is initialized")
										: i.setAvailableCustomDimensions02(e);
								});
						}),
						(h.configureAvailableCustomDimensions03 = function (e) {
							void 0 === e && (e = []),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Available custom dimensions must be set before SDK is initialized")
										: i.setAvailableCustomDimensions03(e);
								});
						}),
						(h.configureAvailableResourceCurrencies = function (e) {
							void 0 === e && (e = []),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Available resource currencies must be set before SDK is initialized")
										: i.setAvailableResourceCurrencies(e);
								});
						}),
						(h.configureAvailableResourceItemTypes = function (e) {
							void 0 === e && (e = []),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Available resource item types must be set before SDK is initialized")
										: i.setAvailableResourceItemTypes(e);
								});
						}),
						(h.configureBuild = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("Build version must be set before SDK is initialized.")
										: u.validateBuild(e)
										? i.setBuild(e)
										: n.i(
												"Validation fail - configure build: Cannot be null, empty or above 32 length. String: " +
													e
										  );
								});
						}),
						(h.configureSdkGameEngineVersion = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1) ||
										(u.validateSdkWrapperVersion(e)
											? (o.sdkGameEngineVersion = e)
											: n.i(
													"Validation fail - configure sdk version: Sdk version not supported. String: " +
														e
											  ));
								});
						}),
						(h.configureGameEngineVersion = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1) ||
										(u.validateEngineVersion(e)
											? (o.gameEngineVersion = e)
											: n.i(
													"Validation fail - configure game engine version: Game engine version not supported. String: " +
														e
											  ));
								});
						}),
						(h.configureUserId = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !1)
										? n.w("A custom user id must be set before SDK is initialized.")
										: u.validateUserId(e)
										? i.setUserId(e)
										: n.i(
												"Validation fail - configure user_id: Cannot be null, empty or above 64 length. Will use default user_id method. Used string: " +
													e
										  );
								});
						}),
						(h.initialize = function (e, r) {
							void 0 === e && (e = ""), void 0 === r && (r = ""), o.updateConnectionType();
							var s = t.createTimedBlock();
							(s.async = !0),
								(h.initTimedBlockId = s.id),
								(s.block = function () {
									h.isSdkReady(!0, !1)
										? n.w("SDK already initialized. Can only be called once.")
										: u.validateKeys(e, r)
										? (i.setKeys(e, r), h.internalInitialize())
										: n.w(
												"SDK failed initialize. Game key or secret key is invalid. Can only contain characters A-z 0-9, gameKey is 32 length, gameSecret is 40 length. Failed keys - gameKey: " +
													e +
													", secretKey: " +
													r
										  );
								}),
								t.performTimedBlockOnGAThread(s);
						}),
						(h.addBusinessEvent = function (e, n, r, s, u) {
							if (
								(void 0 === e && (e = ""),
								void 0 === n && (n = 0),
								void 0 === r && (r = ""),
								void 0 === s && (s = ""),
								void 0 === u && (u = ""),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add business event")) return;
								l.addBusinessEvent(e, n, r, s, u, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add business event") &&
										l.addBusinessEvent(e, n, r, s, u, {});
								});
						}),
						(h.addResourceEvent = function (n, r, s, u, a) {
							if (
								(void 0 === n && (n = e.EGAResourceFlowType.Undefined),
								void 0 === r && (r = ""),
								void 0 === s && (s = 0),
								void 0 === u && (u = ""),
								void 0 === a && (a = ""),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add resource event")) return;
								l.addResourceEvent(n, r, s, u, a, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add resource event") &&
										l.addResourceEvent(n, r, s, u, a, {});
								});
						}),
						(h.addProgressionEvent = function (n, r, s, u, a) {
							if (
								(void 0 === n && (n = e.EGAProgressionStatus.Undefined),
								void 0 === r && (r = ""),
								void 0 === s && (s = ""),
								void 0 === u && (u = ""),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add progression event")) return;
								var f = "number" == typeof a;
								l.addProgressionEvent(n, r, s, u, f ? a : 0, f, {});
							} else
								t.performTaskOnGAThread(function () {
									if (h.isSdkReady(!0, !0, "Could not add progression event")) {
										var e = "number" == typeof a;
										l.addProgressionEvent(n, r, s, u, e ? a : 0, e, {});
									}
								});
						}),
						(h.addDesignEvent = function (e, n) {
							if ((o.updateConnectionType(), i.instance.isUnloading)) {
								if (!h.isSdkReady(!0, !0, "Could not add design event")) return;
								var r = "number" == typeof n;
								l.addDesignEvent(e, r ? n : 0, r, {});
							} else
								t.performTaskOnGAThread(function () {
									if (h.isSdkReady(!0, !0, "Could not add design event")) {
										var t = "number" == typeof n;
										l.addDesignEvent(e, t ? n : 0, t, {});
									}
								});
						}),
						(h.addErrorEvent = function (n, r) {
							if (
								(void 0 === n && (n = e.EGAErrorSeverity.Undefined),
								void 0 === r && (r = ""),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add error event")) return;
								l.addErrorEvent(n, r, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add error event") && l.addErrorEvent(n, r, {});
								});
						}),
						(h.addAdEventWithNoAdReason = function (n, r, s, u, a) {
							if (
								(void 0 === n && (n = e.EGAAdAction.Undefined),
								void 0 === r && (r = e.EGAAdType.Undefined),
								void 0 === s && (s = ""),
								void 0 === u && (u = ""),
								void 0 === a && (a = e.EGAAdError.Undefined),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add ad event")) return;
								l.addAdEvent(n, r, s, u, a, 0, !1, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add ad event") &&
										l.addAdEvent(n, r, s, u, a, 0, !1, {});
								});
						}),
						(h.addAdEventWithDuration = function (n, r, s, u, a) {
							if (
								(void 0 === n && (n = e.EGAAdAction.Undefined),
								void 0 === r && (r = e.EGAAdType.Undefined),
								void 0 === s && (s = ""),
								void 0 === u && (u = ""),
								void 0 === a && (a = 0),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add ad event")) return;
								l.addAdEvent(n, r, s, u, e.EGAAdError.Undefined, a, !0, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add ad event") &&
										l.addAdEvent(n, r, s, u, e.EGAAdError.Undefined, a, !0, {});
								});
						}),
						(h.addAdEvent = function (n, r, s, u) {
							if (
								(void 0 === n && (n = e.EGAAdAction.Undefined),
								void 0 === r && (r = e.EGAAdType.Undefined),
								void 0 === s && (s = ""),
								void 0 === u && (u = ""),
								o.updateConnectionType(),
								i.instance.isUnloading)
							) {
								if (!h.isSdkReady(!0, !0, "Could not add ad event")) return;
								l.addAdEvent(n, r, s, u, e.EGAAdError.Undefined, 0, !1, {});
							} else
								t.performTaskOnGAThread(function () {
									h.isSdkReady(!0, !0, "Could not add ad event") &&
										l.addAdEvent(n, r, s, u, e.EGAAdError.Undefined, 0, !1, {});
								});
						}),
						(h.setEnabledInfoLog = function (e) {
							void 0 === e && (e = !1),
								t.performTaskOnGAThread(function () {
									e
										? (n.setInfoLog(e), n.i("Info logging enabled"))
										: (n.i("Info logging disabled"), n.setInfoLog(e));
								});
						}),
						(h.setEnabledVerboseLog = function (e) {
							void 0 === e && (e = !1),
								t.performTaskOnGAThread(function () {
									e
										? (n.setVerboseLog(e), n.i("Verbose logging enabled"))
										: (n.i("Verbose logging disabled"), n.setVerboseLog(e));
								});
						}),
						(h.setEnabledManualSessionHandling = function (e) {
							void 0 === e && (e = !1),
								t.performTaskOnGAThread(function () {
									i.setManualSessionHandling(e);
								});
						}),
						(h.setEnabledEventSubmission = function (e) {
							void 0 === e && (e = !1),
								t.performTaskOnGAThread(function () {
									e
										? (i.setEnabledEventSubmission(e), n.i("Event submission enabled"))
										: (n.i("Event submission disabled"), i.setEnabledEventSubmission(e));
								});
						}),
						(h.setCustomDimension01 = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									u.validateDimension01(e, i.getAvailableCustomDimensions01())
										? i.setCustomDimension01(e)
										: n.w(
												"Could not set custom01 dimension value to '" +
													e +
													"'. Value not found in available custom01 dimension values"
										  );
								});
						}),
						(h.setCustomDimension02 = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									u.validateDimension02(e, i.getAvailableCustomDimensions02())
										? i.setCustomDimension02(e)
										: n.w(
												"Could not set custom02 dimension value to '" +
													e +
													"'. Value not found in available custom02 dimension values"
										  );
								});
						}),
						(h.setCustomDimension03 = function (e) {
							void 0 === e && (e = ""),
								t.performTaskOnGAThread(function () {
									u.validateDimension03(e, i.getAvailableCustomDimensions03())
										? i.setCustomDimension03(e)
										: n.w(
												"Could not set custom03 dimension value to '" +
													e +
													"'. Value not found in available custom03 dimension values"
										  );
								});
						}),
						(h.setEventProcessInterval = function (e) {
							t.performTaskOnGAThread(function () {
								t.setEventProcessInterval(e);
							});
						}),
						(h.startSession = function () {
							if (i.isInitialized()) {
								var e = t.createTimedBlock();
								(e.async = !0),
									(h.initTimedBlockId = e.id),
									(e.block = function () {
										i.isEnabled() && i.sessionIsStarted() && t.endSessionAndStopQueue(),
											h.resumeSessionAndStartQueue();
									}),
									t.performTimedBlockOnGAThread(e);
							}
						}),
						(h.endSession = function () {
							h.onStop();
						}),
						(h.onStop = function () {
							t.performTaskOnGAThread(function () {
								try {
									t.endSessionAndStopQueue();
								} catch (e) {}
							});
						}),
						(h.onResume = function () {
							var e = t.createTimedBlock();
							(e.async = !0),
								(h.initTimedBlockId = e.id),
								(e.block = function () {
									h.resumeSessionAndStartQueue();
								}),
								t.performTimedBlockOnGAThread(e);
						}),
						(h.getRemoteConfigsValueAsString = function (e, t) {
							return void 0 === t && (t = null), i.getConfigurationStringValue(e, t);
						}),
						(h.isRemoteConfigsReady = function () {
							return i.isRemoteConfigsReady();
						}),
						(h.addRemoteConfigsListener = function (e) {
							i.addRemoteConfigsListener(e);
						}),
						(h.removeRemoteConfigsListener = function (e) {
							i.removeRemoteConfigsListener(e);
						}),
						(h.getRemoteConfigsContentAsString = function () {
							return i.getRemoteConfigsContentAsString();
						}),
						(h.getABTestingId = function () {
							return i.getABTestingId();
						}),
						(h.getABTestingVariantId = function () {
							return i.getABTestingVariantId();
						}),
						(h.addOnBeforeUnloadListener = function (e) {
							i.addOnBeforeUnloadListener(e);
						}),
						(h.removeOnBeforeUnloadListener = function (e) {
							i.removeOnBeforeUnloadListener(e);
						}),
						(h.internalInitialize = function () {
							i.ensurePersistedStates(),
								r.setItem(i.getGameKey(), i.DefaultUserIdKey, i.getDefaultId()),
								i.setInitialized(!0),
								h.newSession(),
								i.isEnabled() && t.ensureEventQueueIsRunning();
						}),
						(h.newSession = function () {
							n.i("Starting a new session."),
								i.validateAndFixCurrentDimensions(),
								s.instance.requestInit(i.instance.configsHash, h.startNewSessionCallback);
						}),
						(h.startNewSessionCallback = function (e, s) {
							if ((e !== a.Ok && e !== a.Created) || !s)
								e == a.Unauthorized
									? (n.w("Initialize SDK failed - Unauthorized"), (i.instance.initAuthorized = !1))
									: (e === a.NoResponse || e === a.RequestTimeout
											? n.i(
													"Init call (session start) failed - no response. Could be offline or timeout."
											  )
											: e === a.BadResponse || e === a.JsonEncodeFailed || e === a.JsonDecodeFailed
											? n.i(
													"Init call (session start) failed - bad response. Could be bad response from proxy or GA servers."
											  )
											: (e !== a.BadRequest && e !== a.UnknownResponseCode) ||
											  n.i("Init call (session start) failed - bad request or unknown response."),
									  null == i.instance.sdkConfig
											? null != i.instance.sdkConfigCached
												? (n.i("Init call (session start) failed - using cached init values."),
												  (i.instance.sdkConfig = i.instance.sdkConfigCached))
												: (n.i("Init call (session start) failed - using default init values."),
												  (i.instance.sdkConfig = i.instance.sdkConfigDefault))
											: n.i("Init call (session start) failed - using cached init values."),
									  (i.instance.initAuthorized = !0));
							else {
								var o = 0;
								if (s.server_ts) {
									var u = s.server_ts;
									o = i.calculateServerTimeOffset(u);
								}
								if (((s.time_offset = o), e != a.Created)) {
									var c = i.getSdkConfig();
									c.configs && (s.configs = c.configs),
										c.configs_hash && (s.configs_hash = c.configs_hash),
										c.ab_id && (s.ab_id = c.ab_id),
										c.ab_variant_id && (s.ab_variant_id = c.ab_variant_id);
								}
								(i.instance.configsHash = s.configs_hash ? s.configs_hash : ""),
									(i.instance.abId = s.ab_id ? s.ab_id : ""),
									(i.instance.abVariantId = s.ab_variant_id ? s.ab_variant_id : ""),
									r.setItem(i.getGameKey(), i.SdkConfigCachedKey, f.encode64(JSON.stringify(s))),
									(i.instance.sdkConfigCached = s),
									(i.instance.sdkConfig = s),
									(i.instance.initAuthorized = !0);
							}
							if (
								((i.instance.clientServerTimeOffset = i.getSdkConfig().time_offset
									? i.getSdkConfig().time_offset
									: 0),
								i.populateConfigurations(i.getSdkConfig()),
								!i.isEnabled())
							)
								return n.w("Could not start session: SDK is disabled."), void t.stopEventQueue();
							t.ensureEventQueueIsRunning();
							var p = f.createGuid();
							(i.instance.sessionId = p),
								(i.instance.sessionStart = i.getClientTsAdjusted()),
								l.addSessionStartEvent();
							var y = t.getTimedBlockById(h.initTimedBlockId);
							null != y && (y.running = !1), (h.initTimedBlockId = -1);
						}),
						(h.resumeSessionAndStartQueue = function () {
							i.isInitialized() &&
								(n.i("Resuming session."), i.sessionIsStarted() || h.newSession());
						}),
						(h.isSdkReady = function (e, t, r) {
							return (
								void 0 === t && (t = !0),
								void 0 === r && (r = ""),
								r && (r += ": "),
								e && !i.isInitialized()
									? (t && n.w(r + "SDK is not initialized"), !1)
									: e && !i.isEnabled()
									? (t && n.w(r + "SDK is disabled"), !1)
									: !(
											e &&
											!i.sessionIsStarted() &&
											(t && n.w(r + "Session has not started yet"), 1)
									  )
							);
						}),
						(h.initTimedBlockId = -1),
						(h.methodMap = {}),
						h);
				e.GameAnalytics = c;
			})((n = n || {})),
			n.GameAnalytics.init();
		var o = n.GameAnalytics.gaCommand;
		(e.gameanalytics = n), (e.GameAnalytics = o);
	})(this),
	define("gameanalytics", function () {}),
	define("controllers/gameanalytics", ["application", "gameanalytics"], function (e) {
		var t = function () {
			var t = this;
			(this.GK = scheme == "production" ? e.params.GAprodGK : e.params.GAtestGK),
				(this.SK = scheme == "production" ? e.params.GAprodSK : e.params.GAtestSK),
				(this.init = function (e) {
					GameAnalytics("configureBuild", social),
						GameAnalytics("configureAvailableResourceCurrencies", ["coins", "life"]),
						GameAnalytics("configureAvailableResourceItemTypes", [
							"hint",
							"life",
							"booster",
							"dailyReward",
							"rewardVideo",
							"Gameplay",
							"IAP",
							"achievement",
							"clanBattle",
							"clanTask",
							"clanMilestone",
							"readBook",
							"quest",
							"item_level_up",
							"creation_speedup",
						]),
						GameAnalytics("configureUserId", e),
						GameAnalytics("initialize", this.GK, this.SK);
				}),
				(this.sendBusinessEvent = function (e) {
					var t = "USD",
						n = /unlock/.test(e._id) ? "pro" : "coins",
						r = Math.floor(e.priceUsd * 100),
						i = n,
						s = "pack-" + e.number,
						o = "";
					GameAnalytics("addBusinessEvent", t, r, i, s, o),
						n == "coins" && this.sendResourceEvent(n, e.number, "IAP", s);
				}),
				(this.sendResourceEvent = function (e, t, n, r) {
					t > 0
						? GameAnalytics("addResourceEvent", "Source", e, t, n, r)
						: GameAnalytics("addResourceEvent", "Sink", e, Math.abs(t), n, r);
				}),
				(this.sendProgressionEvent = function (e) {
					GameAnalytics("addProgressionEvent", "Start", "Level-" + e);
				}),
				(this.sendDesignEvent = function (e) {
					GameAnalytics("addDesignEvent", e);
				});
		};
		return new t();
	}),
	define("status", ["backbone"], function (e) {
		function r(e) {
			return e ? (t[e] || (t[e] = new n(e)), t[e]) : new n();
		}
		var t = {},
			n = function (e) {
				this.name = e || "";
				var t = !1,
					n,
					i = {
						rejected: [],
						resolved: [],
						always: [],
					},
					s = [],
					o = [];
				(this.fireAlwaysCallbacks = function (e) {
					var t;
					while ((t = i.rejected.shift())) t(e);
				}),
					(this.checkInfluence = function () {
						for (var e = 0, t = o.length; e < t; e++) o[e].checkDependence();
					}),
					(this.checkDependence = function () {
						var e = 0;
						for (var t = 0, n = s.length; t < n; t++) s[t].isReady() && e++;
						e == n && this.resolve();
					}),
					(this.done = function (e) {
						return i.resolved.push(e), t && this.resolve(), this;
					}),
					(this.fail = function () {
						return i.rejected.push(method), this;
					}),
					(this.resolve = function (e) {
						var n;
						t = !0;
						while ((n = i.resolved.shift())) n(e);
						return this.fireAlwaysCallbacks(), this.checkInfluence(), this;
					}),
					(this.reject = function (e) {
						var n;
						t = !1;
						while ((n = i.rejected.shift())) n(e);
						return this.fireAlwaysCallbacks(), this;
					}),
					(this.isReady = function () {
						return t;
					}),
					(this.dependence = function (e) {
						var t,
							n = Array.isArray(e) ? e : [e],
							i;
						while ((i = n.shift())) (t = r(i)), t.influence(this), s.push(t);
						return this;
					}),
					(this.influence = function (e) {
						var t = Array.isArray(e) ? e : [e],
							n;
						while ((n = t.shift())) o.push(n);
						return this;
					}),
					(this.data = function () {
						return {
							_status: t,
							_callbacks: i,
							_dependence: s,
							_influence: o,
						};
					});
			};
		return (
			(r.prototype.getAllTest = function () {
				_.each(t, function (e) {
					console.warn(e.data(), e);
				});
			}),
			r
		);
	}),
	define("gates/gate-storage", ["status"], function (e) {
		var t = function (e) {
			this.serverGate = e;
		};
		return (
			(t.prototype = _.extend(
				{
					localStorageDeferred: e("localStorage").resolve(),
					getFullKey: function (e, t) {
						switch (t) {
							case !0:
								return e;
							case "socialId":
								return this.serverGate.User.socialId + "_" + e;
							default:
								return this.serverGate.User.get("id") + "_" + e;
						}
					},
					getCondition: function (t) {
						switch (t) {
							case !0:
								return this.localStorageDeferred;
							case "socialId":
								return e("socialId");
							default:
								return e("auth");
						}
					},
					set: function (e, t, n) {
						var r = this.getCondition(n),
							i = this;
						r.done(function () {
							var r = i.getFullKey(e, n);
							localStorage.setItem(r, t),
								console.info("storage.set." + e, t),
								i.serverGate.trigger("storage.set." + e, t);
						});
					},
					get: function (e, t) {
						var n = this.getCondition(t),
							r = this;
						n.done(function () {
							var n = r.getFullKey(e, t),
								i = localStorage.getItem(n);
							i || (i = ""), r.serverGate.trigger("storage.get." + e, i);
						});
					},
					remove: function (e, t) {
						var n = this.getCondition(t),
							r = this;
						n.done(function () {
							var n = r.getFullKey(e, t),
								i = localStorage.removeItem(n);
							i || (i = ""),
								console.info("storage.remove." + e, i),
								r.serverGate.trigger("storage.remove." + e, i);
						});
					},
				},
				Backbone.Events
			)),
			t
		);
	}),
	(function (e, t) {
		typeof exports == "object"
			? (module.exports = exports = t())
			: typeof define == "function" && define.amd
			? define("cryptojs", [], t)
			: (e.CryptoJS = t());
	})(this, function () {
		var e =
			e ||
			(function (e, t) {
				var n;
				typeof window != "undefined" && window.crypto && (n = window.crypto),
					!n && typeof window != "undefined" && window.msCrypto && (n = window.msCrypto),
					!n && typeof global != "undefined" && global.crypto && (n = global.crypto);
				if (!n && typeof require == "function")
					try {
						n = require("crypto");
					} catch (r) {}
				var i = function () {
						if (n) {
							if (typeof n.getRandomValues == "function")
								try {
									return n.getRandomValues(new Uint32Array(1))[0];
								} catch (e) {}
							if (typeof n.randomBytes == "function")
								try {
									return n.randomBytes(4).readInt32LE();
								} catch (e) {}
						}
						throw new Error("Native crypto module could not be used to get secure random number.");
					},
					s =
						Object.create ||
						(function () {
							function e() {}
							return function (t) {
								var n;
								return (e.prototype = t), (n = new e()), (e.prototype = null), n;
							};
						})(),
					o = {},
					u = (o.lib = {}),
					a = (u.Base = (function () {
						return {
							extend: function (e) {
								var t = s(this);
								e && t.mixIn(e);
								if (!t.hasOwnProperty("init") || this.init === t.init)
									t.init = function () {
										t.$super.init.apply(this, arguments);
									};
								return (t.init.prototype = t), (t.$super = this), t;
							},
							create: function () {
								var e = this.extend();
								return e.init.apply(e, arguments), e;
							},
							init: function () {},
							mixIn: function (e) {
								for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
								e.hasOwnProperty("toString") && (this.toString = e.toString);
							},
							clone: function () {
								return this.init.prototype.extend(this);
							},
						};
					})()),
					f = (u.WordArray = a.extend({
						init: function (e, n) {
							(e = this.words = e || []),
								n != t ? (this.sigBytes = n) : (this.sigBytes = e.length * 4);
						},
						toString: function (e) {
							return (e || c).stringify(this);
						},
						concat: function (e) {
							var t = this.words,
								n = e.words,
								r = this.sigBytes,
								i = e.sigBytes;
							this.clamp();
							if (r % 4)
								for (var s = 0; s < i; s++) {
									var o = (n[s >>> 2] >>> (24 - (s % 4) * 8)) & 255;
									t[(r + s) >>> 2] |= o << (24 - ((r + s) % 4) * 8);
								}
							else for (var s = 0; s < i; s += 4) t[(r + s) >>> 2] = n[s >>> 2];
							return (this.sigBytes += i), this;
						},
						clamp: function () {
							var t = this.words,
								n = this.sigBytes;
							(t[n >>> 2] &= 4294967295 << (32 - (n % 4) * 8)), (t.length = e.ceil(n / 4));
						},
						clone: function () {
							var e = a.clone.call(this);
							return (e.words = this.words.slice(0)), e;
						},
						random: function (e) {
							var t = [];
							for (var n = 0; n < e; n += 4) t.push(i());
							return new f.init(t, e);
						},
					})),
					l = (o.enc = {}),
					c = (l.Hex = {
						stringify: function (e) {
							var t = e.words,
								n = e.sigBytes,
								r = [];
							for (var i = 0; i < n; i++) {
								var s = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
								r.push((s >>> 4).toString(16)), r.push((s & 15).toString(16));
							}
							return r.join("");
						},
						parse: function (e) {
							var t = e.length,
								n = [];
							for (var r = 0; r < t; r += 2)
								n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << (24 - (r % 8) * 4);
							return new f.init(n, t / 2);
						},
					}),
					h = (l.Latin1 = {
						stringify: function (e) {
							var t = e.words,
								n = e.sigBytes,
								r = [];
							for (var i = 0; i < n; i++) {
								var s = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
								r.push(String.fromCharCode(s));
							}
							return r.join("");
						},
						parse: function (e) {
							var t = e.length,
								n = [];
							for (var r = 0; r < t; r++)
								n[r >>> 2] |= (e.charCodeAt(r) & 255) << (24 - (r % 4) * 8);
							return new f.init(n, t);
						},
					}),
					p = (l.Utf8 = {
						stringify: function (e) {
							try {
								return decodeURIComponent(escape(h.stringify(e)));
							} catch (t) {
								throw new Error("Malformed UTF-8 data");
							}
						},
						parse: function (e) {
							return h.parse(unescape(encodeURIComponent(e)));
						},
					}),
					d = (u.BufferedBlockAlgorithm = a.extend({
						reset: function () {
							(this._data = new f.init()), (this._nDataBytes = 0);
						},
						_append: function (e) {
							typeof e == "string" && (e = p.parse(e)),
								this._data.concat(e),
								(this._nDataBytes += e.sigBytes);
						},
						_process: function (t) {
							var n,
								r = this._data,
								i = r.words,
								s = r.sigBytes,
								o = this.blockSize,
								u = o * 4,
								a = s / u;
							t ? (a = e.ceil(a)) : (a = e.max((a | 0) - this._minBufferSize, 0));
							var l = a * o,
								c = e.min(l * 4, s);
							if (l) {
								for (var h = 0; h < l; h += o) this._doProcessBlock(i, h);
								(n = i.splice(0, l)), (r.sigBytes -= c);
							}
							return new f.init(n, c);
						},
						clone: function () {
							var e = a.clone.call(this);
							return (e._data = this._data.clone()), e;
						},
						_minBufferSize: 0,
					})),
					v = (u.Hasher = d.extend({
						cfg: a.extend(),
						init: function (e) {
							(this.cfg = this.cfg.extend(e)), this.reset();
						},
						reset: function () {
							d.reset.call(this), this._doReset();
						},
						update: function (e) {
							return this._append(e), this._process(), this;
						},
						finalize: function (e) {
							e && this._append(e);
							var t = this._doFinalize();
							return t;
						},
						blockSize: 16,
						_createHelper: function (e) {
							return function (t, n) {
								return new e.init(n).finalize(t);
							};
						},
						_createHmacHelper: function (e) {
							return function (t, n) {
								return new m.HMAC.init(e, n).finalize(t);
							};
						},
					})),
					m = (o.algo = {});
				return o;
			})(Math);
		return (
			(function () {
				function o(e, t, n) {
					var i = [],
						s = 0;
					for (var o = 0; o < t; o++)
						if (o % 4) {
							var u = n[e.charCodeAt(o - 1)] << ((o % 4) * 2),
								a = n[e.charCodeAt(o)] >>> (6 - (o % 4) * 2),
								f = u | a;
							(i[s >>> 2] |= f << (24 - (s % 4) * 8)), s++;
						}
					return r.create(i, s);
				}
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = t.enc,
					s = (i.Base64 = {
						stringify: function (e) {
							var t = e.words,
								n = e.sigBytes,
								r = this._map;
							e.clamp();
							var i = [];
							for (var s = 0; s < n; s += 3) {
								var o = (t[s >>> 2] >>> (24 - (s % 4) * 8)) & 255,
									u = (t[(s + 1) >>> 2] >>> (24 - ((s + 1) % 4) * 8)) & 255,
									a = (t[(s + 2) >>> 2] >>> (24 - ((s + 2) % 4) * 8)) & 255,
									f = (o << 16) | (u << 8) | a;
								for (var l = 0; l < 4 && s + l * 0.75 < n; l++)
									i.push(r.charAt((f >>> (6 * (3 - l))) & 63));
							}
							var c = r.charAt(64);
							if (c) while (i.length % 4) i.push(c);
							return i.join("");
						},
						parse: function (e) {
							var t = e.length,
								n = this._map,
								r = this._reverseMap;
							if (!r) {
								r = this._reverseMap = [];
								for (var i = 0; i < n.length; i++) r[n.charCodeAt(i)] = i;
							}
							var s = n.charAt(64);
							if (s) {
								var u = e.indexOf(s);
								u !== -1 && (t = u);
							}
							return o(e, t, r);
						},
						_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
					});
			})(),
			(function (t) {
				function f(e, t, n, r, i, s, o) {
					var u = e + ((t & n) | (~t & r)) + i + o;
					return ((u << s) | (u >>> (32 - s))) + t;
				}

				function l(e, t, n, r, i, s, o) {
					var u = e + ((t & r) | (n & ~r)) + i + o;
					return ((u << s) | (u >>> (32 - s))) + t;
				}

				function c(e, t, n, r, i, s, o) {
					var u = e + (t ^ n ^ r) + i + o;
					return ((u << s) | (u >>> (32 - s))) + t;
				}

				function h(e, t, n, r, i, s, o) {
					var u = e + (n ^ (t | ~r)) + i + o;
					return ((u << s) | (u >>> (32 - s))) + t;
				}
				var n = e,
					r = n.lib,
					i = r.WordArray,
					s = r.Hasher,
					o = n.algo,
					u = [];
				(function () {
					for (var e = 0; e < 64; e++) u[e] = (t.abs(t.sin(e + 1)) * 4294967296) | 0;
				})();
				var a = (o.MD5 = s.extend({
					_doReset: function () {
						this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878]);
					},
					_doProcessBlock: function (e, t) {
						for (var n = 0; n < 16; n++) {
							var r = t + n,
								i = e[r];
							e[r] = (((i << 8) | (i >>> 24)) & 16711935) | (((i << 24) | (i >>> 8)) & 4278255360);
						}
						var s = this._hash.words,
							o = e[t + 0],
							a = e[t + 1],
							p = e[t + 2],
							d = e[t + 3],
							v = e[t + 4],
							m = e[t + 5],
							g = e[t + 6],
							y = e[t + 7],
							b = e[t + 8],
							w = e[t + 9],
							E = e[t + 10],
							S = e[t + 11],
							x = e[t + 12],
							N = e[t + 13],
							C = e[t + 14],
							k = e[t + 15],
							L = s[0],
							A = s[1],
							O = s[2],
							M = s[3];
						(L = f(L, A, O, M, o, 7, u[0])),
							(M = f(M, L, A, O, a, 12, u[1])),
							(O = f(O, M, L, A, p, 17, u[2])),
							(A = f(A, O, M, L, d, 22, u[3])),
							(L = f(L, A, O, M, v, 7, u[4])),
							(M = f(M, L, A, O, m, 12, u[5])),
							(O = f(O, M, L, A, g, 17, u[6])),
							(A = f(A, O, M, L, y, 22, u[7])),
							(L = f(L, A, O, M, b, 7, u[8])),
							(M = f(M, L, A, O, w, 12, u[9])),
							(O = f(O, M, L, A, E, 17, u[10])),
							(A = f(A, O, M, L, S, 22, u[11])),
							(L = f(L, A, O, M, x, 7, u[12])),
							(M = f(M, L, A, O, N, 12, u[13])),
							(O = f(O, M, L, A, C, 17, u[14])),
							(A = f(A, O, M, L, k, 22, u[15])),
							(L = l(L, A, O, M, a, 5, u[16])),
							(M = l(M, L, A, O, g, 9, u[17])),
							(O = l(O, M, L, A, S, 14, u[18])),
							(A = l(A, O, M, L, o, 20, u[19])),
							(L = l(L, A, O, M, m, 5, u[20])),
							(M = l(M, L, A, O, E, 9, u[21])),
							(O = l(O, M, L, A, k, 14, u[22])),
							(A = l(A, O, M, L, v, 20, u[23])),
							(L = l(L, A, O, M, w, 5, u[24])),
							(M = l(M, L, A, O, C, 9, u[25])),
							(O = l(O, M, L, A, d, 14, u[26])),
							(A = l(A, O, M, L, b, 20, u[27])),
							(L = l(L, A, O, M, N, 5, u[28])),
							(M = l(M, L, A, O, p, 9, u[29])),
							(O = l(O, M, L, A, y, 14, u[30])),
							(A = l(A, O, M, L, x, 20, u[31])),
							(L = c(L, A, O, M, m, 4, u[32])),
							(M = c(M, L, A, O, b, 11, u[33])),
							(O = c(O, M, L, A, S, 16, u[34])),
							(A = c(A, O, M, L, C, 23, u[35])),
							(L = c(L, A, O, M, a, 4, u[36])),
							(M = c(M, L, A, O, v, 11, u[37])),
							(O = c(O, M, L, A, y, 16, u[38])),
							(A = c(A, O, M, L, E, 23, u[39])),
							(L = c(L, A, O, M, N, 4, u[40])),
							(M = c(M, L, A, O, o, 11, u[41])),
							(O = c(O, M, L, A, d, 16, u[42])),
							(A = c(A, O, M, L, g, 23, u[43])),
							(L = c(L, A, O, M, w, 4, u[44])),
							(M = c(M, L, A, O, x, 11, u[45])),
							(O = c(O, M, L, A, k, 16, u[46])),
							(A = c(A, O, M, L, p, 23, u[47])),
							(L = h(L, A, O, M, o, 6, u[48])),
							(M = h(M, L, A, O, y, 10, u[49])),
							(O = h(O, M, L, A, C, 15, u[50])),
							(A = h(A, O, M, L, m, 21, u[51])),
							(L = h(L, A, O, M, x, 6, u[52])),
							(M = h(M, L, A, O, d, 10, u[53])),
							(O = h(O, M, L, A, E, 15, u[54])),
							(A = h(A, O, M, L, a, 21, u[55])),
							(L = h(L, A, O, M, b, 6, u[56])),
							(M = h(M, L, A, O, k, 10, u[57])),
							(O = h(O, M, L, A, g, 15, u[58])),
							(A = h(A, O, M, L, N, 21, u[59])),
							(L = h(L, A, O, M, v, 6, u[60])),
							(M = h(M, L, A, O, S, 10, u[61])),
							(O = h(O, M, L, A, p, 15, u[62])),
							(A = h(A, O, M, L, w, 21, u[63])),
							(s[0] = (s[0] + L) | 0),
							(s[1] = (s[1] + A) | 0),
							(s[2] = (s[2] + O) | 0),
							(s[3] = (s[3] + M) | 0);
					},
					_doFinalize: function () {
						var e = this._data,
							n = e.words,
							r = this._nDataBytes * 8,
							i = e.sigBytes * 8;
						n[i >>> 5] |= 128 << (24 - (i % 32));
						var s = t.floor(r / 4294967296),
							o = r;
						(n[(((i + 64) >>> 9) << 4) + 15] =
							(((s << 8) | (s >>> 24)) & 16711935) | (((s << 24) | (s >>> 8)) & 4278255360)),
							(n[(((i + 64) >>> 9) << 4) + 14] =
								(((o << 8) | (o >>> 24)) & 16711935) | (((o << 24) | (o >>> 8)) & 4278255360)),
							(e.sigBytes = (n.length + 1) * 4),
							this._process();
						var u = this._hash,
							a = u.words;
						for (var f = 0; f < 4; f++) {
							var l = a[f];
							a[f] = (((l << 8) | (l >>> 24)) & 16711935) | (((l << 24) | (l >>> 8)) & 4278255360);
						}
						return u;
					},
					clone: function () {
						var e = s.clone.call(this);
						return (e._hash = this._hash.clone()), e;
					},
				}));
				(n.MD5 = s._createHelper(a)), (n.HmacMD5 = s._createHmacHelper(a));
			})(Math),
			(function () {
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = n.Hasher,
					s = t.algo,
					o = [],
					u = (s.SHA1 = i.extend({
						_doReset: function () {
							this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
						},
						_doProcessBlock: function (e, t) {
							var n = this._hash.words,
								r = n[0],
								i = n[1],
								s = n[2],
								u = n[3],
								a = n[4];
							for (var f = 0; f < 80; f++) {
								if (f < 16) o[f] = e[t + f] | 0;
								else {
									var l = o[f - 3] ^ o[f - 8] ^ o[f - 14] ^ o[f - 16];
									o[f] = (l << 1) | (l >>> 31);
								}
								var c = ((r << 5) | (r >>> 27)) + a + o[f];
								f < 20
									? (c += ((i & s) | (~i & u)) + 1518500249)
									: f < 40
									? (c += (i ^ s ^ u) + 1859775393)
									: f < 60
									? (c += ((i & s) | (i & u) | (s & u)) - 1894007588)
									: (c += (i ^ s ^ u) - 899497514),
									(a = u),
									(u = s),
									(s = (i << 30) | (i >>> 2)),
									(i = r),
									(r = c);
							}
							(n[0] = (n[0] + r) | 0),
								(n[1] = (n[1] + i) | 0),
								(n[2] = (n[2] + s) | 0),
								(n[3] = (n[3] + u) | 0),
								(n[4] = (n[4] + a) | 0);
						},
						_doFinalize: function () {
							var e = this._data,
								t = e.words,
								n = this._nDataBytes * 8,
								r = e.sigBytes * 8;
							return (
								(t[r >>> 5] |= 128 << (24 - (r % 32))),
								(t[(((r + 64) >>> 9) << 4) + 14] = Math.floor(n / 4294967296)),
								(t[(((r + 64) >>> 9) << 4) + 15] = n),
								(e.sigBytes = t.length * 4),
								this._process(),
								this._hash
							);
						},
						clone: function () {
							var e = i.clone.call(this);
							return (e._hash = this._hash.clone()), e;
						},
					}));
				(t.SHA1 = i._createHelper(u)), (t.HmacSHA1 = i._createHmacHelper(u));
			})(),
			(function (t) {
				var n = e,
					r = n.lib,
					i = r.WordArray,
					s = r.Hasher,
					o = n.algo,
					u = [],
					a = [];
				(function () {
					function e(e) {
						var n = t.sqrt(e);
						for (var r = 2; r <= n; r++) if (!(e % r)) return !1;
						return !0;
					}

					function n(e) {
						return ((e - (e | 0)) * 4294967296) | 0;
					}
					var r = 2,
						i = 0;
					while (i < 64)
						e(r) && (i < 8 && (u[i] = n(t.pow(r, 0.5))), (a[i] = n(t.pow(r, 1 / 3))), i++), r++;
				})();
				var f = [],
					l = (o.SHA256 = s.extend({
						_doReset: function () {
							this._hash = new i.init(u.slice(0));
						},
						_doProcessBlock: function (e, t) {
							var n = this._hash.words,
								r = n[0],
								i = n[1],
								s = n[2],
								o = n[3],
								u = n[4],
								l = n[5],
								c = n[6],
								h = n[7];
							for (var p = 0; p < 64; p++) {
								if (p < 16) f[p] = e[t + p] | 0;
								else {
									var d = f[p - 15],
										v = ((d << 25) | (d >>> 7)) ^ ((d << 14) | (d >>> 18)) ^ (d >>> 3),
										m = f[p - 2],
										g = ((m << 15) | (m >>> 17)) ^ ((m << 13) | (m >>> 19)) ^ (m >>> 10);
									f[p] = v + f[p - 7] + g + f[p - 16];
								}
								var y = (u & l) ^ (~u & c),
									b = (r & i) ^ (r & s) ^ (i & s),
									w = ((r << 30) | (r >>> 2)) ^ ((r << 19) | (r >>> 13)) ^ ((r << 10) | (r >>> 22)),
									E = ((u << 26) | (u >>> 6)) ^ ((u << 21) | (u >>> 11)) ^ ((u << 7) | (u >>> 25)),
									S = h + E + y + a[p] + f[p],
									x = w + b;
								(h = c),
									(c = l),
									(l = u),
									(u = (o + S) | 0),
									(o = s),
									(s = i),
									(i = r),
									(r = (S + x) | 0);
							}
							(n[0] = (n[0] + r) | 0),
								(n[1] = (n[1] + i) | 0),
								(n[2] = (n[2] + s) | 0),
								(n[3] = (n[3] + o) | 0),
								(n[4] = (n[4] + u) | 0),
								(n[5] = (n[5] + l) | 0),
								(n[6] = (n[6] + c) | 0),
								(n[7] = (n[7] + h) | 0);
						},
						_doFinalize: function () {
							var e = this._data,
								n = e.words,
								r = this._nDataBytes * 8,
								i = e.sigBytes * 8;
							return (
								(n[i >>> 5] |= 128 << (24 - (i % 32))),
								(n[(((i + 64) >>> 9) << 4) + 14] = t.floor(r / 4294967296)),
								(n[(((i + 64) >>> 9) << 4) + 15] = r),
								(e.sigBytes = n.length * 4),
								this._process(),
								this._hash
							);
						},
						clone: function () {
							var e = s.clone.call(this);
							return (e._hash = this._hash.clone()), e;
						},
					}));
				(n.SHA256 = s._createHelper(l)), (n.HmacSHA256 = s._createHmacHelper(l));
			})(Math),
			(function () {
				function o(e) {
					return ((e << 8) & 4278255360) | ((e >>> 8) & 16711935);
				}
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = t.enc,
					s =
						(i.Utf16 =
						i.Utf16BE =
							{
								stringify: function (e) {
									var t = e.words,
										n = e.sigBytes,
										r = [];
									for (var i = 0; i < n; i += 2) {
										var s = (t[i >>> 2] >>> (16 - (i % 4) * 8)) & 65535;
										r.push(String.fromCharCode(s));
									}
									return r.join("");
								},
								parse: function (e) {
									var t = e.length,
										n = [];
									for (var i = 0; i < t; i++) n[i >>> 1] |= e.charCodeAt(i) << (16 - (i % 2) * 16);
									return r.create(n, t * 2);
								},
							});
				i.Utf16LE = {
					stringify: function (e) {
						var t = e.words,
							n = e.sigBytes,
							r = [];
						for (var i = 0; i < n; i += 2) {
							var s = o((t[i >>> 2] >>> (16 - (i % 4) * 8)) & 65535);
							r.push(String.fromCharCode(s));
						}
						return r.join("");
					},
					parse: function (e) {
						var t = e.length,
							n = [];
						for (var i = 0; i < t; i++) n[i >>> 1] |= o(e.charCodeAt(i) << (16 - (i % 2) * 16));
						return r.create(n, t * 2);
					},
				};
			})(),
			(function () {
				if (typeof ArrayBuffer != "function") return;
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = r.init,
					s = (r.init = function (e) {
						e instanceof ArrayBuffer && (e = new Uint8Array(e));
						if (
							e instanceof Int8Array ||
							(typeof Uint8ClampedArray != "undefined" && e instanceof Uint8ClampedArray) ||
							e instanceof Int16Array ||
							e instanceof Uint16Array ||
							e instanceof Int32Array ||
							e instanceof Uint32Array ||
							e instanceof Float32Array ||
							e instanceof Float64Array
						)
							e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
						if (e instanceof Uint8Array) {
							var t = e.byteLength,
								n = [];
							for (var r = 0; r < t; r++) n[r >>> 2] |= e[r] << (24 - (r % 4) * 8);
							i.call(this, n, t);
						} else i.apply(this, arguments);
					});
				s.prototype = r;
			})(),
			(function (t) {
				function d(e, t, n) {
					return e ^ t ^ n;
				}

				function v(e, t, n) {
					return (e & t) | (~e & n);
				}

				function m(e, t, n) {
					return (e | ~t) ^ n;
				}

				function g(e, t, n) {
					return (e & n) | (t & ~n);
				}

				function y(e, t, n) {
					return e ^ (t | ~n);
				}

				function b(e, t) {
					return (e << t) | (e >>> (32 - t));
				}
				var n = e,
					r = n.lib,
					i = r.WordArray,
					s = r.Hasher,
					o = n.algo,
					u = i.create([
						0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0,
						9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10,
						0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6,
						15, 13,
					]),
					a = i.create([
						5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15,
						8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3,
						11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9,
						11,
					]),
					f = i.create([
						11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7,
						12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11,
						12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12,
						13, 14, 11, 8, 5, 6,
					]),
					l = i.create([
						8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7,
						7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5,
						8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5,
						15, 13, 11, 11,
					]),
					c = i.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
					h = i.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
					p = (o.RIPEMD160 = s.extend({
						_doReset: function () {
							this._hash = i.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
						},
						_doProcessBlock: function (e, t) {
							for (var n = 0; n < 16; n++) {
								var r = t + n,
									i = e[r];
								e[r] =
									(((i << 8) | (i >>> 24)) & 16711935) | (((i << 24) | (i >>> 8)) & 4278255360);
							}
							var s = this._hash.words,
								o = c.words,
								p = h.words,
								w = u.words,
								E = a.words,
								S = f.words,
								x = l.words,
								T,
								N,
								C,
								k,
								L,
								A,
								O,
								M,
								_,
								D;
							(A = T = s[0]), (O = N = s[1]), (M = C = s[2]), (_ = k = s[3]), (D = L = s[4]);
							var P;
							for (var n = 0; n < 80; n += 1)
								(P = (T + e[t + w[n]]) | 0),
									n < 16
										? (P += d(N, C, k) + o[0])
										: n < 32
										? (P += v(N, C, k) + o[1])
										: n < 48
										? (P += m(N, C, k) + o[2])
										: n < 64
										? (P += g(N, C, k) + o[3])
										: (P += y(N, C, k) + o[4]),
									(P |= 0),
									(P = b(P, S[n])),
									(P = (P + L) | 0),
									(T = L),
									(L = k),
									(k = b(C, 10)),
									(C = N),
									(N = P),
									(P = (A + e[t + E[n]]) | 0),
									n < 16
										? (P += y(O, M, _) + p[0])
										: n < 32
										? (P += g(O, M, _) + p[1])
										: n < 48
										? (P += m(O, M, _) + p[2])
										: n < 64
										? (P += v(O, M, _) + p[3])
										: (P += d(O, M, _) + p[4]),
									(P |= 0),
									(P = b(P, x[n])),
									(P = (P + D) | 0),
									(A = D),
									(D = _),
									(_ = b(M, 10)),
									(M = O),
									(O = P);
							(P = (s[1] + C + _) | 0),
								(s[1] = (s[2] + k + D) | 0),
								(s[2] = (s[3] + L + A) | 0),
								(s[3] = (s[4] + T + O) | 0),
								(s[4] = (s[0] + N + M) | 0),
								(s[0] = P);
						},
						_doFinalize: function () {
							var e = this._data,
								t = e.words,
								n = this._nDataBytes * 8,
								r = e.sigBytes * 8;
							(t[r >>> 5] |= 128 << (24 - (r % 32))),
								(t[(((r + 64) >>> 9) << 4) + 14] =
									(((n << 8) | (n >>> 24)) & 16711935) | (((n << 24) | (n >>> 8)) & 4278255360)),
								(e.sigBytes = (t.length + 1) * 4),
								this._process();
							var i = this._hash,
								s = i.words;
							for (var o = 0; o < 5; o++) {
								var u = s[o];
								s[o] =
									(((u << 8) | (u >>> 24)) & 16711935) | (((u << 24) | (u >>> 8)) & 4278255360);
							}
							return i;
						},
						clone: function () {
							var e = s.clone.call(this);
							return (e._hash = this._hash.clone()), e;
						},
					}));
				(n.RIPEMD160 = s._createHelper(p)), (n.HmacRIPEMD160 = s._createHmacHelper(p));
			})(Math),
			(function () {
				var t = e,
					n = t.lib,
					r = n.Base,
					i = t.enc,
					s = i.Utf8,
					o = t.algo,
					u = (o.HMAC = r.extend({
						init: function (e, t) {
							(e = this._hasher = new e.init()), typeof t == "string" && (t = s.parse(t));
							var n = e.blockSize,
								r = n * 4;
							t.sigBytes > r && (t = e.finalize(t)), t.clamp();
							var i = (this._oKey = t.clone()),
								o = (this._iKey = t.clone()),
								u = i.words,
								a = o.words;
							for (var f = 0; f < n; f++) (u[f] ^= 1549556828), (a[f] ^= 909522486);
							(i.sigBytes = o.sigBytes = r), this.reset();
						},
						reset: function () {
							var e = this._hasher;
							e.reset(), e.update(this._iKey);
						},
						update: function (e) {
							return this._hasher.update(e), this;
						},
						finalize: function (e) {
							var t = this._hasher,
								n = t.finalize(e);
							t.reset();
							var r = t.finalize(this._oKey.clone().concat(n));
							return r;
						},
					}));
			})(),
			(function () {
				var t = e,
					n = t.lib,
					r = n.Base,
					i = n.WordArray,
					s = t.algo,
					o = s.SHA1,
					u = s.HMAC,
					a = (s.PBKDF2 = r.extend({
						cfg: r.extend({
							keySize: 4,
							hasher: o,
							iterations: 1,
						}),
						init: function (e) {
							this.cfg = this.cfg.extend(e);
						},
						compute: function (e, t) {
							var n = this.cfg,
								r = u.create(n.hasher, e),
								s = i.create(),
								o = i.create([1]),
								a = s.words,
								f = o.words,
								l = n.keySize,
								c = n.iterations;
							while (a.length < l) {
								var h = r.update(t).finalize(o);
								r.reset();
								var p = h.words,
									d = p.length,
									v = h;
								for (var m = 1; m < c; m++) {
									(v = r.finalize(v)), r.reset();
									var g = v.words;
									for (var y = 0; y < d; y++) p[y] ^= g[y];
								}
								s.concat(h), f[0]++;
							}
							return (s.sigBytes = l * 4), s;
						},
					}));
				t.PBKDF2 = function (e, t, n) {
					return a.create(n).compute(e, t);
				};
			})(),
			(function () {
				var t = e,
					n = t.lib,
					r = n.Base,
					i = n.WordArray,
					s = t.algo,
					o = s.MD5,
					u = (s.EvpKDF = r.extend({
						cfg: r.extend({
							keySize: 4,
							hasher: o,
							iterations: 1,
						}),
						init: function (e) {
							this.cfg = this.cfg.extend(e);
						},
						compute: function (e, t) {
							var n,
								r = this.cfg,
								s = r.hasher.create(),
								o = i.create(),
								u = o.words,
								a = r.keySize,
								f = r.iterations;
							while (u.length < a) {
								n && s.update(n), (n = s.update(e).finalize(t)), s.reset();
								for (var l = 1; l < f; l++) (n = s.finalize(n)), s.reset();
								o.concat(n);
							}
							return (o.sigBytes = a * 4), o;
						},
					}));
				t.EvpKDF = function (e, t, n) {
					return u.create(n).compute(e, t);
				};
			})(),
			(function () {
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = t.algo,
					s = i.SHA256,
					o = (i.SHA224 = s.extend({
						_doReset: function () {
							this._hash = new r.init([
								3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839,
								3204075428,
							]);
						},
						_doFinalize: function () {
							var e = s._doFinalize.call(this);
							return (e.sigBytes -= 4), e;
						},
					}));
				(t.SHA224 = s._createHelper(o)), (t.HmacSHA224 = s._createHmacHelper(o));
			})(),
			(function (t) {
				var n = e,
					r = n.lib,
					i = r.Base,
					s = r.WordArray,
					o = (n.x64 = {}),
					u = (o.Word = i.extend({
						init: function (e, t) {
							(this.high = e), (this.low = t);
						},
					})),
					a = (o.WordArray = i.extend({
						init: function (e, n) {
							(e = this.words = e || []),
								n != t ? (this.sigBytes = n) : (this.sigBytes = e.length * 8);
						},
						toX32: function () {
							var e = this.words,
								t = e.length,
								n = [];
							for (var r = 0; r < t; r++) {
								var i = e[r];
								n.push(i.high), n.push(i.low);
							}
							return s.create(n, this.sigBytes);
						},
						clone: function () {
							var e = i.clone.call(this),
								t = (e.words = this.words.slice(0)),
								n = t.length;
							for (var r = 0; r < n; r++) t[r] = t[r].clone();
							return e;
						},
					}));
			})(),
			(function (t) {
				var n = e,
					r = n.lib,
					i = r.WordArray,
					s = r.Hasher,
					o = n.x64,
					u = o.Word,
					a = n.algo,
					f = [],
					l = [],
					c = [];
				(function () {
					var e = 1,
						t = 0;
					for (var n = 0; n < 24; n++) {
						f[e + 5 * t] = (((n + 1) * (n + 2)) / 2) % 64;
						var r = t % 5,
							i = (2 * e + 3 * t) % 5;
						(e = r), (t = i);
					}
					for (var e = 0; e < 5; e++)
						for (var t = 0; t < 5; t++) l[e + 5 * t] = t + ((2 * e + 3 * t) % 5) * 5;
					var s = 1;
					for (var o = 0; o < 24; o++) {
						var a = 0,
							h = 0;
						for (var p = 0; p < 7; p++) {
							if (s & 1) {
								var d = (1 << p) - 1;
								d < 32 ? (h ^= 1 << d) : (a ^= 1 << (d - 32));
							}
							s & 128 ? (s = (s << 1) ^ 113) : (s <<= 1);
						}
						c[o] = u.create(a, h);
					}
				})();
				var h = [];
				(function () {
					for (var e = 0; e < 25; e++) h[e] = u.create();
				})();
				var p = (a.SHA3 = s.extend({
					cfg: s.cfg.extend({
						outputLength: 512,
					}),
					_doReset: function () {
						var e = (this._state = []);
						for (var t = 0; t < 25; t++) e[t] = new u.init();
						this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
					},
					_doProcessBlock: function (e, t) {
						var n = this._state,
							r = this.blockSize / 2;
						for (var i = 0; i < r; i++) {
							var s = e[t + 2 * i],
								o = e[t + 2 * i + 1];
							(s = (((s << 8) | (s >>> 24)) & 16711935) | (((s << 24) | (s >>> 8)) & 4278255360)),
								(o = (((o << 8) | (o >>> 24)) & 16711935) | (((o << 24) | (o >>> 8)) & 4278255360));
							var u = n[i];
							(u.high ^= o), (u.low ^= s);
						}
						for (var a = 0; a < 24; a++) {
							for (var p = 0; p < 5; p++) {
								var d = 0,
									v = 0;
								for (var m = 0; m < 5; m++) {
									var u = n[p + 5 * m];
									(d ^= u.high), (v ^= u.low);
								}
								var g = h[p];
								(g.high = d), (g.low = v);
							}
							for (var p = 0; p < 5; p++) {
								var y = h[(p + 4) % 5],
									b = h[(p + 1) % 5],
									w = b.high,
									E = b.low,
									d = y.high ^ ((w << 1) | (E >>> 31)),
									v = y.low ^ ((E << 1) | (w >>> 31));
								for (var m = 0; m < 5; m++) {
									var u = n[p + 5 * m];
									(u.high ^= d), (u.low ^= v);
								}
							}
							for (var S = 1; S < 25; S++) {
								var d,
									v,
									u = n[S],
									x = u.high,
									N = u.low,
									C = f[S];
								C < 32
									? ((d = (x << C) | (N >>> (32 - C))), (v = (N << C) | (x >>> (32 - C))))
									: ((d = (N << (C - 32)) | (x >>> (64 - C))),
									  (v = (x << (C - 32)) | (N >>> (64 - C))));
								var k = h[l[S]];
								(k.high = d), (k.low = v);
							}
							var L = h[0],
								A = n[0];
							(L.high = A.high), (L.low = A.low);
							for (var p = 0; p < 5; p++)
								for (var m = 0; m < 5; m++) {
									var S = p + 5 * m,
										u = n[S],
										O = h[S],
										M = h[((p + 1) % 5) + 5 * m],
										_ = h[((p + 2) % 5) + 5 * m];
									(u.high = O.high ^ (~M.high & _.high)), (u.low = O.low ^ (~M.low & _.low));
								}
							var u = n[0],
								D = c[a];
							(u.high ^= D.high), (u.low ^= D.low);
						}
					},
					_doFinalize: function () {
						var e = this._data,
							n = e.words,
							r = this._nDataBytes * 8,
							s = e.sigBytes * 8,
							o = this.blockSize * 32;
						(n[s >>> 5] |= 1 << (24 - (s % 32))),
							(n[((t.ceil((s + 1) / o) * o) >>> 5) - 1] |= 128),
							(e.sigBytes = n.length * 4),
							this._process();
						var u = this._state,
							a = this.cfg.outputLength / 8,
							f = a / 8,
							l = [];
						for (var c = 0; c < f; c++) {
							var h = u[c],
								p = h.high,
								d = h.low;
							(p = (((p << 8) | (p >>> 24)) & 16711935) | (((p << 24) | (p >>> 8)) & 4278255360)),
								(d = (((d << 8) | (d >>> 24)) & 16711935) | (((d << 24) | (d >>> 8)) & 4278255360)),
								l.push(d),
								l.push(p);
						}
						return new i.init(l, a);
					},
					clone: function () {
						var e = s.clone.call(this),
							t = (e._state = this._state.slice(0));
						for (var n = 0; n < 25; n++) t[n] = t[n].clone();
						return e;
					},
				}));
				(n.SHA3 = s._createHelper(p)), (n.HmacSHA3 = s._createHmacHelper(p));
			})(Math),
			(function () {
				function a() {
					return s.create.apply(s, arguments);
				}
				var t = e,
					n = t.lib,
					r = n.Hasher,
					i = t.x64,
					s = i.Word,
					o = i.WordArray,
					u = t.algo,
					f = [
						a(1116352408, 3609767458),
						a(1899447441, 602891725),
						a(3049323471, 3964484399),
						a(3921009573, 2173295548),
						a(961987163, 4081628472),
						a(1508970993, 3053834265),
						a(2453635748, 2937671579),
						a(2870763221, 3664609560),
						a(3624381080, 2734883394),
						a(310598401, 1164996542),
						a(607225278, 1323610764),
						a(1426881987, 3590304994),
						a(1925078388, 4068182383),
						a(2162078206, 991336113),
						a(2614888103, 633803317),
						a(3248222580, 3479774868),
						a(3835390401, 2666613458),
						a(4022224774, 944711139),
						a(264347078, 2341262773),
						a(604807628, 2007800933),
						a(770255983, 1495990901),
						a(1249150122, 1856431235),
						a(1555081692, 3175218132),
						a(1996064986, 2198950837),
						a(2554220882, 3999719339),
						a(2821834349, 766784016),
						a(2952996808, 2566594879),
						a(3210313671, 3203337956),
						a(3336571891, 1034457026),
						a(3584528711, 2466948901),
						a(113926993, 3758326383),
						a(338241895, 168717936),
						a(666307205, 1188179964),
						a(773529912, 1546045734),
						a(1294757372, 1522805485),
						a(1396182291, 2643833823),
						a(1695183700, 2343527390),
						a(1986661051, 1014477480),
						a(2177026350, 1206759142),
						a(2456956037, 344077627),
						a(2730485921, 1290863460),
						a(2820302411, 3158454273),
						a(3259730800, 3505952657),
						a(3345764771, 106217008),
						a(3516065817, 3606008344),
						a(3600352804, 1432725776),
						a(4094571909, 1467031594),
						a(275423344, 851169720),
						a(430227734, 3100823752),
						a(506948616, 1363258195),
						a(659060556, 3750685593),
						a(883997877, 3785050280),
						a(958139571, 3318307427),
						a(1322822218, 3812723403),
						a(1537002063, 2003034995),
						a(1747873779, 3602036899),
						a(1955562222, 1575990012),
						a(2024104815, 1125592928),
						a(2227730452, 2716904306),
						a(2361852424, 442776044),
						a(2428436474, 593698344),
						a(2756734187, 3733110249),
						a(3204031479, 2999351573),
						a(3329325298, 3815920427),
						a(3391569614, 3928383900),
						a(3515267271, 566280711),
						a(3940187606, 3454069534),
						a(4118630271, 4000239992),
						a(116418474, 1914138554),
						a(174292421, 2731055270),
						a(289380356, 3203993006),
						a(460393269, 320620315),
						a(685471733, 587496836),
						a(852142971, 1086792851),
						a(1017036298, 365543100),
						a(1126000580, 2618297676),
						a(1288033470, 3409855158),
						a(1501505948, 4234509866),
						a(1607167915, 987167468),
						a(1816402316, 1246189591),
					],
					l = [];
				(function () {
					for (var e = 0; e < 80; e++) l[e] = a();
				})();
				var c = (u.SHA512 = r.extend({
					_doReset: function () {
						this._hash = new o.init([
							new s.init(1779033703, 4089235720),
							new s.init(3144134277, 2227873595),
							new s.init(1013904242, 4271175723),
							new s.init(2773480762, 1595750129),
							new s.init(1359893119, 2917565137),
							new s.init(2600822924, 725511199),
							new s.init(528734635, 4215389547),
							new s.init(1541459225, 327033209),
						]);
					},
					_doProcessBlock: function (e, t) {
						var n = this._hash.words,
							r = n[0],
							i = n[1],
							s = n[2],
							o = n[3],
							u = n[4],
							a = n[5],
							c = n[6],
							h = n[7],
							p = r.high,
							d = r.low,
							v = i.high,
							m = i.low,
							g = s.high,
							y = s.low,
							b = o.high,
							w = o.low,
							E = u.high,
							S = u.low,
							x = a.high,
							T = a.low,
							N = c.high,
							C = c.low,
							k = h.high,
							L = h.low,
							A = p,
							O = d,
							M = v,
							_ = m,
							D = g,
							P = y,
							H = b,
							B = w,
							j = E,
							F = S,
							I = x,
							q = T,
							R = N,
							U = C,
							z = k,
							X = L;
						for (var V = 0; V < 80; V++) {
							var $,
								J,
								Q = l[V];
							if (V < 16) (J = Q.high = e[t + V * 2] | 0), ($ = Q.low = e[t + V * 2 + 1] | 0);
							else {
								var G = l[V - 15],
									Y = G.high,
									Z = G.low,
									et = ((Y >>> 1) | (Z << 31)) ^ ((Y >>> 8) | (Z << 24)) ^ (Y >>> 7),
									tt = ((Z >>> 1) | (Y << 31)) ^ ((Z >>> 8) | (Y << 24)) ^ ((Z >>> 7) | (Y << 25)),
									nt = l[V - 2],
									rt = nt.high,
									it = nt.low,
									st = ((rt >>> 19) | (it << 13)) ^ ((rt << 3) | (it >>> 29)) ^ (rt >>> 6),
									ot =
										((it >>> 19) | (rt << 13)) ^
										((it << 3) | (rt >>> 29)) ^
										((it >>> 6) | (rt << 26)),
									ut = l[V - 7],
									at = ut.high,
									ft = ut.low,
									lt = l[V - 16],
									ct = lt.high,
									ht = lt.low;
								($ = tt + ft),
									(J = et + at + ($ >>> 0 < tt >>> 0 ? 1 : 0)),
									($ += ot),
									(J = J + st + ($ >>> 0 < ot >>> 0 ? 1 : 0)),
									($ += ht),
									(J = J + ct + ($ >>> 0 < ht >>> 0 ? 1 : 0)),
									(Q.high = J),
									(Q.low = $);
							}
							var pt = (j & I) ^ (~j & R),
								dt = (F & q) ^ (~F & U),
								vt = (A & M) ^ (A & D) ^ (M & D),
								mt = (O & _) ^ (O & P) ^ (_ & P),
								gt = ((A >>> 28) | (O << 4)) ^ ((A << 30) | (O >>> 2)) ^ ((A << 25) | (O >>> 7)),
								yt = ((O >>> 28) | (A << 4)) ^ ((O << 30) | (A >>> 2)) ^ ((O << 25) | (A >>> 7)),
								bt = ((j >>> 14) | (F << 18)) ^ ((j >>> 18) | (F << 14)) ^ ((j << 23) | (F >>> 9)),
								wt = ((F >>> 14) | (j << 18)) ^ ((F >>> 18) | (j << 14)) ^ ((F << 23) | (j >>> 9)),
								Et = f[V],
								St = Et.high,
								xt = Et.low,
								Tt = X + wt,
								Nt = z + bt + (Tt >>> 0 < X >>> 0 ? 1 : 0),
								Tt = Tt + dt,
								Nt = Nt + pt + (Tt >>> 0 < dt >>> 0 ? 1 : 0),
								Tt = Tt + xt,
								Nt = Nt + St + (Tt >>> 0 < xt >>> 0 ? 1 : 0),
								Tt = Tt + $,
								Nt = Nt + J + (Tt >>> 0 < $ >>> 0 ? 1 : 0),
								Ct = yt + mt,
								kt = gt + vt + (Ct >>> 0 < yt >>> 0 ? 1 : 0);
							(z = R),
								(X = U),
								(R = I),
								(U = q),
								(I = j),
								(q = F),
								(F = (B + Tt) | 0),
								(j = (H + Nt + (F >>> 0 < B >>> 0 ? 1 : 0)) | 0),
								(H = D),
								(B = P),
								(D = M),
								(P = _),
								(M = A),
								(_ = O),
								(O = (Tt + Ct) | 0),
								(A = (Nt + kt + (O >>> 0 < Tt >>> 0 ? 1 : 0)) | 0);
						}
						(d = r.low = d + O),
							(r.high = p + A + (d >>> 0 < O >>> 0 ? 1 : 0)),
							(m = i.low = m + _),
							(i.high = v + M + (m >>> 0 < _ >>> 0 ? 1 : 0)),
							(y = s.low = y + P),
							(s.high = g + D + (y >>> 0 < P >>> 0 ? 1 : 0)),
							(w = o.low = w + B),
							(o.high = b + H + (w >>> 0 < B >>> 0 ? 1 : 0)),
							(S = u.low = S + F),
							(u.high = E + j + (S >>> 0 < F >>> 0 ? 1 : 0)),
							(T = a.low = T + q),
							(a.high = x + I + (T >>> 0 < q >>> 0 ? 1 : 0)),
							(C = c.low = C + U),
							(c.high = N + R + (C >>> 0 < U >>> 0 ? 1 : 0)),
							(L = h.low = L + X),
							(h.high = k + z + (L >>> 0 < X >>> 0 ? 1 : 0));
					},
					_doFinalize: function () {
						var e = this._data,
							t = e.words,
							n = this._nDataBytes * 8,
							r = e.sigBytes * 8;
						(t[r >>> 5] |= 128 << (24 - (r % 32))),
							(t[(((r + 128) >>> 10) << 5) + 30] = Math.floor(n / 4294967296)),
							(t[(((r + 128) >>> 10) << 5) + 31] = n),
							(e.sigBytes = t.length * 4),
							this._process();
						var i = this._hash.toX32();
						return i;
					},
					clone: function () {
						var e = r.clone.call(this);
						return (e._hash = this._hash.clone()), e;
					},
					blockSize: 32,
				}));
				(t.SHA512 = r._createHelper(c)), (t.HmacSHA512 = r._createHmacHelper(c));
			})(),
			(function () {
				var t = e,
					n = t.x64,
					r = n.Word,
					i = n.WordArray,
					s = t.algo,
					o = s.SHA512,
					u = (s.SHA384 = o.extend({
						_doReset: function () {
							this._hash = new i.init([
								new r.init(3418070365, 3238371032),
								new r.init(1654270250, 914150663),
								new r.init(2438529370, 812702999),
								new r.init(355462360, 4144912697),
								new r.init(1731405415, 4290775857),
								new r.init(2394180231, 1750603025),
								new r.init(3675008525, 1694076839),
								new r.init(1203062813, 3204075428),
							]);
						},
						_doFinalize: function () {
							var e = o._doFinalize.call(this);
							return (e.sigBytes -= 16), e;
						},
					}));
				(t.SHA384 = o._createHelper(u)), (t.HmacSHA384 = o._createHmacHelper(u));
			})(),
			e.lib.Cipher ||
				(function (t) {
					var n = e,
						r = n.lib,
						i = r.Base,
						s = r.WordArray,
						o = r.BufferedBlockAlgorithm,
						u = n.enc,
						a = u.Utf8,
						f = u.Base64,
						l = n.algo,
						c = l.EvpKDF,
						h = (r.Cipher = o.extend({
							cfg: i.extend(),
							createEncryptor: function (e, t) {
								return this.create(this._ENC_XFORM_MODE, e, t);
							},
							createDecryptor: function (e, t) {
								return this.create(this._DEC_XFORM_MODE, e, t);
							},
							init: function (e, t, n) {
								(this.cfg = this.cfg.extend(n)),
									(this._xformMode = e),
									(this._key = t),
									this.reset();
							},
							reset: function () {
								o.reset.call(this), this._doReset();
							},
							process: function (e) {
								return this._append(e), this._process();
							},
							finalize: function (e) {
								e && this._append(e);
								var t = this._doFinalize();
								return t;
							},
							keySize: 4,
							ivSize: 4,
							_ENC_XFORM_MODE: 1,
							_DEC_XFORM_MODE: 2,
							_createHelper: (function () {
								function e(e) {
									return typeof e == "string" ? C : x;
								}
								return function (t) {
									return {
										encrypt: function (n, r, i) {
											return e(r).encrypt(t, n, r, i);
										},
										decrypt: function (n, r, i) {
											return e(r).decrypt(t, n, r, i);
										},
									};
								};
							})(),
						})),
						p = (r.StreamCipher = h.extend({
							_doFinalize: function () {
								var e = this._process(!0);
								return e;
							},
							blockSize: 1,
						})),
						d = (n.mode = {}),
						v = (r.BlockCipherMode = i.extend({
							createEncryptor: function (e, t) {
								return this.Encryptor.create(e, t);
							},
							createDecryptor: function (e, t) {
								return this.Decryptor.create(e, t);
							},
							init: function (e, t) {
								(this._cipher = e), (this._iv = t);
							},
						})),
						m = (d.CBC = (function () {
							function n(e, n, r) {
								var i,
									s = this._iv;
								s ? ((i = s), (this._iv = t)) : (i = this._prevBlock);
								for (var o = 0; o < r; o++) e[n + o] ^= i[o];
							}
							var e = v.extend();
							return (
								(e.Encryptor = e.extend({
									processBlock: function (e, t) {
										var r = this._cipher,
											i = r.blockSize;
										n.call(this, e, t, i),
											r.encryptBlock(e, t),
											(this._prevBlock = e.slice(t, t + i));
									},
								})),
								(e.Decryptor = e.extend({
									processBlock: function (e, t) {
										var r = this._cipher,
											i = r.blockSize,
											s = e.slice(t, t + i);
										r.decryptBlock(e, t), n.call(this, e, t, i), (this._prevBlock = s);
									},
								})),
								e
							);
						})()),
						g = (n.pad = {}),
						y = (g.Pkcs7 = {
							pad: function (e, t) {
								var n = t * 4,
									r = n - (e.sigBytes % n),
									i = (r << 24) | (r << 16) | (r << 8) | r,
									o = [];
								for (var u = 0; u < r; u += 4) o.push(i);
								var a = s.create(o, r);
								e.concat(a);
							},
							unpad: function (e) {
								var t = e.words[(e.sigBytes - 1) >>> 2] & 255;
								e.sigBytes -= t;
							},
						}),
						b = (r.BlockCipher = h.extend({
							cfg: h.cfg.extend({
								mode: m,
								padding: y,
							}),
							reset: function () {
								var e;
								h.reset.call(this);
								var t = this.cfg,
									n = t.iv,
									r = t.mode;
								this._xformMode == this._ENC_XFORM_MODE
									? (e = r.createEncryptor)
									: ((e = r.createDecryptor), (this._minBufferSize = 1)),
									this._mode && this._mode.__creator == e
										? this._mode.init(this, n && n.words)
										: ((this._mode = e.call(r, this, n && n.words)), (this._mode.__creator = e));
							},
							_doProcessBlock: function (e, t) {
								this._mode.processBlock(e, t);
							},
							_doFinalize: function () {
								var e,
									t = this.cfg.padding;
								return (
									this._xformMode == this._ENC_XFORM_MODE
										? (t.pad(this._data, this.blockSize), (e = this._process(!0)))
										: ((e = this._process(!0)), t.unpad(e)),
									e
								);
							},
							blockSize: 4,
						})),
						w = (r.CipherParams = i.extend({
							init: function (e) {
								this.mixIn(e);
							},
							toString: function (e) {
								return (e || this.formatter).stringify(this);
							},
						})),
						E = (n.format = {}),
						S = (E.OpenSSL = {
							stringify: function (e) {
								var t,
									n = e.ciphertext,
									r = e.salt;
								return (
									r ? (t = s.create([1398893684, 1701076831]).concat(r).concat(n)) : (t = n),
									t.toString(f)
								);
							},
							parse: function (e) {
								var t,
									n = f.parse(e),
									r = n.words;
								return (
									r[0] == 1398893684 &&
										r[1] == 1701076831 &&
										((t = s.create(r.slice(2, 4))), r.splice(0, 4), (n.sigBytes -= 16)),
									w.create({
										ciphertext: n,
										salt: t,
									})
								);
							},
						}),
						x = (r.SerializableCipher = i.extend({
							cfg: i.extend({
								format: S,
							}),
							encrypt: function (e, t, n, r) {
								r = this.cfg.extend(r);
								var i = e.createEncryptor(n, r),
									s = i.finalize(t),
									o = i.cfg;
								return w.create({
									ciphertext: s,
									key: n,
									iv: o.iv,
									algorithm: e,
									mode: o.mode,
									padding: o.padding,
									blockSize: e.blockSize,
									formatter: r.format,
								});
							},
							decrypt: function (e, t, n, r) {
								(r = this.cfg.extend(r)), (t = this._parse(t, r.format));
								var i = e.createDecryptor(n, r).finalize(t.ciphertext);
								return i;
							},
							_parse: function (e, t) {
								return typeof e == "string" ? t.parse(e, this) : e;
							},
						})),
						T = (n.kdf = {}),
						N = (T.OpenSSL = {
							execute: function (e, t, n, r) {
								r || (r = s.random(8));
								var i = c
										.create({
											keySize: t + n,
										})
										.compute(e, r),
									o = s.create(i.words.slice(t), n * 4);
								return (
									(i.sigBytes = t * 4),
									w.create({
										key: i,
										iv: o,
										salt: r,
									})
								);
							},
						}),
						C = (r.PasswordBasedCipher = x.extend({
							cfg: x.cfg.extend({
								kdf: N,
							}),
							encrypt: function (e, t, n, r) {
								r = this.cfg.extend(r);
								var i = r.kdf.execute(n, e.keySize, e.ivSize);
								r.iv = i.iv;
								var s = x.encrypt.call(this, e, t, i.key, r);
								return s.mixIn(i), s;
							},
							decrypt: function (e, t, n, r) {
								(r = this.cfg.extend(r)), (t = this._parse(t, r.format));
								var i = r.kdf.execute(n, e.keySize, e.ivSize, t.salt);
								r.iv = i.iv;
								var s = x.decrypt.call(this, e, t, i.key, r);
								return s;
							},
						}));
				})(),
			(e.mode.CFB = (function () {
				function n(e, t, n, r) {
					var i,
						s = this._iv;
					s ? ((i = s.slice(0)), (this._iv = undefined)) : (i = this._prevBlock),
						r.encryptBlock(i, 0);
					for (var o = 0; o < n; o++) e[t + o] ^= i[o];
				}
				var t = e.lib.BlockCipherMode.extend();
				return (
					(t.Encryptor = t.extend({
						processBlock: function (e, t) {
							var r = this._cipher,
								i = r.blockSize;
							n.call(this, e, t, i, r), (this._prevBlock = e.slice(t, t + i));
						},
					})),
					(t.Decryptor = t.extend({
						processBlock: function (e, t) {
							var r = this._cipher,
								i = r.blockSize,
								s = e.slice(t, t + i);
							n.call(this, e, t, i, r), (this._prevBlock = s);
						},
					})),
					t
				);
			})()),
			(e.mode.ECB = (function () {
				var t = e.lib.BlockCipherMode.extend();
				return (
					(t.Encryptor = t.extend({
						processBlock: function (e, t) {
							this._cipher.encryptBlock(e, t);
						},
					})),
					(t.Decryptor = t.extend({
						processBlock: function (e, t) {
							this._cipher.decryptBlock(e, t);
						},
					})),
					t
				);
			})()),
			(e.pad.AnsiX923 = {
				pad: function (e, t) {
					var n = e.sigBytes,
						r = t * 4,
						i = r - (n % r),
						s = n + i - 1;
					e.clamp(), (e.words[s >>> 2] |= i << (24 - (s % 4) * 8)), (e.sigBytes += i);
				},
				unpad: function (e) {
					var t = e.words[(e.sigBytes - 1) >>> 2] & 255;
					e.sigBytes -= t;
				},
			}),
			(e.pad.Iso10126 = {
				pad: function (t, n) {
					var r = n * 4,
						i = r - (t.sigBytes % r);
					t.concat(e.lib.WordArray.random(i - 1)).concat(e.lib.WordArray.create([i << 24], 1));
				},
				unpad: function (e) {
					var t = e.words[(e.sigBytes - 1) >>> 2] & 255;
					e.sigBytes -= t;
				},
			}),
			(e.pad.Iso97971 = {
				pad: function (t, n) {
					t.concat(e.lib.WordArray.create([2147483648], 1)), e.pad.ZeroPadding.pad(t, n);
				},
				unpad: function (t) {
					e.pad.ZeroPadding.unpad(t), t.sigBytes--;
				},
			}),
			(e.mode.OFB = (function () {
				var t = e.lib.BlockCipherMode.extend(),
					n = (t.Encryptor = t.extend({
						processBlock: function (e, t) {
							var n = this._cipher,
								r = n.blockSize,
								i = this._iv,
								s = this._keystream;
							i && ((s = this._keystream = i.slice(0)), (this._iv = undefined)),
								n.encryptBlock(s, 0);
							for (var o = 0; o < r; o++) e[t + o] ^= s[o];
						},
					}));
				return (t.Decryptor = n), t;
			})()),
			(e.pad.NoPadding = {
				pad: function () {},
				unpad: function () {},
			}),
			(function (t) {
				var n = e,
					r = n.lib,
					i = r.CipherParams,
					s = n.enc,
					o = s.Hex,
					u = n.format,
					a = (u.Hex = {
						stringify: function (e) {
							return e.ciphertext.toString(o);
						},
						parse: function (e) {
							var t = o.parse(e);
							return i.create({
								ciphertext: t,
							});
						},
					});
			})(),
			(function () {
				var t = e,
					n = t.lib,
					r = n.BlockCipher,
					i = t.algo,
					s = [],
					o = [],
					u = [],
					a = [],
					f = [],
					l = [],
					c = [],
					h = [],
					p = [],
					d = [];
				(function () {
					var e = [];
					for (var t = 0; t < 256; t++) t < 128 ? (e[t] = t << 1) : (e[t] = (t << 1) ^ 283);
					var n = 0,
						r = 0;
					for (var t = 0; t < 256; t++) {
						var i = r ^ (r << 1) ^ (r << 2) ^ (r << 3) ^ (r << 4);
						(i = (i >>> 8) ^ (i & 255) ^ 99), (s[n] = i), (o[i] = n);
						var v = e[n],
							m = e[v],
							g = e[m],
							y = (e[i] * 257) ^ (i * 16843008);
						(u[n] = (y << 24) | (y >>> 8)),
							(a[n] = (y << 16) | (y >>> 16)),
							(f[n] = (y << 8) | (y >>> 24)),
							(l[n] = y);
						var y = (g * 16843009) ^ (m * 65537) ^ (v * 257) ^ (n * 16843008);
						(c[i] = (y << 24) | (y >>> 8)),
							(h[i] = (y << 16) | (y >>> 16)),
							(p[i] = (y << 8) | (y >>> 24)),
							(d[i] = y),
							n ? ((n = v ^ e[e[e[g ^ v]]]), (r ^= e[e[r]])) : (n = r = 1);
					}
				})();
				var v = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
					m = (i.AES = r.extend({
						_doReset: function () {
							var e;
							if (this._nRounds && this._keyPriorReset === this._key) return;
							var t = (this._keyPriorReset = this._key),
								n = t.words,
								r = t.sigBytes / 4,
								i = (this._nRounds = r + 6),
								o = (i + 1) * 4,
								u = (this._keySchedule = []);
							for (var a = 0; a < o; a++)
								a < r
									? (u[a] = n[a])
									: ((e = u[a - 1]),
									  a % r
											? r > 6 &&
											  a % r == 4 &&
											  (e =
													(s[e >>> 24] << 24) |
													(s[(e >>> 16) & 255] << 16) |
													(s[(e >>> 8) & 255] << 8) |
													s[e & 255])
											: ((e = (e << 8) | (e >>> 24)),
											  (e =
													(s[e >>> 24] << 24) |
													(s[(e >>> 16) & 255] << 16) |
													(s[(e >>> 8) & 255] << 8) |
													s[e & 255]),
											  (e ^= v[(a / r) | 0] << 24)),
									  (u[a] = u[a - r] ^ e));
							var f = (this._invKeySchedule = []);
							for (var l = 0; l < o; l++) {
								var a = o - l;
								if (l % 4) var e = u[a];
								else var e = u[a - 4];
								l < 4 || a <= 4
									? (f[l] = e)
									: (f[l] =
											c[s[e >>> 24]] ^
											h[s[(e >>> 16) & 255]] ^
											p[s[(e >>> 8) & 255]] ^
											d[s[e & 255]]);
							}
						},
						encryptBlock: function (e, t) {
							this._doCryptBlock(e, t, this._keySchedule, u, a, f, l, s);
						},
						decryptBlock: function (e, t) {
							var n = e[t + 1];
							(e[t + 1] = e[t + 3]),
								(e[t + 3] = n),
								this._doCryptBlock(e, t, this._invKeySchedule, c, h, p, d, o);
							var n = e[t + 1];
							(e[t + 1] = e[t + 3]), (e[t + 3] = n);
						},
						_doCryptBlock: function (e, t, n, r, i, s, o, u) {
							var a = this._nRounds,
								f = e[t] ^ n[0],
								l = e[t + 1] ^ n[1],
								c = e[t + 2] ^ n[2],
								h = e[t + 3] ^ n[3],
								p = 4;
							for (var d = 1; d < a; d++) {
								var v =
										r[f >>> 24] ^ i[(l >>> 16) & 255] ^ s[(c >>> 8) & 255] ^ o[h & 255] ^ n[p++],
									m = r[l >>> 24] ^ i[(c >>> 16) & 255] ^ s[(h >>> 8) & 255] ^ o[f & 255] ^ n[p++],
									g = r[c >>> 24] ^ i[(h >>> 16) & 255] ^ s[(f >>> 8) & 255] ^ o[l & 255] ^ n[p++],
									y = r[h >>> 24] ^ i[(f >>> 16) & 255] ^ s[(l >>> 8) & 255] ^ o[c & 255] ^ n[p++];
								(f = v), (l = m), (c = g), (h = y);
							}
							var v =
									((u[f >>> 24] << 24) |
										(u[(l >>> 16) & 255] << 16) |
										(u[(c >>> 8) & 255] << 8) |
										u[h & 255]) ^
									n[p++],
								m =
									((u[l >>> 24] << 24) |
										(u[(c >>> 16) & 255] << 16) |
										(u[(h >>> 8) & 255] << 8) |
										u[f & 255]) ^
									n[p++],
								g =
									((u[c >>> 24] << 24) |
										(u[(h >>> 16) & 255] << 16) |
										(u[(f >>> 8) & 255] << 8) |
										u[l & 255]) ^
									n[p++],
								y =
									((u[h >>> 24] << 24) |
										(u[(f >>> 16) & 255] << 16) |
										(u[(l >>> 8) & 255] << 8) |
										u[c & 255]) ^
									n[p++];
							(e[t] = v), (e[t + 1] = m), (e[t + 2] = g), (e[t + 3] = y);
						},
						keySize: 8,
					}));
				t.AES = r._createHelper(m);
			})(),
			(function () {
				function h(e, t) {
					var n = ((this._lBlock >>> e) ^ this._rBlock) & t;
					(this._rBlock ^= n), (this._lBlock ^= n << e);
				}

				function p(e, t) {
					var n = ((this._rBlock >>> e) ^ this._lBlock) & t;
					(this._lBlock ^= n), (this._rBlock ^= n << e);
				}
				var t = e,
					n = t.lib,
					r = n.WordArray,
					i = n.BlockCipher,
					s = t.algo,
					o = [
						57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11,
						3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53,
						45, 37, 29, 21, 13, 5, 28, 20, 12, 4,
					],
					u = [
						14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2,
						41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36,
						29, 32,
					],
					a = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
					f = [
						{
							0: 8421888,
							268435456: 32768,
							536870912: 8421378,
							805306368: 2,
							1073741824: 512,
							1342177280: 8421890,
							1610612736: 8389122,
							1879048192: 8388608,
							2147483648: 514,
							2415919104: 8389120,
							2684354560: 33280,
							2952790016: 8421376,
							3221225472: 32770,
							3489660928: 8388610,
							3758096384: 0,
							4026531840: 33282,
							134217728: 0,
							402653184: 8421890,
							671088640: 33282,
							939524096: 32768,
							1207959552: 8421888,
							1476395008: 512,
							1744830464: 8421378,
							2013265920: 2,
							2281701376: 8389120,
							2550136832: 33280,
							2818572288: 8421376,
							3087007744: 8389122,
							3355443200: 8388610,
							3623878656: 32770,
							3892314112: 514,
							4160749568: 8388608,
							1: 32768,
							268435457: 2,
							536870913: 8421888,
							805306369: 8388608,
							1073741825: 8421378,
							1342177281: 33280,
							1610612737: 512,
							1879048193: 8389122,
							2147483649: 8421890,
							2415919105: 8421376,
							2684354561: 8388610,
							2952790017: 33282,
							3221225473: 514,
							3489660929: 8389120,
							3758096385: 32770,
							4026531841: 0,
							134217729: 8421890,
							402653185: 8421376,
							671088641: 8388608,
							939524097: 512,
							1207959553: 32768,
							1476395009: 8388610,
							1744830465: 2,
							2013265921: 33282,
							2281701377: 32770,
							2550136833: 8389122,
							2818572289: 514,
							3087007745: 8421888,
							3355443201: 8389120,
							3623878657: 0,
							3892314113: 33280,
							4160749569: 8421378,
						},
						{
							0: 1074282512,
							16777216: 16384,
							33554432: 524288,
							50331648: 1074266128,
							67108864: 1073741840,
							83886080: 1074282496,
							100663296: 1073758208,
							117440512: 16,
							134217728: 540672,
							150994944: 1073758224,
							167772160: 1073741824,
							184549376: 540688,
							201326592: 524304,
							218103808: 0,
							234881024: 16400,
							251658240: 1074266112,
							8388608: 1073758208,
							25165824: 540688,
							41943040: 16,
							58720256: 1073758224,
							75497472: 1074282512,
							92274688: 1073741824,
							109051904: 524288,
							125829120: 1074266128,
							142606336: 524304,
							159383552: 0,
							176160768: 16384,
							192937984: 1074266112,
							209715200: 1073741840,
							226492416: 540672,
							243269632: 1074282496,
							260046848: 16400,
							268435456: 0,
							285212672: 1074266128,
							301989888: 1073758224,
							318767104: 1074282496,
							335544320: 1074266112,
							352321536: 16,
							369098752: 540688,
							385875968: 16384,
							402653184: 16400,
							419430400: 524288,
							436207616: 524304,
							452984832: 1073741840,
							469762048: 540672,
							486539264: 1073758208,
							503316480: 1073741824,
							520093696: 1074282512,
							276824064: 540688,
							293601280: 524288,
							310378496: 1074266112,
							327155712: 16384,
							343932928: 1073758208,
							360710144: 1074282512,
							377487360: 16,
							394264576: 1073741824,
							411041792: 1074282496,
							427819008: 1073741840,
							444596224: 1073758224,
							461373440: 524304,
							478150656: 0,
							494927872: 16400,
							511705088: 1074266128,
							528482304: 540672,
						},
						{
							0: 260,
							1048576: 0,
							2097152: 67109120,
							3145728: 65796,
							4194304: 65540,
							5242880: 67108868,
							6291456: 67174660,
							7340032: 67174400,
							8388608: 67108864,
							9437184: 67174656,
							10485760: 65792,
							11534336: 67174404,
							12582912: 67109124,
							13631488: 65536,
							14680064: 4,
							15728640: 256,
							524288: 67174656,
							1572864: 67174404,
							2621440: 0,
							3670016: 67109120,
							4718592: 67108868,
							5767168: 65536,
							6815744: 65540,
							7864320: 260,
							8912896: 4,
							9961472: 256,
							11010048: 67174400,
							12058624: 65796,
							13107200: 65792,
							14155776: 67109124,
							15204352: 67174660,
							16252928: 67108864,
							16777216: 67174656,
							17825792: 65540,
							18874368: 65536,
							19922944: 67109120,
							20971520: 256,
							22020096: 67174660,
							23068672: 67108868,
							24117248: 0,
							25165824: 67109124,
							26214400: 67108864,
							27262976: 4,
							28311552: 65792,
							29360128: 67174400,
							30408704: 260,
							31457280: 65796,
							32505856: 67174404,
							17301504: 67108864,
							18350080: 260,
							19398656: 67174656,
							20447232: 0,
							21495808: 65540,
							22544384: 67109120,
							23592960: 256,
							24641536: 67174404,
							25690112: 65536,
							26738688: 67174660,
							27787264: 65796,
							28835840: 67108868,
							29884416: 67109124,
							30932992: 67174400,
							31981568: 4,
							33030144: 65792,
						},
						{
							0: 2151682048,
							65536: 2147487808,
							131072: 4198464,
							196608: 2151677952,
							262144: 0,
							327680: 4198400,
							393216: 2147483712,
							458752: 4194368,
							524288: 2147483648,
							589824: 4194304,
							655360: 64,
							720896: 2147487744,
							786432: 2151678016,
							851968: 4160,
							917504: 4096,
							983040: 2151682112,
							32768: 2147487808,
							98304: 64,
							163840: 2151678016,
							229376: 2147487744,
							294912: 4198400,
							360448: 2151682112,
							425984: 0,
							491520: 2151677952,
							557056: 4096,
							622592: 2151682048,
							688128: 4194304,
							753664: 4160,
							819200: 2147483648,
							884736: 4194368,
							950272: 4198464,
							1015808: 2147483712,
							1048576: 4194368,
							1114112: 4198400,
							1179648: 2147483712,
							1245184: 0,
							1310720: 4160,
							1376256: 2151678016,
							1441792: 2151682048,
							1507328: 2147487808,
							1572864: 2151682112,
							1638400: 2147483648,
							1703936: 2151677952,
							1769472: 4198464,
							1835008: 2147487744,
							1900544: 4194304,
							1966080: 64,
							2031616: 4096,
							1081344: 2151677952,
							1146880: 2151682112,
							1212416: 0,
							1277952: 4198400,
							1343488: 4194368,
							1409024: 2147483648,
							1474560: 2147487808,
							1540096: 64,
							1605632: 2147483712,
							1671168: 4096,
							1736704: 2147487744,
							1802240: 2151678016,
							1867776: 4160,
							1933312: 2151682048,
							1998848: 4194304,
							2064384: 4198464,
						},
						{
							0: 128,
							4096: 17039360,
							8192: 262144,
							12288: 536870912,
							16384: 537133184,
							20480: 16777344,
							24576: 553648256,
							28672: 262272,
							32768: 16777216,
							36864: 537133056,
							40960: 536871040,
							45056: 553910400,
							49152: 553910272,
							53248: 0,
							57344: 17039488,
							61440: 553648128,
							2048: 17039488,
							6144: 553648256,
							10240: 128,
							14336: 17039360,
							18432: 262144,
							22528: 537133184,
							26624: 553910272,
							30720: 536870912,
							34816: 537133056,
							38912: 0,
							43008: 553910400,
							47104: 16777344,
							51200: 536871040,
							55296: 553648128,
							59392: 16777216,
							63488: 262272,
							65536: 262144,
							69632: 128,
							73728: 536870912,
							77824: 553648256,
							81920: 16777344,
							86016: 553910272,
							90112: 537133184,
							94208: 16777216,
							98304: 553910400,
							102400: 553648128,
							106496: 17039360,
							110592: 537133056,
							114688: 262272,
							118784: 536871040,
							122880: 0,
							126976: 17039488,
							67584: 553648256,
							71680: 16777216,
							75776: 17039360,
							79872: 537133184,
							83968: 536870912,
							88064: 17039488,
							92160: 128,
							96256: 553910272,
							100352: 262272,
							104448: 553910400,
							108544: 0,
							112640: 553648128,
							116736: 16777344,
							120832: 262144,
							124928: 537133056,
							129024: 536871040,
						},
						{
							0: 268435464,
							256: 8192,
							512: 270532608,
							768: 270540808,
							1024: 268443648,
							1280: 2097152,
							1536: 2097160,
							1792: 268435456,
							2048: 0,
							2304: 268443656,
							2560: 2105344,
							2816: 8,
							3072: 270532616,
							3328: 2105352,
							3584: 8200,
							3840: 270540800,
							128: 270532608,
							384: 270540808,
							640: 8,
							896: 2097152,
							1152: 2105352,
							1408: 268435464,
							1664: 268443648,
							1920: 8200,
							2176: 2097160,
							2432: 8192,
							2688: 268443656,
							2944: 270532616,
							3200: 0,
							3456: 270540800,
							3712: 2105344,
							3968: 268435456,
							4096: 268443648,
							4352: 270532616,
							4608: 270540808,
							4864: 8200,
							5120: 2097152,
							5376: 268435456,
							5632: 268435464,
							5888: 2105344,
							6144: 2105352,
							6400: 0,
							6656: 8,
							6912: 270532608,
							7168: 8192,
							7424: 268443656,
							7680: 270540800,
							7936: 2097160,
							4224: 8,
							4480: 2105344,
							4736: 2097152,
							4992: 268435464,
							5248: 268443648,
							5504: 8200,
							5760: 270540808,
							6016: 270532608,
							6272: 270540800,
							6528: 270532616,
							6784: 8192,
							7040: 2105352,
							7296: 2097160,
							7552: 0,
							7808: 268435456,
							8064: 268443656,
						},
						{
							0: 1048576,
							16: 33555457,
							32: 1024,
							48: 1049601,
							64: 34604033,
							80: 0,
							96: 1,
							112: 34603009,
							128: 33555456,
							144: 1048577,
							160: 33554433,
							176: 34604032,
							192: 34603008,
							208: 1025,
							224: 1049600,
							240: 33554432,
							8: 34603009,
							24: 0,
							40: 33555457,
							56: 34604032,
							72: 1048576,
							88: 33554433,
							104: 33554432,
							120: 1025,
							136: 1049601,
							152: 33555456,
							168: 34603008,
							184: 1048577,
							200: 1024,
							216: 34604033,
							232: 1,
							248: 1049600,
							256: 33554432,
							272: 1048576,
							288: 33555457,
							304: 34603009,
							320: 1048577,
							336: 33555456,
							352: 34604032,
							368: 1049601,
							384: 1025,
							400: 34604033,
							416: 1049600,
							432: 1,
							448: 0,
							464: 34603008,
							480: 33554433,
							496: 1024,
							264: 1049600,
							280: 33555457,
							296: 34603009,
							312: 1,
							328: 33554432,
							344: 1048576,
							360: 1025,
							376: 34604032,
							392: 33554433,
							408: 34603008,
							424: 0,
							440: 34604033,
							456: 1049601,
							472: 1024,
							488: 33555456,
							504: 1048577,
						},
						{
							0: 134219808,
							1: 131072,
							2: 134217728,
							3: 32,
							4: 131104,
							5: 134350880,
							6: 134350848,
							7: 2048,
							8: 134348800,
							9: 134219776,
							10: 133120,
							11: 134348832,
							12: 2080,
							13: 0,
							14: 134217760,
							15: 133152,
							2147483648: 2048,
							2147483649: 134350880,
							2147483650: 134219808,
							2147483651: 134217728,
							2147483652: 134348800,
							2147483653: 133120,
							2147483654: 133152,
							2147483655: 32,
							2147483656: 134217760,
							2147483657: 2080,
							2147483658: 131104,
							2147483659: 134350848,
							2147483660: 0,
							2147483661: 134348832,
							2147483662: 134219776,
							2147483663: 131072,
							16: 133152,
							17: 134350848,
							18: 32,
							19: 2048,
							20: 134219776,
							21: 134217760,
							22: 134348832,
							23: 131072,
							24: 0,
							25: 131104,
							26: 134348800,
							27: 134219808,
							28: 134350880,
							29: 133120,
							30: 2080,
							31: 134217728,
							2147483664: 131072,
							2147483665: 2048,
							2147483666: 134348832,
							2147483667: 133152,
							2147483668: 32,
							2147483669: 134348800,
							2147483670: 134217728,
							2147483671: 134219808,
							2147483672: 134350880,
							2147483673: 134217760,
							2147483674: 134219776,
							2147483675: 0,
							2147483676: 133120,
							2147483677: 2080,
							2147483678: 131104,
							2147483679: 134350848,
						},
					],
					l = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
					c = (s.DES = i.extend({
						_doReset: function () {
							var e = this._key,
								t = e.words,
								n = [];
							for (var r = 0; r < 56; r++) {
								var i = o[r] - 1;
								n[r] = (t[i >>> 5] >>> (31 - (i % 32))) & 1;
							}
							var s = (this._subKeys = []);
							for (var f = 0; f < 16; f++) {
								var l = (s[f] = []),
									c = a[f];
								for (var r = 0; r < 24; r++)
									(l[(r / 6) | 0] |= n[(u[r] - 1 + c) % 28] << (31 - (r % 6))),
										(l[4 + ((r / 6) | 0)] |= n[28 + ((u[r + 24] - 1 + c) % 28)] << (31 - (r % 6)));
								l[0] = (l[0] << 1) | (l[0] >>> 31);
								for (var r = 1; r < 7; r++) l[r] = l[r] >>> ((r - 1) * 4 + 3);
								l[7] = (l[7] << 5) | (l[7] >>> 27);
							}
							var h = (this._invSubKeys = []);
							for (var r = 0; r < 16; r++) h[r] = s[15 - r];
						},
						encryptBlock: function (e, t) {
							this._doCryptBlock(e, t, this._subKeys);
						},
						decryptBlock: function (e, t) {
							this._doCryptBlock(e, t, this._invSubKeys);
						},
						_doCryptBlock: function (e, t, n) {
							(this._lBlock = e[t]),
								(this._rBlock = e[t + 1]),
								h.call(this, 4, 252645135),
								h.call(this, 16, 65535),
								p.call(this, 2, 858993459),
								p.call(this, 8, 16711935),
								h.call(this, 1, 1431655765);
							for (var r = 0; r < 16; r++) {
								var i = n[r],
									s = this._lBlock,
									o = this._rBlock,
									u = 0;
								for (var a = 0; a < 8; a++) u |= f[a][((o ^ i[a]) & l[a]) >>> 0];
								(this._lBlock = o), (this._rBlock = s ^ u);
							}
							var c = this._lBlock;
							(this._lBlock = this._rBlock),
								(this._rBlock = c),
								h.call(this, 1, 1431655765),
								p.call(this, 8, 16711935),
								p.call(this, 2, 858993459),
								h.call(this, 16, 65535),
								h.call(this, 4, 252645135),
								(e[t] = this._lBlock),
								(e[t + 1] = this._rBlock);
						},
						keySize: 2,
						ivSize: 2,
						blockSize: 2,
					}));
				t.DES = i._createHelper(c);
				var d = (s.TripleDES = i.extend({
					_doReset: function () {
						var e = this._key,
							t = e.words;
						if (t.length !== 2 && t.length !== 4 && t.length < 6)
							throw new Error(
								"Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192."
							);
						var n = t.slice(0, 2),
							i = t.length < 4 ? t.slice(0, 2) : t.slice(2, 4),
							s = t.length < 6 ? t.slice(0, 2) : t.slice(4, 6);
						(this._des1 = c.createEncryptor(r.create(n))),
							(this._des2 = c.createEncryptor(r.create(i))),
							(this._des3 = c.createEncryptor(r.create(s)));
					},
					encryptBlock: function (e, t) {
						this._des1.encryptBlock(e, t),
							this._des2.decryptBlock(e, t),
							this._des3.encryptBlock(e, t);
					},
					decryptBlock: function (e, t) {
						this._des3.decryptBlock(e, t),
							this._des2.encryptBlock(e, t),
							this._des1.decryptBlock(e, t);
					},
					keySize: 6,
					ivSize: 2,
					blockSize: 2,
				}));
				t.TripleDES = i._createHelper(d);
			})(),
			(function () {
				function o() {
					var e = this._S,
						t = this._i,
						n = this._j,
						r = 0;
					for (var i = 0; i < 4; i++) {
						(t = (t + 1) % 256), (n = (n + e[t]) % 256);
						var s = e[t];
						(e[t] = e[n]), (e[n] = s), (r |= e[(e[t] + e[n]) % 256] << (24 - i * 8));
					}
					return (this._i = t), (this._j = n), r;
				}
				var t = e,
					n = t.lib,
					r = n.StreamCipher,
					i = t.algo,
					s = (i.RC4 = r.extend({
						_doReset: function () {
							var e = this._key,
								t = e.words,
								n = e.sigBytes,
								r = (this._S = []);
							for (var i = 0; i < 256; i++) r[i] = i;
							for (var i = 0, s = 0; i < 256; i++) {
								var o = i % n,
									u = (t[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
								s = (s + r[i] + u) % 256;
								var a = r[i];
								(r[i] = r[s]), (r[s] = a);
							}
							this._i = this._j = 0;
						},
						_doProcessBlock: function (e, t) {
							e[t] ^= o.call(this);
						},
						keySize: 8,
						ivSize: 0,
					}));
				t.RC4 = r._createHelper(s);
				var u = (i.RC4Drop = s.extend({
					cfg: s.cfg.extend({
						drop: 192,
					}),
					_doReset: function () {
						s._doReset.call(this);
						for (var e = this.cfg.drop; e > 0; e--) o.call(this);
					},
				}));
				t.RC4Drop = r._createHelper(u);
			})(),
			(e.mode.CTRGladman = (function () {
				function n(e) {
					if (((e >> 24) & 255) === 255) {
						var t = (e >> 16) & 255,
							n = (e >> 8) & 255,
							r = e & 255;
						t === 255 ? ((t = 0), n === 255 ? ((n = 0), r === 255 ? (r = 0) : ++r) : ++n) : ++t,
							(e = 0),
							(e += t << 16),
							(e += n << 8),
							(e += r);
					} else e += 1 << 24;
					return e;
				}

				function r(e) {
					return (e[0] = n(e[0])) === 0 && (e[1] = n(e[1])), e;
				}
				var t = e.lib.BlockCipherMode.extend(),
					i = (t.Encryptor = t.extend({
						processBlock: function (e, t) {
							var n = this._cipher,
								i = n.blockSize,
								s = this._iv,
								o = this._counter;
							s && ((o = this._counter = s.slice(0)), (this._iv = undefined)), r(o);
							var u = o.slice(0);
							n.encryptBlock(u, 0);
							for (var a = 0; a < i; a++) e[t + a] ^= u[a];
						},
					}));
				return (t.Decryptor = i), t;
			})()),
			(function () {
				function f() {
					var e = this._X,
						t = this._C;
					for (var n = 0; n < 8; n++) o[n] = t[n];
					(t[0] = (t[0] + 1295307597 + this._b) | 0),
						(t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < o[0] >>> 0 ? 1 : 0)) | 0),
						(t[2] = (t[2] + 886263092 + (t[1] >>> 0 < o[1] >>> 0 ? 1 : 0)) | 0),
						(t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < o[2] >>> 0 ? 1 : 0)) | 0),
						(t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < o[3] >>> 0 ? 1 : 0)) | 0),
						(t[5] = (t[5] + 886263092 + (t[4] >>> 0 < o[4] >>> 0 ? 1 : 0)) | 0),
						(t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < o[5] >>> 0 ? 1 : 0)) | 0),
						(t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < o[6] >>> 0 ? 1 : 0)) | 0),
						(this._b = t[7] >>> 0 < o[7] >>> 0 ? 1 : 0);
					for (var n = 0; n < 8; n++) {
						var r = e[n] + t[n],
							i = r & 65535,
							s = r >>> 16,
							a = ((((i * i) >>> 17) + i * s) >>> 15) + s * s,
							f = (((r & 4294901760) * r) | 0) + (((r & 65535) * r) | 0);
						u[n] = a ^ f;
					}
					(e[0] = (u[0] + ((u[7] << 16) | (u[7] >>> 16)) + ((u[6] << 16) | (u[6] >>> 16))) | 0),
						(e[1] = (u[1] + ((u[0] << 8) | (u[0] >>> 24)) + u[7]) | 0),
						(e[2] = (u[2] + ((u[1] << 16) | (u[1] >>> 16)) + ((u[0] << 16) | (u[0] >>> 16))) | 0),
						(e[3] = (u[3] + ((u[2] << 8) | (u[2] >>> 24)) + u[1]) | 0),
						(e[4] = (u[4] + ((u[3] << 16) | (u[3] >>> 16)) + ((u[2] << 16) | (u[2] >>> 16))) | 0),
						(e[5] = (u[5] + ((u[4] << 8) | (u[4] >>> 24)) + u[3]) | 0),
						(e[6] = (u[6] + ((u[5] << 16) | (u[5] >>> 16)) + ((u[4] << 16) | (u[4] >>> 16))) | 0),
						(e[7] = (u[7] + ((u[6] << 8) | (u[6] >>> 24)) + u[5]) | 0);
				}
				var t = e,
					n = t.lib,
					r = n.StreamCipher,
					i = t.algo,
					s = [],
					o = [],
					u = [],
					a = (i.Rabbit = r.extend({
						_doReset: function () {
							var e = this._key.words,
								t = this.cfg.iv;
							for (var n = 0; n < 4; n++)
								e[n] =
									(((e[n] << 8) | (e[n] >>> 24)) & 16711935) |
									(((e[n] << 24) | (e[n] >>> 8)) & 4278255360);
							var r = (this._X = [
									e[0],
									(e[3] << 16) | (e[2] >>> 16),
									e[1],
									(e[0] << 16) | (e[3] >>> 16),
									e[2],
									(e[1] << 16) | (e[0] >>> 16),
									e[3],
									(e[2] << 16) | (e[1] >>> 16),
								]),
								i = (this._C = [
									(e[2] << 16) | (e[2] >>> 16),
									(e[0] & 4294901760) | (e[1] & 65535),
									(e[3] << 16) | (e[3] >>> 16),
									(e[1] & 4294901760) | (e[2] & 65535),
									(e[0] << 16) | (e[0] >>> 16),
									(e[2] & 4294901760) | (e[3] & 65535),
									(e[1] << 16) | (e[1] >>> 16),
									(e[3] & 4294901760) | (e[0] & 65535),
								]);
							this._b = 0;
							for (var n = 0; n < 4; n++) f.call(this);
							for (var n = 0; n < 8; n++) i[n] ^= r[(n + 4) & 7];
							if (t) {
								var s = t.words,
									o = s[0],
									u = s[1],
									a = (((o << 8) | (o >>> 24)) & 16711935) | (((o << 24) | (o >>> 8)) & 4278255360),
									l = (((u << 8) | (u >>> 24)) & 16711935) | (((u << 24) | (u >>> 8)) & 4278255360),
									c = (a >>> 16) | (l & 4294901760),
									h = (l << 16) | (a & 65535);
								(i[0] ^= a),
									(i[1] ^= c),
									(i[2] ^= l),
									(i[3] ^= h),
									(i[4] ^= a),
									(i[5] ^= c),
									(i[6] ^= l),
									(i[7] ^= h);
								for (var n = 0; n < 4; n++) f.call(this);
							}
						},
						_doProcessBlock: function (e, t) {
							var n = this._X;
							f.call(this),
								(s[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
								(s[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
								(s[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
								(s[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
							for (var r = 0; r < 4; r++)
								(s[r] =
									(((s[r] << 8) | (s[r] >>> 24)) & 16711935) |
									(((s[r] << 24) | (s[r] >>> 8)) & 4278255360)),
									(e[t + r] ^= s[r]);
						},
						blockSize: 4,
						ivSize: 2,
					}));
				t.Rabbit = r._createHelper(a);
			})(),
			(e.mode.CTR = (function () {
				var t = e.lib.BlockCipherMode.extend(),
					n = (t.Encryptor = t.extend({
						processBlock: function (e, t) {
							var n = this._cipher,
								r = n.blockSize,
								i = this._iv,
								s = this._counter;
							i && ((s = this._counter = i.slice(0)), (this._iv = undefined));
							var o = s.slice(0);
							n.encryptBlock(o, 0), (s[r - 1] = (s[r - 1] + 1) | 0);
							for (var u = 0; u < r; u++) e[t + u] ^= o[u];
						},
					}));
				return (t.Decryptor = n), t;
			})()),
			(function () {
				function f() {
					var e = this._X,
						t = this._C;
					for (var n = 0; n < 8; n++) o[n] = t[n];
					(t[0] = (t[0] + 1295307597 + this._b) | 0),
						(t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < o[0] >>> 0 ? 1 : 0)) | 0),
						(t[2] = (t[2] + 886263092 + (t[1] >>> 0 < o[1] >>> 0 ? 1 : 0)) | 0),
						(t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < o[2] >>> 0 ? 1 : 0)) | 0),
						(t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < o[3] >>> 0 ? 1 : 0)) | 0),
						(t[5] = (t[5] + 886263092 + (t[4] >>> 0 < o[4] >>> 0 ? 1 : 0)) | 0),
						(t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < o[5] >>> 0 ? 1 : 0)) | 0),
						(t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < o[6] >>> 0 ? 1 : 0)) | 0),
						(this._b = t[7] >>> 0 < o[7] >>> 0 ? 1 : 0);
					for (var n = 0; n < 8; n++) {
						var r = e[n] + t[n],
							i = r & 65535,
							s = r >>> 16,
							a = ((((i * i) >>> 17) + i * s) >>> 15) + s * s,
							f = (((r & 4294901760) * r) | 0) + (((r & 65535) * r) | 0);
						u[n] = a ^ f;
					}
					(e[0] = (u[0] + ((u[7] << 16) | (u[7] >>> 16)) + ((u[6] << 16) | (u[6] >>> 16))) | 0),
						(e[1] = (u[1] + ((u[0] << 8) | (u[0] >>> 24)) + u[7]) | 0),
						(e[2] = (u[2] + ((u[1] << 16) | (u[1] >>> 16)) + ((u[0] << 16) | (u[0] >>> 16))) | 0),
						(e[3] = (u[3] + ((u[2] << 8) | (u[2] >>> 24)) + u[1]) | 0),
						(e[4] = (u[4] + ((u[3] << 16) | (u[3] >>> 16)) + ((u[2] << 16) | (u[2] >>> 16))) | 0),
						(e[5] = (u[5] + ((u[4] << 8) | (u[4] >>> 24)) + u[3]) | 0),
						(e[6] = (u[6] + ((u[5] << 16) | (u[5] >>> 16)) + ((u[4] << 16) | (u[4] >>> 16))) | 0),
						(e[7] = (u[7] + ((u[6] << 8) | (u[6] >>> 24)) + u[5]) | 0);
				}
				var t = e,
					n = t.lib,
					r = n.StreamCipher,
					i = t.algo,
					s = [],
					o = [],
					u = [],
					a = (i.RabbitLegacy = r.extend({
						_doReset: function () {
							var e = this._key.words,
								t = this.cfg.iv,
								n = (this._X = [
									e[0],
									(e[3] << 16) | (e[2] >>> 16),
									e[1],
									(e[0] << 16) | (e[3] >>> 16),
									e[2],
									(e[1] << 16) | (e[0] >>> 16),
									e[3],
									(e[2] << 16) | (e[1] >>> 16),
								]),
								r = (this._C = [
									(e[2] << 16) | (e[2] >>> 16),
									(e[0] & 4294901760) | (e[1] & 65535),
									(e[3] << 16) | (e[3] >>> 16),
									(e[1] & 4294901760) | (e[2] & 65535),
									(e[0] << 16) | (e[0] >>> 16),
									(e[2] & 4294901760) | (e[3] & 65535),
									(e[1] << 16) | (e[1] >>> 16),
									(e[3] & 4294901760) | (e[0] & 65535),
								]);
							this._b = 0;
							for (var i = 0; i < 4; i++) f.call(this);
							for (var i = 0; i < 8; i++) r[i] ^= n[(i + 4) & 7];
							if (t) {
								var s = t.words,
									o = s[0],
									u = s[1],
									a = (((o << 8) | (o >>> 24)) & 16711935) | (((o << 24) | (o >>> 8)) & 4278255360),
									l = (((u << 8) | (u >>> 24)) & 16711935) | (((u << 24) | (u >>> 8)) & 4278255360),
									c = (a >>> 16) | (l & 4294901760),
									h = (l << 16) | (a & 65535);
								(r[0] ^= a),
									(r[1] ^= c),
									(r[2] ^= l),
									(r[3] ^= h),
									(r[4] ^= a),
									(r[5] ^= c),
									(r[6] ^= l),
									(r[7] ^= h);
								for (var i = 0; i < 4; i++) f.call(this);
							}
						},
						_doProcessBlock: function (e, t) {
							var n = this._X;
							f.call(this),
								(s[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
								(s[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
								(s[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
								(s[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
							for (var r = 0; r < 4; r++)
								(s[r] =
									(((s[r] << 8) | (s[r] >>> 24)) & 16711935) |
									(((s[r] << 24) | (s[r] >>> 8)) & 4278255360)),
									(e[t + r] ^= s[r]);
						},
						blockSize: 4,
						ivSize: 2,
					}));
				t.RabbitLegacy = r._createHelper(a);
			})(),
			(e.pad.ZeroPadding = {
				pad: function (e, t) {
					var n = t * 4;
					e.clamp(), (e.sigBytes += n - (e.sigBytes % n || n));
				},
				unpad: function (e) {
					var t = e.words,
						n = e.sigBytes - 1;
					for (var n = e.sigBytes - 1; n >= 0; n--)
						if ((t[n >>> 2] >>> (24 - (n % 4) * 8)) & 255) {
							e.sigBytes = n + 1;
							break;
						}
				},
			}),
			e
		);
	}),
	define("gates/utils", ["cryptojs"], function (e) {
		var t = {
			a: [
				"bec6353737118213",
				"e63554735586e447",
				"66765a366138424a",
				"a424831663a56766",
				"744e68553745536e",
				"8c0d013e5598771b",
				"b1778955e310d0c8",
			],
			scn: function (e) {
				var e = e;
				return function (t) {
					return t.concat(e);
				};
			},
			chw: function () {
				return e.enc.Hex.parse;
			},
			f: function () {
				return e.AES.encrypt;
			},
			b: function () {
				return e.AES.decrypt;
			},
			cuf: e.enc.Utf8,
			cbf: e.enc.Base64,
			gk: function () {
				var e = 2;
				return this.scn(this.a[e])(this.a[e * e]);
			},
			gm: function () {
				return {
					mode: e.mode.ECB,
				};
			},
		};
		return t;
	}),
	function (e) {
		function t(e, t, n) {
			switch (arguments.length) {
				case 2:
					return null != e ? e : t;
				case 3:
					return null != e ? e : null != t ? t : n;
				default:
					throw new Error("Implement me");
			}
		}

		function n(e, t) {
			return kt.call(e, t);
		}

		function r() {
			return {
				empty: !1,
				unusedTokens: [],
				unusedInput: [],
				overflow: -2,
				charsLeftOver: 0,
				nullInput: !1,
				invalidMonth: null,
				invalidFormat: !1,
				userInvalidated: !1,
				iso: !1,
			};
		}

		function i(e) {
			Et.suppressDeprecationWarnings === !1 &&
				"undefined" != typeof console &&
				console.warn &&
				console.warn("Deprecation warning: " + e);
		}

		function s(e, t) {
			var n = !0;
			return d(function () {
				return n && (i(e), (n = !1)), t.apply(this, arguments);
			}, t);
		}

		function o(e, t) {
			bn[e] || (i(t), (bn[e] = !0));
		}

		function u(e, t) {
			return function (n) {
				return g(e.call(this, n), t);
			};
		}

		function a(e, t) {
			return function (n) {
				return this.localeData().ordinal(e.call(this, n), t);
			};
		}

		function f(e, t) {
			var n,
				r,
				i = 12 * (t.year() - e.year()) + (t.month() - e.month()),
				s = e.clone().add(i, "months");
			return (
				0 > t - s
					? ((n = e.clone().add(i - 1, "months")), (r = (t - s) / (s - n)))
					: ((n = e.clone().add(i + 1, "months")), (r = (t - s) / (n - s))),
				-(i + r)
			);
		}

		function l(e, t, n) {
			var r;
			return null == n
				? t
				: null != e.meridiemHour
				? e.meridiemHour(t, n)
				: null != e.isPM
				? ((r = e.isPM(n)), r && 12 > t && (t += 12), r || 12 !== t || (t = 0), t)
				: t;
		}

		function c() {}

		function h(e, t) {
			t !== !1 && D(e),
				v(this, e),
				(this._d = new Date(+e._d)),
				En === !1 && ((En = !0), Et.updateOffset(this), (En = !1));
		}

		function p(e) {
			var t = C(e),
				n = t.year || 0,
				r = t.quarter || 0,
				i = t.month || 0,
				s = t.week || 0,
				o = t.day || 0,
				u = t.hour || 0,
				a = t.minute || 0,
				f = t.second || 0,
				l = t.millisecond || 0;
			(this._milliseconds = +l + 1e3 * f + 6e4 * a + 36e5 * u),
				(this._days = +o + 7 * s),
				(this._months = +i + 3 * r + 12 * n),
				(this._data = {}),
				(this._locale = Et.localeData()),
				this._bubble();
		}

		function d(e, t) {
			for (var r in t) n(t, r) && (e[r] = t[r]);
			return (
				n(t, "toString") && (e.toString = t.toString), n(t, "valueOf") && (e.valueOf = t.valueOf), e
			);
		}

		function v(e, t) {
			var n, r, i;
			if (
				("undefined" != typeof t._isAMomentObject && (e._isAMomentObject = t._isAMomentObject),
				"undefined" != typeof t._i && (e._i = t._i),
				"undefined" != typeof t._f && (e._f = t._f),
				"undefined" != typeof t._l && (e._l = t._l),
				"undefined" != typeof t._strict && (e._strict = t._strict),
				"undefined" != typeof t._tzm && (e._tzm = t._tzm),
				"undefined" != typeof t._isUTC && (e._isUTC = t._isUTC),
				"undefined" != typeof t._offset && (e._offset = t._offset),
				"undefined" != typeof t._pf && (e._pf = t._pf),
				"undefined" != typeof t._locale && (e._locale = t._locale),
				Bt.length > 0)
			)
				for (n in Bt) (r = Bt[n]), (i = t[r]), "undefined" != typeof i && (e[r] = i);
			return e;
		}

		function m(e) {
			return 0 > e ? Math.ceil(e) : Math.floor(e);
		}

		function g(e, t, n) {
			for (var r = "" + Math.abs(e), i = e >= 0; r.length < t; ) r = "0" + r;
			return (i ? (n ? "+" : "") : "-") + r;
		}

		function y(e, t) {
			var n = {
				milliseconds: 0,
				months: 0,
			};
			return (
				(n.months = t.month() - e.month() + 12 * (t.year() - e.year())),
				e.clone().add(n.months, "M").isAfter(t) && --n.months,
				(n.milliseconds = +t - +e.clone().add(n.months, "M")),
				n
			);
		}

		function b(e, t) {
			var n;
			return (
				(t = F(t, e)),
				e.isBefore(t)
					? (n = y(e, t))
					: ((n = y(t, e)), (n.milliseconds = -n.milliseconds), (n.months = -n.months)),
				n
			);
		}

		function w(e, t) {
			return function (n, r) {
				var i, s;
				return (
					null === r ||
						isNaN(+r) ||
						(o(
							t,
							"moment()." +
								t +
								"(period, number) is deprecated. Please use moment()." +
								t +
								"(number, period)."
						),
						(s = n),
						(n = r),
						(r = s)),
					(n = "string" == typeof n ? +n : n),
					(i = Et.duration(n, r)),
					E(this, i, e),
					this
				);
			};
		}

		function E(e, t, n, r) {
			var i = t._milliseconds,
				s = t._days,
				o = t._months;
			(r = null == r ? !0 : r),
				i && e._d.setTime(+e._d + i * n),
				s && vt(e, "Date", dt(e, "Date") + s * n),
				o && pt(e, dt(e, "Month") + o * n),
				r && Et.updateOffset(e, s || o);
		}

		function S(e) {
			return "[object Array]" === Object.prototype.toString.call(e);
		}

		function x(e) {
			return "[object Date]" === Object.prototype.toString.call(e) || e instanceof Date;
		}

		function T(e, t, n) {
			var r,
				i = Math.min(e.length, t.length),
				s = Math.abs(e.length - t.length),
				o = 0;
			for (r = 0; i > r; r++) ((n && e[r] !== t[r]) || (!n && L(e[r]) !== L(t[r]))) && o++;
			return o + s;
		}

		function N(e) {
			if (e) {
				var t = e.toLowerCase().replace(/(.)s$/, "$1");
				e = hn[e] || pn[t] || t;
			}
			return e;
		}

		function C(e) {
			var t,
				r,
				i = {};
			for (r in e) n(e, r) && ((t = N(r)), t && (i[t] = e[r]));
			return i;
		}

		function k(t) {
			var n, r;
			if (0 === t.indexOf("week")) (n = 7), (r = "day");
			else {
				if (0 !== t.indexOf("month")) return;
				(n = 12), (r = "month");
			}
			Et[t] = function (i, s) {
				var o,
					u,
					a = Et._locale[t],
					f = [];
				if (
					("number" == typeof i && ((s = i), (i = e)),
					(u = function (e) {
						var t = Et().utc().set(r, e);
						return a.call(Et._locale, t, i || "");
					}),
					null != s)
				)
					return u(s);
				for (o = 0; n > o; o++) f.push(u(o));
				return f;
			};
		}

		function L(e) {
			var t = +e,
				n = 0;
			return 0 !== t && isFinite(t) && (n = t >= 0 ? Math.floor(t) : Math.ceil(t)), n;
		}

		function A(e, t) {
			return new Date(Date.UTC(e, t + 1, 0)).getUTCDate();
		}

		function O(e, t, n) {
			return ft(Et([e, 11, 31 + t - n]), t, n).week;
		}

		function M(e) {
			return _(e) ? 366 : 365;
		}

		function _(e) {
			return (e % 4 === 0 && e % 100 !== 0) || e % 400 === 0;
		}

		function D(e) {
			var t;
			e._a &&
				-2 === e._pf.overflow &&
				((t =
					e._a[At] < 0 || e._a[At] > 11
						? At
						: e._a[Ot] < 1 || e._a[Ot] > A(e._a[Lt], e._a[At])
						? Ot
						: e._a[Mt] < 0 ||
						  e._a[Mt] > 24 ||
						  (24 === e._a[Mt] && (0 !== e._a[_t] || 0 !== e._a[Dt] || 0 !== e._a[Pt]))
						? Mt
						: e._a[_t] < 0 || e._a[_t] > 59
						? _t
						: e._a[Dt] < 0 || e._a[Dt] > 59
						? Dt
						: e._a[Pt] < 0 || e._a[Pt] > 999
						? Pt
						: -1),
				e._pf._overflowDayOfYear && (Lt > t || t > Ot) && (t = Ot),
				(e._pf.overflow = t));
		}

		function P(t) {
			return (
				null == t._isValid &&
					((t._isValid =
						!isNaN(t._d.getTime()) &&
						t._pf.overflow < 0 &&
						!t._pf.empty &&
						!t._pf.invalidMonth &&
						!t._pf.nullInput &&
						!t._pf.invalidFormat &&
						!t._pf.userInvalidated),
					t._strict &&
						(t._isValid =
							t._isValid &&
							0 === t._pf.charsLeftOver &&
							0 === t._pf.unusedTokens.length &&
							t._pf.bigHour === e)),
				t._isValid
			);
		}

		function H(e) {
			return e ? e.toLowerCase().replace("_", "-") : e;
		}

		function B(e) {
			for (var t, n, r, i, s = 0; s < e.length; ) {
				for (
					i = H(e[s]).split("-"), t = i.length, n = H(e[s + 1]), n = n ? n.split("-") : null;
					t > 0;

				) {
					if ((r = j(i.slice(0, t).join("-")))) return r;
					if (n && n.length >= t && T(i, n, !0) >= t - 1) break;
					t--;
				}
				s++;
			}
			return null;
		}

		function j(e) {
			var t = null;
			if (!Ht[e] && jt)
				try {
					(t = Et.locale()), require("./locale/" + e), Et.locale(t);
				} catch (n) {}
			return Ht[e];
		}

		function F(e, t) {
			var n, r;
			return t._isUTC
				? ((n = t.clone()),
				  (r = (Et.isMoment(e) || x(e) ? +e : +Et(e)) - +n),
				  n._d.setTime(+n._d + r),
				  Et.updateOffset(n, !1),
				  n)
				: Et(e).local();
		}

		function I(e) {
			return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
		}

		function q(e) {
			var t,
				n,
				r = e.match(Rt);
			for (t = 0, n = r.length; n > t; t++) r[t] = yn[r[t]] ? yn[r[t]] : I(r[t]);
			return function (i) {
				var s = "";
				for (t = 0; n > t; t++) s += r[t] instanceof Function ? r[t].call(i, e) : r[t];
				return s;
			};
		}

		function R(e, t) {
			return e.isValid()
				? ((t = U(t, e.localeData())), dn[t] || (dn[t] = q(t)), dn[t](e))
				: e.localeData().invalidDate();
		}

		function U(e, t) {
			function n(e) {
				return t.longDateFormat(e) || e;
			}
			var r = 5;
			for (Ut.lastIndex = 0; r >= 0 && Ut.test(e); )
				(e = e.replace(Ut, n)), (Ut.lastIndex = 0), (r -= 1);
			return e;
		}

		function z(e, t) {
			var n,
				r = t._strict;
			switch (e) {
				case "Q":
					return Zt;
				case "DDDD":
					return tn;
				case "YYYY":
				case "GGGG":
				case "gggg":
					return r ? nn : Xt;
				case "Y":
				case "G":
				case "g":
					return sn;
				case "YYYYYY":
				case "YYYYY":
				case "GGGGG":
				case "ggggg":
					return r ? rn : Vt;
				case "S":
					if (r) return Zt;
				case "SS":
					if (r) return en;
				case "SSS":
					if (r) return tn;
				case "DDD":
					return Wt;
				case "MMM":
				case "MMMM":
				case "dd":
				case "ddd":
				case "dddd":
					return Jt;
				case "a":
				case "A":
					return t._locale._meridiemParse;
				case "x":
					return Gt;
				case "X":
					return Yt;
				case "Z":
				case "ZZ":
					return Kt;
				case "T":
					return Qt;
				case "SSSS":
					return $t;
				case "MM":
				case "DD":
				case "YY":
				case "GG":
				case "gg":
				case "HH":
				case "hh":
				case "mm":
				case "ss":
				case "ww":
				case "WW":
					return r ? en : zt;
				case "M":
				case "D":
				case "d":
				case "H":
				case "h":
				case "m":
				case "s":
				case "w":
				case "W":
				case "e":
				case "E":
					return zt;
				case "Do":
					return r ? t._locale._ordinalParse : t._locale._ordinalParseLenient;
				default:
					return (n = new RegExp(Y(G(e.replace("\\", "")), "i")));
			}
		}

		function W(e) {
			e = e || "";
			var t = e.match(Kt) || [],
				n = t[t.length - 1] || [],
				r = (n + "").match(ln) || ["-", 0, 0],
				i = +(60 * r[1]) + L(r[2]);
			return "+" === r[0] ? i : -i;
		}

		function X(e, t, n) {
			var r,
				i = n._a;
			switch (e) {
				case "Q":
					null != t && (i[At] = 3 * (L(t) - 1));
					break;
				case "M":
				case "MM":
					null != t && (i[At] = L(t) - 1);
					break;
				case "MMM":
				case "MMMM":
					(r = n._locale.monthsParse(t, e, n._strict)),
						null != r ? (i[At] = r) : (n._pf.invalidMonth = t);
					break;
				case "D":
				case "DD":
					null != t && (i[Ot] = L(t));
					break;
				case "Do":
					null != t && (i[Ot] = L(parseInt(t.match(/\d{1,2}/)[0], 10)));
					break;
				case "DDD":
				case "DDDD":
					null != t && (n._dayOfYear = L(t));
					break;
				case "YY":
					i[Lt] = Et.parseTwoDigitYear(t);
					break;
				case "YYYY":
				case "YYYYY":
				case "YYYYYY":
					i[Lt] = L(t);
					break;
				case "a":
				case "A":
					n._meridiem = t;
					break;
				case "h":
				case "hh":
					n._pf.bigHour = !0;
				case "H":
				case "HH":
					i[Mt] = L(t);
					break;
				case "m":
				case "mm":
					i[_t] = L(t);
					break;
				case "s":
				case "ss":
					i[Dt] = L(t);
					break;
				case "S":
				case "SS":
				case "SSS":
				case "SSSS":
					i[Pt] = L(1e3 * ("0." + t));
					break;
				case "x":
					n._d = new Date(L(t));
					break;
				case "X":
					n._d = new Date(1e3 * parseFloat(t));
					break;
				case "Z":
				case "ZZ":
					(n._useUTC = !0), (n._tzm = W(t));
					break;
				case "dd":
				case "ddd":
				case "dddd":
					(r = n._locale.weekdaysParse(t)),
						null != r ? ((n._w = n._w || {}), (n._w.d = r)) : (n._pf.invalidWeekday = t);
					break;
				case "w":
				case "ww":
				case "W":
				case "WW":
				case "d":
				case "e":
				case "E":
					e = e.substr(0, 1);
				case "gggg":
				case "GGGG":
				case "GGGGG":
					(e = e.substr(0, 2)), t && ((n._w = n._w || {}), (n._w[e] = L(t)));
					break;
				case "gg":
				case "GG":
					(n._w = n._w || {}), (n._w[e] = Et.parseTwoDigitYear(t));
			}
		}

		function V(e) {
			var n, r, i, s, o, u, a;
			(n = e._w),
				null != n.GG || null != n.W || null != n.E
					? ((o = 1),
					  (u = 4),
					  (r = t(n.GG, e._a[Lt], ft(Et(), 1, 4).year)),
					  (i = t(n.W, 1)),
					  (s = t(n.E, 1)))
					: ((o = e._locale._week.dow),
					  (u = e._locale._week.doy),
					  (r = t(n.gg, e._a[Lt], ft(Et(), o, u).year)),
					  (i = t(n.w, 1)),
					  null != n.d ? ((s = n.d), o > s && ++i) : (s = null != n.e ? n.e + o : o)),
				(a = lt(r, i, s, u, o)),
				(e._a[Lt] = a.year),
				(e._dayOfYear = a.dayOfYear);
		}

		function $(e) {
			var n,
				r,
				i,
				s,
				o = [];
			if (!e._d) {
				for (
					i = K(e),
						e._w && null == e._a[Ot] && null == e._a[At] && V(e),
						e._dayOfYear &&
							((s = t(e._a[Lt], i[Lt])),
							e._dayOfYear > M(s) && (e._pf._overflowDayOfYear = !0),
							(r = st(s, 0, e._dayOfYear)),
							(e._a[At] = r.getUTCMonth()),
							(e._a[Ot] = r.getUTCDate())),
						n = 0;
					3 > n && null == e._a[n];
					++n
				)
					e._a[n] = o[n] = i[n];
				for (; 7 > n; n++) e._a[n] = o[n] = null == e._a[n] ? (2 === n ? 1 : 0) : e._a[n];
				24 === e._a[Mt] &&
					0 === e._a[_t] &&
					0 === e._a[Dt] &&
					0 === e._a[Pt] &&
					((e._nextDay = !0), (e._a[Mt] = 0)),
					(e._d = (e._useUTC ? st : it).apply(null, o)),
					null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
					e._nextDay && (e._a[Mt] = 24);
			}
		}

		function J(e) {
			var t;
			e._d ||
				((t = C(e._i)),
				(e._a = [t.year, t.month, t.day || t.date, t.hour, t.minute, t.second, t.millisecond]),
				$(e));
		}

		function K(e) {
			var t = new Date();
			return e._useUTC
				? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()]
				: [t.getFullYear(), t.getMonth(), t.getDate()];
		}

		function Q(t) {
			if (t._f === Et.ISO_8601) return void et(t);
			(t._a = []), (t._pf.empty = !0);
			var n,
				r,
				i,
				s,
				o,
				u = "" + t._i,
				a = u.length,
				f = 0;
			for (i = U(t._f, t._locale).match(Rt) || [], n = 0; n < i.length; n++)
				(s = i[n]),
					(r = (u.match(z(s, t)) || [])[0]),
					r &&
						((o = u.substr(0, u.indexOf(r))),
						o.length > 0 && t._pf.unusedInput.push(o),
						(u = u.slice(u.indexOf(r) + r.length)),
						(f += r.length)),
					yn[s]
						? (r ? (t._pf.empty = !1) : t._pf.unusedTokens.push(s), X(s, r, t))
						: t._strict && !r && t._pf.unusedTokens.push(s);
			(t._pf.charsLeftOver = a - f),
				u.length > 0 && t._pf.unusedInput.push(u),
				t._pf.bigHour === !0 && t._a[Mt] <= 12 && (t._pf.bigHour = e),
				(t._a[Mt] = l(t._locale, t._a[Mt], t._meridiem)),
				$(t),
				D(t);
		}

		function G(e) {
			return e.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (e, t, n, r, i) {
				return t || n || r || i;
			});
		}

		function Y(e) {
			return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
		}

		function Z(e) {
			var t, n, i, s, o;
			if (0 === e._f.length) return (e._pf.invalidFormat = !0), void (e._d = new Date(0 / 0));
			for (s = 0; s < e._f.length; s++)
				(o = 0),
					(t = v({}, e)),
					null != e._useUTC && (t._useUTC = e._useUTC),
					(t._pf = r()),
					(t._f = e._f[s]),
					Q(t),
					P(t) &&
						((o += t._pf.charsLeftOver),
						(o += 10 * t._pf.unusedTokens.length),
						(t._pf.score = o),
						(null == i || i > o) && ((i = o), (n = t)));
			d(e, n || t);
		}

		function et(e) {
			var t,
				n,
				r = e._i,
				i = on.exec(r);
			if (i) {
				for (e._pf.iso = !0, t = 0, n = an.length; n > t; t++)
					if (an[t][1].exec(r)) {
						e._f = an[t][0] + (i[6] || " ");
						break;
					}
				for (t = 0, n = fn.length; n > t; t++)
					if (fn[t][1].exec(r)) {
						e._f += fn[t][0];
						break;
					}
				r.match(Kt) && (e._f += "Z"), Q(e);
			} else e._isValid = !1;
		}

		function tt(e) {
			et(e), e._isValid === !1 && (delete e._isValid, Et.createFromInputFallback(e));
		}

		function nt(e, t) {
			var n,
				r = [];
			for (n = 0; n < e.length; ++n) r.push(t(e[n], n));
			return r;
		}

		function rt(t) {
			var n,
				r = t._i;
			r === e
				? (t._d = new Date())
				: x(r)
				? (t._d = new Date(+r))
				: null !== (n = Ft.exec(r))
				? (t._d = new Date(+n[1]))
				: "string" == typeof r
				? tt(t)
				: S(r)
				? ((t._a = nt(r.slice(0), function (e) {
						return parseInt(e, 10);
				  })),
				  $(t))
				: "object" == typeof r
				? J(t)
				: "number" == typeof r
				? (t._d = new Date(r))
				: Et.createFromInputFallback(t);
		}

		function it(e, t, n, r, i, s, o) {
			var u = new Date(e, t, n, r, i, s, o);
			return 1970 > e && u.setFullYear(e), u;
		}

		function st(e) {
			var t = new Date(Date.UTC.apply(null, arguments));
			return 1970 > e && t.setUTCFullYear(e), t;
		}

		function ot(e, t) {
			if ("string" == typeof e)
				if (isNaN(e)) {
					if (((e = t.weekdaysParse(e)), "number" != typeof e)) return null;
				} else e = parseInt(e, 10);
			return e;
		}

		function ut(e, t, n, r, i) {
			return i.relativeTime(t || 1, !!n, e, r);
		}

		function at(e, t, n) {
			var r = Et.duration(e).abs(),
				i = Ct(r.as("s")),
				s = Ct(r.as("m")),
				o = Ct(r.as("h")),
				u = Ct(r.as("d")),
				a = Ct(r.as("M")),
				f = Ct(r.as("y")),
				l = (i < vn.s && ["s", i]) ||
					(1 === s && ["m"]) ||
					(s < vn.m && ["mm", s]) ||
					(1 === o && ["h"]) ||
					(o < vn.h && ["hh", o]) ||
					(1 === u && ["d"]) ||
					(u < vn.d && ["dd", u]) ||
					(1 === a && ["M"]) ||
					(a < vn.M && ["MM", a]) ||
					(1 === f && ["y"]) || ["yy", f];
			return (l[2] = t), (l[3] = +e > 0), (l[4] = n), ut.apply({}, l);
		}

		function ft(e, t, n) {
			var r,
				i = n - t,
				s = n - e.day();
			return (
				s > i && (s -= 7),
				i - 7 > s && (s += 7),
				(r = Et(e).add(s, "d")),
				{
					week: Math.ceil(r.dayOfYear() / 7),
					year: r.year(),
				}
			);
		}

		function lt(e, t, n, r, i) {
			var s,
				o,
				u = st(e, 0, 1).getUTCDay();
			return (
				(u = 0 === u ? 7 : u),
				(n = null != n ? n : i),
				(s = i - u + (u > r ? 7 : 0) - (i > u ? 7 : 0)),
				(o = 7 * (t - 1) + (n - i) + s + 1),
				{
					year: o > 0 ? e : e - 1,
					dayOfYear: o > 0 ? o : M(e - 1) + o,
				}
			);
		}

		function ct(t) {
			var n,
				r = t._i,
				i = t._f;
			return (
				(t._locale = t._locale || Et.localeData(t._l)),
				null === r || (i === e && "" === r)
					? Et.invalid({
							nullInput: !0,
					  })
					: ("string" == typeof r && (t._i = r = t._locale.preparse(r)),
					  Et.isMoment(r)
							? new h(r, !0)
							: (i ? (S(i) ? Z(t) : Q(t)) : rt(t),
							  (n = new h(t)),
							  n._nextDay && (n.add(1, "d"), (n._nextDay = e)),
							  n))
			);
		}

		function ht(e, t) {
			var n, r;
			if ((1 === t.length && S(t[0]) && (t = t[0]), !t.length)) return Et();
			for (n = t[0], r = 1; r < t.length; ++r) t[r][e](n) && (n = t[r]);
			return n;
		}

		function pt(e, t) {
			var n;
			return "string" == typeof t && ((t = e.localeData().monthsParse(t)), "number" != typeof t)
				? e
				: ((n = Math.min(e.date(), A(e.year(), t))),
				  e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, n),
				  e);
		}

		function dt(e, t) {
			return e._d["get" + (e._isUTC ? "UTC" : "") + t]();
		}

		function vt(e, t, n) {
			return "Month" === t ? pt(e, n) : e._d["set" + (e._isUTC ? "UTC" : "") + t](n);
		}

		function mt(e, t) {
			return function (n) {
				return null != n ? (vt(this, e, n), Et.updateOffset(this, t), this) : dt(this, e);
			};
		}

		function gt(e) {
			return (400 * e) / 146097;
		}

		function yt(e) {
			return (146097 * e) / 400;
		}

		function bt(e) {
			Et.duration.fn[e] = function () {
				return this._data[e];
			};
		}

		function wt(e) {
			"undefined" == typeof ender &&
				((St = Nt.moment),
				(Nt.moment = e
					? s(
							"Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",
							Et
					  )
					: Et));
		}
		for (
			var Et,
				St,
				xt,
				Tt = "2.9.0",
				Nt =
					"undefined" == typeof global || ("undefined" != typeof window && window !== global.window)
						? this
						: global,
				Ct = Math.round,
				kt = Object.prototype.hasOwnProperty,
				Lt = 0,
				At = 1,
				Ot = 2,
				Mt = 3,
				_t = 4,
				Dt = 5,
				Pt = 6,
				Ht = {},
				Bt = [],
				jt = "undefined" != typeof module && module && module.exports,
				Ft = /^\/?Date\((\-?\d+)/i,
				It = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
				qt =
					/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,
				Rt =
					/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,
				Ut = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
				zt = /\d\d?/,
				Wt = /\d{1,3}/,
				Xt = /\d{1,4}/,
				Vt = /[+\-]?\d{1,6}/,
				$t = /\d+/,
				Jt =
					/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
				Kt = /Z|[\+\-]\d\d:?\d\d/gi,
				Qt = /T/i,
				Gt = /[\+\-]?\d+/,
				Yt = /[\+\-]?\d+(\.\d{1,3})?/,
				Zt = /\d/,
				en = /\d\d/,
				tn = /\d{3}/,
				nn = /\d{4}/,
				rn = /[+-]?\d{6}/,
				sn = /[+-]?\d+/,
				on =
					/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
				un = "YYYY-MM-DDTHH:mm:ssZ",
				an = [
					["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
					["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
					["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
					["GGGG-[W]WW", /\d{4}-W\d{2}/],
					["YYYY-DDD", /\d{4}-\d{3}/],
				],
				fn = [
					["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/],
					["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
					["HH:mm", /(T| )\d\d:\d\d/],
					["HH", /(T| )\d\d/],
				],
				ln = /([\+\-]|\d\d)/gi,
				cn =
					("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),
					{
						Milliseconds: 1,
						Seconds: 1e3,
						Minutes: 6e4,
						Hours: 36e5,
						Days: 864e5,
						Months: 2592e6,
						Years: 31536e6,
					}),
				hn = {
					ms: "millisecond",
					s: "second",
					m: "minute",
					h: "hour",
					d: "day",
					D: "date",
					w: "week",
					W: "isoWeek",
					M: "month",
					Q: "quarter",
					y: "year",
					DDD: "dayOfYear",
					e: "weekday",
					E: "isoWeekday",
					gg: "weekYear",
					GG: "isoWeekYear",
				},
				pn = {
					dayofyear: "dayOfYear",
					isoweekday: "isoWeekday",
					isoweek: "isoWeek",
					weekyear: "weekYear",
					isoweekyear: "isoWeekYear",
				},
				dn = {},
				vn = {
					s: 45,
					m: 45,
					h: 22,
					d: 26,
					M: 11,
				},
				mn = "DDD w W M D d".split(" "),
				gn = "M D H h m s w W".split(" "),
				yn = {
					M: function () {
						return this.month() + 1;
					},
					MMM: function (e) {
						return this.localeData().monthsShort(this, e);
					},
					MMMM: function (e) {
						return this.localeData().months(this, e);
					},
					D: function () {
						return this.date();
					},
					DDD: function () {
						return this.dayOfYear();
					},
					d: function () {
						return this.day();
					},
					dd: function (e) {
						return this.localeData().weekdaysMin(this, e);
					},
					ddd: function (e) {
						return this.localeData().weekdaysShort(this, e);
					},
					dddd: function (e) {
						return this.localeData().weekdays(this, e);
					},
					w: function () {
						return this.week();
					},
					W: function () {
						return this.isoWeek();
					},
					YY: function () {
						return g(this.year() % 100, 2);
					},
					YYYY: function () {
						return g(this.year(), 4);
					},
					YYYYY: function () {
						return g(this.year(), 5);
					},
					YYYYYY: function () {
						var e = this.year(),
							t = e >= 0 ? "+" : "-";
						return t + g(Math.abs(e), 6);
					},
					gg: function () {
						return g(this.weekYear() % 100, 2);
					},
					gggg: function () {
						return g(this.weekYear(), 4);
					},
					ggggg: function () {
						return g(this.weekYear(), 5);
					},
					GG: function () {
						return g(this.isoWeekYear() % 100, 2);
					},
					GGGG: function () {
						return g(this.isoWeekYear(), 4);
					},
					GGGGG: function () {
						return g(this.isoWeekYear(), 5);
					},
					e: function () {
						return this.weekday();
					},
					E: function () {
						return this.isoWeekday();
					},
					a: function () {
						return this.localeData().meridiem(this.hours(), this.minutes(), !0);
					},
					A: function () {
						return this.localeData().meridiem(this.hours(), this.minutes(), !1);
					},
					H: function () {
						return this.hours();
					},
					h: function () {
						return this.hours() % 12 || 12;
					},
					m: function () {
						return this.minutes();
					},
					s: function () {
						return this.seconds();
					},
					S: function () {
						return L(this.milliseconds() / 100);
					},
					SS: function () {
						return g(L(this.milliseconds() / 10), 2);
					},
					SSS: function () {
						return g(this.milliseconds(), 3);
					},
					SSSS: function () {
						return g(this.milliseconds(), 3);
					},
					Z: function () {
						var e = this.utcOffset(),
							t = "+";
						return 0 > e && ((e = -e), (t = "-")), t + g(L(e / 60), 2) + ":" + g(L(e) % 60, 2);
					},
					ZZ: function () {
						var e = this.utcOffset(),
							t = "+";
						return 0 > e && ((e = -e), (t = "-")), t + g(L(e / 60), 2) + g(L(e) % 60, 2);
					},
					z: function () {
						return this.zoneAbbr();
					},
					zz: function () {
						return this.zoneName();
					},
					x: function () {
						return this.valueOf();
					},
					X: function () {
						return this.unix();
					},
					Q: function () {
						return this.quarter();
					},
				},
				bn = {},
				wn = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"],
				En = !1;
			mn.length;

		)
			(xt = mn.pop()), (yn[xt + "o"] = a(yn[xt], xt));
		for (; gn.length; ) (xt = gn.pop()), (yn[xt + xt] = u(yn[xt], 2));
		(yn.DDDD = u(yn.DDD, 3)),
			d(c.prototype, {
				set: function (e) {
					var t, n;
					for (n in e) (t = e[n]), "function" == typeof t ? (this[n] = t) : (this["_" + n] = t);
					this._ordinalParseLenient = new RegExp(
						this._ordinalParse.source + "|" + /\d{1,2}/.source
					);
				},
				_months:
					"January_February_March_April_May_June_July_August_September_October_November_December".split(
						"_"
					),
				months: function (e) {
					return this._months[e.month()];
				},
				_monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
				monthsShort: function (e) {
					return this._monthsShort[e.month()];
				},
				monthsParse: function (e, t, n) {
					var r, i, s;
					for (
						this._monthsParse ||
							((this._monthsParse = []),
							(this._longMonthsParse = []),
							(this._shortMonthsParse = [])),
							r = 0;
						12 > r;
						r++
					) {
						if (
							((i = Et.utc([2e3, r])),
							n &&
								!this._longMonthsParse[r] &&
								((this._longMonthsParse[r] = new RegExp(
									"^" + this.months(i, "").replace(".", "") + "$",
									"i"
								)),
								(this._shortMonthsParse[r] = new RegExp(
									"^" + this.monthsShort(i, "").replace(".", "") + "$",
									"i"
								))),
							n ||
								this._monthsParse[r] ||
								((s = "^" + this.months(i, "") + "|^" + this.monthsShort(i, "")),
								(this._monthsParse[r] = new RegExp(s.replace(".", ""), "i"))),
							n && "MMMM" === t && this._longMonthsParse[r].test(e))
						)
							return r;
						if (n && "MMM" === t && this._shortMonthsParse[r].test(e)) return r;
						if (!n && this._monthsParse[r].test(e)) return r;
					}
				},
				_weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
				weekdays: function (e) {
					return this._weekdays[e.day()];
				},
				_weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
				weekdaysShort: function (e) {
					return this._weekdaysShort[e.day()];
				},
				_weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
				weekdaysMin: function (e) {
					return this._weekdaysMin[e.day()];
				},
				weekdaysParse: function (e) {
					var t, n, r;
					for (this._weekdaysParse || (this._weekdaysParse = []), t = 0; 7 > t; t++)
						if (
							(this._weekdaysParse[t] ||
								((n = Et([2e3, 1]).day(t)),
								(r =
									"^" +
									this.weekdays(n, "") +
									"|^" +
									this.weekdaysShort(n, "") +
									"|^" +
									this.weekdaysMin(n, "")),
								(this._weekdaysParse[t] = new RegExp(r.replace(".", ""), "i"))),
							this._weekdaysParse[t].test(e))
						)
							return t;
				},
				_longDateFormat: {
					LTS: "h:mm:ss A",
					LT: "h:mm A",
					L: "MM/DD/YYYY",
					LL: "MMMM D, YYYY",
					LLL: "MMMM D, YYYY LT",
					LLLL: "dddd, MMMM D, YYYY LT",
				},
				longDateFormat: function (e) {
					var t = this._longDateFormat[e];
					return (
						!t &&
							this._longDateFormat[e.toUpperCase()] &&
							((t = this._longDateFormat[e.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (e) {
								return e.slice(1);
							})),
							(this._longDateFormat[e] = t)),
						t
					);
				},
				isPM: function (e) {
					return "p" === (e + "").toLowerCase().charAt(0);
				},
				_meridiemParse: /[ap]\.?m?\.?/i,
				meridiem: function (e, t, n) {
					return e > 11 ? (n ? "pm" : "PM") : n ? "am" : "AM";
				},
				_calendar: {
					sameDay: "[Today at] LT",
					nextDay: "[Tomorrow at] LT",
					nextWeek: "dddd [at] LT",
					lastDay: "[Yesterday at] LT",
					lastWeek: "[Last] dddd [at] LT",
					sameElse: "L",
				},
				calendar: function (e, t, n) {
					var r = this._calendar[e];
					return "function" == typeof r ? r.apply(t, [n]) : r;
				},
				_relativeTime: {
					future: "in %s",
					past: "%s ago",
					s: "a few seconds",
					m: "a minute",
					mm: "%d minutes",
					h: "an hour",
					hh: "%d hours",
					d: "a day",
					dd: "%d days",
					M: "a month",
					MM: "%d months",
					y: "a year",
					yy: "%d years",
				},
				relativeTime: function (e, t, n, r) {
					var i = this._relativeTime[n];
					return "function" == typeof i ? i(e, t, n, r) : i.replace(/%d/i, e);
				},
				pastFuture: function (e, t) {
					var n = this._relativeTime[e > 0 ? "future" : "past"];
					return "function" == typeof n ? n(t) : n.replace(/%s/i, t);
				},
				ordinal: function (e) {
					return this._ordinal.replace("%d", e);
				},
				_ordinal: "%d",
				_ordinalParse: /\d{1,2}/,
				preparse: function (e) {
					return e;
				},
				postformat: function (e) {
					return e;
				},
				week: function (e) {
					return ft(e, this._week.dow, this._week.doy).week;
				},
				_week: {
					dow: 0,
					doy: 6,
				},
				firstDayOfWeek: function () {
					return this._week.dow;
				},
				firstDayOfYear: function () {
					return this._week.doy;
				},
				_invalidDate: "Invalid date",
				invalidDate: function () {
					return this._invalidDate;
				},
			}),
			(Et = function (t, n, i, s) {
				var o;
				return (
					"boolean" == typeof i && ((s = i), (i = e)),
					(o = {}),
					(o._isAMomentObject = !0),
					(o._i = t),
					(o._f = n),
					(o._l = i),
					(o._strict = s),
					(o._isUTC = !1),
					(o._pf = r()),
					ct(o)
				);
			}),
			(Et.suppressDeprecationWarnings = !1),
			(Et.createFromInputFallback = s(
				"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",
				function (e) {
					e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
				}
			)),
			(Et.min = function () {
				var e = [].slice.call(arguments, 0);
				return ht("isBefore", e);
			}),
			(Et.max = function () {
				var e = [].slice.call(arguments, 0);
				return ht("isAfter", e);
			}),
			(Et.utc = function (t, n, i, s) {
				var o;
				return (
					"boolean" == typeof i && ((s = i), (i = e)),
					(o = {}),
					(o._isAMomentObject = !0),
					(o._useUTC = !0),
					(o._isUTC = !0),
					(o._l = i),
					(o._i = t),
					(o._f = n),
					(o._strict = s),
					(o._pf = r()),
					ct(o).utc()
				);
			}),
			(Et.unix = function (e) {
				return Et(1e3 * e);
			}),
			(Et.duration = function (e, t) {
				var r,
					i,
					s,
					o,
					u = e,
					a = null;
				return (
					Et.isDuration(e)
						? (u = {
								ms: e._milliseconds,
								d: e._days,
								M: e._months,
						  })
						: "number" == typeof e
						? ((u = {}), t ? (u[t] = e) : (u.milliseconds = e))
						: (a = It.exec(e))
						? ((r = "-" === a[1] ? -1 : 1),
						  (u = {
								y: 0,
								d: L(a[Ot]) * r,
								h: L(a[Mt]) * r,
								m: L(a[_t]) * r,
								s: L(a[Dt]) * r,
								ms: L(a[Pt]) * r,
						  }))
						: (a = qt.exec(e))
						? ((r = "-" === a[1] ? -1 : 1),
						  (s = function (e) {
								var t = e && parseFloat(e.replace(",", "."));
								return (isNaN(t) ? 0 : t) * r;
						  }),
						  (u = {
								y: s(a[2]),
								M: s(a[3]),
								d: s(a[4]),
								h: s(a[5]),
								m: s(a[6]),
								s: s(a[7]),
								w: s(a[8]),
						  }))
						: null == u
						? (u = {})
						: "object" == typeof u &&
						  ("from" in u || "to" in u) &&
						  ((o = b(Et(u.from), Et(u.to))), (u = {}), (u.ms = o.milliseconds), (u.M = o.months)),
					(i = new p(u)),
					Et.isDuration(e) && n(e, "_locale") && (i._locale = e._locale),
					i
				);
			}),
			(Et.version = Tt),
			(Et.defaultFormat = un),
			(Et.ISO_8601 = function () {}),
			(Et.momentProperties = Bt),
			(Et.updateOffset = function () {}),
			(Et.relativeTimeThreshold = function (t, n) {
				return vn[t] === e ? !1 : n === e ? vn[t] : ((vn[t] = n), !0);
			}),
			(Et.lang = s("moment.lang is deprecated. Use moment.locale instead.", function (e, t) {
				return Et.locale(e, t);
			})),
			(Et.locale = function (e, t) {
				var n;
				return (
					e &&
						((n = "undefined" != typeof t ? Et.defineLocale(e, t) : Et.localeData(e)),
						n && (Et.duration._locale = Et._locale = n)),
					Et._locale._abbr
				);
			}),
			(Et.defineLocale = function (e, t) {
				return null !== t
					? ((t.abbr = e), Ht[e] || (Ht[e] = new c()), Ht[e].set(t), Et.locale(e), Ht[e])
					: (delete Ht[e], null);
			}),
			(Et.langData = s(
				"moment.langData is deprecated. Use moment.localeData instead.",
				function (e) {
					return Et.localeData(e);
				}
			)),
			(Et.localeData = function (e) {
				var t;
				if ((e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)) return Et._locale;
				if (!S(e)) {
					if ((t = j(e))) return t;
					e = [e];
				}
				return B(e);
			}),
			(Et.isMoment = function (e) {
				return e instanceof h || (null != e && n(e, "_isAMomentObject"));
			}),
			(Et.isDuration = function (e) {
				return e instanceof p;
			});
		for (xt = wn.length - 1; xt >= 0; --xt) k(wn[xt]);
		(Et.normalizeUnits = function (e) {
			return N(e);
		}),
			(Et.invalid = function (e) {
				var t = Et.utc(0 / 0);
				return null != e ? d(t._pf, e) : (t._pf.userInvalidated = !0), t;
			}),
			(Et.parseZone = function () {
				return Et.apply(null, arguments).parseZone();
			}),
			(Et.parseTwoDigitYear = function (e) {
				return L(e) + (L(e) > 68 ? 1900 : 2e3);
			}),
			(Et.isDate = x),
			d((Et.fn = h.prototype), {
				clone: function () {
					return Et(this);
				},
				valueOf: function () {
					return +this._d - 6e4 * (this._offset || 0);
				},
				unix: function () {
					return Math.floor(+this / 1e3);
				},
				toString: function () {
					return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
				},
				toDate: function () {
					return this._offset ? new Date(+this) : this._d;
				},
				toISOString: function () {
					var e = Et(this).utc();
					return 0 < e.year() && e.year() <= 9999
						? "function" == typeof Date.prototype.toISOString
							? this.toDate().toISOString()
							: R(e, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
						: R(e, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
				},
				toArray: function () {
					var e = this;
					return [
						e.year(),
						e.month(),
						e.date(),
						e.hours(),
						e.minutes(),
						e.seconds(),
						e.milliseconds(),
					];
				},
				isValid: function () {
					return P(this);
				},
				isDSTShifted: function () {
					return this._a
						? this.isValid() &&
								T(this._a, (this._isUTC ? Et.utc(this._a) : Et(this._a)).toArray()) > 0
						: !1;
				},
				parsingFlags: function () {
					return d({}, this._pf);
				},
				invalidAt: function () {
					return this._pf.overflow;
				},
				utc: function (e) {
					return this.utcOffset(0, e);
				},
				local: function (e) {
					return (
						this._isUTC &&
							(this.utcOffset(0, e),
							(this._isUTC = !1),
							e && this.subtract(this._dateUtcOffset(), "m")),
						this
					);
				},
				format: function (e) {
					var t = R(this, e || Et.defaultFormat);
					return this.localeData().postformat(t);
				},
				add: w(1, "add"),
				subtract: w(-1, "subtract"),
				diff: function (e, t, n) {
					var r,
						i,
						s = F(e, this),
						o = 6e4 * (s.utcOffset() - this.utcOffset());
					return (
						(t = N(t)),
						"year" === t || "month" === t || "quarter" === t
							? ((i = f(this, s)), "quarter" === t ? (i /= 3) : "year" === t && (i /= 12))
							: ((r = this - s),
							  (i =
									"second" === t
										? r / 1e3
										: "minute" === t
										? r / 6e4
										: "hour" === t
										? r / 36e5
										: "day" === t
										? (r - o) / 864e5
										: "week" === t
										? (r - o) / 6048e5
										: r)),
						n ? i : m(i)
					);
				},
				from: function (e, t) {
					return Et.duration({
						to: this,
						from: e,
					})
						.locale(this.locale())
						.humanize(!t);
				},
				fromNow: function (e) {
					return this.from(Et(), e);
				},
				calendar: function (e) {
					var t = e || Et(),
						n = F(t, this).startOf("day"),
						r = this.diff(n, "days", !0),
						i =
							-6 > r
								? "sameElse"
								: -1 > r
								? "lastWeek"
								: 0 > r
								? "lastDay"
								: 1 > r
								? "sameDay"
								: 2 > r
								? "nextDay"
								: 7 > r
								? "nextWeek"
								: "sameElse";
					return this.format(this.localeData().calendar(i, this, Et(t)));
				},
				isLeapYear: function () {
					return _(this.year());
				},
				isDST: function () {
					return (
						this.utcOffset() > this.clone().month(0).utcOffset() ||
						this.utcOffset() > this.clone().month(5).utcOffset()
					);
				},
				day: function (e) {
					var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
					return null != e ? ((e = ot(e, this.localeData())), this.add(e - t, "d")) : t;
				},
				month: mt("Month", !0),
				startOf: function (e) {
					switch ((e = N(e))) {
						case "year":
							this.month(0);
						case "quarter":
						case "month":
							this.date(1);
						case "week":
						case "isoWeek":
						case "day":
							this.hours(0);
						case "hour":
							this.minutes(0);
						case "minute":
							this.seconds(0);
						case "second":
							this.milliseconds(0);
					}
					return (
						"week" === e ? this.weekday(0) : "isoWeek" === e && this.isoWeekday(1),
						"quarter" === e && this.month(3 * Math.floor(this.month() / 3)),
						this
					);
				},
				endOf: function (t) {
					return (
						(t = N(t)),
						t === e || "millisecond" === t
							? this
							: this.startOf(t)
									.add(1, "isoWeek" === t ? "week" : t)
									.subtract(1, "ms")
					);
				},
				isAfter: function (e, t) {
					var n;
					return (
						(t = N("undefined" != typeof t ? t : "millisecond")),
						"millisecond" === t
							? ((e = Et.isMoment(e) ? e : Et(e)), +this > +e)
							: ((n = Et.isMoment(e) ? +e : +Et(e)), n < +this.clone().startOf(t))
					);
				},
				isBefore: function (e, t) {
					var n;
					return (
						(t = N("undefined" != typeof t ? t : "millisecond")),
						"millisecond" === t
							? ((e = Et.isMoment(e) ? e : Et(e)), +e > +this)
							: ((n = Et.isMoment(e) ? +e : +Et(e)), +this.clone().endOf(t) < n)
					);
				},
				isBetween: function (e, t, n) {
					return this.isAfter(e, n) && this.isBefore(t, n);
				},
				isSame: function (e, t) {
					var n;
					return (
						(t = N(t || "millisecond")),
						"millisecond" === t
							? ((e = Et.isMoment(e) ? e : Et(e)), +this === +e)
							: ((n = +Et(e)), +this.clone().startOf(t) <= n && n <= +this.clone().endOf(t))
					);
				},
				min: s(
					"moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",
					function (e) {
						return (e = Et.apply(null, arguments)), this > e ? this : e;
					}
				),
				max: s(
					"moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",
					function (e) {
						return (e = Et.apply(null, arguments)), e > this ? this : e;
					}
				),
				zone: s(
					"moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",
					function (e, t) {
						return null != e
							? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this)
							: -this.utcOffset();
					}
				),
				utcOffset: function (e, t) {
					var n,
						r = this._offset || 0;
					return null != e
						? ("string" == typeof e && (e = W(e)),
						  Math.abs(e) < 16 && (e = 60 * e),
						  !this._isUTC && t && (n = this._dateUtcOffset()),
						  (this._offset = e),
						  (this._isUTC = !0),
						  null != n && this.add(n, "m"),
						  r !== e &&
								(!t || this._changeInProgress
									? E(this, Et.duration(e - r, "m"), 1, !1)
									: this._changeInProgress ||
									  ((this._changeInProgress = !0),
									  Et.updateOffset(this, !0),
									  (this._changeInProgress = null))),
						  this)
						: this._isUTC
						? r
						: this._dateUtcOffset();
				},
				isLocal: function () {
					return !this._isUTC;
				},
				isUtcOffset: function () {
					return this._isUTC;
				},
				isUtc: function () {
					return this._isUTC && 0 === this._offset;
				},
				zoneAbbr: function () {
					return this._isUTC ? "UTC" : "";
				},
				zoneName: function () {
					return this._isUTC ? "Coordinated Universal Time" : "";
				},
				parseZone: function () {
					return (
						this._tzm
							? this.utcOffset(this._tzm)
							: "string" == typeof this._i && this.utcOffset(W(this._i)),
						this
					);
				},
				hasAlignedHourOffset: function (e) {
					return (e = e ? Et(e).utcOffset() : 0), (this.utcOffset() - e) % 60 === 0;
				},
				daysInMonth: function () {
					return A(this.year(), this.month());
				},
				dayOfYear: function (e) {
					var t = Ct((Et(this).startOf("day") - Et(this).startOf("year")) / 864e5) + 1;
					return null == e ? t : this.add(e - t, "d");
				},
				quarter: function (e) {
					return null == e
						? Math.ceil((this.month() + 1) / 3)
						: this.month(3 * (e - 1) + (this.month() % 3));
				},
				weekYear: function (e) {
					var t = ft(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
					return null == e ? t : this.add(e - t, "y");
				},
				isoWeekYear: function (e) {
					var t = ft(this, 1, 4).year;
					return null == e ? t : this.add(e - t, "y");
				},
				week: function (e) {
					var t = this.localeData().week(this);
					return null == e ? t : this.add(7 * (e - t), "d");
				},
				isoWeek: function (e) {
					var t = ft(this, 1, 4).week;
					return null == e ? t : this.add(7 * (e - t), "d");
				},
				weekday: function (e) {
					var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
					return null == e ? t : this.add(e - t, "d");
				},
				isoWeekday: function (e) {
					return null == e ? this.day() || 7 : this.day(this.day() % 7 ? e : e - 7);
				},
				isoWeeksInYear: function () {
					return O(this.year(), 1, 4);
				},
				weeksInYear: function () {
					var e = this.localeData()._week;
					return O(this.year(), e.dow, e.doy);
				},
				get: function (e) {
					return (e = N(e)), this[e]();
				},
				set: function (e, t) {
					var n;
					if ("object" == typeof e) for (n in e) this.set(n, e[n]);
					else (e = N(e)), "function" == typeof this[e] && this[e](t);
					return this;
				},
				locale: function (t) {
					var n;
					return t === e
						? this._locale._abbr
						: ((n = Et.localeData(t)), null != n && (this._locale = n), this);
				},
				lang: s(
					"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
					function (t) {
						return t === e ? this.localeData() : this.locale(t);
					}
				),
				localeData: function () {
					return this._locale;
				},
				_dateUtcOffset: function () {
					return 15 * -Math.round(this._d.getTimezoneOffset() / 15);
				},
			}),
			(Et.fn.millisecond = Et.fn.milliseconds = mt("Milliseconds", !1)),
			(Et.fn.second = Et.fn.seconds = mt("Seconds", !1)),
			(Et.fn.minute = Et.fn.minutes = mt("Minutes", !1)),
			(Et.fn.hour = Et.fn.hours = mt("Hours", !0)),
			(Et.fn.date = mt("Date", !0)),
			(Et.fn.dates = s("dates accessor is deprecated. Use date instead.", mt("Date", !0))),
			(Et.fn.year = mt("FullYear", !0)),
			(Et.fn.years = s("years accessor is deprecated. Use year instead.", mt("FullYear", !0))),
			(Et.fn.days = Et.fn.day),
			(Et.fn.months = Et.fn.month),
			(Et.fn.weeks = Et.fn.week),
			(Et.fn.isoWeeks = Et.fn.isoWeek),
			(Et.fn.quarters = Et.fn.quarter),
			(Et.fn.toJSON = Et.fn.toISOString),
			(Et.fn.isUTC = Et.fn.isUtc),
			d((Et.duration.fn = p.prototype), {
				_bubble: function () {
					var e,
						t,
						n,
						r = this._milliseconds,
						i = this._days,
						s = this._months,
						o = this._data,
						u = 0;
					(o.milliseconds = r % 1e3),
						(e = m(r / 1e3)),
						(o.seconds = e % 60),
						(t = m(e / 60)),
						(o.minutes = t % 60),
						(n = m(t / 60)),
						(o.hours = n % 24),
						(i += m(n / 24)),
						(u = m(gt(i))),
						(i -= m(yt(u))),
						(s += m(i / 30)),
						(i %= 30),
						(u += m(s / 12)),
						(s %= 12),
						(o.days = i),
						(o.months = s),
						(o.years = u);
				},
				abs: function () {
					return (
						(this._milliseconds = Math.abs(this._milliseconds)),
						(this._days = Math.abs(this._days)),
						(this._months = Math.abs(this._months)),
						(this._data.milliseconds = Math.abs(this._data.milliseconds)),
						(this._data.seconds = Math.abs(this._data.seconds)),
						(this._data.minutes = Math.abs(this._data.minutes)),
						(this._data.hours = Math.abs(this._data.hours)),
						(this._data.months = Math.abs(this._data.months)),
						(this._data.years = Math.abs(this._data.years)),
						this
					);
				},
				weeks: function () {
					return m(this.days() / 7);
				},
				valueOf: function () {
					return (
						this._milliseconds +
						864e5 * this._days +
						(this._months % 12) * 2592e6 +
						31536e6 * L(this._months / 12)
					);
				},
				humanize: function (e) {
					var t = at(this, !e, this.localeData());
					return e && (t = this.localeData().pastFuture(+this, t)), this.localeData().postformat(t);
				},
				add: function (e, t) {
					var n = Et.duration(e, t);
					return (
						(this._milliseconds += n._milliseconds),
						(this._days += n._days),
						(this._months += n._months),
						this._bubble(),
						this
					);
				},
				subtract: function (e, t) {
					var n = Et.duration(e, t);
					return (
						(this._milliseconds -= n._milliseconds),
						(this._days -= n._days),
						(this._months -= n._months),
						this._bubble(),
						this
					);
				},
				get: function (e) {
					return (e = N(e)), this[e.toLowerCase() + "s"]();
				},
				as: function (e) {
					var t, n;
					if (((e = N(e)), "month" === e || "year" === e))
						return (
							(t = this._days + this._milliseconds / 864e5),
							(n = this._months + 12 * gt(t)),
							"month" === e ? n : n / 12
						);
					switch (((t = this._days + Math.round(yt(this._months / 12))), e)) {
						case "week":
							return t / 7 + this._milliseconds / 6048e5;
						case "day":
							return t + this._milliseconds / 864e5;
						case "hour":
							return 24 * t + this._milliseconds / 36e5;
						case "minute":
							return 24 * t * 60 + this._milliseconds / 6e4;
						case "second":
							return 24 * t * 60 * 60 + this._milliseconds / 1e3;
						case "millisecond":
							return Math.floor(24 * t * 60 * 60 * 1e3) + this._milliseconds;
						default:
							throw new Error("Unknown unit " + e);
					}
				},
				lang: Et.fn.lang,
				locale: Et.fn.locale,
				toIsoString: s(
					"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
					function () {
						return this.toISOString();
					}
				),
				toISOString: function () {
					var e = Math.abs(this.years()),
						t = Math.abs(this.months()),
						n = Math.abs(this.days()),
						r = Math.abs(this.hours()),
						i = Math.abs(this.minutes()),
						s = Math.abs(this.seconds() + this.milliseconds() / 1e3);
					return this.asSeconds()
						? (this.asSeconds() < 0 ? "-" : "") +
								"P" +
								(e ? e + "Y" : "") +
								(t ? t + "M" : "") +
								(n ? n + "D" : "") +
								(r || i || s ? "T" : "") +
								(r ? r + "H" : "") +
								(i ? i + "M" : "") +
								(s ? s + "S" : "")
						: "P0D";
				},
				localeData: function () {
					return this._locale;
				},
				toJSON: function () {
					return this.toISOString();
				},
			}),
			(Et.duration.fn.toString = Et.duration.fn.toISOString);
		for (xt in cn) n(cn, xt) && bt(xt.toLowerCase());
		(Et.duration.fn.asMilliseconds = function () {
			return this.as("ms");
		}),
			(Et.duration.fn.asSeconds = function () {
				return this.as("s");
			}),
			(Et.duration.fn.asMinutes = function () {
				return this.as("m");
			}),
			(Et.duration.fn.asHours = function () {
				return this.as("h");
			}),
			(Et.duration.fn.asDays = function () {
				return this.as("d");
			}),
			(Et.duration.fn.asWeeks = function () {
				return this.as("weeks");
			}),
			(Et.duration.fn.asMonths = function () {
				return this.as("M");
			}),
			(Et.duration.fn.asYears = function () {
				return this.as("y");
			}),
			Et.locale("en", {
				ordinalParse: /\d{1,2}(th|st|nd|rd)/,
				ordinal: function (e) {
					var t = e % 10,
						n =
							1 === L((e % 100) / 10)
								? "th"
								: 1 === t
								? "st"
								: 2 === t
								? "nd"
								: 3 === t
								? "rd"
								: "th";
					return e + n;
				},
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("af", {
					months:
						"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
					weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
					weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
					weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
					meridiemParse: /vm|nm/i,
					isPM: function (e) {
						return /^nm$/i.test(e);
					},
					meridiem: function (e, t, n) {
						return 12 > e ? (n ? "vm" : "VM") : n ? "nm" : "NM";
					},
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Vandag om] LT",
						nextDay: "[Môre om] LT",
						nextWeek: "dddd [om] LT",
						lastDay: "[Gister om] LT",
						lastWeek: "[Laas] dddd [om] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "oor %s",
						past: "%s gelede",
						s: "'n paar sekondes",
						m: "'n minuut",
						mm: "%d minute",
						h: "'n uur",
						hh: "%d ure",
						d: "'n dag",
						dd: "%d dae",
						M: "'n maand",
						MM: "%d maande",
						y: "'n jaar",
						yy: "%d jaar",
					},
					ordinalParse: /\d{1,2}(ste|de)/,
					ordinal: function (e) {
						return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ar-ma", {
					months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
						"_"
					),
					monthsShort:
						"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
					weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
					weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
					weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[اليوم على الساعة] LT",
						nextDay: "[غدا على الساعة] LT",
						nextWeek: "dddd [على الساعة] LT",
						lastDay: "[أمس على الساعة] LT",
						lastWeek: "dddd [على الساعة] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "في %s",
						past: "منذ %s",
						s: "ثوان",
						m: "دقيقة",
						mm: "%d دقائق",
						h: "ساعة",
						hh: "%d ساعات",
						d: "يوم",
						dd: "%d أيام",
						M: "شهر",
						MM: "%d أشهر",
						y: "سنة",
						yy: "%d سنوات",
					},
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "١",
						2: "٢",
						3: "٣",
						4: "٤",
						5: "٥",
						6: "٦",
						7: "٧",
						8: "٨",
						9: "٩",
						0: "٠",
					},
					n = {
						"١": "1",
						"٢": "2",
						"٣": "3",
						"٤": "4",
						"٥": "5",
						"٦": "6",
						"٧": "7",
						"٨": "8",
						"٩": "9",
						"٠": "0",
					};
				return e.defineLocale("ar-sa", {
					months:
						"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
					monthsShort:
						"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
					weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
					weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
					weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					meridiemParse: /ص|م/,
					isPM: function (e) {
						return "م" === e;
					},
					meridiem: function (e) {
						return 12 > e ? "ص" : "م";
					},
					calendar: {
						sameDay: "[اليوم على الساعة] LT",
						nextDay: "[غدا على الساعة] LT",
						nextWeek: "dddd [على الساعة] LT",
						lastDay: "[أمس على الساعة] LT",
						lastWeek: "dddd [على الساعة] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "في %s",
						past: "منذ %s",
						s: "ثوان",
						m: "دقيقة",
						mm: "%d دقائق",
						h: "ساعة",
						hh: "%d ساعات",
						d: "يوم",
						dd: "%d أيام",
						M: "شهر",
						MM: "%d أشهر",
						y: "سنة",
						yy: "%d سنوات",
					},
					preparse: function (e) {
						return e
							.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
								return n[e];
							})
							.replace(/،/g, ",");
					},
					postformat: function (e) {
						return e
							.replace(/\d/g, function (e) {
								return t[e];
							})
							.replace(/,/g, "،");
					},
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ar-tn", {
					months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
						"_"
					),
					monthsShort:
						"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
					weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
					weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
					weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[اليوم على الساعة] LT",
						nextDay: "[غدا على الساعة] LT",
						nextWeek: "dddd [على الساعة] LT",
						lastDay: "[أمس على الساعة] LT",
						lastWeek: "dddd [على الساعة] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "في %s",
						past: "منذ %s",
						s: "ثوان",
						m: "دقيقة",
						mm: "%d دقائق",
						h: "ساعة",
						hh: "%d ساعات",
						d: "يوم",
						dd: "%d أيام",
						M: "شهر",
						MM: "%d أشهر",
						y: "سنة",
						yy: "%d سنوات",
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "١",
						2: "٢",
						3: "٣",
						4: "٤",
						5: "٥",
						6: "٦",
						7: "٧",
						8: "٨",
						9: "٩",
						0: "٠",
					},
					n = {
						"١": "1",
						"٢": "2",
						"٣": "3",
						"٤": "4",
						"٥": "5",
						"٦": "6",
						"٧": "7",
						"٨": "8",
						"٩": "9",
						"٠": "0",
					},
					r = function (e) {
						return 0 === e
							? 0
							: 1 === e
							? 1
							: 2 === e
							? 2
							: e % 100 >= 3 && 10 >= e % 100
							? 3
							: e % 100 >= 11
							? 4
							: 5;
					},
					i = {
						s: [
							"أقل من ثانية",
							"ثانية واحدة",
							["ثانيتان", "ثانيتين"],
							"%d ثوان",
							"%d ثانية",
							"%d ثانية",
						],
						m: [
							"أقل من دقيقة",
							"دقيقة واحدة",
							["دقيقتان", "دقيقتين"],
							"%d دقائق",
							"%d دقيقة",
							"%d دقيقة",
						],
						h: [
							"أقل من ساعة",
							"ساعة واحدة",
							["ساعتان", "ساعتين"],
							"%d ساعات",
							"%d ساعة",
							"%d ساعة",
						],
						d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
						M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
						y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"],
					},
					s = function (e) {
						return function (t, n) {
							var s = r(t),
								o = i[e][r(t)];
							return 2 === s && (o = o[n ? 0 : 1]), o.replace(/%d/i, t);
						};
					},
					o = [
						"كانون الثاني يناير",
						"شباط فبراير",
						"آذار مارس",
						"نيسان أبريل",
						"أيار مايو",
						"حزيران يونيو",
						"تموز يوليو",
						"آب أغسطس",
						"أيلول سبتمبر",
						"تشرين الأول أكتوبر",
						"تشرين الثاني نوفمبر",
						"كانون الأول ديسمبر",
					];
				return e.defineLocale("ar", {
					months: o,
					monthsShort: o,
					weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
					weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
					weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					meridiemParse: /ص|م/,
					isPM: function (e) {
						return "م" === e;
					},
					meridiem: function (e) {
						return 12 > e ? "ص" : "م";
					},
					calendar: {
						sameDay: "[اليوم عند الساعة] LT",
						nextDay: "[غدًا عند الساعة] LT",
						nextWeek: "dddd [عند الساعة] LT",
						lastDay: "[أمس عند الساعة] LT",
						lastWeek: "dddd [عند الساعة] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "بعد %s",
						past: "منذ %s",
						s: s("s"),
						m: s("m"),
						mm: s("m"),
						h: s("h"),
						hh: s("h"),
						d: s("d"),
						dd: s("d"),
						M: s("M"),
						MM: s("M"),
						y: s("y"),
						yy: s("y"),
					},
					preparse: function (e) {
						return e
							.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
								return n[e];
							})
							.replace(/،/g, ",");
					},
					postformat: function (e) {
						return e
							.replace(/\d/g, function (e) {
								return t[e];
							})
							.replace(/,/g, "،");
					},
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
					1: "-inci",
					5: "-inci",
					8: "-inci",
					70: "-inci",
					80: "-inci",
					2: "-nci",
					7: "-nci",
					20: "-nci",
					50: "-nci",
					3: "-üncü",
					4: "-üncü",
					100: "-üncü",
					6: "-ncı",
					9: "-uncu",
					10: "-uncu",
					30: "-uncu",
					60: "-ıncı",
					90: "-ıncı",
				};
				return e.defineLocale("az", {
					months:
						"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split(
							"_"
						),
					monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
					weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
					weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
					weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[bugün saat] LT",
						nextDay: "[sabah saat] LT",
						nextWeek: "[gələn həftə] dddd [saat] LT",
						lastDay: "[dünən] LT",
						lastWeek: "[keçən həftə] dddd [saat] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s sonra",
						past: "%s əvvəl",
						s: "birneçə saniyyə",
						m: "bir dəqiqə",
						mm: "%d dəqiqə",
						h: "bir saat",
						hh: "%d saat",
						d: "bir gün",
						dd: "%d gün",
						M: "bir ay",
						MM: "%d ay",
						y: "bir il",
						yy: "%d il",
					},
					meridiemParse: /gecə|səhər|gündüz|axşam/,
					isPM: function (e) {
						return /^(gündüz|axşam)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "gecə" : 12 > e ? "səhər" : 17 > e ? "gündüz" : "axşam";
					},
					ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
					ordinal: function (e) {
						if (0 === e) return e + "-ıncı";
						var n = e % 10,
							r = (e % 100) - n,
							i = e >= 100 ? 100 : null;
						return e + (t[n] || t[r] || t[i]);
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t) {
					var n = e.split("_");
					return t % 10 === 1 && t % 100 !== 11
						? n[0]
						: t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20)
						? n[1]
						: n[2];
				}

				function n(e, n, r) {
					var i = {
						mm: n ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
						hh: n ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
						dd: "дзень_дні_дзён",
						MM: "месяц_месяцы_месяцаў",
						yy: "год_гады_гадоў",
					};
					return "m" === r
						? n
							? "хвіліна"
							: "хвіліну"
						: "h" === r
						? n
							? "гадзіна"
							: "гадзіну"
						: e + " " + t(i[r], +e);
				}

				function r(e, t) {
					var n = {
							nominative:
								"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split(
									"_"
								),
							accusative:
								"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split(
									"_"
								),
						},
						r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function i(e, t) {
					var n = {
							nominative: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
							accusative: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),
						},
						r = /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/.test(t) ? "accusative" : "nominative";
					return n[r][e.day()];
				}
				return e.defineLocale("be", {
					months: r,
					monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
					weekdays: i,
					weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
					weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY г.",
						LLL: "D MMMM YYYY г., LT",
						LLLL: "dddd, D MMMM YYYY г., LT",
					},
					calendar: {
						sameDay: "[Сёння ў] LT",
						nextDay: "[Заўтра ў] LT",
						lastDay: "[Учора ў] LT",
						nextWeek: function () {
							return "[У] dddd [ў] LT";
						},
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
								case 5:
								case 6:
									return "[У мінулую] dddd [ў] LT";
								case 1:
								case 2:
								case 4:
									return "[У мінулы] dddd [ў] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "праз %s",
						past: "%s таму",
						s: "некалькі секунд",
						m: n,
						mm: n,
						h: n,
						hh: n,
						d: "дзень",
						dd: n,
						M: "месяц",
						MM: n,
						y: "год",
						yy: n,
					},
					meridiemParse: /ночы|раніцы|дня|вечара/,
					isPM: function (e) {
						return /^(дня|вечара)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "ночы" : 12 > e ? "раніцы" : 17 > e ? "дня" : "вечара";
					},
					ordinalParse: /\d{1,2}-(і|ы|га)/,
					ordinal: function (e, t) {
						switch (t) {
							case "M":
							case "d":
							case "DDD":
							case "w":
							case "W":
								return (e % 10 !== 2 && e % 10 !== 3) || e % 100 === 12 || e % 100 === 13
									? e + "-ы"
									: e + "-і";
							case "D":
								return e + "-га";
							default:
								return e;
						}
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("bg", {
					months:
						"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split(
							"_"
						),
					monthsShort: "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
					weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
					weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
					weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "D.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Днес в] LT",
						nextDay: "[Утре в] LT",
						nextWeek: "dddd [в] LT",
						lastDay: "[Вчера в] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
								case 6:
									return "[В изминалата] dddd [в] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[В изминалия] dddd [в] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "след %s",
						past: "преди %s",
						s: "няколко секунди",
						m: "минута",
						mm: "%d минути",
						h: "час",
						hh: "%d часа",
						d: "ден",
						dd: "%d дни",
						M: "месец",
						MM: "%d месеца",
						y: "година",
						yy: "%d години",
					},
					ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
					ordinal: function (e) {
						var t = e % 10,
							n = e % 100;
						return 0 === e
							? e + "-ев"
							: 0 === n
							? e + "-ен"
							: n > 10 && 20 > n
							? e + "-ти"
							: 1 === t
							? e + "-ви"
							: 2 === t
							? e + "-ри"
							: 7 === t || 8 === t
							? e + "-ми"
							: e + "-ти";
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "১",
						2: "২",
						3: "৩",
						4: "৪",
						5: "৫",
						6: "৬",
						7: "৭",
						8: "৮",
						9: "৯",
						0: "০",
					},
					n = {
						"১": "1",
						"২": "2",
						"৩": "3",
						"৪": "4",
						"৫": "5",
						"৬": "6",
						"৭": "7",
						"৮": "8",
						"৯": "9",
						"০": "0",
					};
				return e.defineLocale("bn", {
					months:
						"জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split(
							"_"
						),
					monthsShort: "জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্".split("_"),
					weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার".split("_"),
					weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি".split("_"),
					weekdaysMin: "রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি".split("_"),
					longDateFormat: {
						LT: "A h:mm সময়",
						LTS: "A h:mm:ss সময়",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[আজ] LT",
						nextDay: "[আগামীকাল] LT",
						nextWeek: "dddd, LT",
						lastDay: "[গতকাল] LT",
						lastWeek: "[গত] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s পরে",
						past: "%s আগে",
						s: "কএক সেকেন্ড",
						m: "এক মিনিট",
						mm: "%d মিনিট",
						h: "এক ঘন্টা",
						hh: "%d ঘন্টা",
						d: "এক দিন",
						dd: "%d দিন",
						M: "এক মাস",
						MM: "%d মাস",
						y: "এক বছর",
						yy: "%d বছর",
					},
					preparse: function (e) {
						return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					meridiemParse: /রাত|শকাল|দুপুর|বিকেল|রাত/,
					isPM: function (e) {
						return /^(দুপুর|বিকেল|রাত)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "রাত" : 10 > e ? "শকাল" : 17 > e ? "দুপুর" : 20 > e ? "বিকেল" : "রাত";
					},
					week: {
						dow: 0,
						doy: 6,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "༡",
						2: "༢",
						3: "༣",
						4: "༤",
						5: "༥",
						6: "༦",
						7: "༧",
						8: "༨",
						9: "༩",
						0: "༠",
					},
					n = {
						"༡": "1",
						"༢": "2",
						"༣": "3",
						"༤": "4",
						"༥": "5",
						"༦": "6",
						"༧": "7",
						"༨": "8",
						"༩": "9",
						"༠": "0",
					};
				return e.defineLocale("bo", {
					months:
						"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
							"_"
						),
					monthsShort:
						"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
							"_"
						),
					weekdays:
						"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split(
							"_"
						),
					weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
					weekdaysMin: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
					longDateFormat: {
						LT: "A h:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[དི་རིང] LT",
						nextDay: "[སང་ཉིན] LT",
						nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
						lastDay: "[ཁ་སང] LT",
						lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s ལ་",
						past: "%s སྔན་ལ",
						s: "ལམ་སང",
						m: "སྐར་མ་གཅིག",
						mm: "%d སྐར་མ",
						h: "ཆུ་ཚོད་གཅིག",
						hh: "%d ཆུ་ཚོད",
						d: "ཉིན་གཅིག",
						dd: "%d ཉིན་",
						M: "ཟླ་བ་གཅིག",
						MM: "%d ཟླ་བ",
						y: "ལོ་གཅིག",
						yy: "%d ལོ",
					},
					preparse: function (e) {
						return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
					isPM: function (e) {
						return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e
							? "མཚན་མོ"
							: 10 > e
							? "ཞོགས་ཀས"
							: 17 > e
							? "ཉིན་གུང"
							: 20 > e
							? "དགོང་དག"
							: "མཚན་མོ";
					},
					week: {
						dow: 0,
						doy: 6,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (t) {
				function n(e, t, n) {
					var r = {
						mm: "munutenn",
						MM: "miz",
						dd: "devezh",
					};
					return e + " " + s(r[n], e);
				}

				function r(e) {
					switch (i(e)) {
						case 1:
						case 3:
						case 4:
						case 5:
						case 9:
							return e + " bloaz";
						default:
							return e + " vloaz";
					}
				}

				function i(e) {
					return e > 9 ? i(e % 10) : e;
				}

				function s(e, t) {
					return 2 === t ? o(e) : e;
				}

				function o(t) {
					var n = {
						m: "v",
						b: "v",
						d: "z",
					};
					return n[t.charAt(0)] === e ? t : n[t.charAt(0)] + t.substring(1);
				}
				return t.defineLocale("br", {
					months:
						"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split(
							"_"
						),
					monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
					weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
					weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
					weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
					longDateFormat: {
						LT: "h[e]mm A",
						LTS: "h[e]mm:ss A",
						L: "DD/MM/YYYY",
						LL: "D [a viz] MMMM YYYY",
						LLL: "D [a viz] MMMM YYYY LT",
						LLLL: "dddd, D [a viz] MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Hiziv da] LT",
						nextDay: "[Warc'hoazh da] LT",
						nextWeek: "dddd [da] LT",
						lastDay: "[Dec'h da] LT",
						lastWeek: "dddd [paset da] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "a-benn %s",
						past: "%s 'zo",
						s: "un nebeud segondennoù",
						m: "ur vunutenn",
						mm: n,
						h: "un eur",
						hh: "%d eur",
						d: "un devezh",
						dd: n,
						M: "ur miz",
						MM: n,
						y: "ur bloaz",
						yy: r,
					},
					ordinalParse: /\d{1,2}(añ|vet)/,
					ordinal: function (e) {
						var t = 1 === e ? "añ" : "vet";
						return e + t;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = e + " ";
					switch (n) {
						case "m":
							return t ? "jedna minuta" : "jedne minute";
						case "mm":
							return (r +=
								1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta");
						case "h":
							return t ? "jedan sat" : "jednog sata";
						case "hh":
							return (r += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati");
						case "dd":
							return (r += 1 === e ? "dan" : "dana");
						case "MM":
							return (r +=
								1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci");
						case "yy":
							return (r +=
								1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina");
					}
				}
				return e.defineLocale("bs", {
					months:
						"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split(
							"_"
						),
					monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
					weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
					weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
					weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD. MM. YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[danas u] LT",
						nextDay: "[sutra u] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[u] [nedjelju] [u] LT";
								case 3:
									return "[u] [srijedu] [u] LT";
								case 6:
									return "[u] [subotu] [u] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[u] dddd [u] LT";
							}
						},
						lastDay: "[jučer u] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
									return "[prošlu] dddd [u] LT";
								case 6:
									return "[prošle] [subote] [u] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[prošli] dddd [u] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "prije %s",
						s: "par sekundi",
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: "dan",
						dd: t,
						M: "mjesec",
						MM: t,
						y: "godinu",
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ca", {
					months:
						"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split(
							"_"
						),
					monthsShort: "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
					weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
					weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
					weekdaysMin: "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: function () {
							return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT";
						},
						nextDay: function () {
							return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT";
						},
						nextWeek: function () {
							return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT";
						},
						lastDay: function () {
							return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT";
						},
						lastWeek: function () {
							return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "en %s",
						past: "fa %s",
						s: "uns segons",
						m: "un minut",
						mm: "%d minuts",
						h: "una hora",
						hh: "%d hores",
						d: "un dia",
						dd: "%d dies",
						M: "un mes",
						MM: "%d mesos",
						y: "un any",
						yy: "%d anys",
					},
					ordinalParse: /\d{1,2}(r|n|t|è|a)/,
					ordinal: function (e, t) {
						var n = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
						return ("w" === t || "W" === t) && (n = "a"), e + n;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e) {
					return e > 1 && 5 > e && 1 !== ~~(e / 10);
				}

				function n(e, n, r, i) {
					var s = e + " ";
					switch (r) {
						case "s":
							return n || i ? "pár sekund" : "pár sekundami";
						case "m":
							return n ? "minuta" : i ? "minutu" : "minutou";
						case "mm":
							return n || i ? s + (t(e) ? "minuty" : "minut") : s + "minutami";
						case "h":
							return n ? "hodina" : i ? "hodinu" : "hodinou";
						case "hh":
							return n || i ? s + (t(e) ? "hodiny" : "hodin") : s + "hodinami";
						case "d":
							return n || i ? "den" : "dnem";
						case "dd":
							return n || i ? s + (t(e) ? "dny" : "dní") : s + "dny";
						case "M":
							return n || i ? "měsíc" : "měsícem";
						case "MM":
							return n || i ? s + (t(e) ? "měsíce" : "měsíců") : s + "měsíci";
						case "y":
							return n || i ? "rok" : "rokem";
						case "yy":
							return n || i ? s + (t(e) ? "roky" : "let") : s + "lety";
					}
				}
				var r =
						"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split(
							"_"
						),
					i = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_");
				return e.defineLocale("cs", {
					months: r,
					monthsShort: i,
					monthsParse: (function (e, t) {
						var n,
							r = [];
						for (n = 0; 12 > n; n++) r[n] = new RegExp("^" + e[n] + "$|^" + t[n] + "$", "i");
						return r;
					})(r, i),
					weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
					weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
					weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[dnes v] LT",
						nextDay: "[zítra v] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[v neděli v] LT";
								case 1:
								case 2:
									return "[v] dddd [v] LT";
								case 3:
									return "[ve středu v] LT";
								case 4:
									return "[ve čtvrtek v] LT";
								case 5:
									return "[v pátek v] LT";
								case 6:
									return "[v sobotu v] LT";
							}
						},
						lastDay: "[včera v] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
									return "[minulou neděli v] LT";
								case 1:
								case 2:
									return "[minulé] dddd [v] LT";
								case 3:
									return "[minulou středu v] LT";
								case 4:
								case 5:
									return "[minulý] dddd [v] LT";
								case 6:
									return "[minulou sobotu v] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "před %s",
						s: n,
						m: n,
						mm: n,
						h: n,
						hh: n,
						d: n,
						dd: n,
						M: n,
						MM: n,
						y: n,
						yy: n,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("cv", {
					months: "кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав".split("_"),
					monthsShort: "кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш".split("_"),
					weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун".split("_"),
					weekdaysShort: "выр_тун_ытл_юн_кĕç_эрн_шăм".split("_"),
					weekdaysMin: "вр_тн_ыт_юн_кç_эр_шм".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD-MM-YYYY",
						LL: "YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]",
						LLL: "YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT",
						LLLL: "dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT",
					},
					calendar: {
						sameDay: "[Паян] LT [сехетре]",
						nextDay: "[Ыран] LT [сехетре]",
						lastDay: "[Ĕнер] LT [сехетре]",
						nextWeek: "[Çитес] dddd LT [сехетре]",
						lastWeek: "[Иртнĕ] dddd LT [сехетре]",
						sameElse: "L",
					},
					relativeTime: {
						future: function (e) {
							var t = /сехет$/i.exec(e) ? "рен" : /çул$/i.exec(e) ? "тан" : "ран";
							return e + t;
						},
						past: "%s каялла",
						s: "пĕр-ик çеккунт",
						m: "пĕр минут",
						mm: "%d минут",
						h: "пĕр сехет",
						hh: "%d сехет",
						d: "пĕр кун",
						dd: "%d кун",
						M: "пĕр уйăх",
						MM: "%d уйăх",
						y: "пĕр çул",
						yy: "%d çул",
					},
					ordinalParse: /\d{1,2}-мĕш/,
					ordinal: "%d-мĕш",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("cy", {
					months:
						"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split(
							"_"
						),
					monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
					weekdays:
						"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split(
							"_"
						),
					weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
					weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Heddiw am] LT",
						nextDay: "[Yfory am] LT",
						nextWeek: "dddd [am] LT",
						lastDay: "[Ddoe am] LT",
						lastWeek: "dddd [diwethaf am] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "mewn %s",
						past: "%s yn ôl",
						s: "ychydig eiliadau",
						m: "munud",
						mm: "%d munud",
						h: "awr",
						hh: "%d awr",
						d: "diwrnod",
						dd: "%d diwrnod",
						M: "mis",
						MM: "%d mis",
						y: "blwyddyn",
						yy: "%d flynedd",
					},
					ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
					ordinal: function (e) {
						var t = e,
							n = "",
							r = [
								"",
								"af",
								"il",
								"ydd",
								"ydd",
								"ed",
								"ed",
								"ed",
								"fed",
								"fed",
								"fed",
								"eg",
								"fed",
								"eg",
								"eg",
								"fed",
								"eg",
								"eg",
								"fed",
								"eg",
								"fed",
							];
						return (
							t > 20
								? (n = 40 === t || 50 === t || 60 === t || 80 === t || 100 === t ? "fed" : "ain")
								: t > 0 && (n = r[t]),
							e + n
						);
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("da", {
					months:
						"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
					weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
					weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
					weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd [d.] D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[I dag kl.] LT",
						nextDay: "[I morgen kl.] LT",
						nextWeek: "dddd [kl.] LT",
						lastDay: "[I går kl.] LT",
						lastWeek: "[sidste] dddd [kl] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "om %s",
						past: "%s siden",
						s: "få sekunder",
						m: "et minut",
						mm: "%d minutter",
						h: "en time",
						hh: "%d timer",
						d: "en dag",
						dd: "%d dage",
						M: "en måned",
						MM: "%d måneder",
						y: "et år",
						yy: "%d år",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = {
						m: ["eine Minute", "einer Minute"],
						h: ["eine Stunde", "einer Stunde"],
						d: ["ein Tag", "einem Tag"],
						dd: [e + " Tage", e + " Tagen"],
						M: ["ein Monat", "einem Monat"],
						MM: [e + " Monate", e + " Monaten"],
						y: ["ein Jahr", "einem Jahr"],
						yy: [e + " Jahre", e + " Jahren"],
					};
					return t ? r[n][0] : r[n][1];
				}
				return e.defineLocale("de-at", {
					months:
						"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
							"_"
						),
					monthsShort: "Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
					weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
					weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
					weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Heute um] LT [Uhr]",
						sameElse: "L",
						nextDay: "[Morgen um] LT [Uhr]",
						nextWeek: "dddd [um] LT [Uhr]",
						lastDay: "[Gestern um] LT [Uhr]",
						lastWeek: "[letzten] dddd [um] LT [Uhr]",
					},
					relativeTime: {
						future: "in %s",
						past: "vor %s",
						s: "ein paar Sekunden",
						m: t,
						mm: "%d Minuten",
						h: t,
						hh: "%d Stunden",
						d: t,
						dd: t,
						M: t,
						MM: t,
						y: t,
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = {
						m: ["eine Minute", "einer Minute"],
						h: ["eine Stunde", "einer Stunde"],
						d: ["ein Tag", "einem Tag"],
						dd: [e + " Tage", e + " Tagen"],
						M: ["ein Monat", "einem Monat"],
						MM: [e + " Monate", e + " Monaten"],
						y: ["ein Jahr", "einem Jahr"],
						yy: [e + " Jahre", e + " Jahren"],
					};
					return t ? r[n][0] : r[n][1];
				}
				return e.defineLocale("de", {
					months:
						"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
							"_"
						),
					monthsShort: "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
					weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
					weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
					weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Heute um] LT [Uhr]",
						sameElse: "L",
						nextDay: "[Morgen um] LT [Uhr]",
						nextWeek: "dddd [um] LT [Uhr]",
						lastDay: "[Gestern um] LT [Uhr]",
						lastWeek: "[letzten] dddd [um] LT [Uhr]",
					},
					relativeTime: {
						future: "in %s",
						past: "vor %s",
						s: "ein paar Sekunden",
						m: t,
						mm: "%d Minuten",
						h: t,
						hh: "%d Stunden",
						d: t,
						dd: t,
						M: t,
						MM: t,
						y: t,
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("el", {
					monthsNominativeEl:
						"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split(
							"_"
						),
					monthsGenitiveEl:
						"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split(
							"_"
						),
					months: function (e, t) {
						return /D/.test(t.substring(0, t.indexOf("MMMM")))
							? this._monthsGenitiveEl[e.month()]
							: this._monthsNominativeEl[e.month()];
					},
					monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
					weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
					weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
					weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
					meridiem: function (e, t, n) {
						return e > 11 ? (n ? "μμ" : "ΜΜ") : n ? "πμ" : "ΠΜ";
					},
					isPM: function (e) {
						return "μ" === (e + "").toLowerCase()[0];
					},
					meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
					longDateFormat: {
						LT: "h:mm A",
						LTS: "h:mm:ss A",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendarEl: {
						sameDay: "[Σήμερα {}] LT",
						nextDay: "[Αύριο {}] LT",
						nextWeek: "dddd [{}] LT",
						lastDay: "[Χθες {}] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 6:
									return "[το προηγούμενο] dddd [{}] LT";
								default:
									return "[την προηγούμενη] dddd [{}] LT";
							}
						},
						sameElse: "L",
					},
					calendar: function (e, t) {
						var n = this._calendarEl[e],
							r = t && t.hours();
						return (
							"function" == typeof n && (n = n.apply(t)),
							n.replace("{}", r % 12 === 1 ? "στη" : "στις")
						);
					},
					relativeTime: {
						future: "σε %s",
						past: "%s πριν",
						s: "λίγα δευτερόλεπτα",
						m: "ένα λεπτό",
						mm: "%d λεπτά",
						h: "μία ώρα",
						hh: "%d ώρες",
						d: "μία μέρα",
						dd: "%d μέρες",
						M: "ένας μήνας",
						MM: "%d μήνες",
						y: "ένας χρόνος",
						yy: "%d χρόνια",
					},
					ordinalParse: /\d{1,2}η/,
					ordinal: "%dη",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("en-au", {
					months:
						"January_February_March_April_May_June_July_August_September_October_November_December".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
					weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
					weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
					weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "h:mm A",
						LTS: "h:mm:ss A",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Today at] LT",
						nextDay: "[Tomorrow at] LT",
						nextWeek: "dddd [at] LT",
						lastDay: "[Yesterday at] LT",
						lastWeek: "[Last] dddd [at] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "in %s",
						past: "%s ago",
						s: "a few seconds",
						m: "a minute",
						mm: "%d minutes",
						h: "an hour",
						hh: "%d hours",
						d: "a day",
						dd: "%d days",
						M: "a month",
						MM: "%d months",
						y: "a year",
						yy: "%d years",
					},
					ordinalParse: /\d{1,2}(st|nd|rd|th)/,
					ordinal: function (e) {
						var t = e % 10,
							n =
								1 === ~~((e % 100) / 10)
									? "th"
									: 1 === t
									? "st"
									: 2 === t
									? "nd"
									: 3 === t
									? "rd"
									: "th";
						return e + n;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("en-ca", {
					months:
						"January_February_March_April_May_June_July_August_September_October_November_December".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
					weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
					weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
					weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "h:mm A",
						LTS: "h:mm:ss A",
						L: "YYYY-MM-DD",
						LL: "D MMMM, YYYY",
						LLL: "D MMMM, YYYY LT",
						LLLL: "dddd, D MMMM, YYYY LT",
					},
					calendar: {
						sameDay: "[Today at] LT",
						nextDay: "[Tomorrow at] LT",
						nextWeek: "dddd [at] LT",
						lastDay: "[Yesterday at] LT",
						lastWeek: "[Last] dddd [at] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "in %s",
						past: "%s ago",
						s: "a few seconds",
						m: "a minute",
						mm: "%d minutes",
						h: "an hour",
						hh: "%d hours",
						d: "a day",
						dd: "%d days",
						M: "a month",
						MM: "%d months",
						y: "a year",
						yy: "%d years",
					},
					ordinalParse: /\d{1,2}(st|nd|rd|th)/,
					ordinal: function (e) {
						var t = e % 10,
							n =
								1 === ~~((e % 100) / 10)
									? "th"
									: 1 === t
									? "st"
									: 2 === t
									? "nd"
									: 3 === t
									? "rd"
									: "th";
						return e + n;
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("en-gb", {
					months:
						"January_February_March_April_May_June_July_August_September_October_November_December".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
					weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
					weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
					weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Today at] LT",
						nextDay: "[Tomorrow at] LT",
						nextWeek: "dddd [at] LT",
						lastDay: "[Yesterday at] LT",
						lastWeek: "[Last] dddd [at] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "in %s",
						past: "%s ago",
						s: "a few seconds",
						m: "a minute",
						mm: "%d minutes",
						h: "an hour",
						hh: "%d hours",
						d: "a day",
						dd: "%d days",
						M: "a month",
						MM: "%d months",
						y: "a year",
						yy: "%d years",
					},
					ordinalParse: /\d{1,2}(st|nd|rd|th)/,
					ordinal: function (e) {
						var t = e % 10,
							n =
								1 === ~~((e % 100) / 10)
									? "th"
									: 1 === t
									? "st"
									: 2 === t
									? "nd"
									: 3 === t
									? "rd"
									: "th";
						return e + n;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("eo", {
					months:
						"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split("_"),
					weekdays: "Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato".split("_"),
					weekdaysShort: "Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab".split("_"),
					weekdaysMin: "Di_Lu_Ma_Me_Ĵa_Ve_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "YYYY-MM-DD",
						LL: "D[-an de] MMMM, YYYY",
						LLL: "D[-an de] MMMM, YYYY LT",
						LLLL: "dddd, [la] D[-an de] MMMM, YYYY LT",
					},
					meridiemParse: /[ap]\.t\.m/i,
					isPM: function (e) {
						return "p" === e.charAt(0).toLowerCase();
					},
					meridiem: function (e, t, n) {
						return e > 11 ? (n ? "p.t.m." : "P.T.M.") : n ? "a.t.m." : "A.T.M.";
					},
					calendar: {
						sameDay: "[Hodiaŭ je] LT",
						nextDay: "[Morgaŭ je] LT",
						nextWeek: "dddd [je] LT",
						lastDay: "[Hieraŭ je] LT",
						lastWeek: "[pasinta] dddd [je] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "je %s",
						past: "antaŭ %s",
						s: "sekundoj",
						m: "minuto",
						mm: "%d minutoj",
						h: "horo",
						hh: "%d horoj",
						d: "tago",
						dd: "%d tagoj",
						M: "monato",
						MM: "%d monatoj",
						y: "jaro",
						yy: "%d jaroj",
					},
					ordinalParse: /\d{1,2}a/,
					ordinal: "%da",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
					n = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");
				return e.defineLocale("es", {
					months:
						"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
							"_"
						),
					monthsShort: function (e, r) {
						return /-MMM-/.test(r) ? n[e.month()] : t[e.month()];
					},
					weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
					weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
					weekdaysMin: "Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D [de] MMMM [de] YYYY",
						LLL: "D [de] MMMM [de] YYYY LT",
						LLLL: "dddd, D [de] MMMM [de] YYYY LT",
					},
					calendar: {
						sameDay: function () {
							return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
						},
						nextDay: function () {
							return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
						},
						nextWeek: function () {
							return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
						},
						lastDay: function () {
							return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
						},
						lastWeek: function () {
							return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "en %s",
						past: "hace %s",
						s: "unos segundos",
						m: "un minuto",
						mm: "%d minutos",
						h: "una hora",
						hh: "%d horas",
						d: "un día",
						dd: "%d días",
						M: "un mes",
						MM: "%d meses",
						y: "un año",
						yy: "%d años",
					},
					ordinalParse: /\d{1,2}º/,
					ordinal: "%dº",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n, r) {
					var i = {
						s: ["mõne sekundi", "mõni sekund", "paar sekundit"],
						m: ["ühe minuti", "üks minut"],
						mm: [e + " minuti", e + " minutit"],
						h: ["ühe tunni", "tund aega", "üks tund"],
						hh: [e + " tunni", e + " tundi"],
						d: ["ühe päeva", "üks päev"],
						M: ["kuu aja", "kuu aega", "üks kuu"],
						MM: [e + " kuu", e + " kuud"],
						y: ["ühe aasta", "aasta", "üks aasta"],
						yy: [e + " aasta", e + " aastat"],
					};
					return t ? (i[n][2] ? i[n][2] : i[n][1]) : r ? i[n][0] : i[n][1];
				}
				return e.defineLocale("et", {
					months:
						"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split(
							"_"
						),
					monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
					weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
					weekdaysShort: "P_E_T_K_N_R_L".split("_"),
					weekdaysMin: "P_E_T_K_N_R_L".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Täna,] LT",
						nextDay: "[Homme,] LT",
						nextWeek: "[Järgmine] dddd LT",
						lastDay: "[Eile,] LT",
						lastWeek: "[Eelmine] dddd LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s pärast",
						past: "%s tagasi",
						s: t,
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: t,
						dd: "%d päeva",
						M: t,
						MM: t,
						y: t,
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("eu", {
					months:
						"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split(
							"_"
						),
					monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
					weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split(
						"_"
					),
					weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
					weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "YYYY-MM-DD",
						LL: "YYYY[ko] MMMM[ren] D[a]",
						LLL: "YYYY[ko] MMMM[ren] D[a] LT",
						LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] LT",
						l: "YYYY-M-D",
						ll: "YYYY[ko] MMM D[a]",
						lll: "YYYY[ko] MMM D[a] LT",
						llll: "ddd, YYYY[ko] MMM D[a] LT",
					},
					calendar: {
						sameDay: "[gaur] LT[etan]",
						nextDay: "[bihar] LT[etan]",
						nextWeek: "dddd LT[etan]",
						lastDay: "[atzo] LT[etan]",
						lastWeek: "[aurreko] dddd LT[etan]",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s barru",
						past: "duela %s",
						s: "segundo batzuk",
						m: "minutu bat",
						mm: "%d minutu",
						h: "ordu bat",
						hh: "%d ordu",
						d: "egun bat",
						dd: "%d egun",
						M: "hilabete bat",
						MM: "%d hilabete",
						y: "urte bat",
						yy: "%d urte",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "۱",
						2: "۲",
						3: "۳",
						4: "۴",
						5: "۵",
						6: "۶",
						7: "۷",
						8: "۸",
						9: "۹",
						0: "۰",
					},
					n = {
						"۱": "1",
						"۲": "2",
						"۳": "3",
						"۴": "4",
						"۵": "5",
						"۶": "6",
						"۷": "7",
						"۸": "8",
						"۹": "9",
						"۰": "0",
					};
				return e.defineLocale("fa", {
					months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split(
						"_"
					),
					monthsShort:
						"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
					weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
					weekdaysShort: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
					weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					meridiemParse: /قبل از ظهر|بعد از ظهر/,
					isPM: function (e) {
						return /بعد از ظهر/.test(e);
					},
					meridiem: function (e) {
						return 12 > e ? "قبل از ظهر" : "بعد از ظهر";
					},
					calendar: {
						sameDay: "[امروز ساعت] LT",
						nextDay: "[فردا ساعت] LT",
						nextWeek: "dddd [ساعت] LT",
						lastDay: "[دیروز ساعت] LT",
						lastWeek: "dddd [پیش] [ساعت] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "در %s",
						past: "%s پیش",
						s: "چندین ثانیه",
						m: "یک دقیقه",
						mm: "%d دقیقه",
						h: "یک ساعت",
						hh: "%d ساعت",
						d: "یک روز",
						dd: "%d روز",
						M: "یک ماه",
						MM: "%d ماه",
						y: "یک سال",
						yy: "%d سال",
					},
					preparse: function (e) {
						return e
							.replace(/[۰-۹]/g, function (e) {
								return n[e];
							})
							.replace(/،/g, ",");
					},
					postformat: function (e) {
						return e
							.replace(/\d/g, function (e) {
								return t[e];
							})
							.replace(/,/g, "،");
					},
					ordinalParse: /\d{1,2}م/,
					ordinal: "%dم",
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, r, i) {
					var s = "";
					switch (r) {
						case "s":
							return i ? "muutaman sekunnin" : "muutama sekunti";
						case "m":
							return i ? "minuutin" : "minuutti";
						case "mm":
							s = i ? "minuutin" : "minuuttia";
							break;
						case "h":
							return i ? "tunnin" : "tunti";
						case "hh":
							s = i ? "tunnin" : "tuntia";
							break;
						case "d":
							return i ? "päivän" : "päivä";
						case "dd":
							s = i ? "päivän" : "päivää";
							break;
						case "M":
							return i ? "kuukauden" : "kuukausi";
						case "MM":
							s = i ? "kuukauden" : "kuukautta";
							break;
						case "y":
							return i ? "vuoden" : "vuosi";
						case "yy":
							s = i ? "vuoden" : "vuotta";
					}
					return (s = n(e, i) + " " + s);
				}

				function n(e, t) {
					return 10 > e ? (t ? i[e] : r[e]) : e;
				}
				var r = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "),
					i = [
						"nolla",
						"yhden",
						"kahden",
						"kolmen",
						"neljän",
						"viiden",
						"kuuden",
						r[7],
						r[8],
						r[9],
					];
				return e.defineLocale("fi", {
					months:
						"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split(
							"_"
						),
					monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split(
						"_"
					),
					weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
					weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
					weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
					longDateFormat: {
						LT: "HH.mm",
						LTS: "HH.mm.ss",
						L: "DD.MM.YYYY",
						LL: "Do MMMM[ta] YYYY",
						LLL: "Do MMMM[ta] YYYY, [klo] LT",
						LLLL: "dddd, Do MMMM[ta] YYYY, [klo] LT",
						l: "D.M.YYYY",
						ll: "Do MMM YYYY",
						lll: "Do MMM YYYY, [klo] LT",
						llll: "ddd, Do MMM YYYY, [klo] LT",
					},
					calendar: {
						sameDay: "[tänään] [klo] LT",
						nextDay: "[huomenna] [klo] LT",
						nextWeek: "dddd [klo] LT",
						lastDay: "[eilen] [klo] LT",
						lastWeek: "[viime] dddd[na] [klo] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s päästä",
						past: "%s sitten",
						s: t,
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: t,
						dd: t,
						M: t,
						MM: t,
						y: t,
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("fo", {
					months:
						"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
					weekdays:
						"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
					weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
					weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D. MMMM, YYYY LT",
					},
					calendar: {
						sameDay: "[Í dag kl.] LT",
						nextDay: "[Í morgin kl.] LT",
						nextWeek: "dddd [kl.] LT",
						lastDay: "[Í gjár kl.] LT",
						lastWeek: "[síðstu] dddd [kl] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "um %s",
						past: "%s síðani",
						s: "fá sekund",
						m: "ein minutt",
						mm: "%d minuttir",
						h: "ein tími",
						hh: "%d tímar",
						d: "ein dagur",
						dd: "%d dagar",
						M: "ein mánaði",
						MM: "%d mánaðir",
						y: "eitt ár",
						yy: "%d ár",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("fr-ca", {
					months:
						"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
							"_"
						),
					monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
					weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
					weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
					weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "YYYY-MM-DD",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Aujourd'hui à] LT",
						nextDay: "[Demain à] LT",
						nextWeek: "dddd [à] LT",
						lastDay: "[Hier à] LT",
						lastWeek: "dddd [dernier à] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "dans %s",
						past: "il y a %s",
						s: "quelques secondes",
						m: "une minute",
						mm: "%d minutes",
						h: "une heure",
						hh: "%d heures",
						d: "un jour",
						dd: "%d jours",
						M: "un mois",
						MM: "%d mois",
						y: "un an",
						yy: "%d ans",
					},
					ordinalParse: /\d{1,2}(er|)/,
					ordinal: function (e) {
						return e + (1 === e ? "er" : "");
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("fr", {
					months:
						"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
							"_"
						),
					monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
					weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
					weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
					weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Aujourd'hui à] LT",
						nextDay: "[Demain à] LT",
						nextWeek: "dddd [à] LT",
						lastDay: "[Hier à] LT",
						lastWeek: "dddd [dernier à] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "dans %s",
						past: "il y a %s",
						s: "quelques secondes",
						m: "une minute",
						mm: "%d minutes",
						h: "une heure",
						hh: "%d heures",
						d: "un jour",
						dd: "%d jours",
						M: "un mois",
						MM: "%d mois",
						y: "un an",
						yy: "%d ans",
					},
					ordinalParse: /\d{1,2}(er|)/,
					ordinal: function (e) {
						return e + (1 === e ? "er" : "");
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"),
					n = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
				return e.defineLocale("fy", {
					months:
						"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split(
							"_"
						),
					monthsShort: function (e, r) {
						return /-MMM-/.test(r) ? n[e.month()] : t[e.month()];
					},
					weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
					weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
					weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD-MM-YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[hjoed om] LT",
						nextDay: "[moarn om] LT",
						nextWeek: "dddd [om] LT",
						lastDay: "[juster om] LT",
						lastWeek: "[ôfrûne] dddd [om] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "oer %s",
						past: "%s lyn",
						s: "in pear sekonden",
						m: "ien minút",
						mm: "%d minuten",
						h: "ien oere",
						hh: "%d oeren",
						d: "ien dei",
						dd: "%d dagen",
						M: "ien moanne",
						MM: "%d moannen",
						y: "ien jier",
						yy: "%d jierren",
					},
					ordinalParse: /\d{1,2}(ste|de)/,
					ordinal: function (e) {
						return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("gl", {
					months:
						"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split(
							"_"
						),
					monthsShort: "Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
					weekdays: "Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado".split("_"),
					weekdaysShort: "Dom._Lun._Mar._Mér._Xov._Ven._Sáb.".split("_"),
					weekdaysMin: "Do_Lu_Ma_Mé_Xo_Ve_Sá".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: function () {
							return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT";
						},
						nextDay: function () {
							return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT";
						},
						nextWeek: function () {
							return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT";
						},
						lastDay: function () {
							return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT";
						},
						lastWeek: function () {
							return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: function (e) {
							return "uns segundos" === e ? "nuns segundos" : "en " + e;
						},
						past: "hai %s",
						s: "uns segundos",
						m: "un minuto",
						mm: "%d minutos",
						h: "unha hora",
						hh: "%d horas",
						d: "un día",
						dd: "%d días",
						M: "un mes",
						MM: "%d meses",
						y: "un ano",
						yy: "%d anos",
					},
					ordinalParse: /\d{1,2}º/,
					ordinal: "%dº",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("he", {
					months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split(
						"_"
					),
					monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
					weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
					weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
					weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D [ב]MMMM YYYY",
						LLL: "D [ב]MMMM YYYY LT",
						LLLL: "dddd, D [ב]MMMM YYYY LT",
						l: "D/M/YYYY",
						ll: "D MMM YYYY",
						lll: "D MMM YYYY LT",
						llll: "ddd, D MMM YYYY LT",
					},
					calendar: {
						sameDay: "[היום ב־]LT",
						nextDay: "[מחר ב־]LT",
						nextWeek: "dddd [בשעה] LT",
						lastDay: "[אתמול ב־]LT",
						lastWeek: "[ביום] dddd [האחרון בשעה] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "בעוד %s",
						past: "לפני %s",
						s: "מספר שניות",
						m: "דקה",
						mm: "%d דקות",
						h: "שעה",
						hh: function (e) {
							return 2 === e ? "שעתיים" : e + " שעות";
						},
						d: "יום",
						dd: function (e) {
							return 2 === e ? "יומיים" : e + " ימים";
						},
						M: "חודש",
						MM: function (e) {
							return 2 === e ? "חודשיים" : e + " חודשים";
						},
						y: "שנה",
						yy: function (e) {
							return 2 === e ? "שנתיים" : e % 10 === 0 && 10 !== e ? e + " שנה" : e + " שנים";
						},
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "१",
						2: "२",
						3: "३",
						4: "४",
						5: "५",
						6: "६",
						7: "७",
						8: "८",
						9: "९",
						0: "०",
					},
					n = {
						"१": "1",
						"२": "2",
						"३": "3",
						"४": "4",
						"५": "5",
						"६": "6",
						"७": "7",
						"८": "8",
						"९": "9",
						"०": "0",
					};
				return e.defineLocale("hi", {
					months:
						"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split(
							"_"
						),
					monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
					weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
					weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
					weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
					longDateFormat: {
						LT: "A h:mm बजे",
						LTS: "A h:mm:ss बजे",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[आज] LT",
						nextDay: "[कल] LT",
						nextWeek: "dddd, LT",
						lastDay: "[कल] LT",
						lastWeek: "[पिछले] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s में",
						past: "%s पहले",
						s: "कुछ ही क्षण",
						m: "एक मिनट",
						mm: "%d मिनट",
						h: "एक घंटा",
						hh: "%d घंटे",
						d: "एक दिन",
						dd: "%d दिन",
						M: "एक महीने",
						MM: "%d महीने",
						y: "एक वर्ष",
						yy: "%d वर्ष",
					},
					preparse: function (e) {
						return e.replace(/[१२३४५६७८९०]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					meridiemParse: /रात|सुबह|दोपहर|शाम/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"रात" === t
								? 4 > e
									? e
									: e + 12
								: "सुबह" === t
								? e
								: "दोपहर" === t
								? e >= 10
									? e
									: e + 12
								: "शाम" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e) {
						return 4 > e ? "रात" : 10 > e ? "सुबह" : 17 > e ? "दोपहर" : 20 > e ? "शाम" : "रात";
					},
					week: {
						dow: 0,
						doy: 6,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = e + " ";
					switch (n) {
						case "m":
							return t ? "jedna minuta" : "jedne minute";
						case "mm":
							return (r +=
								1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta");
						case "h":
							return t ? "jedan sat" : "jednog sata";
						case "hh":
							return (r += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati");
						case "dd":
							return (r += 1 === e ? "dan" : "dana");
						case "MM":
							return (r +=
								1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci");
						case "yy":
							return (r +=
								1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina");
					}
				}
				return e.defineLocale("hr", {
					months:
						"sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split(
							"_"
						),
					monthsShort: "sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
					weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
					weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
					weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD. MM. YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[danas u] LT",
						nextDay: "[sutra u] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[u] [nedjelju] [u] LT";
								case 3:
									return "[u] [srijedu] [u] LT";
								case 6:
									return "[u] [subotu] [u] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[u] dddd [u] LT";
							}
						},
						lastDay: "[jučer u] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
									return "[prošlu] dddd [u] LT";
								case 6:
									return "[prošle] [subote] [u] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[prošli] dddd [u] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "prije %s",
						s: "par sekundi",
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: "dan",
						dd: t,
						M: "mjesec",
						MM: t,
						y: "godinu",
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n, r) {
					var i = e;
					switch (n) {
						case "s":
							return r || t ? "néhány másodperc" : "néhány másodperce";
						case "m":
							return "egy" + (r || t ? " perc" : " perce");
						case "mm":
							return i + (r || t ? " perc" : " perce");
						case "h":
							return "egy" + (r || t ? " óra" : " órája");
						case "hh":
							return i + (r || t ? " óra" : " órája");
						case "d":
							return "egy" + (r || t ? " nap" : " napja");
						case "dd":
							return i + (r || t ? " nap" : " napja");
						case "M":
							return "egy" + (r || t ? " hónap" : " hónapja");
						case "MM":
							return i + (r || t ? " hónap" : " hónapja");
						case "y":
							return "egy" + (r || t ? " év" : " éve");
						case "yy":
							return i + (r || t ? " év" : " éve");
					}
					return "";
				}

				function n(e) {
					return (e ? "" : "[múlt] ") + "[" + r[this.day()] + "] LT[-kor]";
				}
				var r = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ");
				return e.defineLocale("hu", {
					months:
						"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split(
							"_"
						),
					monthsShort: "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
					weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
					weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
					weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "YYYY.MM.DD.",
						LL: "YYYY. MMMM D.",
						LLL: "YYYY. MMMM D., LT",
						LLLL: "YYYY. MMMM D., dddd LT",
					},
					meridiemParse: /de|du/i,
					isPM: function (e) {
						return "u" === e.charAt(1).toLowerCase();
					},
					meridiem: function (e, t, n) {
						return 12 > e ? (n === !0 ? "de" : "DE") : n === !0 ? "du" : "DU";
					},
					calendar: {
						sameDay: "[ma] LT[-kor]",
						nextDay: "[holnap] LT[-kor]",
						nextWeek: function () {
							return n.call(this, !0);
						},
						lastDay: "[tegnap] LT[-kor]",
						lastWeek: function () {
							return n.call(this, !1);
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "%s múlva",
						past: "%s",
						s: t,
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: t,
						dd: t,
						M: t,
						MM: t,
						y: t,
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t) {
					var n = {
							nominative:
								"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split(
									"_"
								),
							accusative:
								"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split(
									"_"
								),
						},
						r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function n(e) {
					var t = "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_");
					return t[e.month()];
				}

				function r(e) {
					var t = "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_");
					return t[e.day()];
				}
				return e.defineLocale("hy-am", {
					months: t,
					monthsShort: n,
					weekdays: r,
					weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
					weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY թ.",
						LLL: "D MMMM YYYY թ., LT",
						LLLL: "dddd, D MMMM YYYY թ., LT",
					},
					calendar: {
						sameDay: "[այսօր] LT",
						nextDay: "[վաղը] LT",
						lastDay: "[երեկ] LT",
						nextWeek: function () {
							return "dddd [օրը ժամը] LT";
						},
						lastWeek: function () {
							return "[անցած] dddd [օրը ժամը] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "%s հետո",
						past: "%s առաջ",
						s: "մի քանի վայրկյան",
						m: "րոպե",
						mm: "%d րոպե",
						h: "ժամ",
						hh: "%d ժամ",
						d: "օր",
						dd: "%d օր",
						M: "ամիս",
						MM: "%d ամիս",
						y: "տարի",
						yy: "%d տարի",
					},
					meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
					isPM: function (e) {
						return /^(ցերեկվա|երեկոյան)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "գիշերվա" : 12 > e ? "առավոտվա" : 17 > e ? "ցերեկվա" : "երեկոյան";
					},
					ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
					ordinal: function (e, t) {
						switch (t) {
							case "DDD":
							case "w":
							case "W":
							case "DDDo":
								return 1 === e ? e + "-ին" : e + "-րդ";
							default:
								return e;
						}
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("id", {
					months:
						"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
					weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
					weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
					weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
					longDateFormat: {
						LT: "HH.mm",
						LTS: "LT.ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY [pukul] LT",
						LLLL: "dddd, D MMMM YYYY [pukul] LT",
					},
					meridiemParse: /pagi|siang|sore|malam/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"pagi" === t
								? e
								: "siang" === t
								? e >= 11
									? e
									: e + 12
								: "sore" === t || "malam" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e) {
						return 11 > e ? "pagi" : 15 > e ? "siang" : 19 > e ? "sore" : "malam";
					},
					calendar: {
						sameDay: "[Hari ini pukul] LT",
						nextDay: "[Besok pukul] LT",
						nextWeek: "dddd [pukul] LT",
						lastDay: "[Kemarin pukul] LT",
						lastWeek: "dddd [lalu pukul] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "dalam %s",
						past: "%s yang lalu",
						s: "beberapa detik",
						m: "semenit",
						mm: "%d menit",
						h: "sejam",
						hh: "%d jam",
						d: "sehari",
						dd: "%d hari",
						M: "sebulan",
						MM: "%d bulan",
						y: "setahun",
						yy: "%d tahun",
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e) {
					return e % 100 === 11 ? !0 : e % 10 === 1 ? !1 : !0;
				}

				function n(e, n, r, i) {
					var s = e + " ";
					switch (r) {
						case "s":
							return n || i ? "nokkrar sekúndur" : "nokkrum sekúndum";
						case "m":
							return n ? "mínúta" : "mínútu";
						case "mm":
							return t(e) ? s + (n || i ? "mínútur" : "mínútum") : n ? s + "mínúta" : s + "mínútu";
						case "hh":
							return t(e) ? s + (n || i ? "klukkustundir" : "klukkustundum") : s + "klukkustund";
						case "d":
							return n ? "dagur" : i ? "dag" : "degi";
						case "dd":
							return t(e)
								? n
									? s + "dagar"
									: s + (i ? "daga" : "dögum")
								: n
								? s + "dagur"
								: s + (i ? "dag" : "degi");
						case "M":
							return n ? "mánuður" : i ? "mánuð" : "mánuði";
						case "MM":
							return t(e)
								? n
									? s + "mánuðir"
									: s + (i ? "mánuði" : "mánuðum")
								: n
								? s + "mánuður"
								: s + (i ? "mánuð" : "mánuði");
						case "y":
							return n || i ? "ár" : "ári";
						case "yy":
							return t(e) ? s + (n || i ? "ár" : "árum") : s + (n || i ? "ár" : "ári");
					}
				}
				return e.defineLocale("is", {
					months:
						"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
					weekdays:
						"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split(
							"_"
						),
					weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
					weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY [kl.] LT",
						LLLL: "dddd, D. MMMM YYYY [kl.] LT",
					},
					calendar: {
						sameDay: "[í dag kl.] LT",
						nextDay: "[á morgun kl.] LT",
						nextWeek: "dddd [kl.] LT",
						lastDay: "[í gær kl.] LT",
						lastWeek: "[síðasta] dddd [kl.] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "eftir %s",
						past: "fyrir %s síðan",
						s: n,
						m: n,
						mm: n,
						h: "klukkustund",
						hh: n,
						d: n,
						dd: n,
						M: n,
						MM: n,
						y: n,
						yy: n,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("it", {
					months:
						"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
							"_"
						),
					monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
					weekdays: "Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato".split("_"),
					weekdaysShort: "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
					weekdaysMin: "D_L_Ma_Me_G_V_S".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Oggi alle] LT",
						nextDay: "[Domani alle] LT",
						nextWeek: "dddd [alle] LT",
						lastDay: "[Ieri alle] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
									return "[la scorsa] dddd [alle] LT";
								default:
									return "[lo scorso] dddd [alle] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: function (e) {
							return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
						},
						past: "%s fa",
						s: "alcuni secondi",
						m: "un minuto",
						mm: "%d minuti",
						h: "un'ora",
						hh: "%d ore",
						d: "un giorno",
						dd: "%d giorni",
						M: "un mese",
						MM: "%d mesi",
						y: "un anno",
						yy: "%d anni",
					},
					ordinalParse: /\d{1,2}º/,
					ordinal: "%dº",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ja", {
					months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
					monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
					weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
					weekdaysShort: "日_月_火_水_木_金_土".split("_"),
					weekdaysMin: "日_月_火_水_木_金_土".split("_"),
					longDateFormat: {
						LT: "Ah時m分",
						LTS: "LTs秒",
						L: "YYYY/MM/DD",
						LL: "YYYY年M月D日",
						LLL: "YYYY年M月D日LT",
						LLLL: "YYYY年M月D日LT dddd",
					},
					meridiemParse: /午前|午後/i,
					isPM: function (e) {
						return "午後" === e;
					},
					meridiem: function (e) {
						return 12 > e ? "午前" : "午後";
					},
					calendar: {
						sameDay: "[今日] LT",
						nextDay: "[明日] LT",
						nextWeek: "[来週]dddd LT",
						lastDay: "[昨日] LT",
						lastWeek: "[前週]dddd LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s後",
						past: "%s前",
						s: "数秒",
						m: "1分",
						mm: "%d分",
						h: "1時間",
						hh: "%d時間",
						d: "1日",
						dd: "%d日",
						M: "1ヶ月",
						MM: "%dヶ月",
						y: "1年",
						yy: "%d年",
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t) {
					var n = {
							nominative:
								"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split(
									"_"
								),
							accusative:
								"იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split(
									"_"
								),
						},
						r = /D[oD] *MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function n(e, t) {
					var n = {
							nominative: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split(
								"_"
							),
							accusative: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split(
								"_"
							),
						},
						r = /(წინა|შემდეგ)/.test(t) ? "accusative" : "nominative";
					return n[r][e.day()];
				}
				return e.defineLocale("ka", {
					months: t,
					monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
					weekdays: n,
					weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
					weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
					longDateFormat: {
						LT: "h:mm A",
						LTS: "h:mm:ss A",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[დღეს] LT[-ზე]",
						nextDay: "[ხვალ] LT[-ზე]",
						lastDay: "[გუშინ] LT[-ზე]",
						nextWeek: "[შემდეგ] dddd LT[-ზე]",
						lastWeek: "[წინა] dddd LT-ზე",
						sameElse: "L",
					},
					relativeTime: {
						future: function (e) {
							return /(წამი|წუთი|საათი|წელი)/.test(e) ? e.replace(/ი$/, "ში") : e + "ში";
						},
						past: function (e) {
							return /(წამი|წუთი|საათი|დღე|თვე)/.test(e)
								? e.replace(/(ი|ე)$/, "ის წინ")
								: /წელი/.test(e)
								? e.replace(/წელი$/, "წლის წინ")
								: void 0;
						},
						s: "რამდენიმე წამი",
						m: "წუთი",
						mm: "%d წუთი",
						h: "საათი",
						hh: "%d საათი",
						d: "დღე",
						dd: "%d დღე",
						M: "თვე",
						MM: "%d თვე",
						y: "წელი",
						yy: "%d წელი",
					},
					ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
					ordinal: function (e) {
						return 0 === e
							? e
							: 1 === e
							? e + "-ლი"
							: 20 > e || (100 >= e && e % 20 === 0) || e % 100 === 0
							? "მე-" + e
							: e + "-ე";
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("km", {
					months: "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split(
						"_"
					),
					monthsShort:
						"មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
					weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
					weekdaysShort: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
					weekdaysMin: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[ថ្ងៃនៈ ម៉ោង] LT",
						nextDay: "[ស្អែក ម៉ោង] LT",
						nextWeek: "dddd [ម៉ោង] LT",
						lastDay: "[ម្សិលមិញ ម៉ោង] LT",
						lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%sទៀត",
						past: "%sមុន",
						s: "ប៉ុន្មានវិនាទី",
						m: "មួយនាទី",
						mm: "%d នាទី",
						h: "មួយម៉ោង",
						hh: "%d ម៉ោង",
						d: "មួយថ្ងៃ",
						dd: "%d ថ្ងៃ",
						M: "មួយខែ",
						MM: "%d ខែ",
						y: "មួយឆ្នាំ",
						yy: "%d ឆ្នាំ",
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ko", {
					months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
					monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
					weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
					weekdaysShort: "일_월_화_수_목_금_토".split("_"),
					weekdaysMin: "일_월_화_수_목_금_토".split("_"),
					longDateFormat: {
						LT: "A h시 m분",
						LTS: "A h시 m분 s초",
						L: "YYYY.MM.DD",
						LL: "YYYY년 MMMM D일",
						LLL: "YYYY년 MMMM D일 LT",
						LLLL: "YYYY년 MMMM D일 dddd LT",
					},
					calendar: {
						sameDay: "오늘 LT",
						nextDay: "내일 LT",
						nextWeek: "dddd LT",
						lastDay: "어제 LT",
						lastWeek: "지난주 dddd LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s 후",
						past: "%s 전",
						s: "몇초",
						ss: "%d초",
						m: "일분",
						mm: "%d분",
						h: "한시간",
						hh: "%d시간",
						d: "하루",
						dd: "%d일",
						M: "한달",
						MM: "%d달",
						y: "일년",
						yy: "%d년",
					},
					ordinalParse: /\d{1,2}일/,
					ordinal: "%d일",
					meridiemParse: /오전|오후/,
					isPM: function (e) {
						return "오후" === e;
					},
					meridiem: function (e) {
						return 12 > e ? "오전" : "오후";
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = {
						m: ["eng Minutt", "enger Minutt"],
						h: ["eng Stonn", "enger Stonn"],
						d: ["een Dag", "engem Dag"],
						M: ["ee Mount", "engem Mount"],
						y: ["ee Joer", "engem Joer"],
					};
					return t ? r[n][0] : r[n][1];
				}

				function n(e) {
					var t = e.substr(0, e.indexOf(" "));
					return i(t) ? "a " + e : "an " + e;
				}

				function r(e) {
					var t = e.substr(0, e.indexOf(" "));
					return i(t) ? "viru " + e : "virun " + e;
				}

				function i(e) {
					if (((e = parseInt(e, 10)), isNaN(e))) return !1;
					if (0 > e) return !0;
					if (10 > e) return e >= 4 && 7 >= e ? !0 : !1;
					if (100 > e) {
						var t = e % 10,
							n = e / 10;
						return i(0 === t ? n : t);
					}
					if (1e4 > e) {
						for (; e >= 10; ) e /= 10;
						return i(e);
					}
					return (e /= 1e3), i(e);
				}
				return e.defineLocale("lb", {
					months:
						"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split(
							"_"
						),
					monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
					weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
					weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
					weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
					longDateFormat: {
						LT: "H:mm [Auer]",
						LTS: "H:mm:ss [Auer]",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Haut um] LT",
						sameElse: "L",
						nextDay: "[Muer um] LT",
						nextWeek: "dddd [um] LT",
						lastDay: "[Gëschter um] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 2:
								case 4:
									return "[Leschten] dddd [um] LT";
								default:
									return "[Leschte] dddd [um] LT";
							}
						},
					},
					relativeTime: {
						future: n,
						past: r,
						s: "e puer Sekonnen",
						m: t,
						mm: "%d Minutten",
						h: t,
						hh: "%d Stonnen",
						d: t,
						dd: "%d Deeg",
						M: t,
						MM: "%d Méint",
						y: t,
						yy: "%d Joer",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n, r) {
					return t ? "kelios sekundės" : r ? "kelių sekundžių" : "kelias sekundes";
				}

				function n(e, t, n, r) {
					return t ? i(n)[0] : r ? i(n)[1] : i(n)[2];
				}

				function r(e) {
					return e % 10 === 0 || (e > 10 && 20 > e);
				}

				function i(e) {
					return u[e].split("_");
				}

				function s(e, t, s, o) {
					var u = e + " ";
					return 1 === e
						? u + n(e, t, s[0], o)
						: t
						? u + (r(e) ? i(s)[1] : i(s)[0])
						: o
						? u + i(s)[1]
						: u + (r(e) ? i(s)[1] : i(s)[2]);
				}

				function o(e, t) {
					var n = -1 === t.indexOf("dddd HH:mm"),
						r = a[e.day()];
					return n ? r : r.substring(0, r.length - 2) + "į";
				}
				var u = {
						m: "minutė_minutės_minutę",
						mm: "minutės_minučių_minutes",
						h: "valanda_valandos_valandą",
						hh: "valandos_valandų_valandas",
						d: "diena_dienos_dieną",
						dd: "dienos_dienų_dienas",
						M: "mėnuo_mėnesio_mėnesį",
						MM: "mėnesiai_mėnesių_mėnesius",
						y: "metai_metų_metus",
						yy: "metai_metų_metus",
					},
					a =
						"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split(
							"_"
						);
				return e.defineLocale("lt", {
					months:
						"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split(
							"_"
						),
					monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
					weekdays: o,
					weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
					weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "YYYY-MM-DD",
						LL: "YYYY [m.] MMMM D [d.]",
						LLL: "YYYY [m.] MMMM D [d.], LT [val.]",
						LLLL: "YYYY [m.] MMMM D [d.], dddd, LT [val.]",
						l: "YYYY-MM-DD",
						ll: "YYYY [m.] MMMM D [d.]",
						lll: "YYYY [m.] MMMM D [d.], LT [val.]",
						llll: "YYYY [m.] MMMM D [d.], ddd, LT [val.]",
					},
					calendar: {
						sameDay: "[Šiandien] LT",
						nextDay: "[Rytoj] LT",
						nextWeek: "dddd LT",
						lastDay: "[Vakar] LT",
						lastWeek: "[Praėjusį] dddd LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "po %s",
						past: "prieš %s",
						s: t,
						m: n,
						mm: s,
						h: n,
						hh: s,
						d: n,
						dd: s,
						M: n,
						MM: s,
						y: n,
						yy: s,
					},
					ordinalParse: /\d{1,2}-oji/,
					ordinal: function (e) {
						return e + "-oji";
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = e.split("_");
					return n
						? t % 10 === 1 && 11 !== t
							? r[2]
							: r[3]
						: t % 10 === 1 && 11 !== t
						? r[0]
						: r[1];
				}

				function n(e, n, i) {
					return e + " " + t(r[i], e, n);
				}
				var r = {
					mm: "minūti_minūtes_minūte_minūtes",
					hh: "stundu_stundas_stunda_stundas",
					dd: "dienu_dienas_diena_dienas",
					MM: "mēnesi_mēnešus_mēnesis_mēneši",
					yy: "gadu_gadus_gads_gadi",
				};
				return e.defineLocale("lv", {
					months:
						"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
					weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split(
						"_"
					),
					weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
					weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "YYYY. [gada] D. MMMM",
						LLL: "YYYY. [gada] D. MMMM, LT",
						LLLL: "YYYY. [gada] D. MMMM, dddd, LT",
					},
					calendar: {
						sameDay: "[Šodien pulksten] LT",
						nextDay: "[Rīt pulksten] LT",
						nextWeek: "dddd [pulksten] LT",
						lastDay: "[Vakar pulksten] LT",
						lastWeek: "[Pagājušā] dddd [pulksten] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s vēlāk",
						past: "%s agrāk",
						s: "dažas sekundes",
						m: "minūti",
						mm: n,
						h: "stundu",
						hh: n,
						d: "dienu",
						dd: n,
						M: "mēnesi",
						MM: n,
						y: "gadu",
						yy: n,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("mk", {
					months:
						"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split(
							"_"
						),
					monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
					weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
					weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
					weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "D.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Денес во] LT",
						nextDay: "[Утре во] LT",
						nextWeek: "dddd [во] LT",
						lastDay: "[Вчера во] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
								case 6:
									return "[Во изминатата] dddd [во] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[Во изминатиот] dddd [во] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "после %s",
						past: "пред %s",
						s: "неколку секунди",
						m: "минута",
						mm: "%d минути",
						h: "час",
						hh: "%d часа",
						d: "ден",
						dd: "%d дена",
						M: "месец",
						MM: "%d месеци",
						y: "година",
						yy: "%d години",
					},
					ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
					ordinal: function (e) {
						var t = e % 10,
							n = e % 100;
						return 0 === e
							? e + "-ев"
							: 0 === n
							? e + "-ен"
							: n > 10 && 20 > n
							? e + "-ти"
							: 1 === t
							? e + "-ви"
							: 2 === t
							? e + "-ри"
							: 7 === t || 8 === t
							? e + "-ми"
							: e + "-ти";
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ml", {
					months:
						"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split(
							"_"
						),
					monthsShort:
						"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
					weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split(
						"_"
					),
					weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
					weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
					longDateFormat: {
						LT: "A h:mm -നു",
						LTS: "A h:mm:ss -നു",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[ഇന്ന്] LT",
						nextDay: "[നാളെ] LT",
						nextWeek: "dddd, LT",
						lastDay: "[ഇന്നലെ] LT",
						lastWeek: "[കഴിഞ്ഞ] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s കഴിഞ്ഞ്",
						past: "%s മുൻപ്",
						s: "അൽപ നിമിഷങ്ങൾ",
						m: "ഒരു മിനിറ്റ്",
						mm: "%d മിനിറ്റ്",
						h: "ഒരു മണിക്കൂർ",
						hh: "%d മണിക്കൂർ",
						d: "ഒരു ദിവസം",
						dd: "%d ദിവസം",
						M: "ഒരു മാസം",
						MM: "%d മാസം",
						y: "ഒരു വർഷം",
						yy: "%d വർഷം",
					},
					meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
					isPM: function (e) {
						return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e
							? "രാത്രി"
							: 12 > e
							? "രാവിലെ"
							: 17 > e
							? "ഉച്ച കഴിഞ്ഞ്"
							: 20 > e
							? "വൈകുന്നേരം"
							: "രാത്രി";
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "१",
						2: "२",
						3: "३",
						4: "४",
						5: "५",
						6: "६",
						7: "७",
						8: "८",
						9: "९",
						0: "०",
					},
					n = {
						"१": "1",
						"२": "2",
						"३": "3",
						"४": "4",
						"५": "5",
						"६": "6",
						"७": "7",
						"८": "8",
						"९": "9",
						"०": "0",
					};
				return e.defineLocale("mr", {
					months:
						"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split(
							"_"
						),
					monthsShort:
						"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split(
							"_"
						),
					weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
					weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
					weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
					longDateFormat: {
						LT: "A h:mm वाजता",
						LTS: "A h:mm:ss वाजता",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[आज] LT",
						nextDay: "[उद्या] LT",
						nextWeek: "dddd, LT",
						lastDay: "[काल] LT",
						lastWeek: "[मागील] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s नंतर",
						past: "%s पूर्वी",
						s: "सेकंद",
						m: "एक मिनिट",
						mm: "%d मिनिटे",
						h: "एक तास",
						hh: "%d तास",
						d: "एक दिवस",
						dd: "%d दिवस",
						M: "एक महिना",
						MM: "%d महिने",
						y: "एक वर्ष",
						yy: "%d वर्षे",
					},
					preparse: function (e) {
						return e.replace(/[१२३४५६७८९०]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"रात्री" === t
								? 4 > e
									? e
									: e + 12
								: "सकाळी" === t
								? e
								: "दुपारी" === t
								? e >= 10
									? e
									: e + 12
								: "सायंकाळी" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e) {
						return 4 > e
							? "रात्री"
							: 10 > e
							? "सकाळी"
							: 17 > e
							? "दुपारी"
							: 20 > e
							? "सायंकाळी"
							: "रात्री";
					},
					week: {
						dow: 0,
						doy: 6,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ms-my", {
					months:
						"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
							"_"
						),
					monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
					weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
					weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
					weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
					longDateFormat: {
						LT: "HH.mm",
						LTS: "LT.ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY [pukul] LT",
						LLLL: "dddd, D MMMM YYYY [pukul] LT",
					},
					meridiemParse: /pagi|tengahari|petang|malam/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"pagi" === t
								? e
								: "tengahari" === t
								? e >= 11
									? e
									: e + 12
								: "petang" === t || "malam" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e) {
						return 11 > e ? "pagi" : 15 > e ? "tengahari" : 19 > e ? "petang" : "malam";
					},
					calendar: {
						sameDay: "[Hari ini pukul] LT",
						nextDay: "[Esok pukul] LT",
						nextWeek: "dddd [pukul] LT",
						lastDay: "[Kelmarin pukul] LT",
						lastWeek: "dddd [lepas pukul] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "dalam %s",
						past: "%s yang lepas",
						s: "beberapa saat",
						m: "seminit",
						mm: "%d minit",
						h: "sejam",
						hh: "%d jam",
						d: "sehari",
						dd: "%d hari",
						M: "sebulan",
						MM: "%d bulan",
						y: "setahun",
						yy: "%d tahun",
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "၁",
						2: "၂",
						3: "၃",
						4: "၄",
						5: "၅",
						6: "၆",
						7: "၇",
						8: "၈",
						9: "၉",
						0: "၀",
					},
					n = {
						"၁": "1",
						"၂": "2",
						"၃": "3",
						"၄": "4",
						"၅": "5",
						"၆": "6",
						"၇": "7",
						"၈": "8",
						"၉": "9",
						"၀": "0",
					};
				return e.defineLocale("my", {
					months:
						"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split(
							"_"
						),
					monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
					weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
					weekdaysShort: "နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
					weekdaysMin: "နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "HH:mm:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[ယနေ.] LT [မှာ]",
						nextDay: "[မနက်ဖြန်] LT [မှာ]",
						nextWeek: "dddd LT [မှာ]",
						lastDay: "[မနေ.က] LT [မှာ]",
						lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
						sameElse: "L",
					},
					relativeTime: {
						future: "လာမည့် %s မှာ",
						past: "လွန်ခဲ့သော %s က",
						s: "စက္ကန်.အနည်းငယ်",
						m: "တစ်မိနစ်",
						mm: "%d မိနစ်",
						h: "တစ်နာရီ",
						hh: "%d နာရီ",
						d: "တစ်ရက်",
						dd: "%d ရက်",
						M: "တစ်လ",
						MM: "%d လ",
						y: "တစ်နှစ်",
						yy: "%d နှစ်",
					},
					preparse: function (e) {
						return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("nb", {
					months:
						"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
					weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
					weekdaysShort: "søn_man_tirs_ons_tors_fre_lør".split("_"),
					weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
					longDateFormat: {
						LT: "H.mm",
						LTS: "LT.ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY [kl.] LT",
						LLLL: "dddd D. MMMM YYYY [kl.] LT",
					},
					calendar: {
						sameDay: "[i dag kl.] LT",
						nextDay: "[i morgen kl.] LT",
						nextWeek: "dddd [kl.] LT",
						lastDay: "[i går kl.] LT",
						lastWeek: "[forrige] dddd [kl.] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "om %s",
						past: "for %s siden",
						s: "noen sekunder",
						m: "ett minutt",
						mm: "%d minutter",
						h: "en time",
						hh: "%d timer",
						d: "en dag",
						dd: "%d dager",
						M: "en måned",
						MM: "%d måneder",
						y: "ett år",
						yy: "%d år",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
						1: "१",
						2: "२",
						3: "३",
						4: "४",
						5: "५",
						6: "६",
						7: "७",
						8: "८",
						9: "९",
						0: "०",
					},
					n = {
						"१": "1",
						"२": "2",
						"३": "3",
						"४": "4",
						"५": "5",
						"६": "6",
						"७": "7",
						"८": "8",
						"९": "9",
						"०": "0",
					};
				return e.defineLocale("ne", {
					months:
						"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split(
							"_"
						),
					monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split(
						"_"
					),
					weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
					weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
					weekdaysMin: "आइ._सो._मङ्_बु._बि._शु._श.".split("_"),
					longDateFormat: {
						LT: "Aको h:mm बजे",
						LTS: "Aको h:mm:ss बजे",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					preparse: function (e) {
						return e.replace(/[१२३४५६७८९०]/g, function (e) {
							return n[e];
						});
					},
					postformat: function (e) {
						return e.replace(/\d/g, function (e) {
							return t[e];
						});
					},
					meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"राती" === t
								? 3 > e
									? e
									: e + 12
								: "बिहान" === t
								? e
								: "दिउँसो" === t
								? e >= 10
									? e
									: e + 12
								: "बेलुका" === t || "साँझ" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e) {
						return 3 > e
							? "राती"
							: 10 > e
							? "बिहान"
							: 15 > e
							? "दिउँसो"
							: 18 > e
							? "बेलुका"
							: 20 > e
							? "साँझ"
							: "राती";
					},
					calendar: {
						sameDay: "[आज] LT",
						nextDay: "[भोली] LT",
						nextWeek: "[आउँदो] dddd[,] LT",
						lastDay: "[हिजो] LT",
						lastWeek: "[गएको] dddd[,] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%sमा",
						past: "%s अगाडी",
						s: "केही समय",
						m: "एक मिनेट",
						mm: "%d मिनेट",
						h: "एक घण्टा",
						hh: "%d घण्टा",
						d: "एक दिन",
						dd: "%d दिन",
						M: "एक महिना",
						MM: "%d महिना",
						y: "एक बर्ष",
						yy: "%d बर्ष",
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
					n = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_");
				return e.defineLocale("nl", {
					months:
						"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
							"_"
						),
					monthsShort: function (e, r) {
						return /-MMM-/.test(r) ? n[e.month()] : t[e.month()];
					},
					weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
					weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
					weekdaysMin: "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD-MM-YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[vandaag om] LT",
						nextDay: "[morgen om] LT",
						nextWeek: "dddd [om] LT",
						lastDay: "[gisteren om] LT",
						lastWeek: "[afgelopen] dddd [om] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "over %s",
						past: "%s geleden",
						s: "een paar seconden",
						m: "één minuut",
						mm: "%d minuten",
						h: "één uur",
						hh: "%d uur",
						d: "één dag",
						dd: "%d dagen",
						M: "één maand",
						MM: "%d maanden",
						y: "één jaar",
						yy: "%d jaar",
					},
					ordinalParse: /\d{1,2}(ste|de)/,
					ordinal: function (e) {
						return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("nn", {
					months:
						"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
					weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
					weekdaysShort: "sun_mån_tys_ons_tor_fre_lau".split("_"),
					weekdaysMin: "su_må_ty_on_to_fr_lø".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[I dag klokka] LT",
						nextDay: "[I morgon klokka] LT",
						nextWeek: "dddd [klokka] LT",
						lastDay: "[I går klokka] LT",
						lastWeek: "[Føregåande] dddd [klokka] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "om %s",
						past: "for %s sidan",
						s: "nokre sekund",
						m: "eit minutt",
						mm: "%d minutt",
						h: "ein time",
						hh: "%d timar",
						d: "ein dag",
						dd: "%d dagar",
						M: "ein månad",
						MM: "%d månader",
						y: "eit år",
						yy: "%d år",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e) {
					return 5 > e % 10 && e % 10 > 1 && ~~(e / 10) % 10 !== 1;
				}

				function n(e, n, r) {
					var i = e + " ";
					switch (r) {
						case "m":
							return n ? "minuta" : "minutę";
						case "mm":
							return i + (t(e) ? "minuty" : "minut");
						case "h":
							return n ? "godzina" : "godzinę";
						case "hh":
							return i + (t(e) ? "godziny" : "godzin");
						case "MM":
							return i + (t(e) ? "miesiące" : "miesięcy");
						case "yy":
							return i + (t(e) ? "lata" : "lat");
					}
				}
				var r =
						"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split(
							"_"
						),
					i =
						"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split(
							"_"
						);
				return e.defineLocale("pl", {
					months: function (e, t) {
						return /D MMMM/.test(t) ? i[e.month()] : r[e.month()];
					},
					monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
					weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
					weekdaysShort: "nie_pon_wt_śr_czw_pt_sb".split("_"),
					weekdaysMin: "N_Pn_Wt_Śr_Cz_Pt_So".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Dziś o] LT",
						nextDay: "[Jutro o] LT",
						nextWeek: "[W] dddd [o] LT",
						lastDay: "[Wczoraj o] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
									return "[W zeszłą niedzielę o] LT";
								case 3:
									return "[W zeszłą środę o] LT";
								case 6:
									return "[W zeszłą sobotę o] LT";
								default:
									return "[W zeszły] dddd [o] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "%s temu",
						s: "kilka sekund",
						m: n,
						mm: n,
						h: n,
						hh: n,
						d: "1 dzień",
						dd: "%d dni",
						M: "miesiąc",
						MM: n,
						y: "rok",
						yy: n,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("pt-br", {
					months:
						"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
							"_"
						),
					monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
					weekdays:
						"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split(
							"_"
						),
					weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"),
					weekdaysMin: "dom_2ª_3ª_4ª_5ª_6ª_sáb".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D [de] MMMM [de] YYYY",
						LLL: "D [de] MMMM [de] YYYY [às] LT",
						LLLL: "dddd, D [de] MMMM [de] YYYY [às] LT",
					},
					calendar: {
						sameDay: "[Hoje às] LT",
						nextDay: "[Amanhã às] LT",
						nextWeek: "dddd [às] LT",
						lastDay: "[Ontem às] LT",
						lastWeek: function () {
							return 0 === this.day() || 6 === this.day()
								? "[Último] dddd [às] LT"
								: "[Última] dddd [às] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "em %s",
						past: "%s atrás",
						s: "segundos",
						m: "um minuto",
						mm: "%d minutos",
						h: "uma hora",
						hh: "%d horas",
						d: "um dia",
						dd: "%d dias",
						M: "um mês",
						MM: "%d meses",
						y: "um ano",
						yy: "%d anos",
					},
					ordinalParse: /\d{1,2}º/,
					ordinal: "%dº",
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("pt", {
					months:
						"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
							"_"
						),
					monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
					weekdays:
						"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split(
							"_"
						),
					weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"),
					weekdaysMin: "dom_2ª_3ª_4ª_5ª_6ª_sáb".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D [de] MMMM [de] YYYY",
						LLL: "D [de] MMMM [de] YYYY LT",
						LLLL: "dddd, D [de] MMMM [de] YYYY LT",
					},
					calendar: {
						sameDay: "[Hoje às] LT",
						nextDay: "[Amanhã às] LT",
						nextWeek: "dddd [às] LT",
						lastDay: "[Ontem às] LT",
						lastWeek: function () {
							return 0 === this.day() || 6 === this.day()
								? "[Último] dddd [às] LT"
								: "[Última] dddd [às] LT";
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "em %s",
						past: "há %s",
						s: "segundos",
						m: "um minuto",
						mm: "%d minutos",
						h: "uma hora",
						hh: "%d horas",
						d: "um dia",
						dd: "%d dias",
						M: "um mês",
						MM: "%d meses",
						y: "um ano",
						yy: "%d anos",
					},
					ordinalParse: /\d{1,2}º/,
					ordinal: "%dº",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = {
							mm: "minute",
							hh: "ore",
							dd: "zile",
							MM: "luni",
							yy: "ani",
						},
						i = " ";
					return (e % 100 >= 20 || (e >= 100 && e % 100 === 0)) && (i = " de "), e + i + r[n];
				}
				return e.defineLocale("ro", {
					months:
						"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split(
							"_"
						),
					monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
					weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
					weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
					weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY H:mm",
						LLLL: "dddd, D MMMM YYYY H:mm",
					},
					calendar: {
						sameDay: "[azi la] LT",
						nextDay: "[mâine la] LT",
						nextWeek: "dddd [la] LT",
						lastDay: "[ieri la] LT",
						lastWeek: "[fosta] dddd [la] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "peste %s",
						past: "%s în urmă",
						s: "câteva secunde",
						m: "un minut",
						mm: t,
						h: "o oră",
						hh: t,
						d: "o zi",
						dd: t,
						M: "o lună",
						MM: t,
						y: "un an",
						yy: t,
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t) {
					var n = e.split("_");
					return t % 10 === 1 && t % 100 !== 11
						? n[0]
						: t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20)
						? n[1]
						: n[2];
				}

				function n(e, n, r) {
					var i = {
						mm: n ? "минута_минуты_минут" : "минуту_минуты_минут",
						hh: "час_часа_часов",
						dd: "день_дня_дней",
						MM: "месяц_месяца_месяцев",
						yy: "год_года_лет",
					};
					return "m" === r ? (n ? "минута" : "минуту") : e + " " + t(i[r], +e);
				}

				function r(e, t) {
					var n = {
							nominative:
								"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
									"_"
								),
							accusative:
								"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split(
									"_"
								),
						},
						r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function i(e, t) {
					var n = {
							nominative: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
							accusative: "янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек".split("_"),
						},
						r = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function s(e, t) {
					var n = {
							nominative: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split(
								"_"
							),
							accusative: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split(
								"_"
							),
						},
						r = /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/.test(t)
							? "accusative"
							: "nominative";
					return n[r][e.day()];
				}
				return e.defineLocale("ru", {
					months: r,
					monthsShort: i,
					weekdays: s,
					weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
					weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
					monthsParse: [
						/^янв/i,
						/^фев/i,
						/^мар/i,
						/^апр/i,
						/^ма[й|я]/i,
						/^июн/i,
						/^июл/i,
						/^авг/i,
						/^сен/i,
						/^окт/i,
						/^ноя/i,
						/^дек/i,
					],
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY г.",
						LLL: "D MMMM YYYY г., LT",
						LLLL: "dddd, D MMMM YYYY г., LT",
					},
					calendar: {
						sameDay: "[Сегодня в] LT",
						nextDay: "[Завтра в] LT",
						lastDay: "[Вчера в] LT",
						nextWeek: function () {
							return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
						},
						lastWeek: function (e) {
							if (e.week() === this.week())
								return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
							switch (this.day()) {
								case 0:
									return "[В прошлое] dddd [в] LT";
								case 1:
								case 2:
								case 4:
									return "[В прошлый] dddd [в] LT";
								case 3:
								case 5:
								case 6:
									return "[В прошлую] dddd [в] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "через %s",
						past: "%s назад",
						s: "несколько секунд",
						m: n,
						mm: n,
						h: "час",
						hh: n,
						d: "день",
						dd: n,
						M: "месяц",
						MM: n,
						y: "год",
						yy: n,
					},
					meridiemParse: /ночи|утра|дня|вечера/i,
					isPM: function (e) {
						return /^(дня|вечера)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "ночи" : 12 > e ? "утра" : 17 > e ? "дня" : "вечера";
					},
					ordinalParse: /\d{1,2}-(й|го|я)/,
					ordinal: function (e, t) {
						switch (t) {
							case "M":
							case "d":
							case "DDD":
								return e + "-й";
							case "D":
								return e + "-го";
							case "w":
							case "W":
								return e + "-я";
							default:
								return e;
						}
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e) {
					return e > 1 && 5 > e;
				}

				function n(e, n, r, i) {
					var s = e + " ";
					switch (r) {
						case "s":
							return n || i ? "pár sekúnd" : "pár sekundami";
						case "m":
							return n ? "minúta" : i ? "minútu" : "minútou";
						case "mm":
							return n || i ? s + (t(e) ? "minúty" : "minút") : s + "minútami";
						case "h":
							return n ? "hodina" : i ? "hodinu" : "hodinou";
						case "hh":
							return n || i ? s + (t(e) ? "hodiny" : "hodín") : s + "hodinami";
						case "d":
							return n || i ? "deň" : "dňom";
						case "dd":
							return n || i ? s + (t(e) ? "dni" : "dní") : s + "dňami";
						case "M":
							return n || i ? "mesiac" : "mesiacom";
						case "MM":
							return n || i ? s + (t(e) ? "mesiace" : "mesiacov") : s + "mesiacmi";
						case "y":
							return n || i ? "rok" : "rokom";
						case "yy":
							return n || i ? s + (t(e) ? "roky" : "rokov") : s + "rokmi";
					}
				}
				var r =
						"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split(
							"_"
						),
					i = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");
				return e.defineLocale("sk", {
					months: r,
					monthsShort: i,
					monthsParse: (function (e, t) {
						var n,
							r = [];
						for (n = 0; 12 > n; n++) r[n] = new RegExp("^" + e[n] + "$|^" + t[n] + "$", "i");
						return r;
					})(r, i),
					weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
					weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
					weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[dnes o] LT",
						nextDay: "[zajtra o] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[v nedeľu o] LT";
								case 1:
								case 2:
									return "[v] dddd [o] LT";
								case 3:
									return "[v stredu o] LT";
								case 4:
									return "[vo štvrtok o] LT";
								case 5:
									return "[v piatok o] LT";
								case 6:
									return "[v sobotu o] LT";
							}
						},
						lastDay: "[včera o] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
									return "[minulú nedeľu o] LT";
								case 1:
								case 2:
									return "[minulý] dddd [o] LT";
								case 3:
									return "[minulú stredu o] LT";
								case 4:
								case 5:
									return "[minulý] dddd [o] LT";
								case 6:
									return "[minulú sobotu o] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "pred %s",
						s: n,
						m: n,
						mm: n,
						h: n,
						hh: n,
						d: n,
						dd: n,
						M: n,
						MM: n,
						y: n,
						yy: n,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t, n) {
					var r = e + " ";
					switch (n) {
						case "m":
							return t ? "ena minuta" : "eno minuto";
						case "mm":
							return (r +=
								1 === e ? "minuta" : 2 === e ? "minuti" : 3 === e || 4 === e ? "minute" : "minut");
						case "h":
							return t ? "ena ura" : "eno uro";
						case "hh":
							return (r += 1 === e ? "ura" : 2 === e ? "uri" : 3 === e || 4 === e ? "ure" : "ur");
						case "dd":
							return (r += 1 === e ? "dan" : "dni");
						case "MM":
							return (r +=
								1 === e ? "mesec" : 2 === e ? "meseca" : 3 === e || 4 === e ? "mesece" : "mesecev");
						case "yy":
							return (r +=
								1 === e ? "leto" : 2 === e ? "leti" : 3 === e || 4 === e ? "leta" : "let");
					}
				}
				return e.defineLocale("sl", {
					months:
						"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split(
							"_"
						),
					monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
					weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
					weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
					weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD. MM. YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[danes ob] LT",
						nextDay: "[jutri ob] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[v] [nedeljo] [ob] LT";
								case 3:
									return "[v] [sredo] [ob] LT";
								case 6:
									return "[v] [soboto] [ob] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[v] dddd [ob] LT";
							}
						},
						lastDay: "[včeraj ob] LT",
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
								case 6:
									return "[prejšnja] dddd [ob] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[prejšnji] dddd [ob] LT";
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "čez %s",
						past: "%s nazaj",
						s: "nekaj sekund",
						m: t,
						mm: t,
						h: t,
						hh: t,
						d: "en dan",
						dd: t,
						M: "en mesec",
						MM: t,
						y: "eno leto",
						yy: t,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("sq", {
					months:
						"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split(
							"_"
						),
					monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
					weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
					weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
					weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
					meridiemParse: /PD|MD/,
					isPM: function (e) {
						return "M" === e.charAt(0);
					},
					meridiem: function (e) {
						return 12 > e ? "PD" : "MD";
					},
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Sot në] LT",
						nextDay: "[Nesër në] LT",
						nextWeek: "dddd [në] LT",
						lastDay: "[Dje në] LT",
						lastWeek: "dddd [e kaluar në] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "në %s",
						past: "%s më parë",
						s: "disa sekonda",
						m: "një minutë",
						mm: "%d minuta",
						h: "një orë",
						hh: "%d orë",
						d: "një ditë",
						dd: "%d ditë",
						M: "një muaj",
						MM: "%d muaj",
						y: "një vit",
						yy: "%d vite",
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
					words: {
						m: ["један минут", "једне минуте"],
						mm: ["минут", "минуте", "минута"],
						h: ["један сат", "једног сата"],
						hh: ["сат", "сата", "сати"],
						dd: ["дан", "дана", "дана"],
						MM: ["месец", "месеца", "месеци"],
						yy: ["година", "године", "година"],
					},
					correctGrammaticalCase: function (e, t) {
						return 1 === e ? t[0] : e >= 2 && 4 >= e ? t[1] : t[2];
					},
					translate: function (e, n, r) {
						var i = t.words[r];
						return 1 === r.length ? (n ? i[0] : i[1]) : e + " " + t.correctGrammaticalCase(e, i);
					},
				};
				return e.defineLocale("sr-cyrl", {
					months: [
						"јануар",
						"фебруар",
						"март",
						"април",
						"мај",
						"јун",
						"јул",
						"август",
						"септембар",
						"октобар",
						"новембар",
						"децембар",
					],
					monthsShort: [
						"јан.",
						"феб.",
						"мар.",
						"апр.",
						"мај",
						"јун",
						"јул",
						"авг.",
						"сеп.",
						"окт.",
						"нов.",
						"дец.",
					],
					weekdays: ["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"],
					weekdaysShort: ["нед.", "пон.", "уто.", "сре.", "чет.", "пет.", "суб."],
					weekdaysMin: ["не", "по", "ут", "ср", "че", "пе", "су"],
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD. MM. YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[данас у] LT",
						nextDay: "[сутра у] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[у] [недељу] [у] LT";
								case 3:
									return "[у] [среду] [у] LT";
								case 6:
									return "[у] [суботу] [у] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[у] dddd [у] LT";
							}
						},
						lastDay: "[јуче у] LT",
						lastWeek: function () {
							var e = [
								"[прошле] [недеље] [у] LT",
								"[прошлог] [понедељка] [у] LT",
								"[прошлог] [уторка] [у] LT",
								"[прошле] [среде] [у] LT",
								"[прошлог] [четвртка] [у] LT",
								"[прошлог] [петка] [у] LT",
								"[прошле] [суботе] [у] LT",
							];
							return e[this.day()];
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "за %s",
						past: "пре %s",
						s: "неколико секунди",
						m: t.translate,
						mm: t.translate,
						h: t.translate,
						hh: t.translate,
						d: "дан",
						dd: t.translate,
						M: "месец",
						MM: t.translate,
						y: "годину",
						yy: t.translate,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
					words: {
						m: ["jedan minut", "jedne minute"],
						mm: ["minut", "minute", "minuta"],
						h: ["jedan sat", "jednog sata"],
						hh: ["sat", "sata", "sati"],
						dd: ["dan", "dana", "dana"],
						MM: ["mesec", "meseca", "meseci"],
						yy: ["godina", "godine", "godina"],
					},
					correctGrammaticalCase: function (e, t) {
						return 1 === e ? t[0] : e >= 2 && 4 >= e ? t[1] : t[2];
					},
					translate: function (e, n, r) {
						var i = t.words[r];
						return 1 === r.length ? (n ? i[0] : i[1]) : e + " " + t.correctGrammaticalCase(e, i);
					},
				};
				return e.defineLocale("sr", {
					months: [
						"januar",
						"februar",
						"mart",
						"april",
						"maj",
						"jun",
						"jul",
						"avgust",
						"septembar",
						"oktobar",
						"novembar",
						"decembar",
					],
					monthsShort: [
						"jan.",
						"feb.",
						"mar.",
						"apr.",
						"maj",
						"jun",
						"jul",
						"avg.",
						"sep.",
						"okt.",
						"nov.",
						"dec.",
					],
					weekdays: ["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"],
					weekdaysShort: ["ned.", "pon.", "uto.", "sre.", "čet.", "pet.", "sub."],
					weekdaysMin: ["ne", "po", "ut", "sr", "če", "pe", "su"],
					longDateFormat: {
						LT: "H:mm",
						LTS: "LT:ss",
						L: "DD. MM. YYYY",
						LL: "D. MMMM YYYY",
						LLL: "D. MMMM YYYY LT",
						LLLL: "dddd, D. MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[danas u] LT",
						nextDay: "[sutra u] LT",
						nextWeek: function () {
							switch (this.day()) {
								case 0:
									return "[u] [nedelju] [u] LT";
								case 3:
									return "[u] [sredu] [u] LT";
								case 6:
									return "[u] [subotu] [u] LT";
								case 1:
								case 2:
								case 4:
								case 5:
									return "[u] dddd [u] LT";
							}
						},
						lastDay: "[juče u] LT",
						lastWeek: function () {
							var e = [
								"[prošle] [nedelje] [u] LT",
								"[prošlog] [ponedeljka] [u] LT",
								"[prošlog] [utorka] [u] LT",
								"[prošle] [srede] [u] LT",
								"[prošlog] [četvrtka] [u] LT",
								"[prošlog] [petka] [u] LT",
								"[prošle] [subote] [u] LT",
							];
							return e[this.day()];
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "za %s",
						past: "pre %s",
						s: "nekoliko sekundi",
						m: t.translate,
						mm: t.translate,
						h: t.translate,
						hh: t.translate,
						d: "dan",
						dd: t.translate,
						M: "mesec",
						MM: t.translate,
						y: "godinu",
						yy: t.translate,
					},
					ordinalParse: /\d{1,2}\./,
					ordinal: "%d.",
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("sv", {
					months:
						"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split(
							"_"
						),
					monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
					weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
					weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
					weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "YYYY-MM-DD",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[Idag] LT",
						nextDay: "[Imorgon] LT",
						lastDay: "[Igår] LT",
						nextWeek: "dddd LT",
						lastWeek: "[Förra] dddd[en] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "om %s",
						past: "för %s sedan",
						s: "några sekunder",
						m: "en minut",
						mm: "%d minuter",
						h: "en timme",
						hh: "%d timmar",
						d: "en dag",
						dd: "%d dagar",
						M: "en månad",
						MM: "%d månader",
						y: "ett år",
						yy: "%d år",
					},
					ordinalParse: /\d{1,2}(e|a)/,
					ordinal: function (e) {
						var t = e % 10,
							n = 1 === ~~((e % 100) / 10) ? "e" : 1 === t ? "a" : 2 === t ? "a" : "e";
						return e + n;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("ta", {
					months:
						"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
							"_"
						),
					monthsShort:
						"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
							"_"
						),
					weekdays:
						"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split(
							"_"
						),
					weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
					weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY, LT",
						LLLL: "dddd, D MMMM YYYY, LT",
					},
					calendar: {
						sameDay: "[இன்று] LT",
						nextDay: "[நாளை] LT",
						nextWeek: "dddd, LT",
						lastDay: "[நேற்று] LT",
						lastWeek: "[கடந்த வாரம்] dddd, LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s இல்",
						past: "%s முன்",
						s: "ஒரு சில விநாடிகள்",
						m: "ஒரு நிமிடம்",
						mm: "%d நிமிடங்கள்",
						h: "ஒரு மணி நேரம்",
						hh: "%d மணி நேரம்",
						d: "ஒரு நாள்",
						dd: "%d நாட்கள்",
						M: "ஒரு மாதம்",
						MM: "%d மாதங்கள்",
						y: "ஒரு வருடம்",
						yy: "%d ஆண்டுகள்",
					},
					ordinalParse: /\d{1,2}வது/,
					ordinal: function (e) {
						return e + "வது";
					},
					meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
					meridiem: function (e) {
						return 2 > e
							? " யாமம்"
							: 6 > e
							? " வைகறை"
							: 10 > e
							? " காலை"
							: 14 > e
							? " நண்பகல்"
							: 18 > e
							? " எற்பாடு"
							: 22 > e
							? " மாலை"
							: " யாமம்";
					},
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"யாமம்" === t
								? 2 > e
									? e
									: e + 12
								: "வைகறை" === t || "காலை" === t
								? e
								: "நண்பகல்" === t && e >= 10
								? e
								: e + 12
						);
					},
					week: {
						dow: 0,
						doy: 6,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("th", {
					months:
						"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split(
							"_"
						),
					monthsShort:
						"มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา".split("_"),
					weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
					weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
					weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
					longDateFormat: {
						LT: "H นาฬิกา m นาที",
						LTS: "LT s วินาที",
						L: "YYYY/MM/DD",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY เวลา LT",
						LLLL: "วันddddที่ D MMMM YYYY เวลา LT",
					},
					meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
					isPM: function (e) {
						return "หลังเที่ยง" === e;
					},
					meridiem: function (e) {
						return 12 > e ? "ก่อนเที่ยง" : "หลังเที่ยง";
					},
					calendar: {
						sameDay: "[วันนี้ เวลา] LT",
						nextDay: "[พรุ่งนี้ เวลา] LT",
						nextWeek: "dddd[หน้า เวลา] LT",
						lastDay: "[เมื่อวานนี้ เวลา] LT",
						lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "อีก %s",
						past: "%sที่แล้ว",
						s: "ไม่กี่วินาที",
						m: "1 นาที",
						mm: "%d นาที",
						h: "1 ชั่วโมง",
						hh: "%d ชั่วโมง",
						d: "1 วัน",
						dd: "%d วัน",
						M: "1 เดือน",
						MM: "%d เดือน",
						y: "1 ปี",
						yy: "%d ปี",
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("tl-ph", {
					months:
						"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split(
							"_"
						),
					monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
					weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
					weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
					weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "MM/D/YYYY",
						LL: "MMMM D, YYYY",
						LLL: "MMMM D, YYYY LT",
						LLLL: "dddd, MMMM DD, YYYY LT",
					},
					calendar: {
						sameDay: "[Ngayon sa] LT",
						nextDay: "[Bukas sa] LT",
						nextWeek: "dddd [sa] LT",
						lastDay: "[Kahapon sa] LT",
						lastWeek: "dddd [huling linggo] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "sa loob ng %s",
						past: "%s ang nakalipas",
						s: "ilang segundo",
						m: "isang minuto",
						mm: "%d minuto",
						h: "isang oras",
						hh: "%d oras",
						d: "isang araw",
						dd: "%d araw",
						M: "isang buwan",
						MM: "%d buwan",
						y: "isang taon",
						yy: "%d taon",
					},
					ordinalParse: /\d{1,2}/,
					ordinal: function (e) {
						return e;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				var t = {
					1: "'inci",
					5: "'inci",
					8: "'inci",
					70: "'inci",
					80: "'inci",
					2: "'nci",
					7: "'nci",
					20: "'nci",
					50: "'nci",
					3: "'üncü",
					4: "'üncü",
					100: "'üncü",
					6: "'ncı",
					9: "'uncu",
					10: "'uncu",
					30: "'uncu",
					60: "'ıncı",
					90: "'ıncı",
				};
				return e.defineLocale("tr", {
					months:
						"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
					monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
					weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
					weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
					weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd, D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[bugün saat] LT",
						nextDay: "[yarın saat] LT",
						nextWeek: "[haftaya] dddd [saat] LT",
						lastDay: "[dün] LT",
						lastWeek: "[geçen hafta] dddd [saat] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s sonra",
						past: "%s önce",
						s: "birkaç saniye",
						m: "bir dakika",
						mm: "%d dakika",
						h: "bir saat",
						hh: "%d saat",
						d: "bir gün",
						dd: "%d gün",
						M: "bir ay",
						MM: "%d ay",
						y: "bir yıl",
						yy: "%d yıl",
					},
					ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
					ordinal: function (e) {
						if (0 === e) return e + "'ıncı";
						var n = e % 10,
							r = (e % 100) - n,
							i = e >= 100 ? 100 : null;
						return e + (t[n] || t[r] || t[i]);
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("tzm-latn", {
					months:
						"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
							"_"
						),
					monthsShort:
						"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
							"_"
						),
					weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
					weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
					weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[asdkh g] LT",
						nextDay: "[aska g] LT",
						nextWeek: "dddd [g] LT",
						lastDay: "[assant g] LT",
						lastWeek: "dddd [g] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "dadkh s yan %s",
						past: "yan %s",
						s: "imik",
						m: "minuḍ",
						mm: "%d minuḍ",
						h: "saɛa",
						hh: "%d tassaɛin",
						d: "ass",
						dd: "%d ossan",
						M: "ayowr",
						MM: "%d iyyirn",
						y: "asgas",
						yy: "%d isgasn",
					},
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("tzm", {
					months:
						"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
							"_"
						),
					monthsShort:
						"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
							"_"
						),
					weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
					weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
					weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "dddd D MMMM YYYY LT",
					},
					calendar: {
						sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
						nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
						nextWeek: "dddd [ⴴ] LT",
						lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
						lastWeek: "dddd [ⴴ] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
						past: "ⵢⴰⵏ %s",
						s: "ⵉⵎⵉⴽ",
						m: "ⵎⵉⵏⵓⴺ",
						mm: "%d ⵎⵉⵏⵓⴺ",
						h: "ⵙⴰⵄⴰ",
						hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
						d: "ⴰⵙⵙ",
						dd: "%d oⵙⵙⴰⵏ",
						M: "ⴰⵢoⵓⵔ",
						MM: "%d ⵉⵢⵢⵉⵔⵏ",
						y: "ⴰⵙⴳⴰⵙ",
						yy: "%d ⵉⵙⴳⴰⵙⵏ",
					},
					week: {
						dow: 6,
						doy: 12,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				function t(e, t) {
					var n = e.split("_");
					return t % 10 === 1 && t % 100 !== 11
						? n[0]
						: t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20)
						? n[1]
						: n[2];
				}

				function n(e, n, r) {
					var i = {
						mm: "хвилина_хвилини_хвилин",
						hh: "година_години_годин",
						dd: "день_дні_днів",
						MM: "місяць_місяці_місяців",
						yy: "рік_роки_років",
					};
					return "m" === r
						? n
							? "хвилина"
							: "хвилину"
						: "h" === r
						? n
							? "година"
							: "годину"
						: e + " " + t(i[r], +e);
				}

				function r(e, t) {
					var n = {
							nominative:
								"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split(
									"_"
								),
							accusative:
								"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split(
									"_"
								),
						},
						r = /D[oD]? *MMMM?/.test(t) ? "accusative" : "nominative";
					return n[r][e.month()];
				}

				function i(e, t) {
					var n = {
							nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
							accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
							genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_"),
						},
						r = /(\[[ВвУу]\]) ?dddd/.test(t)
							? "accusative"
							: /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t)
							? "genitive"
							: "nominative";
					return n[r][e.day()];
				}

				function s(e) {
					return function () {
						return e + "о" + (11 === this.hours() ? "б" : "") + "] LT";
					};
				}
				return e.defineLocale("uk", {
					months: r,
					monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
					weekdays: i,
					weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
					weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD.MM.YYYY",
						LL: "D MMMM YYYY р.",
						LLL: "D MMMM YYYY р., LT",
						LLLL: "dddd, D MMMM YYYY р., LT",
					},
					calendar: {
						sameDay: s("[Сьогодні "),
						nextDay: s("[Завтра "),
						lastDay: s("[Вчора "),
						nextWeek: s("[У] dddd ["),
						lastWeek: function () {
							switch (this.day()) {
								case 0:
								case 3:
								case 5:
								case 6:
									return s("[Минулої] dddd [").call(this);
								case 1:
								case 2:
								case 4:
									return s("[Минулого] dddd [").call(this);
							}
						},
						sameElse: "L",
					},
					relativeTime: {
						future: "за %s",
						past: "%s тому",
						s: "декілька секунд",
						m: n,
						mm: n,
						h: "годину",
						hh: n,
						d: "день",
						dd: n,
						M: "місяць",
						MM: n,
						y: "рік",
						yy: n,
					},
					meridiemParse: /ночі|ранку|дня|вечора/,
					isPM: function (e) {
						return /^(дня|вечора)$/.test(e);
					},
					meridiem: function (e) {
						return 4 > e ? "ночі" : 12 > e ? "ранку" : 17 > e ? "дня" : "вечора";
					},
					ordinalParse: /\d{1,2}-(й|го)/,
					ordinal: function (e, t) {
						switch (t) {
							case "M":
							case "d":
							case "DDD":
							case "w":
							case "W":
								return e + "-й";
							case "D":
								return e + "-го";
							default:
								return e;
						}
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("uz", {
					months:
						"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
							"_"
						),
					monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
					weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
					weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
					weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM YYYY",
						LLL: "D MMMM YYYY LT",
						LLLL: "D MMMM YYYY, dddd LT",
					},
					calendar: {
						sameDay: "[Бугун соат] LT [да]",
						nextDay: "[Эртага] LT [да]",
						nextWeek: "dddd [куни соат] LT [да]",
						lastDay: "[Кеча соат] LT [да]",
						lastWeek: "[Утган] dddd [куни соат] LT [да]",
						sameElse: "L",
					},
					relativeTime: {
						future: "Якин %s ичида",
						past: "Бир неча %s олдин",
						s: "фурсат",
						m: "бир дакика",
						mm: "%d дакика",
						h: "бир соат",
						hh: "%d соат",
						d: "бир кун",
						dd: "%d кун",
						M: "бир ой",
						MM: "%d ой",
						y: "бир йил",
						yy: "%d йил",
					},
					week: {
						dow: 1,
						doy: 7,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("vi", {
					months:
						"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split(
							"_"
						),
					monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
					weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
					weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
					weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
					longDateFormat: {
						LT: "HH:mm",
						LTS: "LT:ss",
						L: "DD/MM/YYYY",
						LL: "D MMMM [năm] YYYY",
						LLL: "D MMMM [năm] YYYY LT",
						LLLL: "dddd, D MMMM [năm] YYYY LT",
						l: "DD/M/YYYY",
						ll: "D MMM YYYY",
						lll: "D MMM YYYY LT",
						llll: "ddd, D MMM YYYY LT",
					},
					calendar: {
						sameDay: "[Hôm nay lúc] LT",
						nextDay: "[Ngày mai lúc] LT",
						nextWeek: "dddd [tuần tới lúc] LT",
						lastDay: "[Hôm qua lúc] LT",
						lastWeek: "dddd [tuần rồi lúc] LT",
						sameElse: "L",
					},
					relativeTime: {
						future: "%s tới",
						past: "%s trước",
						s: "vài giây",
						m: "một phút",
						mm: "%d phút",
						h: "một giờ",
						hh: "%d giờ",
						d: "một ngày",
						dd: "%d ngày",
						M: "một tháng",
						MM: "%d tháng",
						y: "một năm",
						yy: "%d năm",
					},
					ordinalParse: /\d{1,2}/,
					ordinal: function (e) {
						return e;
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("zh-cn", {
					months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
					monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
					weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
					weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
					weekdaysMin: "日_一_二_三_四_五_六".split("_"),
					longDateFormat: {
						LT: "Ah点mm",
						LTS: "Ah点m分s秒",
						L: "YYYY-MM-DD",
						LL: "YYYY年MMMD日",
						LLL: "YYYY年MMMD日LT",
						LLLL: "YYYY年MMMD日ddddLT",
						l: "YYYY-MM-DD",
						ll: "YYYY年MMMD日",
						lll: "YYYY年MMMD日LT",
						llll: "YYYY年MMMD日ddddLT",
					},
					meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"凌晨" === t || "早上" === t || "上午" === t
								? e
								: "下午" === t || "晚上" === t
								? e + 12
								: e >= 11
								? e
								: e + 12
						);
					},
					meridiem: function (e, t) {
						var n = 100 * e + t;
						return 600 > n
							? "凌晨"
							: 900 > n
							? "早上"
							: 1130 > n
							? "上午"
							: 1230 > n
							? "中午"
							: 1800 > n
							? "下午"
							: "晚上";
					},
					calendar: {
						sameDay: function () {
							return 0 === this.minutes() ? "[今天]Ah[点整]" : "[今天]LT";
						},
						nextDay: function () {
							return 0 === this.minutes() ? "[明天]Ah[点整]" : "[明天]LT";
						},
						lastDay: function () {
							return 0 === this.minutes() ? "[昨天]Ah[点整]" : "[昨天]LT";
						},
						nextWeek: function () {
							var t, n;
							return (
								(t = e().startOf("week")),
								(n = this.unix() - t.unix() >= 604800 ? "[下]" : "[本]"),
								0 === this.minutes() ? n + "dddAh点整" : n + "dddAh点mm"
							);
						},
						lastWeek: function () {
							var t, n;
							return (
								(t = e().startOf("week")),
								(n = this.unix() < t.unix() ? "[上]" : "[本]"),
								0 === this.minutes() ? n + "dddAh点整" : n + "dddAh点mm"
							);
						},
						sameElse: "LL",
					},
					ordinalParse: /\d{1,2}(日|月|周)/,
					ordinal: function (e, t) {
						switch (t) {
							case "d":
							case "D":
							case "DDD":
								return e + "日";
							case "M":
								return e + "月";
							case "w":
							case "W":
								return e + "周";
							default:
								return e;
						}
					},
					relativeTime: {
						future: "%s内",
						past: "%s前",
						s: "几秒",
						m: "1分钟",
						mm: "%d分钟",
						h: "1小时",
						hh: "%d小时",
						d: "1天",
						dd: "%d天",
						M: "1个月",
						MM: "%d个月",
						y: "1年",
						yy: "%d年",
					},
					week: {
						dow: 1,
						doy: 4,
					},
				});
			}),
			(function (e) {
				e(Et);
			})(function (e) {
				return e.defineLocale("zh-tw", {
					months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
					monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
					weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
					weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
					weekdaysMin: "日_一_二_三_四_五_六".split("_"),
					longDateFormat: {
						LT: "Ah點mm",
						LTS: "Ah點m分s秒",
						L: "YYYY年MMMD日",
						LL: "YYYY年MMMD日",
						LLL: "YYYY年MMMD日LT",
						LLLL: "YYYY年MMMD日ddddLT",
						l: "YYYY年MMMD日",
						ll: "YYYY年MMMD日",
						lll: "YYYY年MMMD日LT",
						llll: "YYYY年MMMD日ddddLT",
					},
					meridiemParse: /早上|上午|中午|下午|晚上/,
					meridiemHour: function (e, t) {
						return (
							12 === e && (e = 0),
							"早上" === t || "上午" === t
								? e
								: "中午" === t
								? e >= 11
									? e
									: e + 12
								: "下午" === t || "晚上" === t
								? e + 12
								: void 0
						);
					},
					meridiem: function (e, t) {
						var n = 100 * e + t;
						return 900 > n
							? "早上"
							: 1130 > n
							? "上午"
							: 1230 > n
							? "中午"
							: 1800 > n
							? "下午"
							: "晚上";
					},
					calendar: {
						sameDay: "[今天]LT",
						nextDay: "[明天]LT",
						nextWeek: "[下]ddddLT",
						lastDay: "[昨天]LT",
						lastWeek: "[上]ddddLT",
						sameElse: "L",
					},
					ordinalParse: /\d{1,2}(日|月|週)/,
					ordinal: function (e, t) {
						switch (t) {
							case "d":
							case "D":
							case "DDD":
								return e + "日";
							case "M":
								return e + "月";
							case "w":
							case "W":
								return e + "週";
							default:
								return e;
						}
					},
					relativeTime: {
						future: "%s內",
						past: "%s前",
						s: "幾秒",
						m: "一分鐘",
						mm: "%d分鐘",
						h: "一小時",
						hh: "%d小時",
						d: "一天",
						dd: "%d天",
						M: "一個月",
						MM: "%d個月",
						y: "一年",
						yy: "%d年",
					},
				});
			}),
			Et.locale("en"),
			jt
				? (module.exports = Et)
				: "function" == typeof define && define.amd
				? (define("moment", ["require", "exports", "module"], function (e, t, n) {
						return n.config && n.config() && n.config().noGlobal === !0 && (Nt.moment = St), Et;
				  }),
				  wt(!0))
				: wt();
	}.call(this),
	!(function (e, t) {
		"object" == typeof exports && "undefined" != typeof module
			? (module.exports = t())
			: "function" == typeof define && define.amd
			? define("uuidv4", t)
			: ((e = "undefined" != typeof globalThis ? globalThis : e || self).uuidv4 = t());
	})(this, function () {
		function n() {
			if (
				!e &&
				!(e =
					("undefined" != typeof crypto &&
						crypto.getRandomValues &&
						crypto.getRandomValues.bind(crypto)) ||
					("undefined" != typeof msCrypto &&
						"function" == typeof msCrypto.getRandomValues &&
						msCrypto.getRandomValues.bind(msCrypto)))
			)
				throw new Error(
					"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported"
				);
			return e(t);
		}

		function i(e) {
			return "string" == typeof e && r.test(e);
		}
		var e,
			t = new Uint8Array(16),
			r =
				/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
		for (var s = [], o = 0; o < 256; ++o) s.push((o + 256).toString(16).substr(1));
		return function (e, t, r) {
			var o = (e = e || {}).random || (e.rng || n)();
			if (((o[6] = (15 & o[6]) | 64), (o[8] = (63 & o[8]) | 128), t)) {
				r = r || 0;
				for (var u = 0; u < 16; ++u) t[r + u] = o[u];
				return t;
			}
			return (function (e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
					n = (
						s[e[t + 0]] +
						s[e[t + 1]] +
						s[e[t + 2]] +
						s[e[t + 3]] +
						"-" +
						s[e[t + 4]] +
						s[e[t + 5]] +
						"-" +
						s[e[t + 6]] +
						s[e[t + 7]] +
						"-" +
						s[e[t + 8]] +
						s[e[t + 9]] +
						"-" +
						s[e[t + 10]] +
						s[e[t + 11]] +
						s[e[t + 12]] +
						s[e[t + 13]] +
						s[e[t + 14]] +
						s[e[t + 15]]
					).toLowerCase();
				if (!i(n)) throw TypeError("Stringified UUID is invalid");
				return n;
			})(o);
		};
	}),
	define(
		"gates/gate-server",
		[
			"backbone",
			"application",
			"gates/gate-storage",
			"gates/utils",
			"status",
			"controllers/analytic",
			"controllers/gameanalytics",
			"moment",
			"uuidv4",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = _.extend(
				{
					appVersion: t.version,
					socketOpenAttempts: 0,
					isSocketOpen: !1,
					isSocketWasOpen: !1,
					importantMethods: [
						"createRound",
						"sendResults",
						"getRound",
						"getTip",
						"joinGame",
						"joinTourney",
						"tourneyGetRound",
						"tourneyRoundResult",
					],
					tracingMethods: ["auth", "videoReward"],
					socialApiUrl: "/api/" + social,
					sessionHash: null,
					createSocket: function () {
						var e = this;
						try {
							this.socket = new WebSocket(socketUrl, "base64");
						} catch (t) {
							s.exception("Socket Exception", !0, t);
						}
						(this.socket.onopen = function (t) {
							console.log("socket open", u().format("HH:mm:ss"), t),
								!i("auth").isReady() && e.socketOpenAttempts && e.auth(),
								(e.isSocketOpen = !0),
								(e.isSocketWasOpen = !0),
								(e.socketOpenAttempts = 0),
								i("socket").resolve();
						}),
							(this.socket.onmessage = function (e) {
								e.data && f.parseMessage(e.data);
							}),
							(this.socket.onclose = function (t) {
								console.log("socket close", u().format("HH:mm:ss"), t, e),
									(e.isSocketOpen = !1),
									i("auth").reject(),
									i("socket").reject(),
									e.reopenSocket(),
									f.trigger("socketClose", t);
							});
					},
					resolveSocial: function (e) {
						(this.User.socialId = e), this.User.socialDeferred.resolve();
					},
					reopenSocket: function () {
						this.socketOpenAttempts++,
							this.isSocketWasOpen
								? this.socketOpenAttempts < 3
									? setTimeout(this.createSocket.bind(this), 1e3 * this.socketOpenAttempts)
									: setTimeout(this.createSocket.bind(this), 5e3)
								: setTimeout(this.createSocket.bind(this), 5e3);
					},
					disconnect: function () {
						this.send({
							method: "disconnect",
						});
					},
					serverAuth: function (e) {
						var t = a();
						(e.clientSessionId = t), this.send(e);
					},
					getProducts: function (e) {
						var t = this;
						$.ajax({
							url: this.socialApiUrl + "/get-all-products",
							type: "GET",
							data: {
								userId: e,
							},
						}).done(function (e) {
							var n = JSON.parse(e);
							console.info(
								"%csocial./api/" + social + "/get-all-products.getProducts===>",
								"color: #ce29d3; font-weight: bold;",
								n
							),
								t.trigger("getProducts", n);
						});
					},
					unlockAchievement: function (e) {
						this.send({
							method: "unlockAchievement",
							id: e,
						});
					},
					getUserGamesHistory: function () {
						this.send({
							method: "getUserGamesHistory",
						});
					},
					getTopUsers: function (e) {
						(e = e || 0),
							this.send({
								method: "getTopUsers",
								offset: e,
							});
					},
					getTopFriends: function (e, t) {
						t === undefined && (t = []),
							t.push(e.get("socialId")),
							this.send({
								method: "getTopFriends",
								friends: t,
							});
					},
					getAchievements: function () {
						this.send({
							method: "getAchievements",
						});
					},
					achievementGetReward: function (e, t) {
						var n = {
							method: "achievementGetReward",
							id: e,
						};
						t != undefined && (n.rewardId = t), this.send(n);
					},
					getTip: function () {
						this.send({
							method: "getTip",
							count: 1,
						});
					},
					useTip: function (e, t) {
						this.send({
							method: "useTip",
							tipData: e,
							hash: t,
						});
					},
					getRound: function (e) {
						this.send({
							method: "getRound",
							game: e,
						});
					},
					setRoundStartTime: function (e) {
						this.send({
							method: "setRoundStartTime",
							id: e,
						});
					},
					socialGetField: function () {
						this.send({
							method: "socialGetField",
						});
					},
					createRandGame: function () {
						this.send({
							method: "createRandGame",
							gameData: {},
						});
					},
					createRound: function (e) {
						this.send({
							method: "createRound",
							socialId: e.socialId,
							dbField: !0,
						});
					},
					joinGame: function (e) {
						this.send({
							method: "joinGame",
							game: e,
							decision: 1,
						});
					},
					sendResults: function (e, t, n, r) {
						this.send({
							method: "sendResults",
							game: e,
							results: t,
							fieldBoosterData: n,
							hash: r,
						});
					},
					sendEmptyResults: function (e, t) {
						this.send({
							method: "sendResults",
							game: e,
							results: {
								usedWords: [],
								scores: 0,
								notExistsWords: [],
							},
						});
					},
					sendRobotResults: function (e, t) {
						this.send({
							method: "sendResults",
							game: e,
							results: t,
						});
					},
					sendGameLog: function (e) {
						console.log("Gate.sendGameLog"),
							$.post(
								this.socialApiUrl + "/send-game-log",
								{
									data: JSON.stringify(e),
								},
								function (e) {
									console.info("social./api/" + social + "/send-game-log.data===>", e);
								},
								"json"
							);
					},
					cheatSendInfo: function (e) {
						this.send({
							method: "cheatSendInfo",
							info: e,
						});
					},
					findUserById: function (e) {
						typeof e == "object"
							? this.send({
									method: "findUserById",
									socialId: e,
							  })
							: this.send({
									method: "findUserById",
									id: e,
							  });
					},
					findUsersByName: function (e) {
						this.send({
							method: "findUsersByName",
							playerName: e,
							offset: 0,
							limit: 10,
						});
					},
					playerInfoGetGeneral: function (e, t) {
						this.send({
							method: "playerInfoGetGeneral",
							userId: e,
							types: t,
						});
					},
					playerInfoGetRating: function (e) {
						this.send({
							method: "playerInfoGetRating",
							userId: e,
						});
					},
					playerInfoGetGames: function (e) {
						this.send({
							method: "playerInfoGetGames",
							userId: e,
						});
					},
					playerInfoGetClan: function (e) {
						this.send({
							method: "playerInfoGetClan",
							userId: e,
						});
					},
					playerInfoGetTourney: function (e) {
						this.send({
							method: "playerInfoGetTourney",
							userId: e,
						});
					},
					playerInfoGetLibrary: function (e) {
						this.send({
							method: "playerInfoGetLibrary",
							userId: e,
						});
					},
					playerInfoGetAchievement: function (e) {
						this.send({
							method: "playerInfoGetAchievement",
							userId: e,
						});
					},
					userReportSend: function (e, t, n) {
						this.send({
							method: "userReportSend",
							userId: e,
							reason: t,
							log: n,
						});
					},
					chtow: function (e) {
						return r.chw()(e);
					},
					clearStat: function (e) {
						this.send({
							method: "clearStat",
							usersToRemove: e,
						});
					},
					sendChatMessage: function (e, t) {
						this.send({
							method: "sendChatMessage",
							id: e,
							message: t,
						});
					},
					hideCampaignPopup: function (e) {
						this.send({
							method: "hideCampaignPopup",
							campaignId: e,
						});
					},
					hideCampaignTarget: function (e) {
						this.send({
							method: "hideCampaignTarget",
							campaignId: e,
						});
					},
					reloadSession: function (e) {
						this.send({
							method: "reloadSession",
							hash: e,
						});
					},
					getTourneys: function (e) {
						var t = {
							method: "getTourneys",
							infoLevels: [],
						};
						_.extend(t, e), this.send(t);
					},
					joinTourney: function (e, t) {
						this.send({
							method: "joinTourney",
							tourneyId: e,
							paymentType: t,
						});
					},
					tourneyGetRound: function (e, t) {
						this.send({
							method: "tourneyGetRound",
							id: e,
							roundId: t,
						});
					},
					joinTourney: function (e, t) {
						this.send({
							method: "joinTourney",
							tourneyId: e,
							paymentType: t,
						});
					},
					tourneyRoundResult: function (e, t, n) {
						this.send({
							method: "tourneyRoundResult",
							results: n,
							tourneyId: t,
							id: e,
						});
					},
					seasonGet: function (e, t, n) {
						var r = {
							method: "seasonGet",
						};
						e != undefined && e > 0 && (r.topOffset = e),
							t != undefined && t != null && t != "" && (r.alias = t),
							n != undefined && n != null && (r.friends = n),
							this.send(r);
					},
					seasonHistory: function (e) {
						var t = _.extend(e || {}, {
							method: "seasonHistory",
						});
						this.send(t);
					},
					setStatus: function (e) {
						this.send({
							method: "setStatus",
							status: e,
						});
					},
					sendCommerceAnalytic: function (e) {
						s.ecommerce(e),
							o.sendBusinessEvent(e),
							o.sendDesignEvent("earn_virtual_currency:Reason:buy");
					},
					sendPostOfferAnalytic: function (e) {
						s.event({
							category: "social",
							action: "postOffer",
							label: e,
						});
					},
					sendPostAcceptAnalytic: function (e) {
						s.event({
							category: "social",
							action: "post",
							label: e,
						});
					},
					socialInviteFriend: function (e) {
						var t = this;
						$.post(
							this.socialApiUrl + "/send-invite",
							{
								userId: t.User.get("socialId")[getSocial()],
								receiverId: e,
							},
							function (n) {
								console.info("social./api/" + social + "/send-invite.data===>", n),
									n.state == "success" && t.trigger("inviteSuccess", e);
							},
							"json"
						);
					},
					sendFeedback: function (e) {
						var t = this;
						console.warn("sendFeedback GATE", this.socialApiUrl, e),
							$.post(
								this.socialApiUrl + "/send-feedback",
								e,
								function (e) {
									t.trigger("sendFeedback", e);
								},
								"json"
							);
					},
					addToFavorite: function () {
						return !0;
					},
					sendAppEvent: function () {
						return !0;
					},
					dailyBonusReward: function () {
						this.send({
							method: "dailyBonusReward",
						});
					},
					dailyBonusGetInfo: function () {
						this.send({
							method: "dailyBonusGetInfo",
						});
					},
					dailyWordGetCurrent: function () {
						this.send({
							method: "dailyWordGetCurrent",
						});
					},
					dailyWordGetUserDictionary: function (e) {
						var e = e || 0;
						this.send({
							method: "dailyWordGetUserDictionary",
							offset: e,
						});
					},
					dailyWordUserLike: function (e) {
						this.send({
							method: "dailyWordUserLike",
							wordId: e,
						});
					},
					dailyWordUserDislike: function (e) {
						this.send({
							method: "dailyWordUserDislike",
							wordId: e,
						});
					},
					dailyWordUserSend: function (e, t) {
						this.send({
							method: "dailyWordUserSend",
							word: e,
							description: t,
						});
					},
					lifeGetInfo: function () {
						this.send({
							method: "lifeGetInfo",
						});
					},
					videoRewardGetAvailableCount: function () {
						this.send({
							method: "videoRewardGetAvailableCount",
						});
					},
					videoReward: function (e) {
						this.send({
							method: "videoReward",
							category: e,
							hash: e,
						});
					},
					getRoundBooster: function (e) {
						this.send({
							method: "getRoundBooster",
							id: e,
						});
					},
					fieldBoosterBuy: function (e) {
						this.send({
							method: "fieldBoosterBuy",
							alias: e,
						});
					},
					startRound: function (e, t) {
						this.send({
							method: "startRound",
							id: e,
							fieldBoosterData: t,
						});
					},
					fieldBoosterGetInfo: function (e) {
						this.send({
							method: "fieldBoosterGetInfo",
							gamePart: e,
						});
					},
					boosterGetInfo: function () {
						this.send({
							method: "boosterGetInfo",
						});
					},
					generateNewField: function (e, t) {
						var n = {};
						(n.method = "generateNewField"),
							e && t && ((n.minWordsCount = e), (n.maxWordsCount = t)),
							this.send(n);
					},
					gamePartGetInfo: function (e) {
						this.send({
							method: "gamePartGetInfo",
							alias: e,
						});
					},
					libraryGetInfo: function () {
						this.send({
							method: "libraryGetInfo",
						});
					},
					libraryBookReadStart: function (e) {
						this.send({
							method: "libraryBookReadStart",
							id: e,
						});
					},
					libraryBookReadFinish: function (e, t, n) {
						var n = n || "";
						this.send({
							method: "libraryBookReadFinish",
							id: e,
							readMethod: t,
							hash: n,
						});
					},
					libraryBookDisassembleStart: function (e) {
						this.send({
							method: "libraryBookDisassembleStart",
							id: e,
						});
					},
					libraryBookDisassembleFinish: function (e, t, n) {
						var n = n || "";
						this.send({
							method: "libraryBookDisassembleFinish",
							id: e,
							disassembleMethod: t,
							hash: n,
						});
					},
					libraryBookRewardVideo: function (e) {
						this.send({
							method: "libraryBookRewardVideo",
							id: e,
						});
					},
					libraryLevelUp: function () {
						this.send({
							method: "libraryLevelUp",
						});
					},
					clanUpdate: function (e, t) {
						this.send({
							method: "clanUpdate",
							clanId: t,
							name: e.name,
							message: e.message,
							welcomeMessage: e.welcomeMessage,
							avatar: e.avatar,
							public: e.public,
							params: {
								minRating: e.params.minRating,
								minLevel: e.params.minLevel,
							},
							grailNotificationEnabled: e.grailNotificationEnabled,
						});
					},
					clanCreate: function (e) {
						this.send({
							method: "clanCreate",
							name: e.name,
							message: e.message,
							welcomeMessage: e.welcomeMessage,
							avatar: e.avatar,
							public: e.public,
							params: {
								minRating: e.params.minRating,
								minLevel: e.params.minLevel,
							},
							grailNotificationEnabled: e.grailNotificationEnabled,
						});
					},
					clanGetOwn: function () {
						this.send({
							method: "clanGetOwn",
						});
					},
					clanGet: function (e) {
						this.send({
							method: "clanGet",
							clanId: e,
						});
					},
					clanGetTop: function (e) {
						this.send({
							method: "clanGetTop",
							skip: e,
						});
					},
					clanBattleStart: function (e, t) {
						this.send({
							method: "clanBattleStart",
							paymentType: e,
							fieldBoosterData: t,
						});
					},
					clanBattleStartPayment: function (e) {
						this.send({
							method: "clanBattleStartPayment",
							paymentType: e,
						});
					},
					clanBattleResult: function (e, t) {
						this.send({
							method: "clanBattleResult",
							taskId: e.taskId,
							battleNumber: e.battleNumber,
							results: e.results,
							fieldBoosterData: e.fieldBoosterData,
							tipCount: e.tipCount,
							isRVRateActivated: e.isRVRateActivated,
							hash: t,
						});
					},
					clanGetUserList: function (e) {
						var t = 0;
						e !== undefined && (t = e),
							this.send({
								method: "clanGetUserList",
								skip: t,
							});
					},
					clanFind: function (e) {
						this.send({
							method: "clanFind",
							text: e,
						});
					},
					clanJoin: function (e) {
						this.send({
							method: "clanJoin",
							clanId: e,
						});
					},
					clanRequest: function (e) {
						this.send({
							method: "clanRequest",
							clanId: e,
						});
					},
					clanRequestAccept: function (e, t) {
						this.send({
							method: "clanRequestAccept",
							clanId: e,
							userId: t,
						});
					},
					clanRequestCancel: function (e, t) {
						this.send({
							method: "clanRequestCancel",
							clanId: e,
							userId: t,
						});
					},
					clanQuite: function () {
						this.send({
							method: "clanQuite",
						});
					},
					clanGetReward: function (e, t) {
						var t = t || "";
						this.send({
							method: "clanGetReward",
							taskId: e,
							rewardId: t,
						});
					},
					clanChatGetNewMessages: function (e) {
						e
							? this.send({
									method: "clanChatGetNewMessages",
									id: e,
							  })
							: this.send({
									method: "clanChatGetNewMessages",
							  });
					},
					clanChatSendMessage: function (e, t) {
						this.send({
							method: "clanChatSendMessage",
							text: e,
							main: t,
						});
					},
					clanSetUserRole: function (e, t) {
						this.send({
							method: "clanSetUserRole",
							userId: e,
							role: t,
						});
					},
					clanExcludeMember: function (e) {
						this.send({
							method: "clanExcludeMember",
							userId: e,
						});
					},
					clanSafeGetInfo: function () {
						this.send({
							method: "clanSafeGetInfo",
						});
					},
					clanSafeBattleStart: function (e, t) {
						this.send({
							method: "clanSafeBattleStart",
							paymentType: e,
							fieldBoosterData: t,
							isRVRateActivated: !1,
						});
					},
					clanSafeBattleResult: function (e, t) {
						this.send({
							method: "clanSafeBattleResult",
							clanSafeId: e.clanSafeId,
							battleNumber: e.battleNumber,
							results: e.results,
							tipCount: e.tipCount,
							fieldBoosterData: e.fieldBoosterData,
							isRVRateActivated: e.isRVRateActivated,
							hash: t,
						});
					},
					clanSafeResetResults: function (e, t) {
						this.send({
							method: "clanSafeResetResults",
							clanSafeId: e,
							paymentType: t,
						});
					},
					clanSafeOpen: function (e) {
						this.send({
							method: "clanSafeOpen",
							clanSafeId: e,
						});
					},
					clanSafeGetReward: function () {
						this.send({
							method: "clanSafeGetReward",
						});
					},
					clanSafeUserActiveRewardInfo: function () {
						this.send({
							method: "clanSafeUserActiveRewardInfo",
						});
					},
					questGetInfo: function () {
						this.send({
							method: "questGetInfo",
						});
					},
					questCreate: function () {
						var e = u().format("DD-MM-YYYY HH:mm:ss");
						this.send({
							method: "questCreate",
							userTime: e,
						});
					},
					questReplace: function (e) {
						var t = u().format("DD-MM-YYYY HH:mm:ss");
						this.send({
							method: "questCreate",
							userTime: t,
							id: e,
							replace: !0,
						});
					},
					questUpdate: function (e) {
						var t = u().format("DD-MM-YYYY HH:mm:ss");
						this.send({
							method: "questCreate",
							userTime: t,
							id: e,
						});
					},
					questGetReward: function (e) {
						this.send({
							method: "questGetReward",
							id: e,
						});
					},
					onboardingGetInfo: function () {
						this.send({
							method: "onboardingGetInfo",
						});
					},
					onboardingView: function (e) {
						var t = _.isArray(e.skipped) ? e.skipped : [],
							n = _.isArray(e.viewed) ? e.viewed : [];
						this.send({
							method: "onboardingView",
							skipped: t,
							viewed: n,
						});
					},
					tutorialGameGet: function () {
						this.send({
							method: "tutorialGameGet",
						});
					},
					tutorialGameResult: function (e, t) {
						this.send({
							method: "tutorialGameResult",
							roundNumber: e,
							results: t,
						});
					},
					papersGetInfo: function () {
						this.send({
							method: "papersGetInfo",
						});
					},
					clothesGetAppearanceItems: function (e) {
						this.send({
							method: "clothesGetAppearanceItems",
							groups: e,
						});
					},
					clothesGetActiveItems: function () {
						this.send({
							method: "clothesGetActiveItems",
						});
					},
					clothesGetBagItems: function () {
						this.send({
							method: "clothesGetBagItems",
						});
					},
					clothesGetBag: function () {
						this.send({
							method: "clothesGetBag",
						});
					},
					clothesUpgradeBag: function () {
						this.send({
							method: "clothesUpgradeBag",
						});
					},
					clothesPutOnItem: function (e) {
						this.send({
							method: "clothesPutOnItem",
							clothesItemSet: e,
						});
					},
					clothesTakeOffItem: function (e, t) {
						this.send({
							method: "clothesTakeOffItem",
							id: e,
							itemId: t,
						});
					},
					clothesSetGetInfo: function () {
						this.send({
							method: "clothesSetGetInfo",
						});
					},
					clothesItemViewed: function (e) {
						this.send({
							method: "clothesItemViewed",
							items: e,
						});
					},
					clothesItemLevelUp: function (e) {
						this.send({
							method: "clothesItemLevelUp",
							id: e,
						});
					},
					clothesDestroyItem: function (e) {
						this.send({
							method: "clothesDestroyItem",
							id: e,
						});
					},
					clothesDestroyItemCopies: function (e, t) {
						this.send({
							method: "clothesDestroyItemCopies",
							id: e,
							copiesCount: t,
						});
					},
					clothesSetCraftStart: function (e) {
						this.send({
							method: "clothesSetCraftStart",
							setId: e,
						});
					},
					clothesSetCraftFinish: function (e, t) {
						t
							? this.send({
									method: "clothesSetCraftFinish",
									setId: e,
									type: t,
							  })
							: this.send({
									method: "clothesSetCraftFinish",
									setId: e,
							  });
					},
					clothesCopyCraftGetUserSlots: function () {
						this.send({
							method: "clothesCopyCraftGetUserSlots",
						});
					},
					clothesCopyCraftGetParams: function () {
						this.send({
							method: "clothesCopyCraftGetParams",
						});
					},
					clothesCopyCraftStart: function (e, t) {
						this.send({
							method: "clothesCopyCraftStart",
							userItemSlotId: e,
							itemId: t,
						});
					},
					clothesCopyCraftBoost: function (e, t, n) {
						this.send({
							method: "clothesCopyCraftBoost",
							userItemSlotId: e,
							itemId: t,
							paymentType: n,
						});
					},
					clothesCopyCraftFinish: function (e, t, n, r) {
						var r = r || "";
						this.send({
							method: "clothesCopyCraftFinish",
							userItemSlotId: e,
							itemId: t,
							paymentType: n,
							hash: r,
						});
					},
					clothesCopyCraftClearSlot: function (e, t) {
						this.send({
							method: "clothesCopyCraftClearSlot",
							userItemSlotId: e,
							itemId: t,
						});
					},
					clothesPatternsGetInfo: function () {
						this.send({
							method: "clothesPatternsGetInfo",
						});
					},
					clothesShopGetInfo: function () {
						this.send({
							method: "clothesShopGetInfo",
						});
					},
					clothesShopBuyItem: function (e, t) {
						var t = t || "";
						this.send({
							method: "clothesShopBuyItem",
							userShopItemId: e,
							hash: t,
						});
					},
					changeName: function (e) {
						this.send({
							method: "changeName",
							playerName: e,
						});
					},
					changeNameDynamicPrice: function (e) {
						this.send({
							method: "changeNameDynamicPrice",
							playerName: e,
						});
					},
					getChase: function () {
						this.send({
							method: "getChase",
						});
					},
					getChaseRating: function () {
						this.send({
							method: "getChaseRating",
						});
					},
					getChaseHistory: function () {
						this.send({
							method: "getChaseHistory",
						});
					},
					getChaseShop: function () {
						this.send({
							method: "getChaseShop",
						});
					},
					buyChaseShopItem: function (e, t) {
						this.send({
							method: "buyChaseShopItem",
							itemId: e,
							hash: t,
						});
					},
					takeUserChaseReward: function () {
						this.send({
							method: "takeUserChaseReward",
						});
					},
					confirmChaseAgreement: function () {
						this.send({
							method: "confirmChaseAgreement",
						});
					},
					seasonPassGetInfo: function () {
						this.send({
							method: "seasonPassGetInfo",
						});
					},
					chestGetInfo: function () {
						this.send({
							method: "chestGetInfo",
						});
					},
					seasonPassGetLevelReward: function (e, t) {
						this.send({
							method: "seasonPassGetLevelReward",
							levelId: e,
							rewardType: t,
						});
					},
					chestOpen: function () {
						this.send({
							method: "chestOpen",
						});
					},
					parseMessage: function (e) {
						var t = this.chtow(r.gk()),
							n = r.b()(e, t, r.gm());
						n = JSON.parse(n.toString(r.cuf));
						var i = n.method;
						console.groupCollapsed("%c" + i, "color: #18a136; font-weight: bold;"),
							console.log(n),
							console.groupEnd(),
							this.trigger(i, n),
							_.indexOf(this.tracingMethods, i) > -1 && (this[i + "Pending"] = !1);
					},
					send: function (e) {
						var t = this;
						e.sessionHash = this.sessionHash;
						var n = JSON.stringify(e),
							i = this.chtow(r.gk()),
							s = r.f()(n, i, r.gm()).toString();
						this.isSocketOpen &&
							(console.groupCollapsed("%c" + e.method, "color: #c41414; font-weight: bold;"),
							console.info(e),
							console.groupEnd(),
							_.indexOf(this.tracingMethods, e.method) > -1
								? this[e.method + "Pending"] ||
								  ((this[e.method + "Pending"] = !0), this.socket.send(s))
								: this.socket.send(s));
					},
				},
				e.Events
			);
			return (
				(f.storage = new n(f)),
				f.on("auth", function (e) {
					f.sessionHash = e.sessionHash;
				}),
				f.createSocket(),
				f
			);
		}
	),
	!(function (e, t) {
		"object" == typeof exports && "undefined" != typeof module
			? t(exports)
			: "function" == typeof define && define.amd
			? define("vk", ["exports"], t)
			: t(((e = e || self).vkBridge = {}));
	})(this, function (e) {
		function n() {
			for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
			var r = Array(e),
				i = 0;
			for (t = 0; t < n; t++)
				for (var s = arguments[t], o = 0, u = s.length; o < u; o++, i++) r[i] = s[o];
			return r;
		}

		function r(e, n) {
			var r,
				i,
				s =
					((r = {
						current: 0,
						next: function () {
							return ++this.current;
						},
					}),
					(i = {}),
					{
						add: function (e, t) {
							var n = null != t ? t : r.next();
							return (i[n] = e), n;
						},
						resolve: function (e, t, n) {
							var r = i[e];
							r && (n(t) ? r.resolve(t) : r.reject(t), (i[e] = null));
						},
					});
			return (
				n(function (e) {
					if (
						e.detail &&
						e.detail.data &&
						"object" == typeof e.detail.data &&
						"request_id" in e.detail.data
					) {
						var t = e.detail.data,
							n = t.request_id,
							r = (function (e, t) {
								var n = {};
								for (var r in e)
									Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
								if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
									var i = 0;
									for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
										t.indexOf(r[i]) < 0 &&
											Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
											(n[r[i]] = e[r[i]]);
								}
								return n;
							})(t, ["request_id"]);
						n &&
							s.resolve(n, r, function (e) {
								return !("error_type" in e);
							});
					}
				}),
				function (n, r) {
					return (
						void 0 === r && (r = {}),
						new Promise(function (i, o) {
							var u = s.add(
								{
									resolve: i,
									reject: o,
								},
								r.request_id
							);
							e(
								n,
								t(t({}, r), {
									request_id: u,
								})
							);
						})
					);
				}
			);
		}

		function p(e, t) {
			var n = t || {
					bubbles: !1,
					cancelable: !1,
					detail: void 0,
				},
				r = document.createEvent("CustomEvent");
			return r.initCustomEvent(e, !!n.bubbles, !!n.cancelable, n.detail), r;
		}
		var t = function () {
				return (t =
					Object.assign ||
					function (e) {
						for (var t, n = 1, r = arguments.length; n < r; n++)
							for (var i in (t = arguments[n]))
								Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
						return e;
					}).apply(this, arguments);
			},
			i = "undefined" != typeof window,
			s = Boolean(i && window.AndroidBridge),
			o = Boolean(
				i &&
					window.webkit &&
					window.webkit.messageHandlers &&
					window.webkit.messageHandlers.VKWebAppClose
			),
			u = i && !s && !o,
			a = u && /(^\?|&)vk_platform=mobile_web(&|$)/.test(location.search),
			f = u ? "message" : "VKWebAppEvent",
			l = n(
				[
					"VKWebAppInit",
					"VKWebAppGetCommunityAuthToken",
					"VKWebAppAddToCommunity",
					"VKWebAppAddToHomeScreenInfo",
					"VKWebAppClose",
					"VKWebAppCopyText",
					"VKWebAppGetUserInfo",
					"VKWebAppSetLocation",
					"VKWebAppSendToClient",
					"VKWebAppGetClientVersion",
					"VKWebAppGetPhoneNumber",
					"VKWebAppGetEmail",
					"VKWebAppGetGroupInfo",
					"VKWebAppGetGeodata",
					"VKWebAppGetCommunityToken",
					"VKWebAppSetTitle",
					"VKWebAppGetAuthToken",
					"VKWebAppCallAPIMethod",
					"VKWebAppJoinGroup",
					"VKWebAppLeaveGroup",
					"VKWebAppAllowMessagesFromGroup",
					"VKWebAppDenyNotifications",
					"VKWebAppAllowNotifications",
					"VKWebAppOpenPayForm",
					"VKWebAppOpenApp",
					"VKWebAppShare",
					"VKWebAppShowWallPostBox",
					"VKWebAppScroll",
					"VKWebAppShowOrderBox",
					"VKWebAppShowLeaderBoardBox",
					"VKWebAppShowInviteBox",
					"VKWebAppShowRequestBox",
					"VKWebAppAddToFavorites",
					"VKWebAppShowCommunityWidgetPreviewBox",
					"VKWebAppShowStoryBox",
					"VKWebAppStorageGet",
					"VKWebAppStorageGetKeys",
					"VKWebAppStorageSet",
					"VKWebAppFlashGetInfo",
					"VKWebAppSubscribeStoryApp",
					"VKWebAppOpenWallPost",
					"VKWebAppCheckAllowedScopes",
					"VKWebAppShowNativeAds",
				],
				u && !a
					? [
							"VKWebAppResizeWindow",
							"VKWebAppAddToMenu",
							"VKWebAppShowSubscriptionBox",
							"VKWebAppShowInstallPushBox",
							"VKWebAppGetFriends",
					  ]
					: ["VKWebAppShowImages"]
			),
			c = i ? window.AndroidBridge : void 0,
			h = o ? window.webkit.messageHandlers : void 0;
		"undefined" == typeof window ||
			window.CustomEvent ||
			(window.CustomEvent = ((p.prototype = Event.prototype), p));
		var d = (function (e) {
			function a(e) {
				i.push(e);
			}

			function p() {
				return o || s;
			}

			function d() {
				return u && window.parent !== window;
			}

			function v() {
				return p() || d();
			}
			var t = void 0,
				i = [];
			"undefined" != typeof window &&
				"addEventListener" in window &&
				window.addEventListener(f, function (e) {
					if (o || s)
						return n(i).map(function (t) {
							return t.call(null, e);
						});
					if (u && e && e.data) {
						var r = e.data,
							a = r.type,
							f = r.data,
							l = r.frameId;
						a && "VKWebAppSettings" === a
							? (t = l)
							: n(i).map(function (e) {
									return e({
										detail: {
											type: a,
											data: f,
										},
									});
							  });
					}
				});
			var m = r(function (n, r) {
				c && c[n]
					? c[n](JSON.stringify(r))
					: h && h[n] && "function" == typeof h[n].postMessage
					? h[n].postMessage(r)
					: u &&
					  parent.postMessage(
							{
								handler: n,
								params: r,
								type: "vk-connect",
								webFrameId: t,
								connectVersion: e,
							},
							"*"
					  );
			}, a);
			return {
				send: m,
				sendPromise: m,
				subscribe: a,
				unsubscribe: function (e) {
					var t = i.indexOf(e);
					-1 < t && i.splice(t, 1);
				},
				supports: function (e) {
					return s
						? !!c && "function" == typeof c[e]
						: o
						? !!h && !!h[e] && "function" == typeof h[e].postMessage
						: u && -1 < l.indexOf(e);
				},
				isWebView: p,
				isIframe: d,
				isEmbedded: v,
				isStandalone: function () {
					return !v();
				},
			};
		})("2.4.6");
		(e.applyMiddleware = function v() {
			for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
			return e.includes(void 0) || e.includes(null)
				? v.apply(
						void 0,
						e.filter(function (e) {
							return "function" == typeof e;
						})
				  )
				: function (n) {
						if (0 === e.length) return n;
						var r,
							i = {
								subscribe: n.subscribe,
								send: function () {
									for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
									return n.send.apply(n, e);
								},
							};
						return (
							(r = e
								.filter(function (e) {
									return "function" == typeof e;
								})
								.map(function (e) {
									return e(i);
								})
								.reduce(function (e, t) {
									return function (n) {
										return e(t(n));
									};
								})(n.send)),
							t(t({}, n), {
								send: r,
							})
						);
				  };
		}),
			(e.default = d),
			Object.defineProperty(e, "__esModule", {
				value: !0,
			});
	}),
	define("gate", ["application", "gates/gate-server", "status", "vk"], function (e, t, n, r) {
		var i = _.extend(t, {
			socialApiUrl: host + "/api/vk",
			versionAPI: "5.131",
			socialInit: function () {
				var e = this;
				r.default.send("VKWebAppInit"),
					n("social").resolve(),
					r.default.send("VKWebAppGetAuthToken", {
						app_id: +vkAppId,
						scope: "friends, wall, photos",
					}),
					r.default.subscribe(function (t) {
						var t = t.detail;
						t.type == "VKWebAppAccessTokenReceived"
							? ((e.access_token = t.data.access_token),
							  console.log("access_token: ", e.access_token),
							  e.setCounter())
							: t.type == "VKWebAppAccessTokenFailed" &&
							  console.log("VKWebAppGetAuthToken error: ", t);
					});
			},
			auth: function () {
				var t = this;
				console.log("auth start"),
					r.default.send("VKWebAppGetUserInfo"),
					r.default.subscribe(function (n) {
						var n = n.detail,
							r = n.data;
						if (n.type == "VKWebAppGetUserInfoResult") {
							console.info(
								"%cVKWebAppGetUserInfoResult ====>",
								"color: #ce29d3; font-weight: bold;",
								r
							);
							var i = r,
								s = r.id.toString();
							t.resolveSocial(s);
							var o = {
									method: "auth",
									authType: "1",
									authData: {
										socialId: {
											vk: s,
										},
										screenSize: {
											w: window.screen.width,
											h: window.screen.height,
										},
										avatarUrl: i.photo_100,
										avatarBigUrl: i.photo_200,
										netType: 0,
										appVersion: t.appVersion,
										appName: "WBWSocial_vk",
										playerName: i.first_name + " " + i.last_name,
										udid: s,
										gender: (function () {
											return [0, 2, 1][i.sex];
										})(),
										age: (function () {
											return i.bdate && i.bdate.split(".")[2]
												? moment().diff(moment(i.bdate, "DD.MM.YYYY"), "years")
												: 0;
										})(),
										timePoint: e.methods.getCurrentTimePoint(),
									},
								},
								u = "";
							i.city && i.city.title && (u += i.city.title),
								i.city && i.city.title && i.country && i.country.title && (u += ", "),
								i.country && i.country.title && (u += i.country.title),
								u.length > 0 &&
									_.extend(o.authData, {
										location: {
											type: "vk",
											value: {
												name: u,
											},
										},
									}),
								t.serverAuth(o);
						} else n.type == "VKWebAppGetUserInfoFailed" && console.log(n.data);
					});
			},
			getFriends: function (e) {
				var t = this;
				console.log("access_token: ", t.access_token),
					r.default.send("VKWebAppCallAPIMethod", {
						method: "friends.get",
						request_id: "getFriends",
						params: {
							v: i.versionAPI,
							access_token: t.access_token,
							count: 200,
						},
					}),
					r.default.subscribe(function (n) {
						var n = n.detail;
						n.type == "VKWebAppCallAPIMethodResult" &&
							n.data.request_id == "getFriends" &&
							(console.info("%cfriends.get====>", "color: #ce29d3; font-weight: bold;", n.data),
							t.filterFriends(e, n.data.response.items));
					});
			},
			filterFriends: function (e, t) {
				var n = this;
				$.post(
					this.socialApiUrl + "/get-friends",
					{
						userId: e.get("socialId").vk,
						friends: t,
					},
					function (e, t, r) {
						console.info(
							"%csocial./api/vk/get-friends.friends====>",
							"color: #ce29d3; font-weight: bold;",
							e,
							arguments
						),
							e.state == "success" && n.getVkUserInfo(e.data);
					},
					"json"
				);
			},
			getVkUserInfo: function (e) {
				var t = this;
				r.default.send("VKWebAppCallAPIMethod", {
					method: "users.get",
					request_id: "getVkUserInfo",
					params: {
						v: i.versionAPI,
						access_token: t.access_token,
						fields: "photo_50",
						user_ids: e.absentFriends.join(),
					},
				}),
					r.default.subscribe(function (n) {
						var n = n.detail;
						n.type == "VKWebAppCallAPIMethodResult" &&
							n.data.request_id == "getVkUserInfo" &&
							(console.log(
								"%csocial.users.get.friends====>",
								"color: #ce29d3; font-weight: bold;",
								n.data
							),
							(e.absentFriends = n.data.response),
							t.trigger("getFriends", e));
					});
			},
			showLeaderboardBox: function (e) {
				r.default
					.sendPromise("VKWebAppShowLeaderBoardBox", {
						user_result: e,
					})
					.then(function (e) {
						console.log(e.success);
					})
					.catch(function (e) {
						console.log(e);
					});
			},
			showRequestBox: function (t, n) {
				r.default
					.sendPromise("VKWebAppShowRequestBox", {
						uid: t,
						message: e.params.inviteText,
					})
					.then(function (e) {
						console.log(e.success);
					})
					.catch(function (e) {
						console.log(e);
					});
			},
			inviteAllFriends: function (e) {
				r.default
					.sendPromise("VKWebAppShowInviteBox", {})
					.then(function (e) {
						console.log(e.success);
					})
					.catch(function (e) {
						console.log(e);
					});
			},
			buyProduct: function (e, t, n) {
				var i = this,
					s = e.get("socialId")[getSocial()],
					o = t._id,
					u = n,
					n = {
						type: "item",
						item: o,
					};
				$.post(
					this.socialApiUrl + "/init-payment",
					{
						userId: s,
						productId: o,
						params: JSON.stringify(u || {}),
					},
					function (e) {
						console.info(
							"%csocial./api/vk/init-payment.response===>",
							"color: #ce29d3; font-weight: bold;",
							e
						),
							e.state == "success" &&
								r.default
									.sendPromise("VKWebAppShowOrderBox", n)
									.then(function (e) {
										i.trigger("orderSuccess"), i.sendCommerceAnalytic(t);
									})
									.catch(function (e) {
										console.log(e), i.trigger("orderError");
									}),
							e.state == "error" && i.trigger("initPaymentError");
					},
					"json"
				);
			},
			sendReminder: function (e, t) {
				var n = this;
				$.post(
					this.socialApiUrl + "/send-notice",
					{
						type: "vk",
						action: "reminder",
						userId: e.get("id"),
						receiverId: t,
					},
					function (e) {
						console.info(
							"%csocial./api/vk/send-notice.response===>",
							"color: #ce29d3; font-weight: bold;",
							e
						),
							n.trigger("sendReminder");
					},
					"json"
				);
			},
			addToFavorite: function () {
				r.default.send("VKWebAppAddToFavorites", {});
			},
			sendAppEvent: function (e, t, n) {
				$.post(
					this.socialApiUrl + "/send-app-event",
					{
						userId: e.get("socialId").vk,
						type: t,
						value: n,
					},
					function (e) {
						console.info(
							"%csocial./api/vk/sendAppEvent====>",
							"color: #ce29d3; font-weight: bold;",
							arguments,
							e
						);
					}
				);
			},
			setCounter: function () {
				(_this = this),
					r.default.send("VKWebAppCallAPIMethod", {
						method: "setCounter",
						request_id: "setCounter",
						params: {
							v: i.versionAPI,
							access_token: _this.access_token,
							"counter: 0": 0,
						},
					}),
					r.default.subscribe(function (e) {
						var e = e.detail;
						e.type == "VKWebAppCallAPIMethodResult" &&
							e.data.request_id == "setCounter" &&
							console.info("%cvk.setCounter===>", "color: #ce29d3; font-weight: bold;", e.data);
					});
			},
			wallUploadImg: function (e, t) {
				var n = this;
				$.post(
					this.socialApiUrl + "/upload-image",
					{
						upload_url: e,
						params: t,
					},
					function (e) {
						console.info("social./api/vk/upload-image.json", e), n.trigger("wallUploadImg", e);
					},
					"json"
				);
			},
			photos: {
				getWallUploadServer: function () {
					r.default.send("VKWebAppCallAPIMethod", {
						method: "photos.getWallUploadServer",
						request_id: "getWallUploadServer",
						params: {
							v: i.versionAPI,
							access_token: i.access_token,
						},
					}),
						r.default.subscribe(function (e) {
							var e = e.detail;
							e.type == "VKWebAppCallAPIMethodResult" &&
								e.data.request_id == "getWallUploadServer" &&
								(console.log(
									"%cvk.photos.getWallUploadServer====>",
									"color: #ce29d3; font-weight: bold;",
									e.data
								),
								i.trigger("photos.getWallUploadServer", e.data));
						});
				},
				saveWallPhoto: function (e, t) {
					r.default.send("VKWebAppCallAPIMethod", {
						method: "photos.saveWallPhoto",
						request_id: "saveWallPhoto",
						params: {
							v: i.versionAPI,
							access_token: i.access_token,
							server: e.server,
							photo: e.photo,
							hash: e.hash,
							user_id: t,
						},
					}),
						r.default.subscribe(function (e) {
							var e = e.detail;
							e.type == "VKWebAppCallAPIMethodResult" &&
								e.data.request_id == "saveWallPhoto" &&
								(console.log(
									"%cvk.photos.saveWallPhoto====>",
									"color: #ce29d3; font-weight: bold;",
									e.data
								),
								i.trigger("photos.saveWallPhoto", e.data));
						});
				},
			},
			wallPost: {
				post: function (e, t) {
					i.sendPostOfferAnalytic(e),
						r.default.send("VKWebAppShowWallPostBox", t),
						r.default.subscribe(function (t) {
							var t = t.detail;
							t.type == "VKWebAppShowWallPostBoxResult" &&
								(console.log("%cwall.post====>", "color: #ce29d3; font-weight: bold;", t.data),
								i.trigger("photos.saveWallPhoto", t.data),
								i.sendPostAcceptAnalytic(e),
								console.warn("trigger", "onWallPostSave")),
								t.type == "VKWebAppShowWallPostBoxFailed" &&
									console.warn("trigger", "onWallPostCancel");
						});
				},
				achievement: function (e, t, n) {
					var r = this;
					i.listenToOnce(i, "photos.getWallUploadServer", function (e) {
						e.response &&
							i.wallUploadImg(e.response.upload_url, {
								type: "achievement",
								id: t,
							});
					}),
						i.listenToOnce(i, "wallUploadImg", function (e) {
							i.photos.saveWallPhoto(e.data, n.vk);
						}),
						i.listenToOnce(i, "photos.saveWallPhoto", function (t) {
							i.wallPost.post("achievement", {
								message: e,
								attachments: "photo" + n.vk + "_" + t.response[0].id,
							});
						}),
						i.photos.getWallUploadServer();
				},
				gift: function (t, n) {
					console.warn("Gate.gift", n);
					if (n.length > 0) {
						var r = this,
							s = n[0];
						delete n[0],
							i.wallPost.post(
								"gift",
								{
									owner_id: s.get("socialId")[social],
									message: t,
									attachments: e.params.userCommonProperties.socialUrls.install.vk,
								},
								function () {
									i.wallPost.gift(t, n);
								}
							);
					}
				},
				win: function (t) {
					var n = t.get("currentGame").score.user + "-" + t.get("currentGame").score.opponent;
					this.post("game", {
						message:
							e.params.socialText.winningText + t.get("opponent").playerName + " со счётом " + n,
						attachments: e.params.userCommonProperties.socialUrls.install.vk,
					});
				},
				tourneyResult: function (t) {
					var n =
						"Я занял " +
						t.get("game").rank +
						' место в турнире "' +
						t.get("manage").name +
						'" игры Слово-за-Слово';
					this.post("tourney", {
						message: n,
						attachments: e.params.userCommonProperties.socialUrls.install.vk,
					});
				},
				share: function () {
					this.post("install", {
						message: e.params.socialText.firstInstalationText,
						attachments: e.params.userCommonProperties.socialUrls.install.vk,
					});
				},
				lvlup: function (e, t, n) {
					var r = this;
					i.listenToOnce(i, "photos.getWallUploadServer", function (e) {
						e.response &&
							i.wallUploadImg(e.response.upload_url, {
								type: "lvlup",
								level: t,
								socialId: n.vk,
							});
					}),
						i.listenToOnce(i, "wallUploadImg", function (e) {
							i.photos.saveWallPhoto(e.data, n.vk);
						}),
						i.listenToOnce(i, "photos.saveWallPhoto", function (t) {
							i.wallPost.post("level", {
								message: e,
								attachments: "photo" + n.vk + "_" + t.response[0].id,
							});
						}),
						i.photos.getWallUploadServer();
				},
			},
		});
		return i;
	}),
	define("models/popup", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return t;
	}),
	define(
		"collections/popups",
		["backbone", "gate", "application", "models/popup"],
		function (e, t, n, r) {
			var i = e.Collection.extend({
					model: r,
				}),
				s = new i();
			return (
				t.on("serverPopup", function (e) {
					e.popup.text != undefined && (e.popup.text = e.popup.text.replace(/\n/g, "<br />")),
						s.add({
							type: "serverPopup",
							params: e.popup,
						});
				}),
				s
			);
		}
	),
	define("models/wardrobe/baseItem", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "group",
		});
		return t;
	}),
	define(
		"collections/wardrobe/baseItems",
		["backbone", "models/wardrobe/baseItem"],
		function (e, t) {
			var n = e.Collection.extend({
				model: t,
			});
			return new n();
		}
	),
	define("models/wardrobe/activeItem", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "id",
		});
		return t;
	}),
	define(
		"collections/wardrobe/activeItems",
		["backbone", "application", "models/wardrobe/activeItem"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: n,
				comparator: function (e) {
					return t.params.wardrobeItemType.indexOf(e.get("group"));
				},
			});
			return new r();
		}
	),
	define("models/wardrobe/bagItem", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "id",
		});
		return t;
	}),
	define("collections/wardrobe/bagItems", ["backbone", "models/wardrobe/bagItem"], function (e, t) {
		var n = e.Collection.extend({
			model: t,
		});
		return new n();
	}),
	define("models/wardrobe/shopItem", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "userShopItemId",
		});
		return t;
	}),
	define(
		"collections/wardrobe/shopItems",
		["backbone", "application", "models/wardrobe/shopItem"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: n,
				comparator: "position",
			});
			return new r();
		}
	),
	define("models/wardrobe/set", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "id",
		});
		return t;
	}),
	define(
		"collections/wardrobe/sets",
		["backbone", "gate", "status", "models/wardrobe/set"],
		function (e, t, n, r) {
			var i = e.Collection.extend({
				model: r,
				comparator: function (e) {
					var t = {
						6: 0,
						4: 1,
						3: 2,
						2: 3,
						1: 4,
						5: 5,
						0: 6,
					};
					return t[e.get("category")];
				},
				initialize: function () {
					var e = this;
					n("wardrobeSets").done(function () {
						e.listenTo(t, "clothesSetCraftStart", function (t) {
							if (t.state != "error") {
								var n,
									r,
									i = !1,
									s = e.models,
									o,
									u = t.clothesItem.itemId;
								for (n = 0; n < s.length; n += 1) {
									if (i) break;
									o = s[n].get("items");
									for (r = 0; r < o.length; r += 1)
										o[r].itemId == u && ((i = !0), (o[r].craft = t.clothesItem.craft));
								}
								e.trigger("change");
							}
						}),
							e.listenTo(t, "clothesSetCraftFinish", function (t) {
								if (t.state != "error") {
									var t = t.clothesItemsInfo[0],
										n = t.setInfo.id,
										r = e.get(n),
										i = r.get("items"),
										s = _.findWhere(i, {
											itemId: t.itemId,
										});
									s.craft.isFinish = !0;
									var o = _.every(i, function (e) {
										return e.craft && e.craft.isFinish;
									});
									o && (r.attributes.isActivePassiveReward = !0), this.trigger("change");
								}
							});
					});
				},
				getDataForBadge: function () {
					var e,
						t,
						n = 0,
						r = this.models,
						i,
						s = [];
					for (e = 0; e < r.length; e += 1) {
						i = r[e].get("items");
						for (t = 0; t < i.length; t += 1)
							i[t].craft &&
								!i[t].craft.isFinish &&
								(moment().format("X") - i[t].craft.tsFinish >= 0
									? n++
									: s.push(i[t].craft.tsFinish));
					}
					return {
						count: n,
						ts: s.length ? _.min(s) : 0,
					};
				},
			});
			return new i();
		}
	),
	define("models/gamePart", ["gate", "status"], function (e, t) {
		var n = Backbone.Model.extend({
				initialize: function () {
					this.listenTo(e, "gamePartGetInfo", function (e) {
						e.state != "error" && (this.setInfo(e), t("gamePart").resolve());
					}),
						this.listenTo(e, "gamePartInfo", function (e) {
							this.setInfo(e);
						}),
						t("auth").done(function () {
							e.gamePartGetInfo();
						});
				},
				setInfo: function (e, t) {
					e.state != "error" && this.set(e.gamePartInfo, t);
				},
			}),
			r = new n();
		return r;
	}),
	define("popupWidget", ["backbone", "application", "collections/popups"], function (e, t, n) {
		var r = e.View.extend({
			originalEvents: {
				"click #close": "closePopup",
			},
			tagName: "div",
			additionalEvents: {},
			viewParam: {},
			closePopup: function () {
				var e = this;
				t.methods.play("popup"),
					TweenMax.to($(".popup-wrapper"), 0.6, {
						opacity: 0,
						top: 500,
						rotation: "30deg",
						ease: Power3.easeOut,
						onComplete: function () {
							n.remove(e.modelId), console.warn("closePopup new PopupCollection", n);
						},
					});
			},
			events: function () {
				return _.extend({}, this.originalEvents, this.additionalEvents);
			},
			initialize: function () {},
			render: function () {
				return this.abstractBeforeRender().selfRender().abstractAfterRender(), this;
			},
			selfRender: function () {
				var t = this.model instanceof e.Model ? this.model.toJSON() : this.model;
				return (
					_.extend(this.viewParam, t),
					$("#popup").append(this.$el.html(this.template(this.viewParam))),
					this
				);
			},
			abstractAfterRender: function () {
				return (
					t.methods.play("popup"),
					TweenMax.fromTo(
						$(".popup-wrapper"),
						0.5,
						{
							top: -260,
							rotation: "-26deg",
						},
						{
							opacity: 1,
							top: 0,
							rotation: "0deg",
							ease: Power3.ease,
						}
					),
					this.afterRender(),
					this
				);
			},
			afterRender: function () {},
			abstractBeforeRender: function () {
				return this.beforeRender(), this;
			},
			beforeRender: function () {
				return this;
			},
		});
		return r;
	}),
	define("text", ["module"], function (e) {
		var t,
			n,
			r,
			i,
			s,
			o = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"],
			u = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
			a = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
			f = typeof location != "undefined" && location.href,
			l = f && location.protocol && location.protocol.replace(/\:/, ""),
			c = f && location.hostname,
			h = f && (location.port || undefined),
			p = {},
			d = (e.config && e.config()) || {};
		t = {
			version: "2.0.12",
			strip: function (e) {
				if (e) {
					e = e.replace(u, "");
					var t = e.match(a);
					t && (e = t[1]);
				} else e = "";
				return e;
			},
			jsEscape: function (e) {
				return e
					.replace(/(['\\])/g, "\\$1")
					.replace(/[\f]/g, "\\f")
					.replace(/[\b]/g, "\\b")
					.replace(/[\n]/g, "\\n")
					.replace(/[\t]/g, "\\t")
					.replace(/[\r]/g, "\\r")
					.replace(/[\u2028]/g, "\\u2028")
					.replace(/[\u2029]/g, "\\u2029");
			},
			createXhr:
				d.createXhr ||
				function () {
					var e, t, n;
					if (typeof XMLHttpRequest != "undefined") return new XMLHttpRequest();
					if (typeof ActiveXObject != "undefined")
						for (t = 0; t < 3; t += 1) {
							n = o[t];
							try {
								e = new ActiveXObject(n);
							} catch (r) {}
							if (e) {
								o = [n];
								break;
							}
						}
					return e;
				},
			parseName: function (e) {
				var t,
					n,
					r,
					i = !1,
					s = e.indexOf("."),
					o = e.indexOf("./") === 0 || e.indexOf("../") === 0;
				return (
					s !== -1 && (!o || s > 1)
						? ((t = e.substring(0, s)), (n = e.substring(s + 1, e.length)))
						: (t = e),
					(r = n || t),
					(s = r.indexOf("!")),
					s !== -1 &&
						((i = r.substring(s + 1) === "strip"), (r = r.substring(0, s)), n ? (n = r) : (t = r)),
					{
						moduleName: t,
						ext: n,
						strip: i,
					}
				);
			},
			xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,
			useXhr: function (e, n, r, i) {
				var s,
					o,
					u,
					a = t.xdRegExp.exec(e);
				return a
					? ((s = a[2]),
					  (o = a[3]),
					  (o = o.split(":")),
					  (u = o[1]),
					  (o = o[0]),
					  (!s || s === n) &&
							(!o || o.toLowerCase() === r.toLowerCase()) &&
							((!u && !o) || u === i))
					: !0;
			},
			finishLoad: function (e, n, r, i) {
				(r = n ? t.strip(r) : r), d.isBuild && (p[e] = r), i(r);
			},
			load: function (e, n, r, i) {
				if (i && i.isBuild && !i.inlineText) {
					r();
					return;
				}
				d.isBuild = i && i.isBuild;
				var s = t.parseName(e),
					o = s.moduleName + (s.ext ? "." + s.ext : ""),
					u = n.toUrl(o),
					a = d.useXhr || t.useXhr;
				if (u.indexOf("empty:") === 0) {
					r();
					return;
				}
				!f || a(u, l, c, h)
					? t.get(
							u,
							function (n) {
								t.finishLoad(e, s.strip, n, r);
							},
							function (e) {
								r.error && r.error(e);
							}
					  )
					: n([o], function (e) {
							t.finishLoad(s.moduleName + "." + s.ext, s.strip, e, r);
					  });
			},
			write: function (e, n, r, i) {
				if (p.hasOwnProperty(n)) {
					var s = t.jsEscape(p[n]);
					r.asModule(e + "!" + n, "define(function () { return '" + s + "';});\n");
				}
			},
			writeFile: function (e, n, r, i, s) {
				var o = t.parseName(n),
					u = o.ext ? "." + o.ext : "",
					a = o.moduleName + u,
					f = r.toUrl(o.moduleName + u) + ".js";
				t.load(
					a,
					r,
					function (n) {
						var r = function (e) {
							return i(f, e);
						};
						(r.asModule = function (e, t) {
							return i.asModule(e, f, t);
						}),
							t.write(e, a, r, s);
					},
					s
				);
			},
		};
		if (
			d.env === "node" ||
			(!d.env &&
				typeof process != "undefined" &&
				process.versions &&
				!!process.versions.node &&
				!process.versions["node-webkit"])
		)
			(n = require.nodeRequire("fs")),
				(t.get = function (e, t, r) {
					try {
						var i = n.readFileSync(e, "utf8");
						i.indexOf("﻿") === 0 && (i = i.substring(1)), t(i);
					} catch (s) {
						r && r(s);
					}
				});
		else if (d.env === "xhr" || (!d.env && t.createXhr()))
			t.get = function (e, n, r, i) {
				var s = t.createXhr(),
					o;
				s.open("GET", e, !0);
				if (i) for (o in i) i.hasOwnProperty(o) && s.setRequestHeader(o.toLowerCase(), i[o]);
				d.onXhr && d.onXhr(s, e),
					(s.onreadystatechange = function (t) {
						var i, o;
						s.readyState === 4 &&
							((i = s.status || 0),
							i > 399 && i < 600
								? ((o = new Error(e + " HTTP status: " + i)), (o.xhr = s), r && r(o))
								: n(s.responseText),
							d.onXhrComplete && d.onXhrComplete(s, e));
					}),
					s.send(null);
			};
		else if (
			d.env === "rhino" ||
			(!d.env && typeof Packages != "undefined" && typeof java != "undefined")
		)
			t.get = function (e, t) {
				var n,
					r,
					i = "utf-8",
					s = new java.io.File(e),
					o = java.lang.System.getProperty("line.separator"),
					u = new java.io.BufferedReader(
						new java.io.InputStreamReader(new java.io.FileInputStream(s), i)
					),
					a = "";
				try {
					(n = new java.lang.StringBuffer()),
						(r = u.readLine()),
						r && r.length() && r.charAt(0) === 65279 && (r = r.substring(1)),
						r !== null && n.append(r);
					while ((r = u.readLine()) !== null) n.append(o), n.append(r);
					a = String(n.toString());
				} finally {
					u.close();
				}
				t(a);
			};
		else if (
			d.env === "xpconnect" ||
			(!d.env && typeof Components != "undefined" && Components.classes && Components.interfaces)
		)
			(r = Components.classes),
				(i = Components.interfaces),
				Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),
				(s = "@mozilla.org/windows-registry-key;1" in r),
				(t.get = function (e, t) {
					var n,
						o,
						u,
						a = {};
					s && (e = e.replace(/\//g, "\\")), (u = new FileUtils.File(e));
					try {
						(n = r["@mozilla.org/network/file-input-stream;1"].createInstance(
							i.nsIFileInputStream
						)),
							n.init(u, 1, 0, !1),
							(o = r["@mozilla.org/intl/converter-input-stream;1"].createInstance(
								i.nsIConverterInputStream
							)),
							o.init(
								n,
								"utf-8",
								n.available(),
								i.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER
							),
							o.readString(n.available(), a),
							o.close(),
							n.close(),
							t(a.value);
					} catch (f) {
						throw new Error(((u && u.path) || "") + ": " + f);
					}
				});
		return t;
	}),
	define("text!popups/authError.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div class="popup__title">Внимание</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text popup__text_server">\n                <div class="popup__text-main"><%=message%></div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("popups/authError", ["popupWidget", "text!popups/authError.html!strip"], function (e, t) {
		var n = e.extend({
			template: _.template(t),
			tagName: "div",
			className: "popup-wrapper",
			initialize: function () {
				this.render();
			},
			beforeRender: function () {
				return $("#cover").show(), this;
			},
		});
		return n;
	}),
	define("models/player", ["gate", "backbone", "application"], function (e, t, n) {
		var r = t.Model.extend({
			level: function (e) {
				var t = n.methods.levelForUwins(e.uwins),
					r = n.methods.levelNameByLevel(t);
				return {
					value: t,
					name: r,
				};
			},
		});
		return r;
	}),
	define(
		"models/user",
		[
			"gate",
			"application",
			"status",
			"controllers/analytic",
			"controllers/gameanalytics",
			"collections/popups",
			"popups/authError",
			"models/player",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = u.extend({
					socialDeferred: n("socialId"),
					initialize: function () {
						this.listenToOnce(e, "storage.get.previousUserState", function (e) {
							e.length > 0 &&
								(console.warn("user.restore from storage", e),
								this.setAuthInformation(JSON.parse(e), {
									silent: !0,
								}));
						}),
							e.storage.get("previousUserState", !0);
					},
					setAuthInformation: function (e, n) {
						var r = n && n.silent;
						if (e.state != "error") {
							(t.params.userCommonProperties = e.userCommonProperties),
								(t.params.services = e.services),
								(t.params.campaignTargets = e.campaignTargets),
								(t.params.socialText = e.socialText),
								(t.user = {
									id: e.id,
								});
							var i = _.clone(e);
							(i.level = this.level(e)), this.set(i, n), this.saveUserToStorage();
						} else
							e.hasOwnProperty("errorText") || (e.errorText = "Ошибка авторизации"),
								new o({
									model: {
										message: e.errorText,
									},
								});
						r || this.trigger("auth", this);
					},
					saveUserToStorage: function () {
						var t = _.pick(
							this.toJSON(),
							"id",
							"playerName",
							"balance",
							"rating",
							"fullVersion",
							"trialVersion",
							"trialExpireTime"
						);
						e.storage.set("previousUserState", JSON.stringify(t), !0);
					},
					setUserInfo: function (e, t) {
						var n = _.clone(e);
						(n.level = this.level(e)), this.set(n, t), this.saveUserToStorage();
					},
					checkProVersion: function () {
						return this.get("fullVersion") || this.get("trialVersion") ? !0 : !1;
					},
				}),
				f = new a();
			return (
				(e.User = f),
				e.once("auth", function (e) {
					e.state == "success" && (t.params.winsForLevel = e.userCommonProperties.levels),
						f.setAuthInformation(e),
						r.event({
							category: "user_status",
							action: "type",
							label: f.checkProVersion() ? "pro" : "free",
						}),
						i.init(e.id);
				}),
				f
			);
		}
	),
	define(
		"models/wardrobe/bag",
		["backbone", "gate", "status", "controllers/gameanalytics"],
		function (e, t, n, r) {
			var i = e.Model.extend({
				initialize: function () {
					this.listenTo(t, "clothesGetBag", function (e) {
						e.state != "error" && (this.set(e.clothesUserBag), n("wardrobeBag").resolve());
					}),
						this.listenTo(t, "clothesUpgradeBag", function (e) {
							e.state != "error" &&
								(e.clothesUserBag.cellCount > this.attributes.cellCount &&
									r.sendDesignEvent("Screen_actions:Items:add_pockets"),
								this.set(e.clothesUserBag));
						});
				},
			});
			return new i();
		}
	),
	define(
		"models/wardrobe/appearanceItems",
		["backbone", "gate", "status", "application"],
		function (e, t, n, r) {
			var i = e.Model.extend({
				initialize: function () {
					var e = this;
					t.once("clothesGetAppearanceItems", function (t) {
						e.set(t.clothesItems), n("wardrobeAppearanceItems").resolve();
					});
				},
				set: function (t, n) {
					var i = {
							bodyList: [],
							eyesList: [],
							mouthList: [],
						},
						s,
						o,
						u = r.params.wardrobeBaseItemType;
					if (_.isArray(t)) for (s = 0; s < t.length; s++) (o = t[s]), i[o.group + "List"].push(o);
					e.Model.prototype.set.apply(this, [i, n]);
				},
			});
			return new i();
		}
	),
	define("models/wardrobe/patterns", ["backbone", "gate", "status"], function (e, t, n) {
		var r = e.Model.extend({
			initialize: function () {
				this.listenTo(t, "clothesPatternsGetInfo", function (e) {
					e.state != "error" && (this.set(e.data), n("wardrobePatterns").resolve());
				}),
					this.listenTo(t, "clothesPatternsInfo", function (e) {
						if (e.state != "error") {
							var t = e.data,
								n = _.findWhere(this.attributes, {
									category: t.category,
								});
							(n.currentCount = t.currentCount), this.trigger("change");
						}
					});
			},
			getCurrentCountByCategory: function (e) {
				return _.findWhere(this.attributes, {
					category: e,
				}).currentCount;
			},
			getMaxCountByCategory: function (e) {
				return _.findWhere(this.attributes, {
					category: e,
				}).maxCount;
			},
		});
		return new r();
	}),
	define("models/wardrobe/copyCraftSlots", ["gate", "status"], function (e, t) {
		var n = Backbone.Model.extend({
			initialize: function () {
				this.listenTo(e, "clothesCopyCraftGetUserSlots", function (e) {
					e.state != "error" && (this.setInfo(e), t("wardrobeCopyCraftSlots").resolve());
				}),
					this.listenTo(
						e,
						"clothesCopyCraftStart clothesCopyCraftBoost clothesCopyCraftFinish clothesCopyCraftClearSlot",
						function (e) {
							this.updateSlotData(e.data);
						}
					),
					t("auth").done(function () {
						e.clothesCopyCraftGetUserSlots();
					});
			},
			setInfo: function (e, t) {
				e.state != "error" && this.set(e.data, t);
			},
			updateSlotData: function (e) {
				console.log("updateSlotData: ", e);
				var t = _.findWhere(this.get("slots"), {
					userItemSlotId: e.userItemSlotId,
				});
				_.extend(t, e), this.trigger("change");
			},
			getCreatingItems: function () {
				var e,
					t = [],
					n = this.get("slots"),
					r;
				for (e = 0; e < n.length; e += 1) (r = n[e]), r.clothesItem && t.push(r.clothesItem.itemId);
				return t;
			},
			getDataForBadge: function () {
				var e,
					t = 0,
					n,
					r = this.get("slots"),
					i = [],
					s;
				for (e = 0; e < r.length; e += 1)
					(s = r[e]),
						s.makingFinishTime != 0 &&
							((n = s.makingFinishTime - moment().format("X")),
							n <= 0 ? t++ : i.push(s.makingFinishTime));
				return {
					count: t,
					ts: i.length ? _.min(i) : 0,
				};
			},
		});
		return new n();
	}),
	define("models/wardrobe/copyCraftParams", ["gate", "status"], function (e, t) {
		var n = Backbone.Model.extend({
			initialize: function () {
				this.listenTo(e, "clothesCopyCraftGetParams", function (e) {
					e.state != "error" && this.setInfo(e);
				}),
					t("auth").done(function () {
						e.clothesCopyCraftGetParams();
					});
			},
			setInfo: function (e, t) {
				e.state != "error" && this.set(e, t);
			},
			getCreateCost: function (e) {
				var t = _.findWhere(this.get("data"), {
					clothesCategory: e,
				});
				return t.cost.papers || 0;
			},
			getInstantCreationCost: function (e) {
				var t = _.findWhere(this.get("data"), {
					clothesCategory: e,
				});
				return t.instantCreationCosts.coins || 0;
			},
		});
		return new n();
	}),
	define("models/wardrobe/shop", ["backbone", "gate", "status"], function (e, t, n) {
		var r = e.Model.extend({
			initialize: function () {
				this.listenTo(t, "clothesShopGetInfo", function (e) {
					e.state != "error" &&
						(this.set({
							tsExpire: e.shopInfo.tsExpire,
						}),
						n("wardrobeShop").resolve());
				});
			},
		});
		return new r();
	}),
	define(
		"controllers/wardrobe",
		[
			"backbone",
			"gate",
			"status",
			"application",
			"collections/popups",
			"collections/wardrobe/baseItems",
			"collections/wardrobe/activeItems",
			"collections/wardrobe/bagItems",
			"collections/wardrobe/shopItems",
			"collections/wardrobe/sets",
			"models/gamePart",
			"models/user",
			"models/wardrobe/bag",
			"models/wardrobe/appearanceItems",
			"models/wardrobe/patterns",
			"models/wardrobe/copyCraftSlots",
			"models/wardrobe/copyCraftParams",
			"models/wardrobe/shop",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g) {
			var y = s,
				b = o,
				w = u,
				E = f,
				S = a,
				x = {
					isAvailable: function () {
						return l.get("clothes") ? l.get("clothes").isAvailable : !1;
					},
					getBaseItems: function () {
						return y;
					},
					getActiveItems: function () {
						return b;
					},
					getBagItems: function () {
						return w;
					},
					getSets: function () {
						return E;
					},
					getShopItems: function () {
						return S;
					},
					updateCollections: function (e) {
						console.log("updateCollections data: ", e);
						var t,
							n,
							r = e.clothesItemsInfo,
							i = e.action,
							s = !1;
						for (t = 0; t < r.length; t += 1) {
							n = r[t];
							if (i == "clothesNewItem")
								switch (n.active) {
									case !1:
										w.remove(n.id), w.add(n);
										break;
									case !0:
										b.remove(n.id), b.add(n);
								}
							else if (n.isRemoved && n.category != 0) b.remove(n.id), w.remove(n.id);
							else if (n.category != 0)
								switch (n.active) {
									case !1:
										b.remove(n.id), w.add(n);
										break;
									case !0:
										w.remove(n.id), b.add(n);
								}
							else {
								s = !0;
								switch (n.active) {
									case !1:
										y.remove(n.group);
										break;
									case !0:
										y.add(n);
								}
							}
						}
						s && this.trigger("baseItemsUpdated");
					},
					putOnItem: function (e) {
						var n = w.get(e);
						t.clothesPutOnItem([
							{
								id: e,
								itemId: n.get("itemId"),
							},
						]);
					},
					takeOffItem: function (e) {
						var n = b.get(e);
						t.clothesTakeOffItem(e, n.get("itemId"));
					},
					levelUpItem: function (e) {
						var t = e.active,
							n = e.id,
							r =
								b.findWhere({
									id: n,
								}) ||
								w.findWhere({
									id: n,
								}),
							i = r.get("setInfo");
						e.setInfo = i;
						switch (t) {
							case !0:
								b.remove(n), b.add(e);
								break;
							case !1:
								w.remove(n), w.add(e);
						}
					},
					destroyItem: function (e) {
						var t,
							n = e.destroy,
							r = e.new;
						for (t = 0; t < n.length; t += 1) b.remove(n[t].id), w.remove(n[t].id);
						for (t = 0; t < r.length; t += 1) w.add(r[t]);
					},
					destoryItemCopies: function (e) {
						console.log("data: ", e);
						var t, n;
						for (t = 0; t < e.length; t += 1) {
							(n = e[t].active), console.log("isActive: ", n), w.remove(e[t].id), b.remove(e[t].id);
							if (e[t].level > 1 || (e[t].level == 1 && e[t].copiesCount > 0))
								switch (n) {
									case !1:
										w.add(e[t]);
										break;
									case !0:
										b.add(e[t]);
								}
							console.log("BagItems: ", w), console.log("ActiveItems: ", b);
						}
					},
					markedItemsAsViewed: function (e, t) {
						var n, r, i, s;
						console.log("context: ", t);
						switch (t) {
							case "set":
								r = b;
								break;
							case "bag":
								r = w;
						}
						for (n = 0; n < e.length; n += 1)
							(i = r.get(e[n])),
								(s = _.clone(i.attributes)),
								(s.isViewed = !0),
								i.set(s, {
									silent: !0,
								});
						r.trigger("update");
					},
					rewardTypes: {
						emptyBoosterConst: "",
						clanRateClothesBoosterConst: "clan",
						clanGrailDefenseScoresRateBoosterConst: "defense",
						clanGrailAttackScoresRateBoosterConst: "attack",
						coinsBoosterConst: "coins",
						lifeCountBoosterConst: "lifes",
						lifeTimeIntervalBoosterConst: "time",
						clanWordScoreClientBoosterConst: "words",
						ratingGameBoosterConst: "rating",
						libraryWisdomBoosterConst: "book",
					},
					formatRewardBoost: function (e) {
						var t = e.params,
							n = t.rate ? "rate" : "count",
							r = t.rate || t.count;
						return n == "rate"
							? (r > 1 ? "+" : "") + Math.round((r - 1) * 100 * 10) / 10 + "%"
							: "+" + r;
					},
					getRewards: function () {
						var e = [],
							t = this.isFullSet(b.models),
							n = t ? b.models[0].get("setInfo").id : null;
						return (
							b.each(function (t) {
								t.get("rewards").forEach(function (t) {
									e.push(t);
								});
							}),
							E.each(function (t) {
								t.get("isActivePassiveReward") &&
									(t.get("rewardsPassive").forEach(function (t) {
										e.push(t);
									}),
									t.get("id") == n &&
										t.get("rewardsActive").forEach(function (t) {
											e.push(t);
										}));
							}),
							this.combineRewardsParams(JSON.parse(JSON.stringify(e)))
						);
					},
					combineRewardsParams: function (e) {
						var t = [],
							n,
							r = !1,
							i;
						return (
							e.forEach(function (e) {
								(r = e.params.letters),
									r
										? t.length &&
										  ((i = _.filter(t, function (t) {
												return t.type == e.type && t.params.letters == e.params.letters;
										  })[0]),
										  (n = i ? _.findWhere(t, i) : i))
										: (n = _.findWhere(t, {
												type: e.type,
										  })),
									n == undefined
										? t.push(e)
										: n.params.rate
										? (n.params.rate *= e.params.rate)
										: (n.params.count += e.params.count);
							}),
							t
						);
					},
					showBagPopup: function (e) {
						var e = e ? e : h.get("isUpgradable") ? "expand" : "full";
						i.add({
							type: "wardrobe.bag",
							params: {
								template: e,
								data: h,
							},
						});
					},
					isFullBag: function () {
						return h.get("cellCount") <= w.length;
					},
					isFullSet: function (e) {
						var t = !1;
						if (e.length == 4 && e[0].get("setInfo")) {
							var n = e[0].get("setInfo").id;
							t = _.every(e, function (e) {
								return e.get("setInfo") ? e.get("setInfo").id == n : !1;
							});
						}
						return t;
					},
					checkingItemForMaxLevel: function (e) {
						var t = e.get("levelSettings");
						return t
							? e.get("level") == t.maxLevel || e.get("rewards")[0].type == "emptyBoosterConst"
								? !0
								: !1
							: !1;
					},
					checkingItemForUpgradable: function (t) {
						if (!t) return;
						var t = t instanceof e.Model ? t.toJSON() : t,
							n = t.category,
							r = t.levelSettings;
						if (!r || t.level == r.maxLevel) return !1;
						var i = t.copiesCount,
							s = d.getCurrentCountByCategory(n),
							o = r.nextLevelCopiesCount,
							u = r.nextLevelCost.clothesPatterns.cost;
						return i >= o && s >= u ? !0 : !1;
					},
					getItemTitle: function (e, t) {
						var n = r.params.wardrobeItemType,
							i = r.params.wardrobeItemTypeLabel,
							s = r.params.wardrobeItemRarityLabel,
							o = n.indexOf(e),
							u = s[t][o],
							a = i[o];
						return u + " " + a;
					},
					comparatorForRare: function (e) {
						var t = {
							6: 0,
							4: 1,
							3: 2,
							2: 3,
							1: 4,
							5: 5,
							0: 6,
						};
						return t[e.get("category")];
					},
					comparatorForLevel: function (e) {
						return -e.get("level");
					},
					buyItems: function (e, n) {
						t.clothesSetGetInfo(),
							e.forEach(function (e) {
								S.remove(e.userShopItemId), S.add(e);
							}),
							_.isEmpty(n) ||
								i.add({
									type: "reward",
									params: {
										reward: n,
										context: "wardrobeShop",
									},
								});
					},
				};
			return (
				_.extend(x, e.Events),
				n("auth").done(function () {
					t.clothesGetAppearanceItems(["body", "mouth", "eyes"]),
						t.clothesGetActiveItems(),
						t.clothesGetBag(),
						t.clothesGetBagItems(),
						t.clothesSetGetInfo(),
						t.clothesPatternsGetInfo(),
						t.clothesShopGetInfo();
				}),
				n("wardrobe")
					.dependence([
						"wardrobeAppearanceItems",
						"wardrobeActiveItems",
						"wardrobeBag",
						"wardrobeBagItems",
						"wardrobePatterns",
						"wardrobeSets",
						"wardrobeCopyCraftSlots",
						"wardrobeShop",
						"wardrobeShopItems",
					])
					.done(function () {
						n("wardrobe").resolve();
					}),
				x.listenTo(t, "boxInfo", function (e) {
					i.add({
						type: "reward",
						params: {
							reward: e.boxInfo.reward,
							context: "boxInfo",
						},
					});
				}),
				x.listenTo(t, "clothesGetActiveItems", function (e) {
					if (e.state != "error") {
						var t = _.filter(e.clothesItems, function (e) {
								return e.category != 0;
							}),
							r = _.filter(e.clothesItems, function (e) {
								return e.category == 0;
							});
						b.set(t), n("wardrobeActiveItems").resolve(), y.set(r);
					}
				}),
				x.listenTo(t, "clothesGetBagItems", function (e) {
					e.state != "error" && (w.set(e.clothesItems), n("wardrobeBagItems").resolve());
				}),
				x.listenTo(t, "clothesShopGetInfo", function (e) {
					if (e.state != "error") {
						S.reset();
						if (purchase) S.set(e.shopInfo.items);
						else {
							var t = [];
							e.shopInfo.items.forEach(function (e) {
								e.regularCost && e.regularCost.coins && t.push(e);
							}),
								S.set(t);
						}
						n("wardrobeShopItems").resolve();
					}
				}),
				x.listenTo(t, "clothesShopBuyItem", function (e) {
					e.state != "error" && x.buyItems(e.clothesUserShopItem, e.reward);
				}),
				x.listenTo(t, "paymentInfo", function (e) {
					if (e.state != "error") {
						var t = e.data.purchaseData;
						t && t.clothesUserShopItem && x.buyItems(t.clothesUserShopItem, t.reward);
					}
				}),
				x.listenTo(t, "clothesSetGetInfo", function (e) {
					e.state != "error" && (E.set(e.clothesSetInfo), n("wardrobeSets").resolve());
				}),
				x.listenTo(t, "clothesTakeOffItem", function (e) {
					e.state != "error" && x.updateCollections(e);
				}),
				x.listenTo(t, "clothesPutOnItem", function (e) {
					e.state != "error" && x.updateCollections(e);
				}),
				x.listenTo(t, "clothesItemsInfo", function (e) {
					e.state != "error" && x.updateCollections(e);
				}),
				x.listenTo(t, "clothesItemLevelUp", function (e) {
					e.state != "error" && x.levelUpItem(e.data);
				}),
				x.listenTo(t, "clothesDestroyItem", function (e) {
					e.state != "error" && x.destroyItem(e.clothesItemsInfo);
				}),
				x.listenTo(t, "clothesDestroyItemCopies", function (e) {
					e.state != "error" && x.destoryItemCopies(e.clothesItemsInfo);
				}),
				x
			);
		}
	),
	define("models/appState", ["backbone"], function (e) {
		var t = e.Model.extend({
			state: [],
			path: [],
			notAvailableAsPrevious: ["game", "clanBattle", "clanSafeGame"],
			isAvailableAsPrevious: function (e) {
				return _.indexOf(this.notAvailableAsPrevious, e) == -1 ? !0 : !1;
			},
			clearState: function () {
				this.state = [];
			},
			setScreen: function (e, t) {
				_.isString(e) &&
					(e = {
						screen: e,
					}),
					t || (t = {}),
					_.extend(t, {
						silent: !0,
					}),
					this.clear().set(e, t),
					this.trigger("screenChange", {
						isNew: !0,
					});
				var n = e.screen,
					r = {
						attributes: e,
						options: t,
					};
				this.isAvailableAsPrevious(n) &&
					(this.path.length == 0 && this.path.push(r),
					this.path.length > 0 && n != _.last(this.path).attributes.screen && this.path.push(r)),
					this.path.length > 100 && (this.path = _.rest(this.path));
			},
			pushState: function () {
				this.state.push(this.screenObj);
			},
			back: function () {
				console.warn("AppState.back state:", this.state);
				if (this.state.length > 0) {
					var e = _.last(this.state);
					(this.screenObj = e),
						this.screenObj.initialize(),
						this.screenObj.delegateEvents(this.screenObj.events),
						(this.state = _.initial(this.state)),
						this.trigger("screenChange", {
							isNew: !1,
						});
				}
			},
			previousScreen: function () {
				if (this.path.length > 1) {
					this.path = _.initial(this.path);
					var e = _.last(this.path);
					this.clear().set(e.attributes, e.options),
						this.trigger("screenChange", {
							isNew: !0,
						});
				}
			},
			clearPath: function () {
				this.path = [];
			},
		});
		return new t();
	}),
	define("models/storage", ["backbone", "gate", "status"], function (e, t, n) {
		var r = e.Model.extend({
			initialize: function (e) {
				this.listenTo(this, "change", this.saveToStorage), (this.restoreDeferred = n());
			},
			setStorageInfo: function (e) {
				return (this.storageKey = e.key), (this.prefix = e.prefix), this.restoreFromStorage(), this;
			},
			restoreFromStorage: function () {
				var e = this;
				this.listenToOnce(t, "storage.get." + this.storageKey, function (e) {
					try {
						var t = JSON.parse(e);
						this.set(t, {
							silent: !0,
						}),
							this.restoreDeferred.resolve();
					} catch (n) {
						this.restoreDeferred.resolve();
					}
				}),
					t.storage.get(this.storageKey, this.prefix);
			},
			set: function (t, n) {
				e.Model.prototype.set.apply(this, arguments);
			},
			saveToStorage: function () {
				t.storage.set(this.storageKey, JSON.stringify(this.toJSON()), this.prefix);
			},
		});
		return r;
	}),
	define(
		"controllers/badge/wardrobe",
		[
			"gate",
			"status",
			"controllers/wardrobe",
			"models/appState",
			"models/storage",
			"models/wardrobe/shop",
			"models/wardrobe/copyCraftSlots",
			"collections/wardrobe/sets",
			"models/user",
		],
		function (e, t, n, r, i, s, o, u, a) {
			function f() {
				var e = this;
				(this.screen = null),
					(this.timer = {}),
					social == "ya"
						? (this.storage = new i().setStorageInfo({
								key: "wardrobeBadge",
						  }))
						: (this.storage = new i().setStorageInfo({
								key: "wardrobeBadge",
								prefix: "socialId",
						  })),
					(this.badgesList = ["shop", "create", "workshop"]),
					t("app").done(function () {
						e.init(), e.addListeners();
					});
			}
			return (
				(f.prototype.getFromStorage = function (e) {
					return this.storage.get(e);
				}),
				(f.prototype.setToStorage = function (e, t) {
					var n = {};
					return (n[e] = t), this.storage.set(n);
				}),
				(f.prototype.init = function () {
					this.initTimer(),
						this.getCreateBadgeData(),
						this.startCreateBadgeTimer(),
						this.getWorkshopBadgeData(),
						this.startWorkshopBadgeTimer();
				}),
				(f.prototype.initTimer = function () {
					var e = this;
					this.badgesList.forEach(function (t) {
						e.timer[t] = null;
					});
				}),
				(f.prototype.addListeners = function () {
					this.onRenderScreen(),
						this.onShopModelChange(),
						this.onCopyCraftModelChange(),
						this.onSetsCollectionUpdate();
				}),
				(f.prototype.onRenderScreen = function () {
					var e = this;
					this.listenTo(r, "screenRender", function () {
						var t = r.get("screen");
						this.screen = t;
						switch (t) {
							case "index":
								e.setMainScreenBadge();
								break;
							case "wardrobe.index":
								e.setIndexScreenBadge();
								break;
							case "wardrobe.shop":
								e.updateShopTS();
						}
					});
				}),
				(f.prototype.onShopModelChange = function () {
					var e = this;
					this.listenTo(s, "change", function () {
						e.screen == "index" && e.setMainScreenBadge(),
							e.screen == "wardrobe.index" && e.renderShopBadge(),
							e.screen == "wardrobe.shop" && e.updateShopTS();
					});
				}),
				(f.prototype.onCopyCraftModelChange = function () {
					var e = this;
					this.listenTo(o, "change", function () {
						e.updateCreateBadgeData();
					});
				}),
				(f.prototype.onSetsCollectionUpdate = function () {
					var e = this;
					this.listenTo(u, "add change remove", function () {
						e.updateWorkshopBadgeData();
					});
				}),
				(f.prototype.setMainScreenBadge = function () {
					if (n.isAvailable()) {
						var e = 0,
							t = $("#mainNavWardrobeBtn").find(".main-top__nav-counter"),
							r = this.checkShopBadge();
						r ? (e += 1) : this.setShopBadgeByTimout(),
							this.createBadgeData && (e += this.createBadgeData.count),
							this.workshopBadgeData && (e += this.workshopBadgeData.count),
							e > 0 && t.show().text(e);
					}
				}),
				(f.prototype.setIndexScreenBadge = function () {
					n.isAvailable() &&
						(this.setShopBadgeAfterRenderScreen(),
						this.setCreateBadgeAfterRenderScreen(),
						this.setWorkshopBadgeAfterRenderScreen());
				}),
				(f.prototype.checkShopBadge = function () {
					var e = this.getFromStorage("shop"),
						t = s.get("tsExpire");
					return !e || e < t;
				}),
				(f.prototype.setShopBadgeByTimout = function () {
					var t = this;
					this.timer.shop && clearTimeout(this.timer.shop),
						(this.timer.shop = setTimeout(function () {
							e.clothesShopGetInfo();
						}, (s.get("tsExpire") - moment().format("X") + 3) * 1e3));
				}),
				(f.prototype.renderShopBadge = function () {
					$("#wardrobeShop").addClass("wardrobe-nav__item_marked");
				}),
				(f.prototype.setShopBadgeAfterRenderScreen = function () {
					var e = this.checkShopBadge();
					e ? this.renderShopBadge() : this.setShopBadgeByTimout();
				}),
				(f.prototype.updateShopTS = function () {
					this.setToStorage("shop", s.get("tsExpire"));
				}),
				(f.prototype.getCreateBadgeData = function () {
					this.createBadgeData = o.getDataForBadge();
				}),
				(f.prototype.checkCreateBadge = function () {
					return this.createBadgeData.count > 0 ? !0 : !1;
				}),
				(f.prototype.setCreateBadgeAfterRenderScreen = function () {
					this.checkCreateBadge() && $("#wardrobeCreate").addClass("wardrobe-nav__item_marked");
				}),
				(f.prototype.renderCreateBadge = function () {
					this.screen == "index" && this.setMainScreenBadge(),
						this.screen == "wardrobe.index" && this.setCreateBadgeAfterRenderScreen();
				}),
				(f.prototype.startCreateBadgeTimer = function () {
					var e = this;
					this.timer.create && clearTimeout(this.timer.create),
						this.createBadgeData.ts != 0 &&
							(this.timer.create = setTimeout(function () {
								e.updateCreateBadgeData();
							}, (this.createBadgeData.ts - moment().format("X") + 3) * 1e3));
				}),
				(f.prototype.updateCreateBadgeData = function () {
					this.getCreateBadgeData(), this.startCreateBadgeTimer(), this.renderCreateBadge();
				}),
				(f.prototype.getWorkshopBadgeData = function () {
					this.workshopBadgeData = u.getDataForBadge();
				}),
				(f.prototype.checkWorkshopBadge = function () {
					return this.workshopBadgeData.count > 0 ? !0 : !1;
				}),
				(f.prototype.setWorkshopBadgeAfterRenderScreen = function () {
					this.checkWorkshopBadge() && $("#wardrobeWorkshop").addClass("wardrobe-nav__item_marked");
				}),
				(f.prototype.renderWorkshopBadge = function () {
					this.screen == "index" && this.setMainScreenBadge(),
						this.screen == "wardrobe.index" && this.setWorkshopBadgeAfterRenderScreen();
				}),
				(f.prototype.startWorkshopBadgeTimer = function () {
					var e = this;
					this.timer.workshop && clearTimeout(this.timer.workshop),
						this.workshopBadgeData.ts != 0 &&
							(this.timer.workshop = setTimeout(function () {
								e.updateWorkshopBadgeData();
							}, (this.workshopBadgeData.ts - moment().format("X") + 3) * 1e3));
				}),
				(f.prototype.updateWorkshopBadgeData = function () {
					this.getWorkshopBadgeData(), this.startWorkshopBadgeTimer(), this.renderWorkshopBadge();
				}),
				_.extend(f.prototype, Backbone.Events),
				new f()
			);
		}
	),
	define("models/dailyWord", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return new t();
	}),
	define(
		"controllers/dailyWord",
		[
			"backbone",
			"gate",
			"status",
			"collections/popups",
			"models/appState",
			"models/dailyWord",
			"models/user",
		],
		function (e, t, n, r, i, s, o) {
			var u = "_dailyWord",
				a = {
					timerForUpdateTS: null,
					startTimerForUpdateTS: function (e) {
						var n = (e - moment().format("X") + 1) * 1e3;
						n > 0 &&
							(this.timerForUpdateTS && clearTimeout(this.timerForUpdateTS),
							(this.timerForUpdateTS = setTimeout(function () {
								t.dailyWordGetCurrent();
							}, n)));
					},
					isMenuMarked: !1,
					getCurrentTS: function () {
						return localStorage.getItem(o.get("id") + u);
					},
					setCurrentTS: function (e) {
						localStorage.setItem(o.get("id") + u, e);
					},
					isExpiredCurrentTS: function (e) {
						var t = this.getCurrentTS();
						return _.isNull(t) || (t && t < e) ? !0 : !1;
					},
					goToDictionaryScreen: function () {
						$("#contentLoader").fadeIn(300),
							t.dailyWordGetUserDictionary(),
							this.listenToOnce(t, "dailyWordGetUserDictionary", function (e) {
								$("#contentLoader").fadeOut(300),
									i.setScreen({
										screen: "dailyWord.dictionary",
										params: {
											data: e,
										},
									});
							});
					},
					goToOfferScreen: function () {
						i.setScreen({
							screen: "dailyWord.offer",
						});
					},
				};
			return (
				_.extend(a, e.Events),
				n("auth").done(function () {
					t.dailyWordGetCurrent();
				}),
				a.listenTo(t, "dailyWordGetCurrent", function (e) {
					if (e.state == "success") {
						s.set(e.dailyWord), n("dailyWord").resolve();
						var t = e.dailyWord.tsExpire;
						this.isExpiredCurrentTS(t) && (this.setCurrentTS(t), (this.isMenuMarked = !0)),
							this.startTimerForUpdateTS(t);
					}
				}),
				a
			);
		}
	),
	define("models/notification", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return t;
	}),
	define("collections/notifications", ["backbone", "models/notification"], function (e, t) {
		var n = e.Collection.extend({
			model: t,
		});
		return new n();
	}),
	define("widget", ["backbone"], function (e) {
		var t = e.View.extend({
			el: "",
			model: {},
			viewParam: {},
			widgets: [],
			initialize: function () {},
			initializeWidgets: function () {},
			checkScreenCondition: function () {
				return !0;
			},
			render: function () {
				return this.abstractBeforeRender().selfRender().abstractAfterRender(), this;
			},
			selfRender: function () {
				var t = this.model instanceof e.Model ? this.model.toJSON() : this.model;
				return _.extend(this.viewParam, t), $(this.el).html(this.template(this.viewParam)), this;
			},
			returnableRender: function () {
				var e = this.selfReturnableRender();
				return this.afterReturnableRender(e);
			},
			selfReturnableRender: function () {
				var t = this.model instanceof e.Model ? this.model.toJSON() : this.model;
				return _.extend(this.viewParam, t), this.$el.html(this.template(this.viewParam));
			},
			afterReturnableRender: function (e) {
				return e;
			},
			abstractAfterRender: function () {
				return (
					this.afterRender(),
					this.initializeWidgets(),
					this.renderWidgets(),
					this.afterRenderWidgets(),
					this
				);
			},
			afterRender: function () {},
			afterRenderWidgets: function () {},
			abstractBeforeRender: function () {
				return this.beforeRender(), this;
			},
			beforeRender: function () {},
			renderWidgets: function () {
				if ("widgets" in this)
					for (var e = 0; e < this.widgets.length; e++) this.widgets[e].render();
			},
			renderPopup: function (e) {
				$("#popup").html(""),
					$("#cover").fadeOut(200),
					e && ($("#cover").stop().fadeIn(300), e.render());
			},
			intervalRender: function (e, t, n) {
				this.timer && clearInterval(this.timer);
				if (_.isArray(e)) {
					for (var r = 0; r < e.length; r++) e[r].bind(n), e[r]();
					this.timer = setInterval(function () {
						for (var t = 0; t < e.length; t++) e[t]();
					}, t);
				} else
					_.isFunction(e)
						? (e.bind(n),
						  e(),
						  (this.timer = setInterval(function () {
								e();
						  }, t)))
						: (n[e].bind(n),
						  n[e](),
						  (this.timer = setInterval(function () {
								n[e]();
						  }, t)));
			},
			clearEvents: function () {
				this.timer && clearInterval(this.timer), this.stopListening(), this.undelegateEvents();
				if ("widgets" in this)
					for (var e = 0; e < this.widgets.length; e++) this.widgets[e].clearEvents();
			},
		});
		return t;
	}),
	define("models/chat/message", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return t;
	}),
	define(
		"controllers/chat",
		["backbone", "gate", "status", "models/appState", "models/user", "models/chat/message"],
		function (e, t, n, r, i, s) {
			var o = {
				chats: {},
				unreadMessages: 0,
				cachedMessages: [],
				currentChat: null,
				Status: n,
				chatPrefix: function () {
					return "chat_" + i.get("id") + "_";
				},
				chatsPrefix: function () {
					return "chats_" + i.get("id");
				},
				blockPrefix: function () {
					return "blockOp_" + i.get("id");
				},
				init: function () {
					var e = this;
					n("auth").done(function () {
						e.genChatList(), e.deployCachedMessages();
					}),
						this.listenTo(t, "chatMessage", function (t) {
							n("auth").isReady() ? e.addMessageToChat(t) : e.cachedMessages.push(t);
						}),
						this.listenTo(r, "screenChange", function () {
							var e = r.get("screen");
							if (e != "chat" || e != "chatList") this.currentChat = null;
						});
				},
				genChatId: function (e) {
					return this.chatPrefix() + e;
				},
				genChatList: function () {
					var e = this.getChats();
					if (e !== null && e != []) for (var t = 0; t < e.length; t++) this.chats[e[t]] = new s();
				},
				deployCachedMessages: function () {
					var e = this;
					this.cachedMessages.forEach(function (t) {
						e.addMessageToChat(t);
					}),
						(this.cachedMessages = []);
				},
				addMessageToChat: function (e) {
					if (this.getBlokedOps().hasOwnProperty(e.message.sender.id)) return;
					var t = e.message,
						n = this.genChatId(t.sender.id),
						r = this.getChat(n),
						i = {
							time: t.time,
							message: t.message,
							me: !1,
						};
					r === null
						? (this.createChat(n, t), (this.chats[n] = new s()))
						: ((r.unread = !0), r.messages.push(i), this.updateChat(n, r)),
						this.chats[n].set(i),
						this.currentChat != n &&
							(this.unreadMessages++, this.trigger("newMessage", this.unreadMessages));
				},
				getChats: function () {
					return JSON.parse(localStorage.getItem(this.chatsPrefix()));
				},
				updateChats: function (e) {
					localStorage.setItem(this.chatsPrefix(), JSON.stringify(e));
				},
				getChat: function (e) {
					return JSON.parse(localStorage.getItem(e));
				},
				updateChat: function (e, t) {
					localStorage.setItem(e, JSON.stringify(t));
				},
				createChat: function (e, t, n) {
					var r = this.getChats();
					if (r === null) this.updateChats([e]);
					else {
						if (r.indexOf(e) > -1) return;
						r.push(e), this.updateChats(r);
					}
					this.updateChat(e, {
						recipient: t.sender,
						unread: n ? !1 : !0,
						messages: [
							{
								time: t.time,
								message: t.message,
								me: n || !1,
							},
						],
					});
				},
				deleteChat: function (e) {
					var t = this.getChats();
					t.splice(t.indexOf(e), 1), this.updateChats(t), localStorage.removeItem(e);
				},
				blockOp: function (e) {
					var t = JSON.parse(localStorage.getItem(this.blockPrefix()));
					t === null && (t = {}),
						(t[e.id] = {
							playerName: e.playerName,
							avatarUrl: e.avatarUrl,
							customAvatar: e.customAvatar || [],
						}),
						localStorage.setItem(this.blockPrefix(), JSON.stringify(t));
				},
				unblockOp: function (e) {
					var t = JSON.parse(localStorage.getItem(this.blockPrefix()));
					t.hasOwnProperty(e) &&
						(delete t[e], localStorage.setItem(this.blockPrefix(), JSON.stringify(t)));
				},
				getBlokedOps: function () {
					var e = JSON.parse(localStorage.getItem(this.blockPrefix()));
					return console.warn("chatController.blockedOps", e), e === null ? {} : e;
				},
				resetCounter: function () {
					(this.unreadMessages = 0), this.trigger("newMessage", this.unreadMessages);
				},
			};
			return _.extend(o, e.Events), o.init(), o;
		}
	),
	define(
		"models/stat",
		["backbone", "application", "models/user", "models/player"],
		function (e, t, n, r) {
			var i = r.extend({
				set: function (t, n) {
					var r = _.clone(t);
					(r.currentGame.rounds = _.values(r.currentGame.rounds)),
						(r.currentGame.endedRounds = this.countEndedRounds(t)),
						(r.currentGame.status = this.checkStatus(t)),
						(r.currentGame.score = this.countScore(t)),
						(r.currentGame.isFairGame = this.checkFairGame(t)),
						(r.opponent.level = this.level(t.opponent)),
						(r.currentGame.timer = this.checkTimer(t)),
						e.Model.prototype.set.apply(this, [r, n]);
				},
				checkStatus: function (e) {
					if (e.currentGame.rounds.length === 0) return !1;
					var t = e.currentGame.rounds,
						r = "userTurn",
						i = 1,
						s = e.currentGame.rounds.length;
					for (var o = 1; o <= s; o++)
						if (t[o - 1] && "results" in t[o - 1]) {
							var u = 1;
							t[o - 1].results[e.opponent.id] || ((u = 0), (i = o + 1), (r = "opponentTurn")),
								t[o - 1].results[n.get("id")] || ((u = 0), (i = o), (r = "userTurn")),
								u && o == s && o < e.currentGame.possibleCount && s++;
						} else (i = o), (r = "userTurn");
					return (
						e.currentGame.ratingInfo && ((i = 1), (r = "ended")),
						{
							value: r,
							nextRound: i,
						}
					);
				},
				countEndedRounds: function (e) {
					var t = {
							user: 0,
							opponent: 0,
							both: function () {
								return Math.min(this.user, this.opponent);
							},
							maxFromBoth: function () {
								return Math.max(this.user, this.opponent);
							},
						},
						r = e.currentGame.rounds;
					for (var i = 0; i < r.length; i++)
						"results" in r[i] &&
							(r[i].results[n.get("id")] && t.user++, r[i].results[e.opponent.id] && t.opponent++);
					return t;
				},
				countScore: function (e) {
					var t = {
							user: 0,
							opponent: 0,
						},
						r = e.currentGame.rounds;
					for (var i = 0; i < r.length; i++)
						"results" in r[i] &&
							r[i].results[n.get("id")] &&
							r[i].results[e.opponent.id] &&
							((t.user += r[i].results[n.get("id")].scores),
							(t.opponent += r[i].results[e.opponent.id].scores));
					return t;
				},
				lastRoundId: function () {
					var e,
						t = this.get("currentGame").rounds;
					for (var n = 0; n < t.length; n++) t[n].results || (e = n - 1);
					return e;
				},
				checkFairGame: function (e) {
					return "fairGame" in e.currentGame &&
						"active" in e.currentGame.fairGame &&
						e.currentGame.fairGame.active === !0
						? !0
						: !1;
				},
				checkTimer: function (e) {
					var t = e.currentGame;
					if (t.status.value == "userTurn" && t.rounds[t.status.nextRound - 1]) {
						var r = t.rounds[t.status.nextRound - 1].timeline[n.get("id")];
						return r ? r.start : 0;
					}
					return 0;
				},
			});
			return i;
		}
	),
	define("collections/stat", ["backbone", "gate", "status", "models/stat"], function (e, t, n, r) {
		function u(e) {
			s.setByOpponentId([e.statBetweenUsers]);
			var t = s.getByOpponentId(e.statBetweenUsers.opponent.id);
			o.setGameNotification(t.clone());
		}
		var i = e.Collection.extend({
				model: r,
				setByOpponentId: function (e) {
					for (var t = 0; t < e.length; t++) {
						var n = this.inCollection(e[t]);
						n ? n.set(e[t]) : this.add(e[t]);
					}
					this.trigger("setByOpponentId");
				},
				getByOpponentId: function (e) {
					var t = !1;
					return (
						this.each(function (n) {
							n.get("opponent").id === e && (t = n);
						}),
						t
					);
				},
				getByRoundId: function (e) {
					var t = !1;
					return (
						this.each(function (n) {
							for (var r = 0; r < n.get("currentGame").rounds.length; r++)
								n.get("currentGame").rounds[r].id == e && (t = n);
						}),
						t
					);
				},
				inCollection: function (e) {
					var t = !1;
					return (
						this.each(function (n) {
							n.get("opponent").id == e.opponent.id && (t = n);
						}),
						t
					);
				},
				isOpponentTurn: function (e) {
					var t = !1;
					return (
						this.each(function (n) {
							n.get("opponent").id == e.opponent.id &&
								n.get("currentGame").status.value == "opponentTurn" &&
								(t = !0);
						}),
						t
					);
				},
				cachedGateData: [],
			}),
			s = new i(),
			o = null;
		return (
			require(["controllers/notifications"], function (e) {
				o = e;
			}),
			s.listenTo(t, "gameNotification", function (e) {
				n("auth").isReady() ? u(e) : s.cachedGateData.push(e);
			}),
			s.listenTo(t, "getUserGamesHistory", function (e) {
				s.setByOpponentId(e.history);
			}),
			n("auth").done(function () {
				s.cachedGateData.forEach(function (e) {
					u(e);
				}),
					(s.cachedGateData = []),
					t.getUserGamesHistory();
			}),
			s
		);
	}),
	define("text!widgets/opponent/simple.html!strip", [], function () {
		return '<%\nvar i;\nvar customAvatar = this.model.get(\'customAvatar\');\n%>\n<div class="soundingButton b-games__list__item b-games__list__item_friend">\n    <div class="b-games__list__item__avatar">\n        <div class="userStatButton b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img alt="" src="<%= avatarUrl %>" class="b-user__pic-i">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level.value%>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="userStatButton b-games__list__item__user"><%=playerName%></p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <% if(id!==User.get(\'id\')){\n        print(\'<div class="playWithUserButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_play"></div>\')\n        } %>\n\n    </div>\n</div>';
	}),
	define("text!widgets/opponent/withStat.html!strip", [], function () {
		return '<div class="soundingButton b-games__list__item <% \n    if (currentGame.isFairGame == true && currentGame.status.value != \'ended\') { \n        print(\'b-games__list__item_fair-play\'); } else { \n        print(\'b-games__list__item_play\'); \n    }\n    %>" \n    data-opponent=\'<%= opponent.id %>\' \n    <% if (roundId) { %> data-round=\'<%=roundId%>\' <% } %>\n\n    <% if (timeline) { %> data-timeline=\'<%=timeline%>\' <% } %>\n>\n    <div class="b-games__list__item__avatar">\n        <div class="userStatButton b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n\n        </div>\n        <p class="b-games__list__item__score b-games__list__item__score_<%  stat[User.get(\'id\')] > stat[opponent.id] ? print(\'win\'): print(\'lose\') %>">\n            <%= stat[User.get(\'id\')] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="userStatButton b-games__list__item__user"><%= opponent.playerName %></p>\n\n        <% if(currentGame.status.value==\'ended\'){ %>\n        <p class="b-games__list__item__round">Игра завершена</p>\n        <% } else if (timeline == 0) { %>\n            <p class="b-games__list__item__timeline">Время хода истекло</p>\n        <% } else if (timeline > 0) { %>\n            <p class="b-games__list__item__timeline">До конца хода: <span class="b-games__list__item__timeline__countdown"></span></p>\n        <% } else { %>\n        <p class="b-games__list__item__round">Сыграно <%= currentGame.endedRounds.both() %> из 3 раундов</p>\n        <% } %>\n\n        <p class="b-games__list__item__points">Счёт <%=currentGame.score.user %> : <%=currentGame.score.opponent %></p>\n\n        <p class="b-games__list__item__time">\n            <%\n                var message;\n                if(currentGame.status != \'ended\') {\n                    var resultsCount = 0;\n                    if(currentGame.rounds.length>0){\n                        var results = currentGame.rounds[currentGame.rounds.length-1].results;\n                        if (results !== undefined) {\n                            for (var k in results) {\n                                if (results.hasOwnProperty(k)) {\n                                    ++resultsCount;\n                                }\n                            }\n                        }\n                    }\n                    if(resultsCount == 1) {\n                        if(currentGame.endedRounds.both() == 0){\n                            message = \'Автоудаление через \'\n                        } else {\n                            if (currentGame.status.value == \'userTurn\') {\n                                message = \'Автопроигрыш через \'\n                            } else {\n                                message = \'Автовыигрыш через \'\n                            }\n                        }\n                        print(message + moment.utc(timestamp*1000).add(1,\'days\').fromNow(true));\n                    }\n\n\n                   // print(\'автовыигрыш через \' + Math.round((Date.now()/1000-currentGame.startExpireTime)/(60*60*1000))+\' часа\');\n                }\n            %>\n        </p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <div class="showResultButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_stats"\n           value=\'<% print(JSON.stringify(opponent.socialId)) %>\'></div>\n        <div class="playWithUserButton b-games__list__item__ctrls__btn <%=(currentGame.status.value == \'ended\')?\'b-games__list__item__ctrls__btn_played\':\'b-games__list__item__ctrls__btn_play\'%>"\n           value=\'<% print(JSON.stringify(opponent.socialId)) %>\'></div>\n    </div>\n    <%if(currentGame.status.value==\'ended\'){\n        print(\'<div class="hideGameButton b-games__list__item__delete" style="display: none"><div class="b-games__list__item__delete-btn"></div></div>\');\n    }%>\n</div>';
	}),
	define("text!widgets/opponent/withPosition.html!strip", [], function () {
		return '<div class="soundingButton b-games__list__item">\n    <div class="b-games__list__item__avatar">\n        <div class="userStatButton b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n                <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img alt="" src="<%= avatarUrl %>" class="b-user__pic-i">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level.value%>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="userStatButton b-games__list__item__user"><%= playerName %></p>\n\n        <p class="b-games__list__item__global-points"><% print(rating+\' \'+Application.methods.declension(rating,[\'очко\', \'очка\' , \'очков\'])) %></p>\n\n        <p class="b-games__list__item__place b-games__list__item__place_<%=position%>"><%=position%> место</p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <% if(resultButton){\n        print(\'<div class="showResultButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_stats"></div>\')\n        } %>\n\n        <% if(id!==User.get(\'id\')){\n        print(\'<div class="playWithUserButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_play"></div>\')\n        } %>\n    </div>\n</div>\n<!-- /.b-games__list__item -->';
	}),
	define("text!widgets/opponent/withTourneyPosition.html!strip", [], function () {
		return ' <div class="user-list__item">\n    <div class="user-list__avatar">\n        <div class="b-user userStatButton">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" src="<%= avatarUrl %>" alt="" />\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level.value%>.png" class="b-user__rank">\n        </div>\n    </div>\n    <div class="user-list__data">\n        <div class="user-list__data-name userStatButton"><%= playerName %></div>\n        <div class="user-list__data-points"><% print(scores + \' \' + Application.methods.declension(scores, [\'очко\', \'очка\', \'очков\'])) %></div>\n        <p class="user-list__data-place user-list__data-place_group<%= position %>"><%= position %> место</p>\n    </div>\n    <div class="user-list__ctrls">\n        <% if (id !== User.get(\'id\')) {\n            print(\'<div class="playWithUserButton button button_play"></div>\')\n        } %>\n    </div>\n</div>\n<!-- /.user-list__item -->';
	}),
	define("text!widgets/opponent/withPush.html!strip", [], function () {
		return '<div class="soundingButton b-games__list__item <% if (currentGame.isFairGame !== true) { print(\'b-games__list__item_play\'); } else { print(\'b-games__list__item_fair-play\'); } %>">\n    <div class="b-games__list__item__avatar">\n        <div class="userStatButton b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n        <p class="b-games__list__item__score b-games__list__item__score_<%  stat[User.get(\'id\')] > stat[opponent.id] ? print(\'win\'): print(\'lose\') %>">\n            <%= stat[User.get(\'id\')] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="userStatButton b-games__list__item__user"><%= opponent.playerName %></p>\n\n        <p class="b-games__list__item__round">Сыграно <%= currentGame.endedRounds.both() %> из 3 раундов</p>\n\n        <p class="b-games__list__item__points">\n               Счёт <%=currentGame.score.user %> : <%=currentGame.score.opponent %>\n        </p>\n\n        <p class="b-games__list__item__time">\n            <%\n                var message;\n                if(currentGame.status != \'ended\') {\n                    var resultsCount = 0;\n                    if(currentGame.rounds.length>0){\n                        var results = currentGame.rounds[currentGame.rounds.length-1].results;\n                        if (results !== undefined) {\n                            for (var k in results) {\n                                if (results.hasOwnProperty(k)) {\n                                    ++resultsCount;\n                                }\n                            }\n                        }\n                    }\n                    if(resultsCount == 1) {\n                        if(currentGame.endedRounds.both() == 0){\n                            message = \'Автоудаление через \'\n                        } else {\n                            if (currentGame.status.value == \'userTurn\') {\n                                message = \'Автопроигрыш через \'\n                            } else {\n                                message = \'Автовыигрыш через \'\n                            }\n                        }\n                        print(message + moment.utc(timestamp*1000).add(Application.params.userCommonProperties.gameLifeTime,\'seconds\').fromNow(true));\n                    }\n                }\n            %>\n        </p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <div class="showResultButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_stats"\n           value=\'<% print(JSON.stringify(opponent.socialId)) %>\'></div>\n        <% if (opponent.netType != 9 && opponent.netType != 10) { %>\n        <div class="sendPushToOpponentButton b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_notice"\n           value=\'<% print(JSON.stringify(opponent.socialId)) %>\'></div>\n        <% } %>\n    </div>\n</div>';
	}),
	define("text!widgets/opponent/friendToInvite.html!strip", [], function () {
		return '<div class="soundingButton b-games__list__item">\n    <div class="b-games__list__item__avatar">\n        <div class="b-user">\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" src="<%=photo_50%>" alt="">\n            </div>\n            <div class="b-user__mask"></div>\n        </div>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="b-games__list__item__user"><%=first_name%> <%=last_name%></p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <span class="b-games__list__item__ctrls__invite inviteFriend">пригласить</span>\n    </div>\n</div>';
	}),
	define(
		"widgets/opponent/index",
		[
			"gate",
			"application",
			"widget",
			"moment",
			"models/appState",
			"controllers/chat",
			"models/user",
			"controllers/analytic",
			"controllers/gameanalytics",
			"collections/popups",
			"collections/stat",
			"text!widgets/opponent/simple.html!strip",
			"text!widgets/opponent/withStat.html!strip",
			"text!widgets/opponent/withPosition.html!strip",
			"text!widgets/opponent/withTourneyPosition.html!strip",
			"text!widgets/opponent/withPush.html!strip",
			"text!widgets/opponent/friendToInvite.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m) {
			var g = n.extend({
				templates: {
					opponent: c,
					opponentWithStat: h,
					opponentWithPosition: p,
					opponentWithTourneyPosition: d,
					opponentWithPush: v,
					friendToInvite: m,
				},
				events: {
					"click .userStatButton": "showUserStat",
					"click .playWithUserButton": "playWithUser",
					"click .showResultButton": "showResult",
					"click .inviteFriend": "inviteFriend",
					"click .sendPushToOpponentButton": "sendPushToOpponent",
					"click .hideGameButton": "hideGame",
					"click .chatWithUserButton": "chatWithUser",
					"mouseenter .b-games__list__item": "showHideButton",
					"mouseleave .b-games__list__item": "hideHideButton",
				},
				tagName: "div",
				isNoticeBlocked: !1,
				initialize: function (e) {
					var n = this;
					(this.params = e),
						(this.type = this.params.type || ""),
						(this.screen = this.params.screen || ""),
						(this.template = _.template(this.templates[e.template])),
						(this.gameStatus = e.gameStatus),
						(this.viewParam = {
							resultButton: (function () {
								var e = n.model.has("opponent")
									? n.model.toJSON()
									: {
											opponent: n.model.toJSON(),
									  };
								return l.isOpponentTurn(e) ? !0 : !1;
							})(),
							Application: t,
							User: o,
						}),
						this.params.roundId !== undefined && (this.viewParam.roundId = this.params.roundId),
						this.params.timeline !== undefined
							? (this.viewParam.timeline = this.params.timeline)
							: (this.viewParam.timeline = -1);
				},
				showHideButton: function () {
					$(this.el).find(".hideGameButton").show();
				},
				hideHideButton: function () {
					$(this.el).find(".hideGameButton").hide();
				},
				inviteFriend: function () {
					this.listenToOnce(e, "inviteSuccess", function () {
						this.model.collection.remove(this.model.cid);
					}),
						e.showRequestBox(this.model.get("id"), o),
						a.sendDesignEvent("Screen_actions:Main_screen:invite_friend");
				},
				showUserStat: function () {
					this.sendAnalytic("кнопка Статистика");
					var e = this.model.has("opponent") ? this.model.get("opponent").id : this.model.get("id");
					this.screen == "main" && a.sendDesignEvent("Screen_actions:Main_screen:opponent_profile"),
						i.setScreen({
							screen: "userInfo",
							params: {
								id: e,
							},
						});
				},
				playWithUser: function () {
					var e = "";
					if (this.checkGameAvailable()) {
						this.sendAnalytic("Играть");
						if (this.type) {
							a.sendDesignEvent("Screen_actions:Main_screen:start_" + this.type);
							switch (this.type) {
								case "ended":
									e = "finished";
								case "with_friend":
									e = "friends";
							}
						}
						this.screen == "profile" &&
							(a.sendDesignEvent("Screen_actions:Player_profile:play"), (e = "profile"));
						var t = this.model.has("opponent") ? this.model.get("opponent") : this.model.toJSON();
						i.setScreen({
							screen: "pvp.game",
							params: {
								opponent: t,
								method: e,
							},
						});
					}
				},
				sendAnalytic: function (e) {
					var t;
					switch (i.get("screen")) {
						case "finder":
							t = "Найти игрока";
							break;
						case "index":
							t = "Слово за слово";
							break;
						case "topPlayers":
							t = "Рейтинг игроков";
					}
					u.event({
						category: "screen",
						action: t,
						label: e,
					});
				},
				showResult: function () {
					var e = this.model.has("opponent") ? this.model.get("opponent") : this.model;
					this.sendAnalytic("кнопка Результат игры"),
						a.sendDesignEvent("Screen_actions:Main_screen:game_statistics"),
						i.setScreen({
							screen: "pvp.result",
							params: {
								opponent: e,
							},
						});
				},
				hideGame: function () {
					e.clearStat([this.model.get("opponent").id]), l.remove(this.model.cid);
				},
				chatWithUser: function () {
					a.sendDesignEvent("Screen_actions:Player_profile:chat"),
						i.setScreen({
							screen: "chat",
							params: {
								chatId: s.genChatId(this.model.get("id")),
								opponent: _.clone(this.model.attributes),
							},
						});
				},
				sendPushToOpponent: function () {
					if (!this.isNoticeBlocked) {
						(this.isNoticeBlocked = !0),
							this.sendAnalytic("кнопка Напомнить"),
							a.sendDesignEvent("Screen_actions:Main_screen:send_reminder");
						var n = this.model.has("opponent")
								? this.model.toJSON()
								: {
										opponent: this.model.toJSON(),
								  },
							i =
								t.methods.getCookie("rm" + n.opponent.id) !== ""
									? t.methods.getCookie("rm" + n.opponent.id)
									: 0;
						console.warn(r().format("x") > parseInt(i), r().format("x"), parseInt(i)),
							r().format("x") > parseInt(i)
								? (this.listenToOnce(e, "sendReminder", function () {
										f.add({
											type: "text",
											params: {
												header: "Напоминание отправлено! ",
												text: "Игроку придет повторное приглашение в игру.",
												cursiv: "Следующим напоминанием Вы можете воспользоваться через 24 часа.",
											},
										}),
											t.methods.setCookie(
												"rm" + n.opponent.id,
												r().add(1, "day").format("x"),
												"30"
											),
											(this.isNoticeBlocked = !1);
								  }),
								  e.sendReminder(o, n.opponent.id))
								: f.add({
										type: "text",
										params: {
											header: "Ошибка",
											text: "Вы сможете отправить напоминание снова через 24 часа.",
										},
								  });
					}
				},
				checkGameAvailable: function () {
					var e = this.model.has("opponent")
							? this.model.toJSON()
							: {
									opponent: this.model.toJSON(),
							  },
						t = l.inCollection(e);
					return t && t.get("currentGame").status.value == "opponentTurn"
						? (this.sendPushToOpponent(), !1)
						: !0;
				},
			});
			return g;
		}
	),
	define(
		"controllers/achievement",
		[
			"gate",
			"status",
			"controllers/gameanalytics",
			"models/appState",
			"models/storage",
			"models/user",
		],
		function (e, t, n, r, i, s) {
			function o() {
				var t = this;
				this.listenTo(e, "inviteSuccess", this.onFriendSuccessInvite),
					(this.storage = new i().setStorageInfo({
						key: "clientAchievements",
						prefix: "socialId",
					})),
					this.storage.restoreDeferred.done(function () {
						t.checkGameSessionStreak();
					});
			}
			(o.prototype.roundStreak = 0),
				(o.prototype.params = {
					neededGameStreak: 100,
					neededFriends: 5,
					neededCells: 25,
					neededForFastShooter: 30,
					neededGameStreak: 25,
					owlFrom: 1,
					owlTo: 3,
					neededForFox: 5,
				}),
				(o.prototype.clientAchievements = [
					"maximalist",
					"maniac",
					"cobraSpurt",
					"fastShooter",
					"friendly",
					"nonstop",
					"owl",
					"fox",
				]),
				(o.prototype.getProgress = function (e) {
					var t;
					switch (e) {
						case "maniac":
							t = this.storage.get("sessionStreak") / this.params.neededGameStreak;
							break;
						case "friendly":
							var n = this.storage.get("invitedFriends") || [];
							t = n.length / this.params.neededFriends;
							break;
						case "nonstop":
							t = this.roundStreak / this.params.neededGameStreak;
							break;
						default:
							t = 0;
					}
					return t;
				}),
				(o.prototype.achievements = function (e) {
					return s.get("achievements");
				}),
				(o.prototype.unlockAchievement = function (t) {
					this.trigger("unlockAchievement", t), e.unlockAchievement(t);
				}),
				(o.prototype.onFriendSuccessInvite = function (e) {
					this.achievements().friendly || this.checkFriendlyAchievement(e);
				}),
				(o.prototype.onRoundComplete = function (e) {
					this.achievements().nonstop || this.checkNonStopAchievement(),
						this.achievements().owl || this.checkOwlAchievement(),
						this.achievements().cobraSpurt || this.checkCobraSpurtAchievement(e),
						this.achievements().maximalist || this.checkMaximalistAchievement(e),
						this.achievements().fox || this.checkFoxAchievement(e);
				}),
				(o.prototype.checkGameSessionStreak = function () {
					var e = this.storage.get("sessionStreakTime"),
						n = this.storage.get("sessionStreak") || 1,
						r = this;
					!e || moment().diff(moment(e), "days") >= 2
						? ((n = 1),
						  this.storage.set({
								sessionStreakTime: Date.now(),
								sessionStreak: n,
						  }))
						: moment(e).day() !== moment().day() &&
						  (n++,
						  this.storage.set("sessionStreakTime", Date.now()),
						  this.storage.set("sessionStreak", n)),
						n >= this.params.neededGameStreak &&
							t("auth").done(function () {
								r.achievements().maniac || r.unlockAchievement("maniac");
							});
				}),
				(o.prototype.checkFoxAchievement = function (e) {
					var t = e.getResult().tipCount;
					t >= this.params.neededForFox && this.unlockAchievement("fox");
				}),
				(o.prototype.checkMaximalistAchievement = function (e) {
					var t = e.getResult().usedWords,
						n = [];
					for (var r = 0; r < t.length; r++) n = _.union(n, t[r].indexes);
					n.length == this.params.neededCells && this.unlockAchievement("maximalist");
				}),
				(o.prototype.checkCobraSpurtAchievement = function (e) {
					var t = e.getAllWords()[0].word,
						n = _.find(e.getResult().usedWords, function (e) {
							if (e.usedWord == t) return !0;
						});
					n && this.unlockAchievement("cobraSpurt");
				}),
				(o.prototype.checkFastShooterAchievement = function (e) {
					e.getResult().usedWords.length >= this.params.neededForFastShooter &&
						this.unlockAchievement("fastShooter");
				}),
				(o.prototype.checkFriendlyAchievement = function (e) {
					var t = this.storage.get("invitedFriends") || [];
					t.push(e),
						(t = _.uniq(t)),
						this.storage.set("invitedFriends", t),
						t.length >= this.params.neededFriends && this.unlockAchievement("friendly");
				}),
				(o.prototype.checkNonStopAchievement = function () {
					++this.roundStreak == this.params.neededGameStreak && this.unlockAchievement("nonstop");
				}),
				(o.prototype.checkOwlAchievement = function () {
					var e = new Date().getHours();
					e > this.params.owlFrom && e < this.params.owlTo && this.unlockAchievement("owl");
				}),
				(o.prototype.goToAchievementsScreen = function () {
					n.sendDesignEvent("Screen_actions:Side_menu:achievements"),
						$("#contentLoader").fadeIn(300),
						e.getAchievements(),
						this.listenToOnce(e, "getAchievements", function (e) {
							$("#contentLoader").fadeOut(300),
								r.setScreen({
									screen: "achievements",
									params: {
										data: e,
									},
								});
						});
				}),
				_.extend(o.prototype, Backbone.Events);
			var u = new o();
			return u;
		}
	),
	define(
		"models/clan/main",
		["backbone", "gate", "status", "models/appState"],
		function (e, t, n, r) {
			var i = e.Model.extend({
				initialize: function () {
					var e = this;
					n("auth").done(function () {
						t.on("clanCreate", function (n) {
							e.set(n), t.clanGetOwn();
						}),
							t.on("clanJoin", function (t) {
								t.state != "error" && e.set(t);
							}),
							t.on("clanQuite", function () {
								e.attributes.clanData = {};
							}),
							t.on("clanGetOwn", function (t) {
								e.set(t), n("clan").resolve(t);
							}),
							t.on("userClanInfo", function (t) {
								e.update(t);
							}),
							t.on("clanRequestInfo", function (t) {
								n("clan").isReady() && e.update(t);
							}),
							t.clanGetOwn();
					});
				},
				update: function (e) {
					var n = this,
						i,
						s,
						o;
					if (e.state == "error") return !1;
					switch (e.reason) {
						case "clan.update":
							_.extend(this.attributes.clanData.main, e.clanData.main),
								_.extend(this.attributes.clanData.members, e.clanData.members),
								this.set(this.attributes),
								this.trigger("change");
							break;
						case "clanRequest.accept":
							_.isEmpty(this.attributes.clanData) ||
								((s = this.attributes.clanRequestData),
								(i = _.reject(s, function (t) {
									return t.userId == e.clanRequestData[0].userId;
								})),
								(this.attributes.clanRequestData = i)),
								this.trigger("change");
							break;
						case "clanRequest.cancel":
							_.isEmpty(this.attributes.clanData)
								? ((o = this.attributes.userRequestData),
								  (i = _.reject(o, function (t) {
										return t.userId == e.clanRequestData[0].userId;
								  })),
								  (this.attributes.userRequestData = i))
								: ((s = this.attributes.clanRequestData),
								  (i = _.reject(s, function (t) {
										return t.userId == e.clanRequestData[0].userId;
								  })),
								  (this.attributes.clanRequestData = i)),
								this.trigger("change");
							break;
						case "clanRequest.request":
							_.isEmpty(this.attributes.clanData)
								? this.attributes.userRequestData.push(e.clanRequestData[0])
								: e.clanRequestData.forEach(function (e) {
										n.attributes.clanRequestData.push(e);
								  }),
								this.trigger("change");
							break;
						case "clan.exclude":
							this.attributes.clanData.members
								? ((this.attributes.clanData = {}),
								  r.setScreen({
										screen: "index",
								  }),
								  t.clanGetOwn())
								: ((this.attributes.clanData.members = e.clanData.members), this.trigger("change"));
							break;
						case "clan.join":
							_.isEmpty(this.attributes.clanData)
								? t.clanGetOwn()
								: ((this.attributes.clanData = e.clanData), this.trigger("change"));
							break;
						case "clan.quite":
							_.isEmpty(this.attributes.clanData)
								? t.clanGetOwn()
								: ((this.attributes.clanData.main = e.clanData.main),
								  (this.attributes.clanData.members = e.clanData.members),
								  this.trigger("change"));
							break;
						case "clan.result":
							_.extend(this.attributes.clanData.main, e.clanData.main),
								_.extend(this.attributes.clanData.members, e.clanData.members),
								_.extend(this.attributes.clanData.task, e.clanData.task),
								(this.attributes.clanData.task.msToFreeBattle = this.calcMsToFreeBattle()),
								this.set(this.attributes),
								this.trigger("change");
							break;
						case "":
							_.extend(this.attributes.clanData.main, e.clanData.main),
								_.extend(this.attributes.clanData.members, e.clanData.members),
								_.extend(this.attributes.clanData.task, e.clanData.task),
								this.set(this.attributes),
								this.trigger("change");
					}
				},
				timerStart: function () {
					return (
						this.timerEnd(),
						_.isEmpty(this.attributes.clanData)
							? !1
							: (this.timerProcess(),
							  (this.timer = setInterval(this.timerProcess.bind(this), 2e4)),
							  this.timer)
					);
				},
				timerProcess: function () {
					var e = this.attributes.clanData.task;
					if (e.state)
						(e.msToTask = moment(e.tsNextTask * 1e3).diff(moment())), this.trigger("changeTimer");
					else {
						var t = this.calcMsToFreeBattle();
						this.trigger("changeTimer"), t == 0 && this.timerEnd();
					}
				},
				timerEnd: function () {
					this.timer && clearInterval(this.timer);
				},
				calcMsToFreeBattle: function () {
					var e = this.attributes.clanData.task,
						t = e.tsLastBattle,
						n = e.periodFreeBattle;
					if (t) {
						var r = moment(t * 1e3 + n * 1e3).diff(moment());
						return r > 0 ? r : 0;
					}
					return 0;
				},
			});
			return new i();
		}
	),
	define("text!widgets/notifications/element-newAchievement.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <img class="notification__icon-img" src="<%=imageUrl%>" alt="">\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title">Открыто достижение «<%=name%>»</p>\n        <p class="notification__status notification__status_light">Забери награду!</p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="goToAchievementsScreen notification__btn notification__btn_achievements"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n';
	}),
	define("text!widgets/notifications/element-balance.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <span class="b-coin b-coin_notification"><%= difference %></span>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title">Баланс пополнен</p>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n';
	}),
	define("text!widgets/notifications/element-tourney.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon notification__icon_tourney">\n        <img class="notification__icon-img" src="<%= Application.params.staticUrl %>images/app/tournament.png" alt="">\n    </div>\n    <div class="notification__content">\n        <div class="notification__time">\n            Дата\n            окончания <%= this.moment(manage.finishTime, \'X\').format(\'DD.MM.YYYY\') %></div>\n        <div class="notification__title"><%= manage.name %></div>\n\n        <div class="notification__tournament-place">\n            Вы заняли\n            <span class="notification__tournament-place-n notification__tournament-place-n_1">\n                <%= game.rank %>-е место\n            </span>\n        </div>\n        <% var currentReward = this.getCurrentReward();\n        if(currentReward){ %>\n        <div class="notification__tournament-prize">Приз\n            <% if (currentReward.coins > 0) { %>\n            <%= currentReward.coins %><span class="notification__tournament-prize-coin"></span>\n            <% } %>\n            <% if (currentReward.rating > 0 && currentReward.coins > 0) { %>\n            и&nbsp;\n            <% } %>\n            <% if (currentReward.rating > 0) { %>\n            <%= currentReward.rating %><span class="notification__tournament-prize-rate"></span>\n            <% } %>\n        </div>\n        <% } %>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>';
	}),
	define("text!widgets/notifications/element-gameChallenge.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_light">Получен вызов</p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="playWithUserButton notification__btn notification__btn_play"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
	}),
	define("text!widgets/notifications/element-gameDraw.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n        <p class="notification__score notification__score_tie">\n            <%= stat[User.get(\'id\')] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_tie">Ничья!</p>\n        <p class="notification__points">Общий счет\n            <%=currentGame.score.user%>:<%=currentGame.score.opponent%>\n        </p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="showResultButton notification__btn notification__btn_stats"></div>\n        <div class="playWithUserButton notification__btn notification__btn_played"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n\n</div>';
	}),
	define("text!widgets/notifications/element-gameLoss.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n        <p class="notification__score notification__score_lose">\n            <%= stat[User.get(\'id\')] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_lose">Ваш проигрыш в игре!</p>\n        <p class="notification__points">Общий счет\n            <%=currentGame.score.user%>:<%=currentGame.score.opponent%>\n        </p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="showResultButton notification__btn notification__btn_stats"></div>\n        <div class="playWithUserButton notification__btn notification__btn_played"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
	}),
	define("text!widgets/notifications/element-gameRoundEnded.html!strip", [], function () {
		return '<%\n\nvar userId = User.get(\'id\');\nvar currentGameRoundResults = currentGame.rounds[currentGame.rounds.length-1].results;\n\n%>\n\n<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n        <p class="notification__score notification__score_win">\n            <%= stat[userId] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_light"><%= currentGame.endedRounds.both() %>-й раунд завершен</p>\n        <p class="notification__points">\n            Счёт <%= currentGameRoundResults[userId].scores %>:<%= currentGameRoundResults[opponent.id].scores %>\n        </p>\n        <p class="notification__points">\n            Общий счет\n            <%= currentGame.score.user %>:<%= currentGame.score.opponent %>\n        </p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="showResultButton notification__btn notification__btn_stats"></div>\n        <div class="playWithUserButton notification__btn notification__btn_play"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
	}),
	define("text!widgets/notifications/element-gameWin.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n        <p class="notification__score notification__score_win">\n            <%= stat[User.get(\'id\')] %>:<%= stat[opponent.id] %>\n        </p>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_win">Ваш выигрыш в игре!</p>\n        <p class="notification__points">Общий счет <%=currentGame.score.user%>:<%=currentGame.score.opponent%></p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="showResultButton notification__btn notification__btn_stats"></div>\n        <div class="playWithUserButton notification__btn notification__btn_played"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
	}),
	define("text!widgets/notifications/element-gameRoundEndedByOpponent.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status notification__status_light">Противник завершил <%= currentGame.status.nextRound %>-й раунд</p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="playWithUserButton notification__btn notification__btn_play"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
	}),
	define(
		"text!widgets/notifications/element-gameRoundStartedByOpponent.html!strip",
		[],
		function () {
			return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <div class="b-user">\n            <% if (opponent.customAvatar && opponent.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < opponent.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponent.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" alt="" src="<%= opponent.avatarUrl %>">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= opponent.level.value%>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%= opponent.playerName %></p>\n        <p class="notification__status">Противник начал <%= currentGame.endedRounds.opponent + 1 %>-й раунд</p>\n    </div>\n    <div class="notification__ctrls">\n        <div class="playWithUserButton notification__btn notification__btn_play"></div>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>\n					';
		}
	),
	define("text!widgets/notifications/element-clanRequest.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <img class="notification__icon-img" src="<%= clanRequestData[0].clan.avatar %>" alt="" />\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n\n        <% if (reason == \'clanRequest.request\') { %>\n        <p class="notification__title"><%= clanRequestData[0].user.playerName %></p>\n        <p class="notification__status">Желает вступить в клан</p>\n    </div>\n    <div class="notification__ctrls">\n        <a id="clanRequests" class="notification__btn notification__btn_clan"></a>\n        <% } %>\n\n        <% if (reason == \'clanRequest.cancel\') { %>\n        <p class="notification__title"><%= clanRequestData[0].clan.name %></p>\n        <p class="notification__status">Твоя заявка отклонена</p>\n    </div>\n    <div class="notification__ctrls">\n        <a id="clanStart" class="notification__btn notification__btn_clan"></a>\n        <% } %>\n\n        <% if (reason == \'clanRequest.accept\') { %>\n            <p class="notification__title"><%= clanRequestData[0].clan.name %></p>\n            <p class="notification__status">Тебя приняли в клан</p>\n        </div>\n        <div class="notification__ctrls">\n            <a id="clanIndex" class="notification__btn notification__btn_clan"></a>\n        <% } %>\n\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>';
	}),
	define("text!widgets/notifications/element-questCompleted.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <img class="notification__icon-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/quest.png" alt="" />\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title">Выполнено ежедневное задание</p>\n        <p class="notification__status"><a href="#" class="notification__status-text questScreenBtn">Забери награду</a></p>\n    </div>\n    <div class="notification__ctrls">\n        <a class="notification__btn notification__btn_quest questScreenBtn"></a>\n    </div>\n    <a href="#" class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></a>\n</div>';
	}),
	define("text!widgets/notifications/element-chase.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <img class="notification__icon-img" alt="" src="<%=chaseIcon%>">\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title"><%=chaseTitle%></p>\n        <p class="notification__status">\n            +<%=chaseBalanceDiff%>\n            <img class="icon icon_chase" src="<%=chaseBalanceIcon%>" alt="">\n        </p>\n    </div>\n    <div class="notificationDeleteBtn notification__delete"><div class="notification__delete-btn"></div></div>\n</div>';
	}),
	define("text!widgets/notifications/element-seasonPass.html!strip", [], function () {
		return '<div class="notification <%= (displayMode)? \'notification_\' + displayMode : \'\' %>">\n    <div class="notification__icon">\n        <img class="notification__icon-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/season-pass.png" alt="">\n    </div>\n    <div class="notification__content">\n        <p class="notification__time"><%= (moment.utc(time)).fromNow() %></p>\n        <p class="notification__title">Забери награду</p>\n        <p class="notification__status">Пройден уровень в сезоне.</p>\n    </div>\n    <div class="notification__ctrls">\n        <a class="notification__btn notification__btn_seasonPass seasonPassScreenBtn"></a>\n    </div>\n    <div class="notificationDeleteBtn notification__delete">\n        <div class="notification__delete-btn"></div>\n    </div>\n</div>';
	}),
	define(
		"widgets/notifications/element",
		[
			"gate",
			"widgets/opponent/index",
			"application",
			"controllers/achievement",
			"collections/popups",
			"collections/notifications",
			"models/user",
			"models/appState",
			"models/clan/main",
			"text!widgets/notifications/element-newAchievement.html!strip",
			"text!widgets/notifications/element-balance.html!strip",
			"text!widgets/notifications/element-tourney.html!strip",
			"text!widgets/notifications/element-gameChallenge.html!strip",
			"text!widgets/notifications/element-gameDraw.html!strip",
			"text!widgets/notifications/element-gameLoss.html!strip",
			"text!widgets/notifications/element-gameRoundEnded.html!strip",
			"text!widgets/notifications/element-gameWin.html!strip",
			"text!widgets/notifications/element-gameRoundEndedByOpponent.html!strip",
			"text!widgets/notifications/element-gameRoundStartedByOpponent.html!strip",
			"text!widgets/notifications/element-clanRequest.html!strip",
			"text!widgets/notifications/element-questCompleted.html!strip",
			"text!widgets/notifications/element-chase.html!strip",
			"text!widgets/notifications/element-seasonPass.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S) {
			var x = t.extend({
				templates: {
					newAchievement: f,
					balance: l,
					tourney: c,
					gameChallenge: h,
					gameDraw: p,
					gameLoss: d,
					gameRoundEnded: v,
					gameWin: m,
					gameRoundEndedByOpponent: g,
					gameRoundStartedByOpponent: y,
					clanRequest: b,
					questCompleted: w,
					chase: E,
					seasonPass: S,
				},
				events: {
					"click .showPopup": "showPopup",
					"click .notificationDeleteBtn": "deleteNotification",
					"click .playWithUserButton": "playWithUser",
					"click .showResultButton": "showResult",
					"click .goToAchievementsScreen": "goToAchievementsScreen",
					"click #clanRequests": "clanRequests",
					"click #clanStart": "clanStart",
					"click #clanIndex": "clanIndex",
					"click .questScreenBtn": "questScreen",
					"click .seasonPassScreenBtn": "seasonPassScreen",
				},
				tagName: "div",
				className: "notifications__item",
				initialize: function (e) {
					(this.params = e), (this.paramsModel = e.model);
					var t = this.paramsModel.get("type"),
						r = e.displayMode || "";
					r == "block" && (this.el.className = "notification-block__content"),
						console.log("notification params: ", this.params),
						(this.model = this.paramsModel.get("data")),
						console.warn("notification element type", t, "model", this.model);
					var i = this.templates[t];
					(this.template = _.template(i)),
						(this.viewParam = {
							Application: n,
							User: o,
							ClanModel: a,
							time: this.paramsModel.get("time"),
							displayMode: r,
						});
				},
				deleteNotification: function (e) {
					s.remove(this.paramsModel.cid),
						e.stopPropagation ? e.stopPropagation() : (e.cancelBubble = !0);
				},
				getCurrentReward: function () {
					var e = this.model.manage.reward;
					for (var t in e) {
						if (!("ownReward" in this.model.game)) return !1;
						if (e[t].startPosition == this.model.game.ownReward.startPosition) return e[t];
					}
				},
				goToAchievementsScreen: function () {
					s.remove(this.paramsModel.cid), r.goToAchievementsScreen();
				},
				clanRequests: function () {
					s.remove(this.paramsModel.cid),
						u.setScreen({
							screen: "clanUsersList",
							params: {
								type: "requests",
							},
						});
				},
				clanStart: function () {
					s.remove(this.paramsModel.cid),
						e.clanGetUserList(),
						this.listenToOnce(e, "clanGetUserList", function (e) {
							u.setScreen({
								screen: "clanStart",
								params: {
									model: e,
								},
							});
						});
				},
				clanIndex: function () {
					s.remove(this.paramsModel.cid),
						u.setScreen({
							screen: "clan",
						});
				},
				questScreen: function () {
					s.remove(this.paramsModel.cid),
						u.setScreen({
							screen: "quest",
						});
				},
				seasonPassScreen: function () {
					s.remove(this.paramsModel.cid),
						u.setScreen({
							screen: "seasonPass",
						});
				},
			});
			return x;
		}
	),
	define("models/quest", ["backbone", "gate", "status"], function (e, t, n) {
		var r = e.Model.extend({
			initialize: function () {
				var e = this;
				(this.timer = null),
					(this.tipAboutPro = !1),
					t.on("questGetInfo", function (r) {
						e.update(r),
							n("quest").resolve(),
							this.listenTo(t, "reloadSession", function (n) {
								n.hash == "pro" && t.questGetInfo(),
									n.hash.replace("level", "") == e.get("questParams").questLevel &&
										t.questGetInfo();
							});
					}),
					n("auth").done(function () {
						t.questGetInfo();
					});
			},
			update: function (e) {
				this.setTsForActions(e), this.set(e);
			},
			timerProcess: function () {
				var e = this.tsTimeToCreate || this.tsTimeToReplace || 0;
				e && moment(e * 1e3).diff(moment()) < 0 && (t.questGetInfo(), clearInterval(this.timer));
			},
			setTsForActions: function (e) {
				var t = e.questData;
				(this.tsTimeToCreate = t.timeToCreate
					? parseInt(moment().format("X")) + t.timeToCreate
					: 0),
					(this.tsTimeToReplace = t.timeToReplace
						? parseInt(moment().format("X")) + t.timeToReplace
						: 0);
				if (t.timeToCreate || t.timeToReplace)
					this.timer = setInterval(this.timerProcess.bind(this), 3e3);
			},
			getTimeToCreate: function () {
				return moment(this.tsTimeToCreate * 1e3).diff(moment());
			},
			getTimeToReplace: function () {
				return moment(this.tsTimeToReplace * 1e3).diff(moment());
			},
		});
		return new r();
	}),
	define(
		"controllers/notifications",
		[
			"backbone",
			"gate",
			"status",
			"application",
			"models/appState",
			"controllers/gameanalytics",
			"controllers/analytic",
			"collections/popups",
			"collections/notifications",
			"widgets/notifications/element",
			"models/gamePart",
			"models/user",
			"models/clan/main",
			"models/quest",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p) {
			var d = {
				cachedClanRequestInfo: [],
				topBlockDisplayed: !1,
				screensWithoutTopBlock: ["game", "clanBattle", "clanSafeGame"],
				setByType: function (e) {
					switch (e.method) {
						case "gameNotification":
							this.setGameNotification(e);
							break;
						case "userInfo":
							this.setUserInfo(e);
							break;
						case "newAchievement":
							this.setNewAchievement(e);
							break;
						case "tourneyInfo":
							this.setTourneyInfo(e);
							break;
						case "clanRequestInfo":
							this.setClanRequestInfo(e);
							break;
						case "userQuestInfo":
							this.setUserQuestInfo(e);
					}
				},
				setGameNotification: function (e) {
					var t = {
							time: Date.now(),
							data: e,
						},
						n = !1,
						r = c.get("id"),
						i = e.get("opponent").id,
						o = e.get("currentGame"),
						u = {};
					o.endedRounds.maxFromBoth() == 0 &&
						o.rounds[0].serverPlayer.id != r &&
						o.rounds[0].gameConfirmed != 1 &&
						((n = "gameChallenge"),
						(u = {
							type: n,
							gameStatId: o.gameStatId,
						}));
					if (o.endedRounds.maxFromBoth() > 0) {
						var f = o.rounds[o.rounds.length - 1],
							l = f.results || !1,
							h = l && l[i] !== undefined,
							p = l && l[r] !== undefined;
						switch (!0) {
							case h && p:
								n = "gameRoundEnded";
								break;
							case !h && f.serverPlayer.id == i && f.gameConfirmed == 0:
							case !h && p && f.serverPlayer.id == c.get("id") && f.gameConfirmed == 1:
								n = "gameRoundStartedByOpponent";
								break;
							case h && f.serverPlayer.id == i && f.gameConfirmed == 0:
							case h && f.serverPlayer.id == c.get("id") && f.gameConfirmed == 1:
								n = "gameRoundEndedByOpponent";
						}
						u = {
							type: n,
							roundId: f.id,
						};
					}
					o.status.value == "ended" &&
						(o.score.user > o.score.opponent
							? (n = "gameWin")
							: o.score.user == o.score.opponent
							? (n = "gameDraw")
							: o.score.user < o.score.opponent &&
							  ((n = "gameLoss"), s.sendResourceEvent("life", -1, "Gameplay", "Consumed")),
						(u = {
							type: n,
							gameStatId: o.gameStatId,
						})),
						u && (t.unique = u),
						(t.type = n),
						n && this.checkUnique(u) && a.add(t);
				},
				checkUnique: function (e) {
					var t = !0;
					return (
						a.each(function (n) {
							var r = n.get("unique");
							r && _.isEqual(r, e) && (t = !1);
						}),
						t
					);
				},
				setUserInfo: function (e) {
					c.checkProVersion() !== (e.info.fullVersion || e.info.trialVersion) &&
						(e.info.fullVersion || e.info.trialVersion
							? this.showFullVersionPopup()
							: this.showTrialVersionPopup(),
						t.reloadSession("pro"));
					if (e.info.balance !== c.get("balance") && c.get("balance") != undefined) {
						var n = e.info.balance - parseInt(c.get("balance"));
						if (n > 0) {
							var i = {
								time: Date.now(),
								type: "balance",
								data: {
									difference: n,
								},
							};
							t.reloadSession("balance"), r.methods.play("coins"), a.add(i);
						}
					}
					if (e.info.uwins !== c.get("uwins") && c.get("uwins") != undefined) {
						var u = r.methods.levelForUwins(e.info.uwins),
							f = r.methods.levelForUwins(c.get("uwins"));
						u != f &&
							(u > f &&
								(s.sendDesignEvent("Level_up:Number:Level_" + u),
								this.showRatingPopup(e.info.uwins)),
							t.reloadSession("level" + u));
					}
					e.info.games == 1 &&
						c.get("games") == 0 &&
						o.event({
							category: "user",
							action: "First_game_finished",
						});
				},
				setNewAchievement: function (e) {
					var t = {
						time: Date.now(),
						type: "newAchievement",
						data: e.achievement,
					};
					r.methods.play("achievement"),
						a.add(t),
						s.sendResourceEvent("coins", e.achievement.reward, "achievement", "Consumed");
				},
				setTourneyInfo: function (e) {
					for (var t in e.tourneys) {
						var n = e.tourneys[t];
						if (n.manage.active == 0 && n.game.rank) {
							var r = {
								time: Date.now(),
								type: "tourney",
								data: n,
							};
							a.add(r), n.game.ownReward && this.showTourneyPopup(n);
						}
					}
				},
				setClanRequestInfo: function (e) {
					var t = {
							time: Date.now(),
							type: "clanRequest",
							data: e,
						},
						n = h.get("clanData"),
						r = ["clanRequest.accept", "clanRequest.cancel"];
					if (e.clanRequestData[0].userId == c.get("id") && r.indexOf(e.reason) != -1) a.add(t);
					else if (!_.isEmpty(n) && e.reason == "clanRequest.request") {
						var i = _.findWhere(n.members, {
								id: c.id,
							}),
							s = _.findWhere(h.get("userClanPermissionInfo"), {
								role: i.role,
							}).permissions;
						s.hasClanRequestControlPermission && a.add(t);
					}
				},
				setUserQuestInfo: function (e) {
					var t,
						n = [],
						r = e.questData.quests,
						i = _.where(r, {
							status: 2,
							statusReward: !1,
						}),
						s = p.get("questData").quests;
					i &&
						(s.forEach(function (e) {
							_.findWhere(i, {
								id: e.id,
							}) &&
								e.status == 1 &&
								n.push(e.id);
						}),
						n.length &&
							((t = {
								time: Date.now(),
								type: "questCompleted",
								data: null,
							}),
							a.add(t)));
				},
				setChaseNotification: function (e) {
					var t = {
						time: Date.now(),
						type: "chase",
						data: e,
					};
					a.add(t);
				},
				setSeasonPassNotification: function () {
					var e = {
						time: Date.now(),
						type: "seasonPass",
						data: null,
					};
					a.add(e);
				},
				showTourneyPopup: function (e) {
					u.add({
						type: "tourneyResult",
						params: {
							tourney: e,
						},
					});
				},
				showFullVersionPopup: function () {
					u.add({
						type: "text",
						params: {
							header: "Покупка PRO-версии игры",
							text: "Полная версия приобретена!",
							list: null,
							cursiv:
								"Теперь&nbsp;у&nbsp;тебя бесконечные&nbsp;жизни, нет&nbsp;рекламы, доступен&nbsp;просмотр всех&nbsp;слов на&nbsp;поле!",
						},
					}),
						$("#proVersionButton").hide();
				},
				showTrialVersionPopup: function () {
					u.add({
						type: "text",
						params: {
							header: "Внимание!",
							text: "Функционал PRO-версии истёк",
							list: null,
							cursiv: null,
						},
					}),
						$("#proVersionButton").show();
				},
				showRatingPopup: function (e) {
					var t = r.methods.levelForUwins(e);
					s.sendProgressionEvent(t),
						t == 2 &&
							o.event({
								category: "user",
								action: "Level2",
							}),
						u.add({
							type: "newRank",
							params: {
								newUwins: e,
							},
						});
				},
				render: function () {
					a.length > 0 && this.showTopBlock();
				},
				showTopBlock: function () {
					if (!r.params.notificationBlock) return;
					var e = i.get("screen"),
						t = a.first(),
						n,
						s,
						o;
					if (!this.topBlockDisplayed && t && this.screensWithoutTopBlock.indexOf(e) == -1)
						try {
							(n = new f({
								model: t,
								displayMode: "block",
							})),
								$("#notificationTopBlock").html(n.returnableRender()),
								(s = $("#notificationTopBlock").find(".notification_block")),
								(o = s.outerHeight()),
								s.css({
									marginTop: -o + "px",
								}),
								s.animate(
									{
										marginTop: 0,
									},
									600
								),
								(this.topBlockDisplayed = !0);
						} catch (u) {
							console.info("Cant add Notification", "notificationModel:", t, "Error info:", u);
						}
				},
			};
			return (
				_.extend(d, e.Events),
				n("clan").done(function () {
					d.cachedClanRequestInfo.forEach(function (e) {
						d.setByType(e);
					});
				}),
				d.listenTo(t, "newAchievement", function (e) {
					d.setByType(e);
				}),
				d.listenTo(t, "tourneyInfo", function (e) {
					d.setByType(e);
				}),
				d.listenTo(t, "clanRequestInfo", function (e) {
					n("clan").isReady() ? d.setByType(e) : d.cachedClanRequestInfo.push(e);
				}),
				d.listenTo(a, "add", function () {
					d.topBlockDisplayed || d.showTopBlock();
				}),
				d.listenTo(a, "remove", function () {
					var e = $("#notificationTopBlock").find(".notification").eq(0),
						t;
					(d.topBlockDisplayed = !1),
						e &&
							((t = e.outerHeight()),
							e.animate(
								{
									marginTop: -t + "px",
								},
								400,
								function () {
									$("#notificationTopBlock").html(""), d.showTopBlock();
								}
							));
				}),
				d
			);
		}
	),
	define("models/seasonPass/main", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return new t();
	}),
	define("models/seasonPass/chest", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return new t();
	}),
	define(
		"controllers/seasonPass",
		[
			"backbone",
			"gate",
			"application",
			"status",
			"controllers/notifications",
			"collections/popups",
			"models/appState",
			"models/storage",
			"models/seasonPass/main",
			"models/seasonPass/chest",
			"models/user",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = {
				isTicketPurchaseAvailable: function () {
					var e = a.get("info"),
						t = parseInt(moment().format("X")),
						n = parseInt(e.timeStopTicketSelling);
					return t <= n;
				},
				getCurrentLevel: function () {
					return a.get("info").currentLevel;
				},
				getKeyLevel: function () {
					return a.get("levels").length - 1;
				},
				getElapsedTimeInterval: function (e) {
					var t = a.get("info"),
						n = moment().format("X");
					return e ? t.timeStopTicketSelling - n : t.timeFinish - n;
				},
				getPartOfElapsedTimeInterval: function (e) {
					var t = a.get("info"),
						n = moment().format("X"),
						r = t.timeStart,
						i = e ? t.timeStopTicketSelling : t.timeFinish,
						s = Math.round(((n - r) / (i - r)) * 1e4) / 1e4;
					return s;
				},
				drawTimerCanvas: function () {
					var e,
						t,
						n,
						r,
						i,
						s = "#e6e7e7",
						o = "#4d4d4d",
						u;
					try {
						(u = $("#seasonPassPopupTimerCanvas")[0] ? !0 : !1),
							(r = this.getPartOfElapsedTimeInterval(u)),
							(i = 2 * Math.PI * r),
							(e = u ? $("#seasonPassPopupTimerCanvas")[0] : $("#seasonPassTimerCanvas")[0]),
							(t = e.width),
							(n = e.getContext("2d")),
							(n.fillStyle = u ? o : s),
							n.beginPath(),
							(n.strokeStyle = u ? o : s),
							(n.lineWidth = 3),
							n.arc(12, 12, 11, (Math.PI / 180) * 0, (Math.PI / 180) * 360, !1),
							n.stroke(),
							n.closePath(),
							n.beginPath(),
							n.moveTo(t / 2, t / 2),
							n.arc(t / 2, t / 2, t / 2, i - Math.PI / 2, -Math.PI / 2),
							n.closePath(),
							n.fill();
					} catch (a) {
						console.warn("progress canvas error: ", a);
					}
				},
				getRewardInfoText: function (e) {
					var t = "",
						r = null,
						i = null,
						s = null;
					if (e.userRewards && e.userRewards.length > 0) {
						(r = e.userRewards[0]), (i = r.rewardType), (s = r.info);
						switch (i) {
							case "coinsOnceConst":
								t = "+" + r.count + ' <div class="b-icon b-icon_coin b-icon_reward"></div>';
								break;
							case "fieldBoosterOnceConst":
								t = r.count + " × " + s.title;
								break;
							case "booksOnceConst":
								t =
									r.count +
									" × " +
									'<span class="library-text-color-type' +
									s.type +
									'">' +
									s.name +
									"</span>";
								break;
							case "papersOnceConst":
								t = "+" + r.count + ' <div class="b-icon b-icon_scrolls b-icon_reward"></div>';
								break;
							case "clothesOnceConst":
								t =
									r.count +
									" × " +
									'<span class="wardrobe-item-type wardrobe-item-type_' +
									n.params.wardrobeItemRarity[s.category] +
									'">' +
									s.name +
									"</span>";
								break;
							case "clothesPatternsOnceConst":
								t =
									r.count +
									" × " +
									'<span class="wardrobe-item-type wardrobe-item-type_' +
									n.params.wardrobeItemRarity[s.category] +
									'">' +
									e.text +
									"</span>";
								break;
							case "freeTipsOnceConst":
								t = r.count + " × " + "Подсказка";
						}
					} else t = e.text;
					return t;
				},
				showPurchasePopup: function (e) {
					var t = {};
					s.add({
						type: "seasonPass.ticketPurchase",
					}),
						e && ((t["_" + a.get("info").seasonPassId] = e), c.storage.set(t));
				},
				showPlannedPurchasePopup: function () {
					var e = [],
						t = !1,
						n = 0;
					a.get("info").isTicketPurchased ||
						((n = moment
							.duration(a.get("info").timeStopTicketSelling - moment().format("X"), "seconds")
							.days()),
						(t = n < 5 ? !0 : !1),
						!c.isShownPurchasePopup("first") && !t
							? e.push("first")
							: !c.isShownPurchasePopup("second") && t && (e.push("first"), e.push("second"))),
						_.isEmpty(e) || this.showPurchasePopup(e);
				},
				isShownPurchasePopup: function (e) {
					var t = c.storage.get("_" + a.get("info").seasonPassId);
					return t ? t.indexOf(e) != -1 : !1;
				},
				goToSeasonPassScreen: function () {
					o.setScreen({
						screen: "seasonPass",
					});
				},
			};
			return (
				_.extend(c, e.Events),
				r("auth").done(function () {
					t.seasonPassGetInfo(), t.chestGetInfo();
				}),
				r("seasonPass")
					.dependence(["seasonPassInfo", "chestInfo"])
					.done(function () {
						r("seasonPass").resolve();
					}),
				(c.storage = new u().setStorageInfo({
					key: "seasonPassPurchasePopup",
					prefix: "socialId",
				})),
				c.listenTo(t, "seasonPassGetInfo", function (e) {
					e.state == "success" && (a.set(e.data), r("seasonPassInfo").resolve());
				}),
				c.listenTo(t, "chestGetInfo", function (e) {
					e.state == "success" && (f.set(e), r("chestInfo").resolve());
				}),
				c.listenTo(t, "seasonPassInfo", function (e) {
					if (e.state == "success") {
						console.log("seasonPassInfo data: ", e);
						var n = a.get("info").currentLevel,
							r = e.data.info.currentLevel;
						r > n && i.setSeasonPassNotification(), t.seasonPassGetInfo();
					}
				}),
				c.listenTo(t, "chestInfo", function (e) {
					e.state == "success" && (console.log("chestInfo data: ", e), f.set(e));
				}),
				c.listenTo(t, "seasonPassGetLevelReward", function (e) {
					var n = null;
					e.state == "success" &&
						((n = e.data),
						console.log("seasonPassGetLevelReward data: ", n),
						n[0] &&
							n[0].rewardType != "chestKeyOnceConst" &&
							s.add({
								type: "reward",
								params: {
									reward: n,
								},
							}),
						c.showPlannedPurchasePopup(),
						t.seasonPassGetInfo());
				}),
				c.listenTo(t, "chestOpen", function (e) {
					e.state == "success" &&
						(s.add({
							type: "reward",
							params: {
								reward: e.data,
							},
						}),
						t.chestGetInfo());
				}),
				c
			);
		}
	),
	define("models/clan/safe/main", ["backbone"], function (e) {
		var t = e.Model.extend({
			calcMsToFreeBattle: function () {
				var e = this.attributes.battleSettings,
					t = e.lastFreeBattleTime,
					n = e.periodFreeBattle;
				if (t) {
					var r = moment(t * 1e3 + n * 1e3).diff(moment());
					return r > 0 ? r : 0;
				}
				return 0;
			},
			hackIsActive: function () {
				var e = this.attributes.tsOpeningFinish,
					t = moment(e * 1e3).diff(moment());
				return t > 0 ? !0 : !1;
			},
		});
		return new t();
	}),
	define("models/clan/safe/userActiveReward", ["backbone", "gate"], function (e, t) {
		var n = e.Model.extend({});
		return new n();
	}),
	define(
		"controllers/clanSafe",
		[
			"backbone",
			"gate",
			"status",
			"application",
			"collections/popups",
			"models/gamePart",
			"models/user",
			"models/clan/safe/main",
			"models/clan/safe/userActiveReward",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = {
				updateModel: function (e) {
					var t,
						n,
						r = _.clone(e.data);
					(n = r.content), (r.codes = []);
					for (t = 0; t < n.length; t += 1) r.codes.push(n[t].code);
					u.set(r);
				},
				getCurrentCodeLevel: function (e) {
					if (e == 0) return null;
					var t,
						n = "overload",
						r = u.get("codes");
					for (t = 0; t < r.length; t += 1) e <= r[t] && n == "overload" && (n = t);
					return n;
				},
				checkConditions: function () {
					var e = r.params.userCommonProperties.clanSafeSettings,
						t = e.minPlayerCount,
						n = u.get("openingTopProgress"),
						i = _.keys(n).length,
						s = i >= t ? !0 : !1,
						o =
							i > 0 &&
							_.every(n, function (e) {
								return e.hasReward;
							});
					return s && o;
				},
			};
			return (
				_.extend(f, e.Events),
				n("clan").done(function (e) {
					_.isEmpty(e.clanData)
						? n("clanSafe").resolve()
						: (t.clanSafeGetInfo(), t.clanSafeUserActiveRewardInfo());
				}),
				f.listenToOnce(t, "clanSafeGetInfo", function (e) {
					e.state != "error" && n("clanSafe").resolve();
				}),
				f.listenTo(t, "clanSafeGetInfo", function (e) {
					e.state != "error" &&
						!_.isEmpty(e.data) &&
						(f.updateModel(e), console.log("clan safe model: ", u.attributes));
				}),
				f.listenTo(t, "clanSafeUserActiveRewardInfo", function (e) {
					e.state != "error" &&
						(a.clear({
							silent: !0,
						}),
						a.set(e.userActiveReward),
						console.log("clan safe user active reward model: ", a.attributes));
				}),
				f.listenTo(t, "clanSafeInfo", function (e) {
					e.state != "error" &&
						(e.data.status == "open" && t.clanSafeUserActiveRewardInfo(),
						e.data.status == "broken" && t.clanSafeGetInfo(),
						f.updateModel(e),
						console.log("clan safe model: ", u.attributes));
				}),
				f.listenTo(t, "clanSafeGetReward", function (e) {
					e.state != "error" && t.clanSafeUserActiveRewardInfo();
				}),
				f
			);
		}
	),
	define(
		"models/life",
		["gate", "application", "status", "collections/popups", "models/user"],
		function (e, t, n, r, i) {
			var s = Backbone.Model.extend({
					initialize: function () {
						this.listenToOnce(e, "lifeGetInfo", function (e) {
							e.state != "error" && (this.setLifeInfo(e), n("life").resolve());
						}),
							this.listenTo(e, "userLifeInfo", function (e) {
								this.setLifeInfo(e);
							}),
							n("auth").done(function () {
								e.lifeGetInfo();
							});
					},
					setLifeInfo: function (e, t) {
						e.state != "error" && this.set(e.lifeInfo, t);
					},
					isFull: function () {
						var e = this.get("tsRecovery");
						return e == 0 || parseInt(e) - parseInt(moment().format("X")) < 0 ? !0 : !1;
					},
					getCount: function () {
						return this.isFull()
							? parseInt(this.get("count")) + parseInt(this.get("countOther"))
							: this.get("count") +
									this.get("countOther") -
									Math.ceil(
										(parseInt(this.get("tsRecovery")) - parseInt(moment().format("X"))) /
											parseInt(this.get("inteval"))
									);
					},
					restoreTime: function () {
						var e = 0,
							t = 0,
							n = 0,
							r = this.get("inteval"),
							i =
								parseInt(this.get("count")) +
								parseInt(this.get("countOther")) -
								parseInt(this.getCount());
						if (this.isFull()) return 0;
						var s = parseInt(this.get("tsRecovery")) - r * (i - 1);
						return (
							(e = Math.abs(moment().diff(moment(s * 1e3), "minutes"))),
							(t = Math.floor(e / 60)),
							(n = (e % 60) + 1),
							t + " ч. " + n + " мин."
						);
					},
				}),
				o = new s();
			return o;
		}
	),
	define("models/library", ["gate", "application", "status", "models/user"], function (e, t, n, r) {
		var i = Backbone.Model.extend({
				BOOK_NAMES: {
					1: "Журнал",
					2: "Книга",
					3: "Трактат",
					4: "Энциклопедия",
				},
				BOOK_NAMES_FOR_INFO: {
					1: "Журнал",
					2: "Книгу",
					3: "Трактат",
					4: "Энциклопедию",
				},
				READING_FINISH_LABEL: {
					1: "прочитан",
					2: "прочитана",
					3: "прочитан",
					4: "прочитана",
				},
				DISASSEMBLING_FINISH_LABEL: {
					1: "разобран",
					2: "разобрана",
					3: "разобран",
					4: "разобрана",
				},
				BOOK_STATE_CREATED: 1,
				BOOK_STATE_READY_FOR_READING: 2,
				BOOK_STATE_READING: 3,
				BOOK_STATE_FINISHED: 4,
				BOOK_STATE_REMOVED: 5,
				BOOK_STATE_DISASSEMBLING: 6,
				BOOK_STATE_DISASSEMBLING_FINISHED: 7,
				initialize: function () {
					this.listenToOnce(e, "libraryGetInfo", function (e) {
						e.state != "error" && (this.setLibraryInfo(e), n("library").resolve());
					}),
						this.listenTo(e, "userLibraryInfo", function (e) {
							this.update(e);
						}),
						n("auth").done(function () {
							e.libraryGetInfo();
						});
				},
				setLibraryInfo: function (e, t) {
					var n;
					e.state != "error" &&
						((n = _.clone(e.libraryData)), Backbone.Model.prototype.set.apply(this, [n, t]));
				},
				update: function (e, t) {
					console.log("update library model with data: ", e);
					var n;
					(n = _.clone(this.attributes)),
						_.extend(n, e.libraryData),
						Backbone.Model.prototype.set.apply(this, [n, t]);
				},
				getState: function () {
					var e,
						n = {
							reading: null,
							disassembling: null,
						};
					this.attributes.wisdom >= this.attributes.wisdomTarget && (n.reading = "completeLevel"),
						this.attributes.level == t.params.LIBRARY_MAX_LEVEL && (n.reading = "maxLevel");
					var r = this.getReadingItem();
					r &&
						((e = r.ts.start + r.readTime - t.methods.getCurrentTimestamp()),
						(n.reading = e > 0 ? "process" : "finish"));
					var i = this.getDisassemblingItem();
					return (
						i &&
							((e = i.ts.start + i.disassembleTime - t.methods.getCurrentTimestamp()),
							(n.disassembling = e > 0 ? "process" : "finish")),
						n
					);
				},
				getItemInProgress: function (e) {
					return _.findWhere(this.attributes.books, {
						type: e,
						state: this.BOOK_STATE_CREATED,
					});
				},
				getReadyItemsCount: function (e) {
					return _.where(this.attributes.books, {
						state: this.BOOK_STATE_READY_FOR_READING,
					}).length;
				},
				getReadyItemsListByType: function (e) {
					return _.where(this.attributes.books, {
						type: e,
						state: this.BOOK_STATE_READY_FOR_READING,
					});
				},
				getReadyItemsCountByType: function (e) {
					return _.where(this.attributes.books, {
						type: e,
						state: this.BOOK_STATE_READY_FOR_READING,
					}).length;
				},
				getReadingItem: function () {
					return _.findWhere(this.attributes.books, {
						state: this.BOOK_STATE_READING,
					});
				},
				getDisassemblingItem: function () {
					return _.findWhere(this.attributes.books, {
						state: this.BOOK_STATE_DISASSEMBLING,
					});
				},
				getItemAliasByType: function (e) {
					var t;
					switch (e) {
						case 1:
							t = "magazine";
							break;
						case 2:
							t = "book";
							break;
						case 3:
							t = "big-book";
							break;
						case 4:
							t = "encyclopedia";
					}
					return t;
				},
				getItemWisdomByAlias: function (e) {
					var t;
					e = e.slice(0, -2);
					switch (e) {
						case "magazine":
							t = 1;
							break;
						case "book":
							t = 2;
							break;
						case "big-book":
							t = 3;
							break;
						case "encyclopedia":
							t = 4;
					}
					return _.findWhere(this.attributes.books, {
						type: t,
					}).bookWisdom;
				},
			}),
			s = new i();
		return s;
	}),
	define("models/onboarding", ["backbone", "gate", "status", "models/user"], function (e, t, n, r) {
		var i = e.Model.extend({
			initialize: function () {
				this.listenTo(t, "onboardingGetInfo", function (e) {
					this.set(e.data),
						this.get("tutorial") === !1 ? t.tutorialGameGet() : n("tutorial").resolve();
				}),
					this.listenTo(t, "onboardingInfo", function (e) {
						this.set(e.data);
					}),
					n("auth").done(function () {
						t.onboardingGetInfo();
					});
			},
			getTutorialStatus: function () {
				var e = JSON.parse(localStorage.getItem("tutorial_" + r.get("id")));
				return e === null ? 0 : e;
			},
			setTutorialStatus: function (e) {
				localStorage.setItem("tutorial_" + r.get("id"), JSON.stringify(e));
			},
		});
		return new i();
	}),
	define(
		"models/tutorial",
		["backbone", "gate", "application", "status", "models/user"],
		function (e, t, n, r, i) {
			var s = e.Model.extend({
				initialize: function () {
					this.listenTo(t, "tutorialGameGet", function (e) {
						e.state != "error" && this.setTutorialInfo(e), r("tutorial").resolve();
					}),
						this.listenTo(t, "tutorialGameResult", function (e) {
							e.state != "error" && this.setTutorialInfo(e);
						});
				},
				setTutorialInfo: function (e, t) {
					if (e.state != "error") {
						var n = {
							game: e.game,
							currentRound: this.getCurrentRound(e),
							isNecessaryFullGame: e.isNecessaryFullGame,
							score: this.countScore(e),
						};
						this.set(n, t);
					}
				},
				getCurrentRound: function (e) {
					var t = e.game,
						n = 1;
					return (
						t.forEach(function (e) {
							_.isEmpty(e.results) || n++;
						}),
						n
					);
				},
				countScore: function (e) {
					var t = {
						user: 0,
						dubina: 0,
					};
					for (var n = 0; n < 3; n++) {
						var r = e.game[n];
						"results" in r &&
							r.results[i.get("id")] &&
							r.results.dubina &&
							((t.user += r.results[i.get("id")].scores), (t.dubina += r.results.dubina.scores));
					}
					return t;
				},
			});
			return new s();
		}
	),
	define("models/wardrobe/papers", ["gate", "status"], function (e, t) {
		var n = Backbone.Model.extend({
			initialize: function () {
				this.listenTo(e, "papersGetInfo", function (e) {
					e.state != "error" && (this.setInfo(e), t("papers").resolve());
				}),
					this.listenTo(e, "papersInfo", function (e) {
						e.state != "error" && this.setInfo(e);
					}),
					t("auth").done(function () {
						e.papersGetInfo();
					});
			},
			setInfo: function (e, t) {
				e.state != "error" && this.set(e.papersInfo, t);
			},
		});
		return new n();
	}),
	define("models/campaign", ["backbone"], function (e) {
		var t = e.Model.extend({});
		return t;
	}),
	define("collections/campaigns", ["backbone", "gate", "models/campaign"], function (e, t, n) {
		var r = e.Collection.extend({
				model: n,
			}),
			i = new r();
		return (
			t.on("serverCampaign", function (e) {
				i.add({
					type: "serverCampaign",
					params: e.Campaign,
				});
			}),
			i
		);
	}),
	define("text!widgets/campaign.html!strip", [], function () {
		return '<div class="l-popup">\n    <div class="b-popup b-popup_action">\n        <div class="b-popup__heading">\n            Акция!\n            <div id=\'closeCampaign\' class="b-popup__heading__close"></div>\n        </div>\n        <div class="b-popup-i">\n            <div class="b-action">\n                <p class="b-action__title"><%=title%></p>\n\n                <p class="b-action__text"><%=text%></p>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-popup -->\n</div>';
	}),
	define(
		"views/widgets/campaign",
		["gate", "widget", "text!widgets/campaign.html!strip"],
		function (e, t, n) {
			var r = t.extend({
				template: _.template(n),
				events: {
					"click #closeCampaign": "closeCampaign",
				},
				closeCampaign: function () {
					e.hideCampaignTarget(this.params.campaignId), this.$el.remove();
				},
				initialize: function (e) {
					(this.params = e), (this.viewParam = {});
				},
				render: function () {
					$("#campaign" + this.params.target).html(this.template(this.params)),
						this.setElement($("#campaign" + this.params.target)),
						this.delegateEvents();
				},
			});
			return r;
		}
	),
	define("models/tourney", ["backbone", "methods"], function (e, t) {
		var n = e.Model.extend({
			set: function (t, n) {
				var r = _.clone(t);
				(r.game.rounds = _.values(r.game.rounds)),
					(r.endedRounds = this.countEndedRounds(r)),
					(r.status = this.getStatus(r)),
					e.Model.prototype.set.apply(this, [r, n]);
			},
			getViewParams: function (e) {
				var n = this.get("manage");
				return n.viewParams && n.viewParams[e] && this["checkViewParams" + t.ucwords(e)]
					? this["checkViewParams" + t.ucwords(e)]()
					: !1;
			},
			checkViewParamsRating: function () {
				var e = this.get("manage").viewParams.rating;
				return e.min || e.max ? e : !1;
			},
			checkViewParamsUwins: function () {
				var e = this.get("manage").viewParams.uwins;
				return e.min || e.max ? e : !1;
			},
			getStatus: function (e) {
				return (
					e.endedRounds === e.game.rounds.length &&
						(e.status = e.manage.active ? "completed" : "ended"),
					e.status || "joined"
				);
			},
			countEndedRounds: function (e) {
				var t = 0;
				for (var n = 0; n < e.game.rounds.length; n++)
					"results" in e.game.rounds[n] && e.game.rounds[n].complete && t++;
				return t;
			},
		});
		return n;
	}),
	define(
		"collections/tourneys",
		["backbone", "gate", "status", "params", "models/tourney"],
		function (e, t, n, r, i) {
			var s = e.Collection.extend({
				model: i,
				setByTourneyId: function (e, t) {
					for (var n in e) {
						var i = this.inCollection(e[n]);
						(t = t || "joined"),
							i
								? (r.tourneyStatus[t] > r.tourneyStatus[i.get("status")] && (e[n].status = t),
								  i.set(e[n]))
								: ((e[n].status = t), this.add(e[n]));
					}
					this.trigger("setByTourneyId");
				},
				getByTourneyId: function (e) {
					var t = !1;
					return (
						this.each(function (n) {
							n.get("tourneyId") === e && (t = n);
						}),
						t
					);
				},
				inCollection: function (e) {
					var t = !1;
					return (
						this.find(function (n) {
							if (n.get("tourneyId") == e.tourneyId) return (t = n), !0;
						}),
						t
					);
				},
			});
			return s;
		}
	),
	define(
		"collections/currentTourneys",
		["backbone", "gate", "status", "params", "collections/tourneys"],
		function (e, t, n, r, i) {
			var s = new i(),
				o = n("auth");
			return (
				o.done(function () {
					t.getTourneys({
						type: r.tourneysTypes.active,
					}),
						t.getTourneys({
							type: r.tourneysTypes.user,
						});
				}),
				s.listenTo(t, "getTourneys", function (e) {
					if (e.type !== 3) {
						var t = e.type == 1 ? "available" : "joined";
						s.setByTourneyId(e.tourneys, t);
					}
				}),
				s.listenTo(t, "tourneyInfo", function (e) {
					o.isReady() && s.setByTourneyId(e.tourneys);
				}),
				s.listenTo(t, "joinTourney", function (e) {
					var t = s.getByTourneyId(e.tourneyId);
					r.tourneyStatus[t.status] < r.tourneyStatus.joined && t.set("status", "joined");
				}),
				s
			);
		}
	),
	define("controllers/lastPlayedRound", ["gate", "status"], function (e, t) {
		function n() {
			var e = this;
			t("auth").done(function () {
				scheme == "production" && !timer && (e.checkSimpleGame(), e.checkTourneyGame());
			});
		}
		return (
			(n.prototype.checkSimpleGame = function () {
				this.listenToOnce(e, "storage.get.lastPlayedRound", function (t) {
					if (t.length > 0 && t !== undefined) {
						try {
							var n = JSON.parse(t);
							e.sendResults(n.roundId, n.result, n.fieldBoosterData);
						} catch (r) {
							e.sendEmptyResults(t);
						}
						e.storage.set("lastPlayedRound", "");
					}
				}),
					e.storage.get("lastPlayedRound");
			}),
			(n.prototype.checkTourneyGame = function () {
				this.listenToOnce(e, "storage.get.lastPlayedTourneyRound", function (t) {
					if (t.length > 0) {
						var n = JSON.parse(t),
							r = n.result
								? n.result
								: {
										usedWords: [],
										scores: 0,
										notExistsWords: [],
								  };
						e.tourneyRoundResult(n.roundId, n.tourneyId, r),
							e.storage.set("lastPlayedTourneyRound", "");
					}
				}),
					e.storage.get("lastPlayedTourneyRound");
			}),
			_.extend(n.prototype, Backbone.Events),
			new n()
		);
	}),
	define("text!popups/reward.html!strip", [], function () {
		return '<%\n\nvar rarity = Application.params.wardrobeItemRarity;\n\n%>\n\n<div class="popup-reward">\n    <div class="popup-reward__list">\n    <% \n    reward.forEach(function(el) {\n        if (el.rewardType == \'coinsOnceConst\') {\n        %>\n        <div class="popup-reward__item popup-reward__item_coins">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/icons/coin.png" alt="">\n                <% if (el.bonusValue) { %>\n                <div class="popup-reward__name popup-reward__coins-text">\n                    И ещё <span class="popup-reward__coins-count">+<%= el.bonusValue %></span>\n                    за счёт бонуса вещей\n                </div>\n                <% } %>\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'ratingOnceConst\') {\n        %>\n        <div class="popup-reward__item">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/icons/rate.png" alt="">\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'fieldBoosterOnceConst\') {\n        %>\n        <div class="popup-reward__item popup-reward__item_booster">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= el.info.imageActiveUrl %>" alt="">\n                <div class="popup-reward__name">Усиление «<%= el.info.title %>»</div>\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'booksOnceConst\') { \n        %>\n        <div class="popup-reward__item popup-reward__item_book">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="https://cdn.wordbyword.me/content/library/books/<%= el.alias %>_closed.png" alt="">\n                <div class="popup-reward__name"><%= el.info.name %></div>\n            </div>\n        </div>\n        <% }\n\n        if (el.rewardType == \'tokensOnceConst\') { \n        %>\n        <div class="popup-reward__item popup-reward__item_token">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/season-pass/icon-token.png" alt="">\n                <div class="popup-reward__name">Жетоны</div>\n            </div>\n        </div>\n        <% }\n\n        if (el.rewardType == \'clothesPatternsOnceConst\') {\n        %>\n        <div class="popup-reward__item popup-reward__item_pattern popup-reward__item_<%= rarity[el.info.category] %>">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/wardrobe/pattern-<%= rarity[el.info.category] %>.png" alt="">\n                <div class="popup-reward__name"><%= el.info.name %></div>\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'clothesOnceConst\') {\n        %>\n        <div class="popup-reward__item popup-reward__item_clothes popup-reward__item_<%= rarity[el.info.category] %>">\n            <div class="popup-reward__count">+<%= el.count %></div>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.clothesUrl %><%= el.info.itemId %>.png" alt="">\n                <div class="popup-reward__name"><%= el.info.name %></div>\n                <div class="popup-reward__item-level">1 ур.</div>\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'papersOnceConst\') {\n        %>\n        <div class="popup-reward__item">\n            <span class="popup-reward__count">+<%= el.count %></span>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/icons/scrolls.png" alt="">\n            </div>\n        </div>\n        <% } \n\n        if (el.rewardType == \'freeTipsOnceConst\') {\n        %>\n        <div class="popup-reward__item">\n            <span class="popup-reward__count">+<%= el.count %></span>\n            <div class="popup-reward__icon">\n                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/reward/freeTips.png" alt="">\n                <div class="popup-reward__name">Подсказка</div>\n            </div>\n        </div>\n        <% } \n\n    });\n    %>\n    </div>\n\n    <div class="popup-reward__get">\n        <div id="getReward" class="popup-reward__get-btn b-btn b-btn_blue">\n            Забрать \n            <% if (context == \'clanTask\') {%>\n            награду\n            <% } %>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/reward",
		[
			"popupWidget",
			"application",
			"controllers/wardrobe",
			"collections/popups",
			"text!popups/reward.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-reward-overlay",
				additionalEvents: {
					"click #getReward": "closePopup",
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
							reward: this.params.reward,
							context: this.params.context,
							WardrobeController: n,
						});
				},
				beforeRender: function () {
					return $("#cover").fadeIn(300), this;
				},
				closePopup: function () {
					r.remove(this.modelId);
				},
			});
			return s;
		}
	),
	define("text!popups/settings/changeNameForm.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Новое имя</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="change-name-form">\n                    <%\n                    var data = this.params.data;\n                    var textForCount = \'\';\n                    if (data.availableCount == 1) {\n                        textForCount = \'только ОДИН раз!\';\n                    } else {\n                        textForCount = data.availableCount + \' \' + Application.methods.declension(data.availableCount, [\'раз\', \'раза\', \'раз\']) + \'.\';\n                    }\n                    %>\n                    <div class="change-name-form__info">Внимание: ты можешь изменить имя <%=textForCount%></div>\n                    <div class="change-name-form__cost">\n                        Стоимость: \n                        <% if (data.cost == 0) { %>\n                        бесплатно\n                        <% } else { %>\n                        <%=data.cost%><span class="b-icon b-icon_coin"></span>\n                        <% } %>\n                    </div>\n                    <input id="playerNameInput" class="change-name-form__input" \n                        value="<%=(this.newPlayerName)? this.newPlayerName : \'\' %>" \n                        minlength="<%=(data.minLength)? data.minLength : 0 %>" \n                        maxlength="<%=(data.maxLength)? data.maxLength : \'\' %>" \n                        placeholder="<%=UserModel.get(\'playerName\')%>">\n                </div>\n                <div class="popup__btns">\n                    <div id="changeNameCtrl" class="popup__btns-item b-btn b-btn_blue">Продолжить</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/settings/changeNameConfirm.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Новое имя</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup-user">\n                <div class="popup-user__avatar">\n                    \n                    <div class="b-user b-user_big">\n                        <%\n                        var i;\n                        var userCustomAvatar = UserModel.get(\'customAvatar\');\n                        %>\n                        <% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n                        <div class="custom-avatar b-user__custom-avatar">\n                            <% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n                            <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=userCustomAvatar[i]%>.png" alt="" />\n                            <% } %>\n                        </div>\n                        <% } else { %>\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%=UserModel.get(\'avatarUrl\')%>" alt="" />\n                        </div>\n                        <% } %>\n                        <img class="b-user__rank" src="<%= Application.params.laurelsUrl%>avatar-<%=Application.methods.levelForUwins(UserModel.get(\'uwins\'))%>.png" alt="" />\n                    </div>\n                </div>\n                <div class="popup-user__name"><%=this.newPlayerName%></div>\n            </div>\n            <div class="popup__btns popup__btns_confirm">\n                <div id="changeNameCancel" class="popup__btns-item b-btn b-btn_grey">Отмена</div>\n                <div id="changeNameConfirm" class="popup__btns-item b-btn b-btn_blue">Применить</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/settings/changeName",
		[
			"application",
			"gate",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/user",
			"popupWidget",
			"text!popups/settings/changeNameForm.html!strip",
			"text!popups/settings/changeNameConfirm.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = o.extend({
				className: "popup-wrapper",
				templates: {
					form: u,
					confirm: a,
				},
				additionalEvents: {
					"click #changeNameCtrl": "changeNameCtrlHandler",
					"click #changeNameCancel": "changeNameCancelHandler",
					"click #changeNameConfirm": "changeNameConfirmHandler",
				},
				initialize: function (t) {
					var n = this;
					(this.newPlayerName = t.playerName ? t.playerName : ""),
						t.template || (t.template = !1),
						t.template == "confirm"
							? (this.template = _.template(this.templates.confirm))
							: (this.template = _.template(this.templates.form)),
						(this.params = t),
						console.log("changeName params: ", this.params),
						(this.viewParam = {
							Application: e,
							UserModel: s,
						});
				},
				changeNameCtrlHandler: function () {
					var e = $("#playerNameInput").val();
					e &&
						(this.closePopup(),
						r.add({
							type: "changeName",
							params: {
								template: "confirm",
								playerName: e,
								data: this.params.data,
							},
						}));
				},
				changeNameCancelHandler: function () {
					this.closePopup(),
						r.add({
							type: "changeName",
							params: {
								template: "form",
								playerName: this.newPlayerName,
								data: this.params.data,
							},
						});
				},
				changeNameConfirmHandler: function () {
					this.closePopup(),
						this.params.data.dynamicPrice
							? t.changeNameDynamicPrice(this.newPlayerName)
							: t.changeName(this.newPlayerName);
				},
			});
			return f;
		}
	),
	define("models/achievement", ["backbone", "controllers/achievement"], function (e, t) {
		var n = e.Model.extend({
			idAttribute: "id",
			set: function (n, r) {
				_.indexOf(t.clientAchievements, n.id) >= 0 && (n.progress = t.getProgress(n.id)),
					e.Model.prototype.set.call(this, n, r);
			},
		});
		return n;
	}),
	define("text!popups/achievement.html!strip", [], function () {
		return '<%\nvar unlockTime = this.model.get(\'unlockTime\');\nvar rewardStatus = this.model.get(\'rewardStatus\');\n%>\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Достижение</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="achievement achievement_popup">\n                <div class="achievement__icon">\n                    <img class="achievement__icon-img" src="<%=(unlockTime)? imageUrl : closedImageUrl %>" alt="">\n                </div>\n                <p class="achievement__name"><%= name %></p>\n                <p class="achievement__description"><%= desc %></p>\n                <div class="achievement__reward">\n                    <% if (unlockTime) {%>\n                    <p class="achievement__reward-time">\n                        Было открыто\n                        <%= moment(unlockTime * 1000).format(\'D MMMM YYYY в H:mm\') %>\n                    </p>\n                    <% } %>\n                    <p class="achievement__reward-info">\n                        <% if (rewardStatus) {%>\n                            Ты заработал \n                        <% } else {%>\n                            Приз\n                        <% } %>\n                        <span class="b-coin"><%= reward %></span> монет\n                    </p>\n                    <p class="achievement__get-coins"><span class="buyMore achievement__get-coins-ctrl">Купить ещё монет</span></p>\n                </div>\n            </div>\n            <!-- /.b-achieve -->\n            <% if (rewardStatus) {%>\n            <div class="popup__checkbox">\n                <div class="b-wall-post-ctrl">\n                    <span class="checkbox checked b-wall-post-ctrl-i b-wall-post-ctrl-i_checked"></span>\n                    <span class="b-wall-post-ctrl__label">Рассказать друзьям</span>\n                </div>\n            </div>\n            <% } %>\n\n            <div class="popup__btns">\n                <div id=\'continueButton\' class="popup__btns-item b-btn b-btn_blue">Продолжить</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/achievement",
		[
			"backbone",
			"application",
			"gate",
			"controllers/gameanalytics",
			"popupWidget",
			"collections/popups",
			"models/user",
			"models/achievement",
			"text!popups/achievement.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = i.extend({
				className: "popup-wrapper",
				template: _.template(a),
				additionalEvents: {
					"click .buyMore": "buyMore",
					"click #continueButton": function () {
						if ($(".checkbox").hasClass("checked")) {
							r.sendDesignEvent("Screen_actions:Achievements:share");
							var e =
								t.params.socialText.achieveText +
								": " +
								this.model.get("name") +
								" - " +
								this.model.get("desc");
							n.wallPost.achievement(e, this.model.id, o.get("socialId"));
						}
						this.params.template == "unlockedWithSharing" &&
							(r.sendDesignEvent("Screen_actions:Achievements:claim"),
							r.sendDesignEvent("earn_virtual_currency:Reason:achievement")),
							this.closePopup();
					},
					"click .checkbox": function (e) {
						$(e.currentTarget).toggleClass("checked").toggleClass("b-wall-post-ctrl-i_checked");
					},
					"click #close": function () {
						this.closePopup();
					},
				},
				tagName: "div",
				initialize: function (t) {
					(this.params = t),
						(this.model = null),
						t.hasOwnProperty("model") && t.model instanceof e.Model
							? (this.model = t.model)
							: (this.model = new u(t.model));
				},
				buyMore: function () {
					r.sendDesignEvent("Screen_actions:Achievements:buy_coins"),
						this.closePopup(),
						s.add(
							{
								type: "buyCoins",
							},
							{
								at: 0,
							}
						);
				},
				afterRender: function () {
					purchase || $(".buyMore").parent().hide(),
						t.params.availableSocialFriends ||
							$(".b-wall-post-ctrl").hide().children(".checkbox").removeClass("checked");
				},
			});
			return f;
		}
	),
	define("controllers/social/abstract", ["backbone", "application"], function (e, t) {
		function n() {
			t.params.staticUrl = "/";
		}
		return (
			(n.prototype.proVersionPopupTemplate = "basic"),
			(n.prototype.isAddToFavoriteAvailable = !1),
			(n.prototype.addToFavorite = function () {
				return !0;
			}),
			_.extend(n.prototype, e.Events),
			n
		);
	}),
	define(
		"controllers/social/ad",
		[
			"backbone",
			"gate",
			"application",
			"controllers/gameanalytics",
			"collections/popups",
			"collections/stat",
			"models/user",
		],
		function (e, t, n, r, i, s, o) {
			var u = {
				playedRounds: [0, 0, 0],
				availableViewCount: {
					coins: 0,
					life: 0,
					wordList: 0,
				},
				videoRestoreTime: {
					coins: 0,
					life: 0,
					wordList: 0,
				},
				getVideoAfterRound: function (e) {
					var r = this,
						i = s.getByRoundId(e),
						o = i.get("currentGame").status.nextRound,
						u = "finish" + o,
						a =
							"view" in n.params.services.adsSettings
								? n.params.services.adsSettings.view.game[u]
								: !1,
						f = "disabled";
					if (!a) return !1;
					var l = a.types.length,
						c = a.delay;
					if (a.active || a.type != "disabled") {
						l > 0 ? (f = a.types[r.playedRounds[o - 1] % a.types.length]) : (f = a.type), (c = 0);
						switch (f) {
							case "disabled":
								break;
							case "interstitial":
								c > 0
									? ($(".b-result__btns-blocker")
											.removeClass("g-hidden")
											.css({
												opacity: 0,
											})
											.animate(
												{
													opacity: 0.6,
												},
												0
											),
									  setTimeout(function () {
											$(".b-result__btns-blocker").animate(
												{
													opacity: 0,
												},
												300,
												function () {
													$(".b-result__btns-blocker").addClass("g-hidden");
												}
											),
												social == "ok" ? t.showInterstitialAd() : r.showMediaAd("interstitial");
									  }, c))
									: social == "ok"
									? t.showInterstitialAd()
									: r.showMediaAd("interstitial");
						}
					}
					r.playedRounds[o - 1] += 1;
				},
				getVideoForCoins: function () {
					var e = this;
					e.getCoinsReward();
				},
				getCoinsReward: function () {
					t.videoReward("coins");
					var e = n.params.services.adsSettings.rewardVideo.coins.reward;
					r.sendResourceEvent("coins", e, "rewardVideo", "freeCoins");
				},
				getVideoForLifes: function () {
					var e = this;
					e.getLifesReward();
				},
				getLifesReward: function () {
					t.videoReward("life"), r.sendResourceEvent("life", 1, "rewardVideo", "freeLife");
				},
				getVideoForWords: function () {
					var e = this;
					t.videoReward("wordList");
				},
				getVideoForLibrary: function (e) {
					t.libraryBookRewardVideo(e);
				},
				getVideoForCopyCraftBoost: function (e, n, r) {
					t.clothesCopyCraftBoost(e, n, r);
				},
				getVideoForClanSafeResetResults: function (e, n) {
					social == "ok"
						? (t.loadRewardedAd(),
						  this.listenToOnce(t, "loadRewardedAd", function () {
								t.showRewardedAd(),
									this.listenToOnce(t, "showRewardedAd", function () {
										t.clanSafeResetResults(e, n);
									});
						  }))
						: (this.once("getVideoForClanSafeResetResults", function () {
								t.clanSafeResetResults(e, n);
						  }),
						  this.showMediaAd("reward", "getVideoForClanSafeResetResults"));
				},
				showMediaAd: function (e, t) {
					function s() {
						t !== undefined &&
							(i.add({
								type: "text",
								params: {
									header: "Что-то пошло не так",
									text: "Нет доступного видео. Попробуй позже.",
									list: null,
									cursiv: null,
								},
							}),
							n.off(t));
					}
					var n = this,
						r = social == "vk" ? require("vk") : null;
					social == "vk" &&
						r.default
							.send("VKWebAppShowNativeAds", {
								ad_format: e,
							})
							.then(function (e) {
								n.trigger(t);
							})
							.catch(function (e) {
								s();
							});
					if (social == "ya")
						switch (e) {
							case "interstitial":
								ysdk.adv.showFullscreenAdv();
								break;
							case "reward":
								ysdk.adv.showRewardedVideo({
									callbacks: {
										onRewarded: function () {
											n.trigger(t);
										},
										onError: function () {
											s();
										},
									},
								});
						}
				},
				showBannerAdv: function () {
					social == "ya" &&
						ysdk.adv.getBannerAdvStatus().then(function (e) {
							e.stickyAdvIsShowing || (e.reason ? console.log(e.reason) : ysdk.adv.showBannerAdv());
						});
				},
				hideBannerAdv: function () {
					social == "ya" && ysdk.adv.hideBannerAdv();
				},
			};
			return (
				_.extend(u, e.Events),
				u.listenTo(o, "auth", function () {
					t.videoRewardGetAvailableCount(), o.checkProVersion() || u.showBannerAdv();
				}),
				t.on("videoRewardGetAvailableCount", function (e) {
					for (type in e.videoAvailableSettings)
						(u.availableViewCount[type] = e.videoAvailableSettings[type].availableViewCount),
							(u.videoRestoreTime[type] = e.videoAvailableSettings[type].videoRestoreTime);
					u.trigger("videoRewardGetAvailableCount");
				}),
				t.on("reloadSession", function (e) {
					e.hash == "pro" && u.hideBannerAdv();
				}),
				t.on("videoReward", function (e) {
					e.hash &&
						((u.availableViewCount[e.hash] = e.availableViewCount),
						(u.videoRestoreTime[e.hash] = e.videoRestoreTime));
					switch (e.hash) {
						case "coins":
							u.trigger("videoRewardForCoins");
					}
				}),
				social == "ok" &&
					u.listenTo(t, "loadRewardedAdError", function () {
						i.add({
							type: "text",
							params: {
								header: "Что-то пошло не так",
								text: "Нет доступного видео. Попробуй позже.",
								list: null,
								cursiv: null,
							},
						});
					}),
				u
			);
		}
	),
	define(
		"controllers/social/vk",
		["application", "gate", "controllers/social/abstract", "controllers/social/ad", "models/user"],
		function (e, t, n, r, i) {
			function s() {
				(this.ad = r), socialPlatform == "html5_ios" && (e.params.staticUrl = "");
			}
			return (
				(s.prototype = _.extend(new n(), {
					proVersionPopupTemplate: "advertisement",
					isAddToFavoriteAvailable: !0,
					addToFavorite: function () {
						var e = i.get("games");
						this.listenToOnce(t, "storage.get.addToFavorite", function (n) {
							n == "" && e == 1 && (t.addToFavorite(), t.storage.set("addToFavorite", "1"));
						}),
							t.storage.get("addToFavorite");
					},
				})),
				s
			);
		}
	),
	define(
		"controllers/social/ok",
		["application", "controllers/social/abstract", "controllers/social/ad"],
		function (e, t, n) {
			function r() {
				this.ad = n;
			}
			return (
				(r.prototype = _.extend(new t(), {
					proVersionPopupTemplate: "advertisement",
				})),
				r
			);
		}
	),
	define("models/product", ["backbone", "gate", "status", "models/user"], function (e, t, n, r) {
		var i = e.Model.extend({
			initialize: function () {
				var e = this;
				t.on("getProducts", function (t) {
					e.set(t.data), e.trigger("productsUpdated");
				}),
					t.on("paymentInfo", function (e) {
						if (e.state != "error") {
							var n = e.data.purchaseData;
							n && n.balance && t.getProducts(r.get("id"));
						}
					}),
					n("auth").done(function () {
						t.getProducts(r.get("id"));
					});
			},
			set: function (t, n) {
				this.setFlagForBestPriceProduct(t, "products"),
					this.setFlagForBestPriceProduct(t, "shortList"),
					e.Model.prototype.set.apply(this, [t, n]);
			},
			setFlagForBestPriceProduct: function (e, t) {
				var n = null;
				typeof e == "object" &&
					t in e &&
					_.isArray(e[t]) &&
					((n = _.max(e[t], function (e) {
						return e.number / e.price;
					})),
					n && (n.isBestPrice = !0));
			},
		});
		return new i();
	}),
	define(
		"controllers/social/ya",
		[
			"gate",
			"application",
			"controllers/social/abstract",
			"controllers/social/ad",
			"controllers/gameanalytics",
			"models/product",
			"status",
		],
		function (e, t, n, r, i, s, o) {
			function u() {
				var n = this;
				(this.ad = r),
					(this.yaPayments = null),
					(this.products = []),
					(t.params.staticUrl = "/"),
					o("auth").done(function () {
						ysdk
							.getPayments({
								signed: !0,
							})
							.then(function (t) {
								(n.yaPayments = t),
									n.yaPayments.getPurchases().then(function (t) {
										var r = t.signature,
											i = [];
										t.forEach(function (e) {
											i.push({
												productID: e.productID,
												purchaseToken: e.purchaseToken,
											});
										}),
											i.length > 0 && e.consumePurchase(n.yaPayments, r, i);
									});
							})
							.catch(function (e) {
								console.log("YG payments unavailable");
							});
					}),
					this.listenTo(e, "sendCommerceAnalytic", function (e) {
						var t = n.getProductFromModel(e);
						n.sendCommerceAnalytic(t);
					});
			}
			return (
				(u.prototype = _.extend(new n(), {
					proVersionPopupTemplate: "advertisement",
					getProductFromModel: function (e) {
						var t = e,
							n;
						return (
							t.slice(0, -1) == "biz_bdgroup_wbwsocial_ya_package"
								? (n = s.get("products").find(function (t) {
										return t._id == e;
								  }))
								: (n = s.get("fullVersion").find(function (t) {
										return t._id == e;
								  })),
							n
						);
					},
					sendCommerceAnalytic: function (e) {
						i.sendBusinessEvent(e), i.sendDesignEvent("earn_virtual_currency:Reason:buy");
					},
				})),
				u
			);
		}
	),
	define(
		"social",
		[
			"controllers/social/abstract",
			"controllers/social/vk",
			"controllers/social/ok",
			"controllers/social/ya",
		],
		function (e, t, n, r) {
			return (function (i) {
				switch (i) {
					case "vk":
						return new t();
					case "cm":
						return new n();
					case "ya":
						return new r();
					default:
						return new e();
				}
			})(getSocial());
		}
	),
	define("text!popups/proVersion/basic.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Купить PRO-версию игры</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="b-get-pro">\n                <div class="b-get-pro__pic">\n                    <img class="b-get-pro__pic-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/pic.png" alt="" />\n                </div>\n                <div class="b-get-pro__list">\n                    <div class="b-get-pro__item <% if (reason == \'unratedCountGames\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/lifes.png"  alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Играй без&nbsp;ограничений с бесконечными&nbsp;жизнями.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'allWords\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/words.png"  alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Просматривай все слова после игры.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'status\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/status.png" alt="">\n                        </div>\n                        <div class="b-get-pro__text">Устанавливай свой уникальный статус.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'quest\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/quests.png" alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Больше заданий (только в PRO–версии навсегда)</div>\n                    </div>\n                </div>\n                <div class="b-get-pro-btns">\n                    <% if (reason != \'quest\') { %>\n                    <div id="buyProForWeekButton" class="b-get-pro-btn b-get-pro-btn_trial">\n                        <div class="b-get-pro-btn__title">Купить PRO-версию</div>\n                        <div class="b-get-pro-btn__price">на 7 дней — <%= prices[0] %></div>\n                    </div>\n                    <% } %>\n                    <div id="buyProForeverButton" class="b-get-pro-btn b-get-pro-btn_full">\n                        <div class="b-get-pro-btn__title">Купить PRO-версию</div>\n                        <div class="b-get-pro-btn__price">навсегда — <%= prices[1] %></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/proVersion/advertisement.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Купить pro-версию игры</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="b-get-pro">\n                <div class="b-get-pro__pic">\n                    <img class="b-get-pro__pic-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/pic.png" alt="" />\n                </div>\n                <div class="b-get-pro__list">\n                    <div class="b-get-pro__item <% if (reason == \'unratedCountGames\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/lifes.png"  alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Играй без&nbsp;ограничений с бесконечными&nbsp;жизнями.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'allWords\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/words.png"  alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Просматривай все слова после игры.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'ads\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/ads.png" alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Не отвлекайся на рекламу, играйте с комфортом.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'status\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/status.png" alt="">\n                        </div>\n                        <div class="b-get-pro__text">Устанавливай свой уникальный статус.</div>\n                    </div>\n                    <div class="b-get-pro__item <% if (reason == \'quest\') print(\'b-get-pro__item_light\') %>">\n                        <div class="b-get-pro__icon">\n                            <img class="b-get-pro__icon-i" src="<%= Application.params.staticUrl %>images/app/popups/pro/quests.png" alt="" />\n                        </div>\n                        <div class="b-get-pro__text">Больше заданий (только в PRO–версии навсегда)</div>\n                    </div>\n                </div>\n                <div class="b-get-pro-btns">\n                    <% if (reason != \'quest\') { %>\n                    <div id="buyProForWeekButton" class="b-get-pro-btn b-get-pro-btn_trial">\n                        <div class="b-get-pro-btn__title">Купить PRO-версию</div>\n                        <div class="b-get-pro-btn__price">на 7 дней — <%= prices[0] %></div>\n                    </div>\n                    <% } %>\n                    <div id="buyProForeverButton" class="b-get-pro-btn b-get-pro-btn_full">\n                        <div class="b-get-pro-btn__title">Купить PRO-версию</div>\n                        <div class="b-get-pro-btn__price">навсегда — <%= prices[1] %></div>\n                    </div>\n                </div>\n            </div>\n        <!-- /.b-popup [text] -->\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/proVersion/library.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Купить pro-версию игры</div>\n    </div>\n    <div class="popup__content">\n\n        <div class="popup__content-wrap">\n            <div class="b-get-pro">\n                <div class="b-get-pro__pic">\n                    <img class="b-get-pro__pic-i" src="<%= Application.params.staticUrl %>images/app/popups/library/pro.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-title">Разбирай и читай одновременно!</div>\n                    <div class="popup__text-info">А также получи преимущества: </div>\n                </div>\n                <div class="pro-advantages">\n                    <div class="pro-advantages__list">\n                        <div class="pro-advantages__item">\n                            <img class="pro-advantages__icon" src="<%= Application.params.staticUrl %>images/app/popups/pro/lifes.png" alt="">\n                            <div class="pro-advantages__text">Бесконечные жизни</div>\n                        </div>\n                        <div class="pro-advantages__item">\n                            <img class="pro-advantages__icon" src="<%= Application.params.staticUrl %>images/app/popups/pro/status.png" alt="">\n                            <div class="pro-advantages__text">Устанавливай свой статус</div>\n                        </div>\n                        <% if (Application.params.availableSocialRV) { %>\n                        <div class="pro-advantages__item">\n                            <img class="pro-advantages__icon" src="<%= Application.params.staticUrl %>images/app/popups/pro/ads.png" alt="">\n                            <div class="pro-advantages__text">Без рекламы</div>\n                        </div>\n                        <% } %>\n                        <div class="pro-advantages__item">\n                            <img class="pro-advantages__icon" src="<%= Application.params.staticUrl %>images/app/popups/pro/words.png" alt="">\n                            <div class="pro-advantages__text">Смотри все слова</div>\n                        </div>\n                        <div class="pro-advantages__item">\n                            <img class="pro-advantages__icon" src="<%= Application.params.staticUrl %>images/app/popups/pro/quests.png" alt="">\n                            <div class="pro-advantages__text">Больше заданий</div>\n                        </div>\n                    </div>\n                </div>\n                <% if (purchase) { %>\n                <div class="b-get-pro-btns">\n                    <div id="buyProForeverButton" class="b-btn b-btn_blue" id="buyProForeverButton">Купить — <%= prices[1] %></div>\n                </div>\n                <% } %>\n            </div>\n        </div>\n\n    </div>\n</div>';
	}),
	define(
		"popups/proVersion/index",
		[
			"application",
			"gate",
			"social",
			"controllers/gameanalytics",
			"collections/popups",
			"models/product",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"popupWidget",
			"text!popups/proVersion/basic.html!strip",
			"text!popups/proVersion/advertisement.html!strip",
			"text!popups/proVersion/library.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = f.extend({
				className: "popup-wrapper",
				templates: {
					basic: l,
					advertisement: c,
					library: h,
				},
				additionalEvents: {
					"click #buyProForWeekButton": "buyProForWeekButtonHandler",
					"click #buyProForeverButton": "buyProForeverButtonHandler",
				},
				initialize: function (r) {
					var i = this,
						o,
						u,
						a = [];
					(this.params = r),
						this.sendAnalytic(),
						purchase &&
							((o = s.get("fullVersion")),
							(u = e.params.currency[social]),
							(a[0] = _.isEmpty(o) ? null : o[0].price + " " + e.methods.declension(o[0].price, u)),
							(a[1] = _.isEmpty(o)
								? null
								: o[1].price + " " + e.methods.declension(o[1].price, u))),
						r.reason || (r.reason = !1),
						r.reason == "library"
							? (this.template = _.template(this.templates.library))
							: (this.template = _.template(this.templates[n.proVersionPopupTemplate])),
						(this.viewParam = {
							Application: e,
							ProductsModel: s,
							prices: a,
						}),
						(this.model = r),
						this.listenTo(t, "orderSuccess", function () {
							i.closePopup();
						});
				},
				buyProForWeekButtonHandler: function () {
					this.buyProVersion("7_days");
				},
				buyProForeverButtonHandler: function () {
					this.buyProVersion("forever");
				},
				buyProVersion: function (e) {
					var n = null;
					switch (e) {
						case "7_days":
							n = s.get("fullVersion")[0];
							break;
						case "forever":
							n = s.get("fullVersion")[1];
					}
					social == "beeline"
						? (this.closePopup(),
						  console.log("purchase confirmation for Beeline"),
						  i.add({
								type: "confirmationPurchase",
								params: {
									product: n,
									productParams: null,
								},
						  }))
						: (t.buyProduct(a, n, null), r.sendDesignEvent("Screen_actions:Premium:" + e));
				},
				sendAnalytic: function () {
					var e, t;
					switch (this.reason) {
						case "unratedCountGame":
							e = "gameLock";
							break;
						case "allWords":
							e = "all_words";
							break;
						case "userStatistic":
							e = "user_statistic";
							break;
						case "status":
							e = "user_status";
							break;
						case "top":
							e = "top";
							switch (o.get("screen")) {
								case "index":
									e = "main_view";
									break;
								case "result":
									e = "game_result";
									break;
								case "userInfo":
									e = "own_stat";
							}
							break;
						default:
							e = "mainView_button";
					}
					this.params.type !== undefined && (t = this.params.type),
						u.event({
							category: "fullVersion",
							action: e,
							label: t,
						});
				},
			});
			return p;
		}
	),
	define("text!popups/newRank.html!strip", [], function () {
		return '<div class="popup">\n        <div class="popup__head">\n            <div class="popup__title">Новый уровень!</div>\n        </div>\n        <div class="popup__content">\n            <div class="popup__content-wrap">\n                \n                <div class="popup__icon">\n                    <div class="b-user b-user_big">\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%=avatar%>" alt="">\n                        </div>\n                        <img src="<%= Application.params.laurelsUrl%>avatar-<%= level %>_big.png" class="b-user__rank" />\n                    </div>\n                </div>\n\n                <div class="popup__text">\n                    <div class="popup__text-title"><%=levelName%></div>\n                    <div class="popup__text-main">Ты достиг нового уровня, получи знак отличия на&nbsp;аватарку.</div>\n                    <div class="popup__checkbox">\n                        <div class="checkbox checked b-wall-post-ctrl">\n                            <span class="b-wall-post-ctrl-i b-wall-post-ctrl-i_checked"></span>\n                            <span class="b-wall-post-ctrl__label">Рассказать друзьям</span>\n                        </div>\n                    </div>\n                    <div class="popup__btns">\n                        <div id="continueButton" class="popup__btns-item b-btn b-btn_blue">Продолжить</div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>';
	}),
	define(
		"popups/newRank",
		[
			"backbone",
			"application",
			"gate",
			"popupWidget",
			"models/user",
			"models/gamePart",
			"text!popups/newRank.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = r.extend({
				template: _.template(o),
				className: "popup-wrapper",
				additionalEvents: {
					"click #continueButton": function () {
						if ($(".checkbox").hasClass("checked")) {
							var e = this.model.get("level"),
								t =
									'Я достиг уровня "' + this.model.get("levelName") + '" в игре "Слово за слово"! ';
							n.wallPost.lvlup(t, e, i.get("socialId"));
						}
						this.closePopup();
					},
					"click .checkbox": function (e) {
						$(e.currentTarget)
							.toggleClass("checked")
							.children()
							.toggleClass("b-wall-post-ctrl-i_checked");
					},
				},
				viewParam: {
					Application: t,
				},
				initialize: function (r) {
					(_this = this), console.log("uwins: ", r.newUwins);
					var o = t.methods.levelForUwins(r.newUwins),
						u = t.methods.levelNameByLevel(o);
					(this.model = new e.Model({
						level: o,
						levelName: u,
						avatar: i.get("avatarBigUrl"),
						boosters: [],
					})),
						this.listenTo(this.model, "change", function () {
							_this.selfRender();
						}),
						s.get("pvp_field_booster").isAvailable &&
							(n.fieldBoosterGetInfo("game"),
							this.listenToOnce(n, "fieldBoosterGetInfo", function (e) {
								var t,
									n,
									r = e.fieldBoosterInfo,
									i = ["freezing", "fire", "whisper", "rotation", "totem", "time_letter"];
								for (t = 0; t < r.length; t += 1)
									r[t].conditions &&
										r[t].conditions.game &&
										_.indexOf(i, r[t].alias) &&
										r[t].conditions.game.level.from == this.model.get("level") &&
										((n = this.model.get("boosters")),
										n.push(r[t]),
										this.model.set({
											boosters: n,
										}));
								this.model.get("boosters").length > 0 && this.model.trigger("change");
							})),
						n.sendAppEvent(i, "level", this.model.get("level"));
				},
				afterRender: function () {
					t.params.availableSocialFriends || $(".b-wall-post-ctrl").hide().removeClass("checked");
				},
			});
			return u;
		}
	),
	define("text!popups/text.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title"><%=(header)? header : \'&nbsp;\'%></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="popup__text-title"><%=text%></div>\n                <% if(list) { %>\n                <ul class="popup__text-list">\n                <%\n                    _.each(list,function(li){\n                        print(\'<li>\'+li+\'</li>\');\n                    })\n\n                %>\n                </ul>\n                <% } %>\n                <% if (cursiv) { %>\n                <div class="popup__text-info"><%=cursiv%></div>\n                <% } %>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("popups/text", ["popupWidget", "text!popups/text.html!strip"], function (e, t) {
		var n = e.extend({
			template: _.template(t),
			tagName: "div",
			className: "popup-wrapper",
			initialize: function (e) {
				this.model = _.extend(
					{
						header: null,
						text: null,
						list: null,
						cursiv: null,
					},
					e
				);
			},
		});
		return n;
	}),
	define("text!popups/server.html!strip", [], function () {
		return '<div class="popup popup_server">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title"><%=title?title:\'Сообщение\'%></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <%  if (typeof image !== \'undefined\') { %>\n                <div class="popup__icon" style="background-image: url(\'<%=image.url%>\');">\n                </div>\n            <% } %>\n            <div class="popup__text popup__text_server">\n                <% if (typeof textTitle !== \'undefined\') { %>\n                    <div class="popup__text-title"><%=textTitle%></div>\n                <% } %>\n                \n                <% if (typeof text !== \'undefined\') { %>\n                    <div class="popup__text-main"><%=text%></div>\n                <% } %>\n                \n            </div>\n            <% if(typeof button !== \'undefined\') { %>\n                <div class="popup__btns">\n                    <div id="abstractButton" class="popup__btns-item b-btn b-btn_blue"><%=button.text%></div>\n                </div>\n            <% } %>\n        </div>\n        \n    </div>\n</div>';
	}),
	define(
		"popups/server",
		[
			"gate",
			"popupWidget",
			"collections/popups",
			"models/appState",
			"models/user",
			"text!popups/server.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				template: _.template(s),
				className: "popup-wrapper",
				additionalEvents: {
					"click #abstractButton": "redirect",
					"click #noMoreButton": function () {
						e.hideCampaignPopup(this.model.campaignId), this.closePopup();
					},
				},
				initialize: function (e) {
					var t = this;
					(this.model = e), "button" in e && (this.buttonTarget = e.button.target);
				},
				redirect: function () {
					switch (this.buttonTarget) {
						case -2:
							n.add({
								type: "proVersion",
							});
							break;
						case 3:
							r.setScreen({
								screen: "userInfo",
								params: {
									id: i.get("id"),
								},
							});
							break;
						case 4:
							r.setScreen({
								screen: "achievements",
							});
							break;
						case 5:
							r.setScreen({
								screen: "products",
							});
							break;
						case 6:
							r.setScreen({
								screen: "notifications",
							});
							break;
						case 7:
							break;
						case 8:
							break;
						case 9:
							break;
						case 10:
							break;
						case 11:
							break;
						case 12:
							break;
						case 13:
							break;
						case 14:
					}
					this.closePopup();
				},
			});
			return o;
		}
	),
	define("text!popups/chat/blockOp.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Заблокировать пользователя?</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="popup__text-title">Заблокированный игрок не&nbsp;сможет писать тебе личные сообщения, при&nbsp;этом ты&nbsp;можешь продолжать с&nbsp;ним играть</div>\n                <div class="popup__text-info">Разблокировать собеседника можно на&nbsp;экране «Настройки» (пункт «Заблокированные»).</div>\n            </div>\n        \n            <div class="popup__btns popup__btns_confirm">\n                <div class="popup__btns-item b-btn b-btn_grey decline">Нет</div>\n                <div class="popup__btns-item b-btn b-btn_blue accept">Да</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/chat/blockOp",
		["popupWidget", "controllers/chat", "text!popups/chat/blockOp.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click .accept": "blockOp",
				},
				blockOp: function () {
					t.blockOp(this.model), this.closePopup();
				},
			});
			return r;
		}
	),
	define("text!popups/share.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Играй с друзьями</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/share.jpg" alt="">\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Играть с&nbsp;друзьями веселей, ты&nbsp;сможешь бросать им&nbsp;вызовы и&nbsp;побеждать. </div>\n            </div>\n            <div class="popup__btns">\n                <div id=\'shareButton\' class="popup__btns-item b-btn b-btn_blue">Рассказать друзьям</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/share",
		["gate", "application", "controllers/analytic", "popupWidget", "text!popups/share.html!strip"],
		function (e, t, n, r, i) {
			var s = r.extend({
				template: _.template(i),
				className: "popup-wrapper",
				additionalEvents: {
					"click #close": function () {
						n.event({
							category: "popup",
							action: "share",
							label: "close",
						}),
							this.closePopup();
					},
					"click #shareButton": function () {
						n.event({
							category: "popup",
							action: "share",
							label: "clickShare",
						}),
							e.wallPost.share(),
							this.closePopup();
					},
				},
				initialize: function () {
					n.event({
						category: "popup",
						action: "share",
						label: "view",
					}),
						(this.viewParam = {
							Application: t,
						});
				},
			});
			return s;
		}
	),
	define("text!widgets/balance/product.html!strip", [], function () {
		return '<%\nvar product = this.model;\n%>\n\n<% if (product.numberFirstPurchase > 0) { %>\n<div class="product__bonus"> \n	<div class="product__bonus-text">\n		+<%=product.number%>\n		<img class="product__bonus-icon" src="<%= Application.params.staticUrl %>images/app/balance/icon-coin.png" alt="">\n	</div>\n</div>\n<% } %>\n\n<% if(product.isHit > 0) { %>\n<div class="product__label product__label_hit">ХИТ ПРОДАЖ</div>\n<% } else if (product.isBestPrice) { %>\n<div class="product__label product__label_best">ЛУЧШАЯ ЦЕНА</div>\n<% } %>\n\n<img class="product__icon" src="<%= product.imageUrl %>" alt="">\n\n<div class="product__amount">\n	<span class="product__amount-data"><%= new Intl.NumberFormat(\'ru-RU\').format(product.number)%></span>\n	<img class="product__amount-icon" src="<%= Application.params.staticUrl %>images/app/balance/icon-coin.png" alt="">\n</div>\n<div class="product__price">\n	<%= new Intl.NumberFormat(\'ru-RU\').format(product.price)%>\n	<%=Application.methods.declension(product.price, Application.params.currency[social])%>\n</div>\n';
	}),
	define(
		"widgets/balance/product",
		[
			"application",
			"gate",
			"widget",
			"social",
			"controllers/gameanalytics",
			"collections/popups",
			"models/product",
			"models/user",
			"models/appState",
			"controllers/analytic",
			"text!widgets/balance/product.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = n.extend({
				template: _.template(l),
				events: {
					click: "productHandler",
				},
				tagName: "div",
				initialize: function (t) {
					var n = t.context;
					(this.el.className =
						n == "popup"
							? "product product_popup products-list__item"
							: "product products-list__item"),
						(this.viewParam = {
							ProductModel: o,
							Application: e,
						});
				},
				sendAnalytic: function () {
					var e;
					switch (a.get("screen")) {
						case "game":
							(e = "Игровое поле"),
								i.sendDesignEvent("Screen_actions:Play_field_PvP:buy_" + this.model.number);
							break;
						case "clanBattle":
							i.sendDesignEvent("Screen_actions:Play_field_clan:buy_" + this.model.number);
							break;
						case "achievements":
							i.sendDesignEvent("Screen_actions:Achievements:buy_" + this.model.number);
							break;
						case "products":
							(e = "Баланс"), i.sendDesignEvent("Screen_actions:Balance:buy_" + this.model.number);
							break;
						case "result":
							e = "Результаты игры";
					}
					var t = "Покупка " + this.model.number + " монет";
					f.event({
						category: "screen",
						action: e,
						label: t,
					});
				},
				productHandler: function () {
					var e = this;
					social == "beeline"
						? (console.log("purchase confirmation for Beeline"),
						  s.add({
								type: "confirmationPurchase",
								params: {
									product: e.model,
									productParams: null,
								},
						  }))
						: this.buyProduct();
				},
				buyProduct: function () {
					var e = this;
					this.sendAnalytic(),
						this.listenToOnce(t, "orderSuccess", function () {
							u.get("countOfPayments") == 1
								? i.sendDesignEvent("earn_virtual_currency:Reason:buy_first_time")
								: i.sendDesignEvent("earn_virtual_currency:Reason:buy_again");
						}),
						t.buyProduct(u, this.model, null);
				},
			});
			return c;
		}
	),
	define("text!popups/balance/buyCoins.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title">Пополнить баланс</div>\n    </div>\n    <div class="popup__content">\n        <div class="balance balance_popup">\n            <div class="balanceList products-list products-list_popup">\n\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/balance/buyCoins",
		[
			"popupWidget",
			"gate",
			"models/product",
			"widgets/balance/product",
			"text!popups/balance/buyCoins.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				className: "popup-wrapper",
				template: _.template(i),
				initialize: function () {
					var e = this;
					this.listenToOnce(t, "orderSuccess", function () {
						e.closePopup();
					});
				},
				afterRender: function () {
					var e = this,
						t = n.get("shortList");
					$(".balanceList").html(""),
						_.each(t, function (e) {
							$(".balanceList").append(
								new r({
									model: e,
									context: "popup",
								}).returnableRender()
							);
						}),
						social == "beeline" &&
							$(".products-list__item").click(function () {
								e.closePopup();
							});
				},
			});
			return s;
		}
	),
	define("text!popups/confirmationPurchase.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title"><%=(this.product.description)? this.product.description : \'Подтверждение действия\'%></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="popup__text-title">Ты хочешь совершить покупку?</div>\n                \n                <div class="popup__btns popup__btns_confirm">\n                    <div class="popup__btns-item b-btn b-btn_grey closePopup">Нет</div>\n                    <div class="popup__btns-item b-btn b-btn_blue closePopup" id="purchaseConfirmationButton">Да</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/confirmationPurchase",
		[
			"popupWidget",
			"gate",
			"controllers/gameanalytics",
			"models/user",
			"text!popups/confirmationPurchase.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .closePopup": function () {
						this.closePopup();
					},
					"click #purchaseConfirmationButton": "purchaseConfirmationHandler",
				},
				initialize: function (e) {
					console.log("ConfirmationPurchasePopupWidget params: ", e),
						(this.product = e.product),
						(this.productParams = e.productParams);
				},
				purchaseConfirmationHandler: function () {
					console.log("purchaseConfirmationHandler");
					var e = this.product,
						i = this.productParams;
					console.log("product params: ", i);
					if (e.number)
						switch (this.product.number) {
							case 98:
								n.sendDesignEvent("Screen_actions:Premium:7_days");
								break;
							case 99:
								n.sendDesignEvent("Screen_actions:Premium:forever");
						}
					t.buyProduct(r, e, i), $("#contentLoader").fadeIn(300);
				},
			});
			return s;
		}
	),
	define("text!popups/tourneys/result.html!strip", [], function () {
		return '<% var currentReward = this.getCurrentReward();%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Поздравляем!</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="tourneys-result tourneys-result_popup">\n                <div class="tourneys-result__place tourneys-result__place_group<%= currentReward.style %>">\n                    <div class="tourneys-result__place-text"><%= game.rank %>-е место</div>\n                </div>\n                <div class="tourneys-result__data">\n\n                    <div class="tourneys-result__data-place">\n                        Ты занял\n                        <span class="tourneys-result__data-place-number tourneys-result__data-place-number_group<%= game.rank %>">\n                            <%= game.rank %>-е место\n                        </span>,\n                        набрав <%= game.scores %> <%= this.methods.declension(game.scores, [\'очко\', \'очка\', \'очков\']) %>\n                    </div>\n\n                    <% if (currentReward) { %>\n                    <div class="tourneys-result__data-prize">\n                        Выигрыш составил\n                        <% if (currentReward.coins > 0) { %>\n                        <%= currentReward.coins %>\n                        <span class="tourneys-result__data-prize-coin"></span>\n                        <%= this.methods.declension(currentReward.coins, [\'монета\', \'монеты\', \'монет\']) %>\n                        <% } %>\n                        <% if (currentReward.rating > 0 && currentReward.coins > 0) { %>\n                        и&nbsp;\n                        <% } %>\n                        <% if (currentReward.rating > 0) { %>\n                        <%= currentReward.rating %>\n                        <span class="tourneys-result__data-prize-rate"></span>\n                        <%= this.methods.declension(currentReward.rating, [\'очко\', \'очка\', \'очков\']) %> рейтинга\n                        <% } %>\n                    </div>\n                    <% } %>\n\n                </div>\n                <!-- /.tourneys-result__data -->\n            </div>\n            <!-- /.tourneys-result -->\n\n            <div class="popup__btns">\n                <div id=\'shareButton\' class="popup__btns-item b-btn b-btn_blue">Рассказать друзьям</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/tourneys/result",
		[
			"gate",
			"popupWidget",
			"collections/popups",
			"models/user",
			"models/tourney",
			"methods",
			"text!popups/tourneys/result.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = t.extend({
				template: _.template(o),
				methods: s,
				className: "popup-wrapper",
				additionalEvents: {
					"click #shareButton": function () {
						e.wallPost.tourneyResult(this.model);
					},
				},
				tagName: "div",
				initialize: function (e) {
					this.model = new i(e.tourney);
				},
				getCurrentReward: function () {
					var e = this.model.get("manage").reward,
						t = 0;
					for (var n in e) {
						t++;
						if (!("ownReward" in this.model.get("game"))) return !1;
						if (e[n].startPosition == this.model.get("game").ownReward.startPosition)
							return _.extend(e[n], {
								style: t,
							});
					}
				},
			});
			return u;
		}
	),
	define("text!popups/videoReward/words.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title">Посмотреть все слова</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="b-popup__reward">\n                <img class="b-popup__reward__icon-words" src="<%=Application.params.staticUrl%>images/app/popups/pro/pic.png" alt="" />\n                <p class="b-popup__reward__title">Открой просмотр всех слов на поле:</p>\n                <div class="b-popup__reward__ctrl">\n                    <div class="b-popup__reward__ctrl-i">\n                        <div id="buyProButton" class="b-btn b-btn_pro b-popup__reward__ctrl__item">Получи бесконечный доступ</div>\n                        <p class="b-popup__reward__ctrl__info">в Pro-версии за <%= ProductsModel.get(\'fullVersion\')[1].price %> <%= Application.methods.declension(ProductsModel.get(\'fullVersion\')[0].price, Application.params.currency[social]) %></p>\n                    </div>\n                    <% if (rvAvailableCount > 0) { %>\n                    <div id="videoButton" class="b-btn b-btn_video b-popup__reward__ctrl__item">Открой 1 раз бесплатно</div>\n                    <p class="b-popup__reward__ctrl__info">за просмотр видео</p>\n                    <% } else { %>\n                    <div class="b-btn b-btn_video b-btn_video-noads b-popup__reward__ctrl__item">Открой 1 раз бесплатно</div>\n                    <p class="b-popup__reward__ctrl__info">Будет доступно через <%=Application.methods.getFormattedTime(rvRestoreTime)%></p>\n                    <% } %>\n                </div>\n            </div>\n            <!-- /.b-popup [reward] -->\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/videoReward/words",
		[
			"popupWidget",
			"gate",
			"application",
			"social",
			"collections/popups",
			"controllers/analytic",
			"models/product",
			"models/user",
			"text!popups/videoReward/words.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				className: "popup-wrapper",
				template: _.template(a),
				additionalEvents: {
					"click #close": function () {
						s.event({
							category: "popup",
							action: "rewardVideoWords",
							label: "close",
						}),
							this.closePopup();
					},
					"click #buyProButton": function () {
						s.event({
							category: "popup",
							action: "videoRewardWords",
							label: "clickBuyPro",
						}),
							t.buyProduct(u, o.get("fullVersion")[1], null),
							this.closePopup();
					},
					"click #videoButton": function (e) {
						s.event({
							category: "popup",
							action: "rewardVideoWords",
							label: "clickVideo",
						}),
							i.add({
								type: "videoRewardConfirm",
								params: {
									rewardType: "words",
								},
							}),
							this.closePopup();
					},
				},
				initialize: function () {
					var e = r.ad;
					s.event({
						category: "popup",
						action: "rewardVideoWords",
						label: "view",
					}),
						(this.viewParam = {
							Application: n,
							ProductsModel: o,
							rvAvailableCount: e.availableViewCount.wordList,
							rvRestoreTime: moment(r.ad.videoRestoreTime.wordList * 1e3).diff(moment()),
						});
				},
				afterRender: function () {
					purchase || $(".b-popup__reward__ctrl-i").hide();
				},
			});
			return f;
		}
	),
	define("text!popups/videoReward/lifes.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title">Пополни жизни!</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="b-popup__reward">\n                <div class="b-popup__reward__lifes">\n                <%      \n\n                    var restore = Params.count - Params.lifes;\n\n                    // full\n                    if(Params.isFull && Params.countOther == 0) {\n                        for (var i=0; i<Params.count; i++) {%>\n                            <div class="b-popup__reward__lifes__item b-popup__reward__lifes__item_full"></div>\n                    <%  } \n                    }\n                    // overload\n                    else if (Params.countOther >0 ) { %>\n                        <div class="b-popup__reward__lifes__overload"><%=Params.lifes%></div>\n                    <%\n                    }\n                    // !full\n                    else {\n                        for (var i=0; i<Params.count; i++) { \n                            if (i < Params.count - restore ) {%>\n                            <div class="b-popup__reward__lifes__item b-popup__reward__lifes__item_full"></div>\n                            <%}\n                            else {%>\n                            <div class="b-popup__reward__lifes__item"></div>\n                            <%}%>\n                        <%}\n                    }\n                %>\n                    \n                </div>\n                \n            <%  // full\n            if (Params.isFull) {%>\n                <p class="b-popup__reward__title">У тебя <%=Params.lifes%> <%=Application.methods.declension(Params.lifes,[\'жизнь\',\'жизни\',\'жизней\'])%> </p>\n                <div class="b-popup__reward__ctrl">\n                    <div class="b-popup__reward__ctrl-i">\n                        <div id="buyProButton" class="b-btn b-btn_pro b-popup__reward__ctrl__item">Получи бесконечные жизни</div>\n                        <p class="b-popup__reward__ctrl__info">\n                        в Pro-версии за <%= ProductsModel.get(\'fullVersion\')[1].price %> \n                        <%= Application.methods.declension(ProductsModel.get(\'fullVersion\')[0].price, Application.params.currency[social]) %></p>\n                    </div>\n                </div>\n                <%} \n                // !full\n            else {%>\n                <p class="b-popup__reward__life-count">До восстановления <%=restore%> <%=Application.methods.declension(restore,[\'жизни\',\'жизней\',\'жизней\'])%></p>\n                <p class="b-popup__reward__life-time"><%=Params.restoreTime%></p>\n                <div class="b-popup__reward__ctrl">\n                    <div class="b-popup__reward__ctrl-i">\n                        <div id="buyProButton" class="b-btn b-btn_pro b-popup__reward__ctrl__item">Получи бесконечные жизни</div>\n                        <p class="b-popup__reward__ctrl__info">\n                        в Pro-версии за <%= ProductsModel.get(\'fullVersion\')[1].price %> \n                        <%= Application.methods.declension(ProductsModel.get(\'fullVersion\')[0].price, Application.params.currency[social]) %></p>\n                    </div>\n                    <% if (rvAvailableCount > 0) { %>\n                    <div id="videoButton" class="b-btn b-btn_video b-popup__reward__ctrl__item">Получи 1 жизнь бесплатно</div>\n                    <p class="b-popup__reward__ctrl__info">за просмотр видео</p>\n                    <% } else { %>\n                    <div class="b-btn b-btn_video b-btn_video-noads b-popup__reward__ctrl__item">Получи 1 жизнь бесплатно</div>\n                    <p class="b-popup__reward__ctrl__info">Будет доступно через <%=Application.methods.getFormattedTime(rvRestoreTime)%></p>\n                    <% } %>\n                </div>\n            <%}%>\n                \n            </div>\n            <!-- /.b-popup [reward] -->\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/videoReward/lifes",
		[
			"popupWidget",
			"gate",
			"application",
			"social",
			"collections/popups",
			"controllers/gameanalytics",
			"controllers/analytic",
			"models/product",
			"models/user",
			"text!popups/videoReward/lifes.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = e.extend({
				className: "popup-wrapper",
				template: _.template(f),
				additionalEvents: {
					"click #close": function () {
						o.event({
							category: "popup",
							action: "rewardVideoLifes",
							label: "close",
						}),
							this.closePopup();
					},
					"click #buyProButton": function () {
						o.event({
							category: "popup",
							action: "rewardVideoLifes",
							label: "clickBuyPro",
						}),
							t.buyProduct(a, u.get("fullVersion")[1], null),
							s.sendDesignEvent("Screen_actions:life_popup:premium"),
							this.closePopup();
					},
					"click #videoButton": function (e) {
						o.event({
							category: "popup",
							action: "rewardVideoLifes",
							label: "clickVideo",
						}),
							s.sendDesignEvent("Screen_actions:life_popup:watch_ads"),
							i.add({
								type: "videoRewardConfirm",
								params: {
									rewardType: "lifes",
								},
							}),
							this.closePopup();
					},
				},
				initialize: function (e) {
					var t = r.ad;
					o.event({
						category: "popup",
						action: "rewardVideoLifes",
						label: "view",
					}),
						(this.viewParam = {
							Application: n,
							ProductsModel: u,
							Params: e,
							rvAvailableCount: t.availableViewCount.life,
							rvRestoreTime: moment(r.ad.videoRestoreTime.life * 1e3).diff(moment()),
						});
				},
				afterRender: function () {
					purchase || $(".b-popup__reward__ctrl-i").hide();
				},
			});
			return l;
		}
	),
	define("text!popups/videoReward/confirm.html!strip", [], function () {
		return "<%\nvar title, text, action;\nvar staticUrl = Application.params.staticUrl;\n\nswitch(type) {\n    case 'lifes':\n        pic = staticUrl + 'images/app/pic-reward-video.png';\n        title = 'Получить 1 жизнь';\n        text = 'Посмотреть видео и получить дополнительную жизнь?';\n        action = 'getVideoForLifes';\n        break;\n    case 'words':\n        pic = staticUrl + 'images/app/pic-reward-video.png';\n        title = 'Все слова';\n        text = 'Посмотреть видео и открыть все слова?';\n        action = 'getVideoForWords';\n        break;\n    case 'library':\n        pic = staticUrl + 'images/app/pic-reward-video.png';\n        title = 'Чтение';\n        text = 'Посмотреть видео и ускорить чтение?';\n        action = 'getVideoForLibrary';\n        break;\n    case 'coins':\n        pic = staticUrl + 'images/app/pic-reward-video.png';\n        title = 'Монеты бесплатно';\n        text = 'Посмотреть видео и получить ' + rewardCoins + ' ' + Application.methods.declension(rewardCoins,['монета','монеты','монет']) + '?';\n        action = 'getVideoForCoins';\n        break;\n    case 'coinsFromIndex':\n        pic = Application.params.userCommonProperties.rewardVideoIconSettings.popup.image;\n        title = 'Монеты за видео';\n        text = 'Посмотреть видео и получить ' + rewardCoins + ' ' + Application.methods.declension(rewardCoins,['монета','монеты','монет']) + '?';\n        action = 'getVideoForCoins';\n        break;\n}\n%>\n\n<div class=\"popup\">\n    <div class=\"popup__head\">\n        <div class=\"popup__close closePopup\"></div>\n        <div class=\"popup__title\"><%=title%></div>\n    </div>\n    <div class=\"popup__content\">\n        <div class=\"popup__content-wrap\">\n            <div class=\"b-popup__reward\">\n                <img class=\"b-popup__reward__pic\" src=\"<%=pic%>\" alt=\"\" />\n                <p class=\"b-popup__reward__text\"><%=text%></p>\n            </div>\n            <div class=\"popup__btns popup__btns_confirm\">\n                <div class=\"popup__btns-item b-btn b-btn_grey closePopup\">Нет</div>\n                <div id=\"videoRewardConfirm\" data-action='<%=action%>' class=\"popup__btns-item b-btn b-btn_blue\">Да</div>\n            </div>\n            <% if (type == 'coinsFromIndex') { %>\n            <div id=\"noMoreButton\" class=\"popup__hide\">\n                <span class=\"popup__hide-ctrl\">Скрыть на 24 часа</span>\n            </div>\n            <% } %>\n        </div>\n    </div>\n</div>";
	}),
	define(
		"popups/videoReward/confirm",
		[
			"application",
			"gate",
			"social",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"popupWidget",
			"text!popups/videoReward/confirm.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = o.extend({
				className: "popup-wrapper",
				template: _.template(u),
				additionalEvents: {
					"click .closePopup": function () {
						i.event({
							category: "popup",
							action: "rewardVideoConfirm",
							label: "close",
						}),
							this.closePopup();
					},
					"click #videoRewardConfirm": function (e) {
						var t = $(e.currentTarget).data("action");
						n.ad[t](), this.closePopup();
					},
					"click #noMoreButton": function () {
						localStorage.setItem(
							s.get("id") + "_freeCoinsHide",
							e.methods.getCurrentTimestamp() + 86400
						),
							$("#videoRewardCtrl").hide(),
							this.closePopup();
					},
				},
				initialize: function (t) {
					var n = e.params.services.adsSettings.rewardVideo.coins.reward;
					(this.params = t),
						(this.viewParam = {
							Application: e,
							type: this.params.rewardType,
							rewardCoins: n,
						});
				},
			});
			return a;
		}
	),
	define("text!popups/quest/replace.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Заменить задание</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n        \n            <div class="popup__text">\n                <div class="popup__text-title">Ты хочешь заменить это задание?</div>\n                <div class="popup__text-info">Эта функция доступна бесплатно 1 раз в 1 д. 0 ч. 0 мин.</div>\n            </div>\n            <!-- /.b-popup [text] -->\n            <div class="popup__btns popup__btns_confirm">\n                <div class="decline popup__btns-item b-btn b-btn_grey">Нет</div>\n                <div class="accept popup__btns-item b-btn b-btn_blue">Да</div>\n            </div>\n        \n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/quest/replace",
		[
			"gate",
			"application",
			"popupWidget",
			"controllers/gameanalytics",
			"models/appState",
			"models/quest",
			"text!popups/quest/replace.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = n.extend({
				template: _.template(o),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click .accept": "replace",
				},
				initialize: function (e) {
					this.params = e;
					var n = s.get("questParams").questChangePeriod,
						r = t.methods.getDaysHoursMinutesFromMS((n * 1e3) / 2);
					this.viewParam = {
						period: r,
					};
				},
				replace: function () {
					e.questReplace(this.params.id),
						this.closePopup(),
						r.sendDesignEvent("Screen_actions:Daily_quests:swap");
				},
			});
			return u;
		}
	),
	define("text!popups/quest/rewardInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Награда</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="popup__text-title">Выполни задание и получи большую награду</div>\n                <div class="popup-reward popup-reward_quest-info">\n                    \n                    <div class="popup-reward__list">\n                    <% \n                    reward.forEach(function(el) {\n                        if (el.rewardType == \'tokensOnceConst\') {\n                            %>\n                            <div class="popup-reward__item popup-reward__item_coins">\n                                <div class="popup-reward__count">+<%= el.count %></div>\n                                <div class="popup-reward__icon">\n                                    <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/season-pass/icon-token.png" alt="">\n                                    <div class="popup-reward__name">Жетоны</div>\n                                </div>\n                            </div>\n                            <% } \n                        if (el.rewardType == \'coinsOnceConst\') {\n                        %>\n                        <div class="popup-reward__item popup-reward__item_coins">\n                            <div class="popup-reward__count">+<%= el.count %></div>\n                            <div class="popup-reward__icon">\n                                <img class="popup-reward__icon-img" src="<%= Application.params.staticUrl %>images/app/icons/coin.png" alt=""> \n                                <div class="popup-reward__name">Монеты</div>\n                            </div>\n                        </div>\n                        <% } \n                        if (el.rewardType == \'fieldBoosterOnceConst\') {\n                        %>\n                        <div class="popup-reward__item popup-reward__item_booster">\n                            <div class="popup-reward__count">+<%= el.count %></div>\n                            <div class="popup-reward__icon">\n                                <img class="popup-reward__icon-img" src="<%= el.info.imageActiveUrl %>" alt=""> \n                                <span class="popup-reward__name">Усиление «<%= el.info.title %>»</span>\n                            </div>\n                        </div>\n                        <% } %>\n                    <%\n                    });\n                    %>\n                    </div>\n\n                </div>\n                <!-- /.popup-reward -->\n            </div>\n            <!-- /.popup__text -->\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/quest/rewardInfo",
		["popupWidget", "application", "text!popups/quest/rewardInfo.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
							reward: this.params.reward,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	define("text!popups/static/blank.html!strip", [], function () {
		return '<div class="popup popup_blank">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%= this.params.title %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap" data-simplebar>\n            <%= this.params.content %>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/static/boostersFlask.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title">Интеллект</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon"><img class="popup__icon-img" src="<%=Application.params.staticUrl%>images/app/clan/flask.png" alt= ""></div>\n            <div class="popup__text">\n                <div class="popup__text-title">Что такое Интеллект?</div>\n                <div class="popup__text-info">В бой можно взять ограниченное количество Усилений в рамках уровня Интеллекта. Улучшить Интеллект можно в Библиотеке.</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/static/questInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Внимание</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__text">\n                <div class="popup__text-title">Задания выполняются в&nbsp;ходе игр с&nbsp;соперниками и&nbsp;выполнения клановых заданий.</div>\n                <div class="popup__text-main">Наслаждайся игрой, параллельно выполняя задания.</div>\n            </div>\n            <div class="popup__btns">\n                <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Понятно</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/static/index",
		[
			"popupWidget",
			"application",
			"text!popups/static/blank.html!strip",
			"text!popups/static/boostersFlask.html!strip",
			"text!popups/static/questInfo.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				templates: {
					blank: n,
					boostersFlask: r,
					questInfo: i,
				},
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						"template" in e && (this.template = _.template(this.templates[e.template])),
						(this.viewParam = {
							Application: t,
						});
				},
				beforeRender: function () {
					return $("#cover").fadeIn(300), this;
				},
				afterRender: function () {
					social == "ya" && $("#popup a").contents().unwrap();
				},
			});
			return s;
		}
	),
	define("controllers/gate", ["gate", "status", "models/storage"], function (e, t, n) {
		function r() {}
		(r.prototype.tipStorage = new n().setStorageInfo({
			key: "ut",
		})),
			(r.prototype.clanTaskStorage = new n().setStorageInfo({
				key: "ct",
			})),
			(r.prototype.requestId = 1),
			(r.prototype.resultStack = {}),
			(r.prototype.clothesShopBuyItemStack = {}),
			(r.prototype.buyChaseShopItemStack = {}),
			(r.prototype.clothesCopyCraftFinishStack = {}),
			(r.prototype.libraryBookReadFinishStack = {}),
			(r.prototype.libraryBookDisassembleFinishStack = {}),
			(r.prototype.sendResult = function (t, r) {
				var i = new n().setStorageInfo({
						key: t,
					}),
					s = i.get("result"),
					o = i.get("roundId");
				s && o == r
					? (e.sendResults(o, s, [], this.requestId),
					  (this.resultStack[this.requestId] = t),
					  ++this.requestId)
					: e.sendEmptyResults(r);
			}),
			(r.prototype.useTip = function (t) {
				this.tipStorage.set(this.requestId, t), e.useTip([t], this.requestId), ++this.requestId;
			}),
			(r.prototype.checkUsedTips = function () {
				_.isEmpty(this.tipStorage.attributes) ||
					e.useTip(_.values(this.tipStorage.attributes), "utClear");
			}),
			(r.prototype.sendClanBattleResult = function () {
				_.isEmpty(this.clanTaskStorage.attributes) ||
					e.clanBattleResult(this.clanTaskStorage.attributes, "ctClear");
			}),
			(r.prototype.libraryBookReadFinish = function (t, n) {
				e.libraryBookReadFinish(t, n, this.requestId),
					(this.libraryBookReadFinishStack[this.requestId] = t),
					++this.requestId;
			}),
			(r.prototype.checkLibraryBookReadFinish = function (e) {
				var t = _.indexOf(_.values(i.libraryBookReadFinishStack), e) != -1 ? !0 : !1;
				return t;
			}),
			(r.prototype.libraryBookDisassembleFinish = function (t, n) {
				e.libraryBookDisassembleFinish(t, n, this.requestId),
					(this.libraryBookDisassembleFinishStack[this.requestId] = t),
					++this.requestId;
			}),
			(r.prototype.checkLibraryBookDisassembleFinish = function (e) {
				var t = _.indexOf(_.values(i.libraryBookDisassembleFinishStack), e) != -1 ? !0 : !1;
				return t;
			}),
			(r.prototype.clothesCopyCraftFinish = function (t, n, r) {
				e.clothesCopyCraftFinish(t, n, r, this.requestId),
					(this.clothesCopyCraftFinishStack[this.requestId] = n),
					++this.requestId;
			}),
			(r.prototype.checkClothesCopyCraftFinish = function (e) {
				var t = _.indexOf(_.values(i.clothesCopyCraftFinishStack), e) != -1 ? !0 : !1;
				return t;
			}),
			(r.prototype.clothesShopBuyItem = function (t) {
				e.clothesShopBuyItem(t, this.requestId),
					(this.clothesShopBuyItemStack[this.requestId] = t),
					++this.requestId;
			}),
			(r.prototype.checkClothesShopBuyItem = function (e) {
				var t = _.indexOf(_.values(i.clothesShopBuyItemStack), e) != -1 ? !0 : !1;
				return t;
			}),
			(r.prototype.buyChaseShopItem = function (t) {
				e.buyChaseShopItem(t, this.requestId),
					(this.buyChaseShopItemStack[this.requestId] = t),
					++this.requestId;
			}),
			(r.prototype.checkChaseShopBuyItem = function (e) {
				var t = _.indexOf(_.values(i.buyChaseShopItemStack), e) != -1 ? !0 : !1;
				return t;
			}),
			_.extend(r.prototype, Backbone.Events);
		var i = new r();
		return (
			i.listenTo(e, "sendResults", function (t) {
				var n = t.hash;
				n && n in i.resultStack && (e.storage.remove(i.resultStack[n]), delete i.resultStack[n]);
			}),
			i.listenTo(e, "useTip", function (e) {
				var t = e.hash;
				switch (t) {
					case "":
						break;
					case "utClear":
						i.tipStorage.clear();
						break;
					default:
						i.tipStorage.unset(t);
				}
			}),
			i.listenTo(e, "clanBattleResult", function (e) {
				var t = e.hash;
				switch (t) {
					case "":
						break;
					case "ctClear":
						console.log("ctClear"), i.clanTaskStorage.clear();
				}
			}),
			i.listenTo(e, "libraryBookReadFinish", function (e) {
				var t = e.hash;
				t && t in i.libraryBookReadFinishStack && delete i.libraryBookReadFinishStack[t];
			}),
			i.listenTo(e, "clothesCopyCraftFinish", function (e) {
				var t = e.hash;
				t && t in i.clothesCopyCraftFinishStack && delete i.clothesCopyCraftFinishStack[t],
					console.log("controller.clothesCopyCraftFinishStack: ", i.clothesCopyCraftFinishStack);
			}),
			i.listenTo(e, "clothesShopBuyItem", function (e) {
				var t = e.hash;
				t && t in i.clothesShopBuyItemStack && delete i.clothesShopBuyItemStack[t];
			}),
			i.listenTo(e, "buyChaseShopItem", function (e) {
				var t = e.hash;
				t && t in i.buyChaseShopItemStack && delete i.buyChaseShopItemStack[t];
			}),
			t("auth").done(function () {
				i.checkUsedTips(), i.sendClanBattleResult();
			}),
			i
		);
	}),
	define("text!popups/library/boost.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Ускорить</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/acceleration.png" alt=""></div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">\n                    <% if (this.params.type == \'reading\') { %>\n                        Прочитай мгновенно\n                        или ускорь чтение.\n                    <% } else { %>\n                        Забери свитки мгновенно\n                        или ускорь разбор.\n                    <% } %>\n                </div>\n            </div>\n            <%\n            var id = this.params.id;\n            var finishButtonIsAvailable = (this.params.type == \'reading\')? !GateController.checkLibraryBookReadFinish(id) : !GateController.checkLibraryBookDisassembleFinish(id);\n            %>\n            <div class="popup__btns popup__btns_rv">\n                <div id="boostByRV" class="popup__btns-item b-btn b-btn_video">Ускорить на <%=Application.methods.getDaysHoursMinutesFromMS(this.params.reduceRvTime * 1000)%></div>\n                <div id="<%=(finishButtonIsAvailable)? \'boostByCoins\' : \'\'%>" class="popup__btns-item b-btn b-btn_blue">\n                    <% if (this.params.type == \'reading\') { %>\n                    Прочитать сейчас\n                    <% } else { %>\n                    Разобрать сейчас\n                    <% } %>\n                   <span class="b-coin b-coin_wardrobe"><%=this.params.costs%></span>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/library/boost",
		[
			"gate",
			"application",
			"social",
			"popupWidget",
			"controllers/gate",
			"controllers/gameanalytics",
			"collections/popups",
			"models/library",
			"models/user",
			"text!popups/library/boost.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = r.extend({
				template: _.template(f),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #boostByRV": "boostByRVHandler",
					"click #boostByCoins": "boostByCoinsHandler",
				},
				initialize: function (e) {
					(this.params = e), console.log("boost for library popup params: ", e);
					var n = this.params.type;
					(this.model = u),
						(this.viewParam = {
							Application: t,
							GateController: i,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				showBuyCoinsPopup: function () {
					purchase
						? o.add({
								type: "buyCoins",
						  })
						: o.add({
								type: "text",
								params: {
									header: "",
									text: "Недостаточно монет для ускорения.",
									list: null,
									cursiv: null,
								},
						  });
				},
				boostByCoinsHandler: function () {
					var e = a.get("balance"),
						t = this.params.costs;
					e < t
						? this.showBuyCoinsPopup()
						: this.params.type == "reading"
						? this.bookReading()
						: this.bookDisassembling(),
						this.closePopup();
				},
				boostByRVHandler: function () {
					n.ad.getVideoForLibrary(this.params.id), this.closePopup();
				},
				bookReading: function () {
					var e = this.params.screen,
						t = $("#bookReadButton"),
						n = this.params.id,
						r = this.params.costs;
					a.get("balance") >= r
						? (i.libraryBookReadFinish(n, "coins"),
						  t.attr("id", "").addClass("b-btn_disabled"),
						  e.timer && clearInterval(e.timer),
						  s.sendResourceEvent("coins", -r, "readBook", "Consumed"),
						  s.sendDesignEvent("Screen_actions:library:read_coins"))
						: this.showBuyCoinsPopup();
				},
				bookDisassembling: function () {
					var e = this.params.screen,
						t = $("#bookDisassemblingButton"),
						n = this.params.id,
						r = u.getDisassemblingItem(),
						s = r.disassembleCoins;
					a.get("balance") >= s
						? (i.libraryBookDisassembleFinish(n, "coins"),
						  t.attr("id", "").addClass("b-btn_disabled"),
						  e.timer && clearInterval(e.timer))
						: this.showBuyCoinsPopup();
				},
			});
			return l;
		}
	),
	define(
		"controllers/usedesk",
		["backbone", "controllers/gameanalytics", "collections/popups"],
		function (e, t, n) {
			var r = _.extend(
				{
					url: "/api/" + social + "/get-usedesk-content",
					categoryIds: {
						achievements: "14465",
						balance: "14455",
						boosters: "14462",
						clan: "14461",
						clanSafe: "14781",
						dailyWord: "14452",
						library: "14457",
						profile: "14454",
						quest: "14464",
						tourneys: "14463",
						seasonPass: "14453",
						wardrobe: "14458",
						wardrobeShop: "14455",
					},
					getKnowledgeBase: function () {
						var e = this;
						$("#contentLoader").fadeIn(300),
							$.ajax({
								url: this.url,
								type: "GET",
							})
								.done(function (n) {
									$("#contentLoader").fadeOut(300),
										e.trigger("getKnowledgeBase", JSON.parse(n)),
										t.sendDesignEvent("Usedesk:knowledgeBaseView");
								})
								.error(function (t) {
									$("#contentLoader").fadeOut(300), e.showErrorPopup();
								});
					},
					getCategoryById: function (e) {
						var t = this;
						$.ajax({
							url: this.url,
							type: "GET",
							data: {
								categoryIds: e,
							},
						})
							.done(function (e) {
								t.trigger("getCategoryById", JSON.parse(e));
							})
							.error(function (e) {
								t.showErrorPopup();
							});
					},
					showInfoPopup: function (e) {
						var r = this,
							i = this.categoryIds[e];
						$("#contentLoader").fadeIn(300),
							$.ajax({
								url: this.url,
								type: "GET",
								data: {
									categoryIds: i,
								},
							})
								.done(function (i) {
									var i = JSON.parse(i);
									$("#contentLoader").fadeOut(300),
										i.articles.length > 0
											? n.add({
													type: "usedesk.info",
													params: {
														data: i,
													},
											  })
											: r.showErrorPopup(),
										t.sendDesignEvent("Usedesk:categoryView:" + e);
								})
								.error(function (e) {
									$("#contentLoader").fadeOut(300), r.showErrorPopup();
								});
					},
					showErrorPopup: function () {
						n.add({
							type: "text",
							params: {
								header: "Ошибка",
								text: "Информация временно недоступна",
								list: null,
								cursiv: null,
							},
						});
					},
				},
				e.Events
			);
			return r;
		}
	),
	define("text!popups/clan/disabled.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Кланы</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/disabled.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-main">Объединяйся с другими игроками для выполнения заданий. Получай дополнительные награды!</div>\n                <div class="popup__text-info">Для доступа к разделу Кланы тебе нужно повысить уровень.</div>\n            </div>\n            <div class="popup__btns">\n                <div id=\'clanRulesButton\' class="popup__btns-item b-btn b-btn_blue">Читать правила</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/disabled",
		[
			"popupWidget",
			"application",
			"controllers/usedesk",
			"collections/popups",
			"text!popups/clan/disabled.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #clanRulesButton": function () {
						this.closePopup(), n.showInfoPopup("clan");
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return s;
		}
	),
	define("text!popups/clan/taskResult.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Бой завершен</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/task-result.png" alt="" />\n            </div>\n            <div class="popup__text">\n                \n                <div class="popup__text-heading">Ты набрал:</div>\n                <div class="popup__text-title"><%=scores%> × <%=rate%> = <%=scores * rate%></div>\n                <% if (counted) { %>\n                <div class="popup__text-main">\n                    <%=scores%> &mdash; очки, набранные на поле <br>\n                    × <%=rate%> &mdash; твой множитель\n                </div>\n                <% } else { %>\n                <div class="popup__text-main">Результат боя не учтен!</div>\n                <div class="popup__text-info">Кто-то другой завершил задание\n                раньше. Монеты за участие и\n                усиления будут возвращены.</div>\n                <% } %>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/taskResult",
		[
			"popupWidget",
			"application",
			"models/clan/main",
			"models/user",
			"text!popups/clan/taskResult.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					console.log(
						"member: ",
						_.findWhere(n.get("clanData").members, {
							id: r.get("id"),
						})
					),
						(this.viewParam = {
							Application: t,
							counted: e.counted,
							scores: e.scores,
							rate: _.findWhere(n.get("clanData").members, {
								id: r.get("id"),
							}).rate,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return s;
		}
	),
	define("text!popups/clan/exit.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Внимание</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <div class="popup__text">\n                <div class="popup__text-title">Ты действительно хочешь покинуть клан?</div>\n                <div class="popup__text-main">Внимание! Вступить в&nbsp;клан возможно только через 24&nbsp;часа после выхода.</div>\n            </div>\n            <div class="popup__btns popup__btns_confirm">\n                <div class="decline popup__btns-item b-btn b-btn_grey">Нет</div>\n                <div class="accept popup__btns-item b-btn b-btn_blue">Да</div>\n            </div>\n            \n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/exit",
		[
			"gate",
			"popupWidget",
			"controllers/gameanalytics",
			"models/appState",
			"text!popups/clan/exit.html!strip",
		],
		function (e, t, n, r, i) {
			var s = t.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click .accept": "exit",
				},
				exit: function () {
					e.clanQuite(),
						this.closePopup(),
						this.listenToOnce(e, "clanQuite", function () {
							r.setScreen({
								screen: "index",
							});
						}),
						n.sendDesignEvent("Clan_entry:Reason:quit_clan");
				},
			});
			return s;
		}
	),
	define("text!popups/clan/createError.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">\n            <% if (type == \'clearRequest\') { %>\n                Упс!\n            <% } else { %>\n                &nbsp;\n            <% } %>\n        </div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n       \n            <% if (type == \'nameLength\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Название клана должно быть от&nbsp;<%=Application.params.userCommonProperties.clanSettings.clanName.length.min%> до&nbsp;<%=Application.params.userCommonProperties.clanSettings.clanName.length.max%>&nbsp;символов</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'minLevel\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Минимальный уровень не&nbsp;может быть больше уровня игрока, создающего клан.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'minRating\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Минимальный рейтинг не&nbsp;может быть больше уровня игрока, создающего клан.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'textFormat\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Нельзя использовать спецсимволы в&nbsp;названии клана. Только буквы и&nbsp;цифры.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'clearRequest\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для создания своего клана, необходимо отменить заявку в&nbsp;клан <%=userRequestData[0].clan.name%>. Отменить заявку и&nbsp;создать свой клан?</div>\n                </div>\n                <!-- /.b-popup [text] -->\n                <div class="popup__btns popup__btns_confirm">\n                    <div class="popup__btns-item b-btn b-btn_grey decline">Нет</div>\n                    <div id="clearRequest" class="popup__btns-item b-btn b-btn_blue accept">Да</div>\n                </div>\n            <% } %>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/createError",
		[
			"popupWidget",
			"application",
			"models/appState",
			"models/clan/main",
			"text!popups/clan/createError.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click #clearRequest": "clearRequest",
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.model = r),
						(this.viewParam = {
							Application: t,
							type: this.params.type,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				clearRequest: function () {
					n.setScreen({
						screen: "clanSettings",
						params: {
							mode: "create",
						},
					}),
						this.closePopup();
				},
			});
			return s;
		}
	),
	define("text!popups/clan/joinError.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%=(type == \'fullClan\')? \'Упс!\': \'Внимание\' %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <% if (type == \'fullClan\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">В клане нет свободных мест</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__bnts b-btn b-btn_blue" id="closeButton">Ok</div>\n                </div>\n            <% } %>\n        \n            <% if (type == \'all\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для вступления в <%=data.name%>, тебе нужен уровень на <%=data.level%> выше и рейтинг на <%=data.rating%> выше!</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'level\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для вступления в <%=data.name%>, тебе нужен уровень на <%=data.level%> выше!</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'rating\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для вступления в <%=data.name%>, тебе нужен рейтинг на <%=data.rating%> выше!</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'clearRequest\') { \n                var clanName = ClanModel.get(\'userRequestData\')[0].clan.name;\n            %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для вступления в клан <%=data.name%>, необходимо отменить заявку в <%=clanName%>. Отменить заявку в клан <%=clanName%>?</div>\n                </div>\n                <!-- /.b-popup [text] -->\n                <div class="popup__btns popup__btns_confirm">\n                    <div class="decline popup__btns-item b-btn b-btn_grey">Нет</div>\n                    <div id="confirmBtn" class="accept popup__btns-item b-btn b-btn_blue">Да</div>\n                </div>\n            <% } %>\n\n            <% if (type == \'exitClan\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-title">Для вступления в клан <%=data.name%>, необходимо покинуть клан <%=ClanModel.get(\'clanData\').main.name%>. Покинуть клан <%=ClanModel.get(\'clanData\').main.name%>?</div>\n                </div>\n                <!-- /.b-popup [text] -->\n                <div class="popup__btns popup__btns_confirm">\n                    <div class="decline popup__btns-item b-btn b-btn_grey">Отмена</div>\n                    <div id="confirmBtn" class="accept popup__btns-item b-btn b-btn_blue">Покинуть</div>\n                </div>\n            <% } %>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/joinError",
		[
			"gate",
			"popupWidget",
			"application",
			"models/appState",
			"models/clan/main",
			"text!popups/clan/joinError.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				template: _.template(s),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click #confirmBtn": "confirmBtnHandler",
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						console.log("join error params: ", this.params),
						(this.viewParam = {
							Application: n,
							type: this.params.type,
							data: this.params.data,
							ClanModel: i,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				confirmBtnHandler: function () {
					var t = this;
					this.params.type == "exitClan"
						? (this.closePopup(), e.clanQuite())
						: this.params.data.public
						? (e.clanJoin(this.params.data.clanId),
						  this.listenToOnce(e, "clanJoin", function (e) {
								t.closePopup(),
									e.state != "error" &&
										r.setScreen({
											screen: "clan",
										});
						  }))
						: (e.clanRequest(this.params.data.clanId), this.closePopup());
				},
			});
			return o;
		}
	),
	define("text!popups/clan/chatInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%=(params.type == \'main\')? \'Вдохновенная речь\': \'Внимание\' %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <% if (params.type == \'limit\') { %>\n                <div class="popup__text">\n                    <div class="popup__text-main">Превышен лимит по количеству сообщений. Повторите позже.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n        \n            <% if (params.type == \'limitMain\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img g-greyscale" style="opacity: 0.6" src="<%= Application.params.staticUrl %>images/app/popups/clan/broadcast.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-main">Отправление push-уведомлений возможно не чаще, чем 1 раз в <%=params.limits.intervalText%> и не более <%=params.limits.total%> в сутки.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (params.type == \'limitMainLeader\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img g-greyscale" style="opacity: 0.6" src="<%= Application.params.staticUrl %>images/app/popups/clan/broadcast.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-main">Отправление push-уведомлений возможно не чаще, чем 1 раз в <%=params.limits.intervalText%> и не более <%=params.limits.total%> в сутки.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="closeButton">Закрыть</div>\n                </div>\n            <% } %>\n\n            <% if (params.type == \'main\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/broadcast.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-title">Собери клан на битву с помощью push-уведомлений!</div>\n                    <div class="popup__text-main">Пользуйся этой кнопкой, чтобы сообщить важные новости. Смотри не злоупотребляй!</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="sendMessage">Отправить сообщение</div>\n                </div>\n            <% } %>\n        \n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/chatInfo",
		["gate", "popupWidget", "application", "text!popups/clan/chatInfo.html!strip"],
		function (e, t, n, r) {
			var i = t.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #sendMessage": "sendMessage",
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						console.log("chat info params: ", this.params),
						(this.viewParam = {
							Application: n,
							params: this.params,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				sendMessage: function () {
					var t = this;
					e.clanChatSendMessage(this.params.text, !0), this.closePopup();
				},
			});
			return i;
		}
	),
	define("text!popups/clan/memberRate.html!strip", [], function () {
		return '<div class="popup">\n\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Множитель очков</div>\n    </div>\n\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <div class="b-clan-member-rate-info">\n                <div class="b-clan-member-rate-info__formula">\n                    <span class="b-clan-member-rate-info__formula-item">R</span> &times; \n                    <span class="b-clan-member-rate-info__formula-item">Lvl</span> &times;\n                    <span class="b-clan-member-rate-info__formula-item">B</span> &times;\n                    <span class="b-clan-member-rate-info__formula-item">I</span> \n                    <!-- <span class="b-clan-member-rate-info__formula-item">G</span> -->\n                    / 1000\n                </div>\n\n                <div class="b-clan-member-rate-info__legend">\n                    <div class="b-clan-member-rate-info__legend-item">\n                        <span class="b-clan-member-rate-info__legend-term">R</span> &mdash; сезонный рейтинг из прошлого или текущего сезона. Берётся тот, что больше.\n                    </div>\n                    <div class="b-clan-member-rate-info__legend-item">\n                        <span class="b-clan-member-rate-info__legend-term">Lvl</span> &mdash; твой текущий уровень.\n                    </div>\n                    <div class="b-clan-member-rate-info__legend-item">\n                        <span class="b-clan-member-rate-info__legend-term">B</span> &mdash; коэффициент Библиотеки.\n                    </div>\n                    <div class="b-clan-member-rate-info__legend-item">\n                        <span class="b-clan-member-rate-info__legend-term">I</span> &mdash; суммарный коэффициент Вещей.\n                    </div>\n                    <!-- <div class="b-clan-member-rate-info__legend-item">\n                        <span class="b-clan-member-rate-info__legend-term">G</span> &mdash; коэффициент Грааля.\n                    </div> -->\n                </div>\n                <div class="b-clan-member-rate-info__count">\n                    <div class="b-clan-member-rate-info__count-intro">В <%=(data.id == UserModel.get(\'id\'))? \'твоём\' : \'данном\'%> случае это:</div>\n                    <div class="b-clan-member-rate-info__count-data">\n                        <%=data.rateRating%> &times; \n                        <%=Application.methods.levelForUwins(data.uwins)%> &times; \n                        <%=(+data.libraryRate).toFixed(2)%> &times;\n                        <%=data.clothesRate.toFixed(2)%> \n                        <!-- <%=data.grailRate%> -->\n                        / 1000 = \n                        <%=data.rate%>\n                    </div>\n                </div>\n                \n            </div>\n        \n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/memberRate",
		[
			"popupWidget",
			"application",
			"models/appState",
			"models/clan/main",
			"models/user",
			"text!popups/clan/memberRate.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click #clearRequest": "clearRequest",
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.model = r),
						(this.viewParam = {
							Application: t,
							data: this.params.member,
							UserModel: i,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return o;
		}
	),
	define("text!popups/clan/milestone.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Вехи кланов</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/milestone.png" alt="">\n            </div>\n\n            <div class="popup__text">\n            \n                <div class="popup__text-title">При достижении <%=data.level%>-го уровня клана, участники&nbsp;получат:</div>\n                \n                <div class="milestone-reward">\n                <% data.reward.forEach(function(el){\n                    if (el.rewardType == \'coinsOnceConst\') {\n                    %>\n                    <span class="milestone-reward__item">\n                        <span class="milestone-reward__count"><%=el.count%></span>\n                        <img class="milestone-reward__icon" src="<%= Application.params.staticUrl %>images/app/icons/coin.png" alt="">\n                    </span>\n                    <%\n                    }\n\n                    if (el.rewardType == \'ratingOnceConst\') {\n                    %>\n                    <span class="milestone-reward__item">\n                        <span class="milestone-reward__count"><%=el.count%></span>\n                        <img class="milestone-reward__icon" src="<%= Application.params.staticUrl %>images/app/icons/rate.png" alt="">\n                    </span>\n                    <%\n                    }\n                });\n                %>\n                </div>\n                <div class="popup__text-info">Завершите веху развития клана и&nbsp;получите ценные подарки!</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/milestone",
		["popupWidget", "application", "text!popups/clan/milestone.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
							data: this.params.data,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	define("text!popups/clan/rewardInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%=lootBox.name%></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= lootBox.imageBig %>" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-main">\n                    <%=lootBox.text%>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/rewardInfo",
		["popupWidget", "application", "text!popups/clan/rewardInfo.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
							lootBox: this.params.lootBox,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	!(function (e, t) {
		"object" == typeof exports && "object" == typeof module
			? (module.exports = t())
			: "function" == typeof define && define.amd
			? define("clipboard", [], t)
			: "object" == typeof exports
			? (exports.ClipboardJS = t())
			: (e.ClipboardJS = t());
	})(this, function () {
		function e(i) {
			if (n[i]) return n[i].exports;
			var s = (n[i] = {
				i: i,
				l: !1,
				exports: {},
			});
			return t[i].call(s.exports, s, s.exports, e), (s.l = !0), s.exports;
		}
		return (
			(n = {}),
			(e.m = t =
				[
					function (e, t) {
						e.exports = function (e) {
							var t;
							if ("SELECT" === e.nodeName) e.focus(), (t = e.value);
							else if ("INPUT" === e.nodeName || "TEXTAREA" === e.nodeName) {
								var n = e.hasAttribute("readonly");
								n || e.setAttribute("readonly", ""),
									e.select(),
									e.setSelectionRange(0, e.value.length),
									n || e.removeAttribute("readonly"),
									(t = e.value);
							} else {
								e.hasAttribute("contenteditable") && e.focus();
								var r = window.getSelection(),
									i = document.createRange();
								i.selectNodeContents(e), r.removeAllRanges(), r.addRange(i), (t = r.toString());
							}
							return t;
						};
					},
					function (e, t) {
						function n() {}
						(n.prototype = {
							on: function (e, t, n) {
								var r = this.e || (this.e = {});
								return (
									(r[e] || (r[e] = [])).push({
										fn: t,
										ctx: n,
									}),
									this
								);
							},
							once: function (e, t, n) {
								function i() {
									r.off(e, i), t.apply(n, arguments);
								}
								var r = this;
								return (i._ = t), this.on(e, i, n);
							},
							emit: function (e) {
								for (
									var t = [].slice.call(arguments, 1),
										n = ((this.e || (this.e = {}))[e] || []).slice(),
										r = 0,
										i = n.length;
									r < i;
									r++
								)
									n[r].fn.apply(n[r].ctx, t);
								return this;
							},
							off: function (e, t) {
								var n = this.e || (this.e = {}),
									r = n[e],
									i = [];
								if (r && t)
									for (var s = 0, o = r.length; s < o; s++)
										r[s].fn !== t && r[s].fn._ !== t && i.push(r[s]);
								return i.length ? (n[e] = i) : delete n[e], this;
							},
						}),
							(e.exports = n),
							(e.exports.TinyEmitter = n);
					},
					function (e, t, n) {
						var r = n(3),
							i = n(4);
						e.exports = function (e, t, n) {
							if (!e && !t && !n) throw new Error("Missing required arguments");
							if (!r.string(t)) throw new TypeError("Second argument must be a String");
							if (!r.fn(n)) throw new TypeError("Third argument must be a Function");
							if (r.node(e))
								return (
									(p = t),
									(v = n),
									(c = e).addEventListener(p, v),
									{
										destroy: function () {
											c.removeEventListener(p, v);
										},
									}
								);
							if (r.nodeList(e))
								return (
									(a = e),
									(f = t),
									(l = n),
									Array.prototype.forEach.call(a, function (e) {
										e.addEventListener(f, l);
									}),
									{
										destroy: function () {
											Array.prototype.forEach.call(a, function (e) {
												e.removeEventListener(f, l);
											});
										},
									}
								);
							if (r.string(e)) return (s = e), (o = t), (u = n), i(document.body, s, o, u);
							throw new TypeError(
								"First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
							);
							var s, o, u, a, f, l, c, p, v;
						};
					},
					function (e, t) {
						(t.node = function (e) {
							return void 0 !== e && e instanceof HTMLElement && 1 === e.nodeType;
						}),
							(t.nodeList = function (e) {
								var n = Object.prototype.toString.call(e);
								return (
									void 0 !== e &&
									("[object NodeList]" === n || "[object HTMLCollection]" === n) &&
									"length" in e &&
									(0 === e.length || t.node(e[0]))
								);
							}),
							(t.string = function (e) {
								return "string" == typeof e || e instanceof String;
							}),
							(t.fn = function (e) {
								return "[object Function]" === Object.prototype.toString.call(e);
							});
					},
					function (e, t, n) {
						function i(e, t, n, i, s) {
							var o = function (e, t, n, i) {
								return function (n) {
									(n.delegateTarget = r(n.target, t)), n.delegateTarget && i.call(e, n);
								};
							}.apply(this, arguments);
							return (
								e.addEventListener(n, o, s),
								{
									destroy: function () {
										e.removeEventListener(n, o, s);
									},
								}
							);
						}
						var r = n(5);
						e.exports = function (e, t, n, r, s) {
							return "function" == typeof e.addEventListener
								? i.apply(null, arguments)
								: "function" == typeof n
								? i.bind(null, document).apply(null, arguments)
								: ("string" == typeof e && (e = document.querySelectorAll(e)),
								  Array.prototype.map.call(e, function (e) {
										return i(e, t, n, r, s);
								  }));
						};
					},
					function (e, t) {
						if ("undefined" != typeof Element && !Element.prototype.matches) {
							var n = Element.prototype;
							n.matches =
								n.matchesSelector ||
								n.mozMatchesSelector ||
								n.msMatchesSelector ||
								n.oMatchesSelector ||
								n.webkitMatchesSelector;
						}
						e.exports = function (e, t) {
							for (; e && 9 !== e.nodeType; ) {
								if ("function" == typeof e.matches && e.matches(t)) return e;
								e = e.parentNode;
							}
						};
					},
					function (e, t, n) {
						function o(e, t) {
							for (var n = 0; n < t.length; n++) {
								var r = t[n];
								(r.enumerable = r.enumerable || !1),
									(r.configurable = !0),
									"value" in r && (r.writable = !0),
									Object.defineProperty(e, r.key, r);
							}
						}

						function u(e) {
							!(function (e, t) {
								if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
							})(this, u),
								this.resolveOptions(e),
								this.initSelection();
						}

						function v(e, t) {
							for (var n = 0; n < t.length; n++) {
								var r = t[n];
								(r.enumerable = r.enumerable || !1),
									(r.configurable = !0),
									"value" in r && (r.writable = !0),
									Object.defineProperty(e, r.key, r);
							}
						}

						function g(e, t) {
							!(function (e, t) {
								if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
							})(this, g);
							var n = (function (e, t) {
								if (!e)
									throw new ReferenceError(
										"this hasn't been initialised - super() hasn't been called"
									);
								return !t || ("object" != typeof t && "function" != typeof t) ? e : t;
							})(this, (g.__proto__ || Object.getPrototypeOf(g)).call(this));
							return n.resolveOptions(t), n.listenClick(e), n;
						}

						function y(e, t) {
							var n = "data-clipboard-" + e;
							if (t.hasAttribute(n)) return t.getAttribute(n);
						}
						n.r(t);
						var r = n(0),
							i = n.n(r),
							s =
								"function" == typeof Symbol && "symbol" == typeof Symbol.iterator
									? function (e) {
											return typeof e;
									  }
									: function (e) {
											return e &&
												"function" == typeof Symbol &&
												e.constructor === Symbol &&
												e !== Symbol.prototype
												? "symbol"
												: typeof e;
									  },
							a =
								((function (e, t, n) {
									return t && o(e.prototype, t), n && o(e, n), e;
								})(u, [
									{
										key: "resolveOptions",
										value: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : {};
											(this.action = t.action),
												(this.container = t.container),
												(this.emitter = t.emitter),
												(this.target = t.target),
												(this.text = t.text),
												(this.trigger = t.trigger),
												(this.selectedText = "");
										},
									},
									{
										key: "initSelection",
										value: function () {
											this.text ? this.selectFake() : this.target && this.selectTarget();
										},
									},
									{
										key: "selectFake",
										value: function () {
											var e = this,
												t = "rtl" == document.documentElement.getAttribute("dir");
											this.removeFake(),
												(this.fakeHandlerCallback = function () {
													return e.removeFake();
												}),
												(this.fakeHandler =
													this.container.addEventListener("click", this.fakeHandlerCallback) || !0),
												(this.fakeElem = document.createElement("textarea")),
												(this.fakeElem.style.fontSize = "12pt"),
												(this.fakeElem.style.border = "0"),
												(this.fakeElem.style.padding = "0"),
												(this.fakeElem.style.margin = "0"),
												(this.fakeElem.style.position = "absolute"),
												(this.fakeElem.style[t ? "right" : "left"] = "-9999px");
											var n = window.pageYOffset || document.documentElement.scrollTop;
											(this.fakeElem.style.top = n + "px"),
												this.fakeElem.setAttribute("readonly", ""),
												(this.fakeElem.value = this.text),
												this.container.appendChild(this.fakeElem),
												(this.selectedText = i()(this.fakeElem)),
												this.copyText();
										},
									},
									{
										key: "removeFake",
										value: function () {
											this.fakeHandler &&
												(this.container.removeEventListener("click", this.fakeHandlerCallback),
												(this.fakeHandler = null),
												(this.fakeHandlerCallback = null)),
												this.fakeElem &&
													(this.container.removeChild(this.fakeElem), (this.fakeElem = null));
										},
									},
									{
										key: "selectTarget",
										value: function () {
											(this.selectedText = i()(this.target)), this.copyText();
										},
									},
									{
										key: "copyText",
										value: function () {
											var e = void 0;
											try {
												e = document.execCommand(this.action);
											} catch (t) {
												e = !1;
											}
											this.handleResult(e);
										},
									},
									{
										key: "handleResult",
										value: function (e) {
											this.emitter.emit(e ? "success" : "error", {
												action: this.action,
												text: this.selectedText,
												trigger: this.trigger,
												clearSelection: this.clearSelection.bind(this),
											});
										},
									},
									{
										key: "clearSelection",
										value: function () {
											this.trigger && this.trigger.focus(),
												document.activeElement.blur(),
												window.getSelection().removeAllRanges();
										},
									},
									{
										key: "destroy",
										value: function () {
											this.removeFake();
										},
									},
									{
										key: "action",
										set: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : "copy";
											if (((this._action = t), "copy" !== this._action && "cut" !== this._action))
												throw new Error('Invalid "action" value, use either "copy" or "cut"');
										},
										get: function () {
											return this._action;
										},
									},
									{
										key: "target",
										set: function (e) {
											if (void 0 !== e) {
												if (
													!e ||
													"object" !== (void 0 === e ? "undefined" : s(e)) ||
													1 !== e.nodeType
												)
													throw new Error('Invalid "target" value, use a valid Element');
												if ("copy" === this.action && e.hasAttribute("disabled"))
													throw new Error(
														'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
													);
												if (
													"cut" === this.action &&
													(e.hasAttribute("readonly") || e.hasAttribute("disabled"))
												)
													throw new Error(
														'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
													);
												this._target = e;
											}
										},
										get: function () {
											return this._target;
										},
									},
								]),
								u),
							f = n(1),
							l = n.n(f),
							c = n(2),
							h = n.n(c),
							p =
								"function" == typeof Symbol && "symbol" == typeof Symbol.iterator
									? function (e) {
											return typeof e;
									  }
									: function (e) {
											return e &&
												"function" == typeof Symbol &&
												e.constructor === Symbol &&
												e !== Symbol.prototype
												? "symbol"
												: typeof e;
									  },
							d = function (e, t, n) {
								return t && v(e.prototype, t), n && v(e, n), e;
							},
							m =
								((function (e, t) {
									if ("function" != typeof t && null !== t)
										throw new TypeError(
											"Super expression must either be null or a function, not " + typeof t
										);
									(e.prototype = Object.create(t && t.prototype, {
										constructor: {
											value: e,
											enumerable: !1,
											writable: !0,
											configurable: !0,
										},
									})),
										t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t));
								})(g, l.a),
								d(
									g,
									[
										{
											key: "resolveOptions",
											value: function (e) {
												var t = 0 < arguments.length && void 0 !== e ? e : {};
												(this.action =
													"function" == typeof t.action ? t.action : this.defaultAction),
													(this.target =
														"function" == typeof t.target ? t.target : this.defaultTarget),
													(this.text = "function" == typeof t.text ? t.text : this.defaultText),
													(this.container =
														"object" === p(t.container) ? t.container : document.body);
											},
										},
										{
											key: "listenClick",
											value: function (e) {
												var t = this;
												this.listener = h()(e, "click", function (e) {
													return t.onClick(e);
												});
											},
										},
										{
											key: "onClick",
											value: function (e) {
												var t = e.delegateTarget || e.currentTarget;
												this.clipboardAction && (this.clipboardAction = null),
													(this.clipboardAction = new a({
														action: this.action(t),
														target: this.target(t),
														text: this.text(t),
														container: this.container,
														trigger: t,
														emitter: this,
													}));
											},
										},
										{
											key: "defaultAction",
											value: function (e) {
												return y("action", e);
											},
										},
										{
											key: "defaultTarget",
											value: function (e) {
												var t = y("target", e);
												if (t) return document.querySelector(t);
											},
										},
										{
											key: "defaultText",
											value: function (e) {
												return y("text", e);
											},
										},
										{
											key: "destroy",
											value: function () {
												this.listener.destroy(),
													this.clipboardAction &&
														(this.clipboardAction.destroy(), (this.clipboardAction = null));
											},
										},
									],
									[
										{
											key: "isSupported",
											value: function (e) {
												var t = 0 < arguments.length && void 0 !== e ? e : ["copy", "cut"],
													n = "string" == typeof t ? [t] : t,
													r = !!document.queryCommandSupported;
												return (
													n.forEach(function (e) {
														r = r && !!document.queryCommandSupported(e);
													}),
													r
												);
											},
										},
									]
								),
								g);
						t.default = m;
					},
				]),
			(e.c = n),
			(e.d = function (t, n, i) {
				e.o(t, n) ||
					Object.defineProperty(t, n, {
						enumerable: !0,
						get: i,
					});
			}),
			(e.r = function (e) {
				"undefined" != typeof Symbol &&
					Symbol.toStringTag &&
					Object.defineProperty(e, Symbol.toStringTag, {
						value: "Module",
					}),
					Object.defineProperty(e, "__esModule", {
						value: !0,
					});
			}),
			(e.t = function (t, n) {
				if ((1 & n && (t = e(t)), 8 & n)) return t;
				if (4 & n && "object" == typeof t && t && t.__esModule) return t;
				var i = Object.create(null);
				if (
					(e.r(i),
					Object.defineProperty(i, "default", {
						enumerable: !0,
						value: t,
					}),
					2 & n && "string" != typeof t)
				)
					for (var s in t)
						e.d(
							i,
							s,
							function (e) {
								return t[e];
							}.bind(null, s)
						);
				return i;
			}),
			(e.n = function (t) {
				var n =
					t && t.__esModule
						? function () {
								return t.default;
						  }
						: function () {
								return t;
						  };
				return e.d(n, "a", n), n;
			}),
			(e.o = function (e, t) {
				return Object.prototype.hasOwnProperty.call(e, t);
			}),
			(e.p = ""),
			e((e.s = 6)).default
		);
		var t, n;
	}),
	define("text!popups/clan/rateCopy.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Клановый множитель</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__btns">\n                <div id="clanRateCopyBtn" class="popup__btns-item btn-rate-copy" data-clipboard-text="<%= clanRate %>">\n                    <span class="btn-rate-copy__text">\n                        × \n                        <span><%= clanRate %></span>\n                    </span>\n                    <span class="btn-rate-copy__icon"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/rateCopy",
		["popupWidget", "application", "clipboard", "text!popups/clan/rateCopy.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #clanRateCopyBtn": "copyRateToClipboard",
				},
				initialize: function (e) {
					(this.params = e), console.log("popup rateCopy params: ", e);
					var n = this.params.clanRate;
					this.viewParam = {
						Application: t,
						clanRate: n,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				copyRateToClipboard: function (e) {
					var t = this;
					this.clipboard && this.clipboard.destroy(),
						(this.clipboard = new n("#clanRateCopyBtn")),
						this.clipboard.on("success", function () {
							t.clipboard.destroy(), t.closePopup();
						});
				},
			});
			return i;
		}
	),
	define("text!popups/clan/safe/disabledInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Взлом сейфа</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Взломайте сейф, объединившись всем кланом!</div>\n                  <div class="popup__text-info">\n                    Участники взлома смогут очистить сейф и получить крупные награды! \n                    <br>\n                    Взлом сейфа откроется на <%=Application.params.userCommonProperties.clanSafeSettings.levelFrom%>-м уровне клана.\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/disabledInfo",
		["popupWidget", "application", "text!popups/clan/safe/disabledInfo.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	define("text!popups/clan/safe/createInfo.html!strip", [], function () {
		return '<%\n\nvar i;\nvar clanSafeImplementationProgress = ClanSafeModel.get(\'implementationProgress\')[0];\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Взлом сейфа</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">\n                    Клан должен выполнить \n                    <%= clanSafeImplementationProgress.required %> \n                    <%= \n                        Application.methods.declension(clanSafeImplementationProgress.required,[\'клановое задание\',\'клановых задания\',\'клановых заданий\']) \n                    %><%=\n                        (clanSafeImplementationProgress.required > 1)? \' подряд,\' : \',\'\n                    %>\n                    чтобы получить коды от сейфа.</div>\n                <div class="clan-safe-popup__tasks-counter"> \n                    <div class="clan-safe-popup__tasks-counter-label">Выполнено заданий:</div>\n                    <div class="clan-safe-popup__tasks-counter-list"> \n                        <% for (i = 0; i < clanSafeImplementationProgress.required; i += 1) { %>\n                        <div class="clan-safe-popup__tasks-counter-item <%= (i < clanSafeImplementationProgress.current)? \'clan-safe-popup__tasks-counter-item_active\' : \'\' %>"></div>\n                        <% } %>\n                    </div>\n                </div>\n                <div class="popup__text-info">Участники взлома сейфа заберут все сокровища!</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/createInfo",
		[
			"popupWidget",
			"application",
			"models/clan/safe/main",
			"text!popups/clan/safe/createInfo.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
						ClanSafeModel: n,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	define("text!popups/clan/safe/rules.html!strip", [], function () {
		return '<% \n\nvar clanSafeSettings = Application.params.userCommonProperties.clanSafeSettings;\nvar minPlayerCount = clanSafeSettings.minPlayerCount;\nvar openingTopProgress = ClanSafeModel.get(\'openingTopProgress\');\nvar playerCount = _.keys(openingTopProgress).length;\n\nvar minPlayerCountCondition = (playerCount >= minPlayerCount)? true : false;\nvar codesCondition = (playerCount > 0 && _.every(openingTopProgress, function(el) { return (el.hasReward) }));\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Правила взлома сейфа</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Клан взломает сейф, если выполнит условия:</div>\n                <div class="clan-safe-popup__list">\n                    <div class="clan-safe-popup__list-item <%= (minPlayerCountCondition)? \'clan-safe-popup__list-item_active\' : \'\' %>">Участников взлома не менее <%= minPlayerCount %>.</div>\n                    <div class="clan-safe-popup__list-item <%= (codesCondition)? \'clan-safe-popup__list-item_active\' : \'\' %>">Все участники взлома ввели правильный код.</div>\n                </div>\n                <div class="popup__text-info">Чтобы ввести код — набери количество очков равное коду.</div>\n                <div class="popup__text-info">Ты можешь вводить любой из кодов, но чем сложнее код — тем выше награда.</div>\n            </div>\n            <div class="popup__btns">\n                <div id="clanSafeRulesButton" class="popup__btns-item b-btn b-btn_blue clan-safe-popup__rewards-info">Посмотреть возможные награды</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/rules",
		[
			"popupWidget",
			"application",
			"collections/popups",
			"models/clan/safe/main",
			"text!popups/clan/safe/rules.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #clanSafeRulesButton": function () {
						this.closePopup(),
							n.add({
								type: "clanSafeRewards",
							});
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
						ClanSafeModel: r,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return s;
		}
	),
	define("text!popups/clan/safe/rewards.html!strip", [], function () {
		return '<%\n\nvar i, code, codeItem, item, lootbox, rewards, reward;\nvar content = ClanSafeModel.get(\'content\');\n\n%>\n\n<div class="overall-popup__wrap">\n    <div id="closeButton" class="overall-popup__close"></div>\n    <div class="overall-popup__content">\n        <div class="clan-safe-rewards">\n            <% for (i = 0; i < content.length; i += 1) { %>\n            <%\n            item = content[i];\n            lootbox = item.lootbox;\n            rewards = item.rewards;\n            %>\n            <div class="clan-safe-rewards__item">\n                <div class="clan-safe-rewards__title">Ключ <%= i + 1 %> уровня:</div>\n                <div class="clan-safe-rewards__code clan-safe-code clan-safe-code_level<%= i + 1 %>">\n                    <% for (codeItem of item.code.toString()) { %>\n                    <div class="clan-safe-code__number"><%= codeItem %></div>\n                    <% } %>\n                </div>\n                <div class="clan-safe-rewards__subtitle">Награда:</div>\n                <div class="clan-safe-rewards__list">\n                    <% if (!_.isEmpty(lootbox)) { %>\n                    <div data-lootbox-index="<%= i %>" class="clan-safe-rewards__list-item clan-safe-reward clan-safe-reward_lootbox">\n                        <img class="clan-safe-reward__icon" src="<%=lootbox.image%>" alt="">\n                    </div>\n                    <% } %>\n                    <% _.each(rewards, function(reward, index) { %>\n                        <% if (reward.rewardType == \'coinsOnceConst\') { %>\n                    <div class="clan-safe-rewards__list-item clan-safe-reward clan-safe-reward_coins">\n                        <div class="clan-safe-reward__data">+<%= reward.count %></div>\n                        <img class="clan-safe-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/coin.png" alt="">\n                    </div>\n                        <% } %>\n                        <% if (reward.rewardType == \'ratingOnceConst\') { %>\n                    <div class="clan-safe-rewards__list-item clan-safe-reward clan-safe-reward_rate">\n                        <div class="clan-safe-reward__data">+<%= reward.count %></div>\n                        <img class="clan-safe-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="">\n                    </div>\n                        <% } %>\n                    <% }); %>\n                </div>\n            </div>\n            <% } %>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/rewards",
		[
			"popupWidget",
			"application",
			"collections/popups",
			"models/clan/safe/main",
			"text!popups/clan/safe/rewards.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "overall-popup",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click .clan-safe-reward_lootbox": "showLootboxInfo",
				},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
						ClanSafeModel: r,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				showLootboxInfo: function (e) {
					var t = $(e.currentTarget),
						i = t.data("lootbox-index"),
						s = r.get("content")[i].lootbox;
					n.add({
						type: "clanSafeRewardInfo",
						params: {
							reward: s,
						},
					}),
						this.closePopup();
				},
			});
			return s;
		}
	),
	define("text!popups/clan/safe/rewardInfo.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%= lootbox.name %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= lootbox.imageBig %>" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Что в сундуке?</div>\n                <div class="popup__text-main">\n                    <%= lootbox.text %>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/rewardInfo",
		["popupWidget", "application", "text!popups/clan/safe/rewardInfo.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e), console.log("popup rewardInfo params: ", e);
					var n = this.params.reward;
					this.viewParam = {
						Application: t,
						lootbox: n,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	define("text!popups/clan/safe/resetResults.html!strip", [], function () {
		return '<%\nvar resetSettings = this.model.get(\'resetSettings\');\n%>\n<div class="popup">\n    <div class="popup__head">\n        <div id="closeButton" class="popup__close"></div>\n        <div class="popup__title">Сбросить прогресс?</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap clan-safe-popup">\n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe.png" alt=""></div>\n            <div class="popup__text">\n                <div class="popup__text-title">Вы уверены, что хотите сбросить текущий прогресс? </div>\n                <div class="popup__text-info">Прогресс сбросится до 0 очков. </div>\n            </div>\n            <div class="popup__btns popup__btns_rv">\n                <% if (resetSettings.isVideoResetAvailable) { %>\n                <div id="clanSafeResetResultsByRV" class="popup__btns-item b-btn b-btn_video">\n                <% } else { %>\n                <div class="popup__btns-item b-btn b-btn_video b-btn_disabled">\n                <% } %>\n                    За просмотр видео\n                </div> \n                <div id="clanSafeResetResultsByCoins" class="popup__btns-item b-btn b-btn_blue clan-safe-popup__skip-progress">\n                    За монеты\n                    <span class="clan-safe-popup__skip-progress-price"><%= resetSettings.cost %></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/resetResults",
		[
			"gate",
			"application",
			"social",
			"popupWidget",
			"collections/popups",
			"models/clan/safe/main",
			"models/user",
			"text!popups/clan/safe/resetResults.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = r.extend({
				template: _.template(u),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #clanSafeResetResultsByRV": "clanSafeResetResultsByRV",
					"click #clanSafeResetResultsByCoins": "clanSafeResetResultsByCoins",
				},
				initialize: function (e) {
					(this.params = e),
						(this.model = s),
						(this.viewParam = {
							Application: t,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				clanSafeResetResultsByCoins: function () {
					console.log("clanSafeResetResultsByCoins");
					var t,
						n = "coins",
						r = o.get("balance"),
						s = this.params.instantCreationCosts;
					r < s
						? purchase
							? i.add({
									type: "buyCoins",
							  })
							: i.add({
									type: "text",
									params: {
										header: "",
										text: "Недостаточно монет для ускорения.",
										list: null,
										cursiv: null,
									},
							  })
						: ($("#clanSafeResetResultsByCoins").attr("id", "").addClass("b-btn_disabled"),
						  (t = this.model.get("clanSafeId")),
						  e.clanSafeResetResults(t, n)),
						this.closePopup();
				},
				clanSafeResetResultsByRV: function () {
					console.log("clanSafeResetResultsByRV");
					var e = this.model.get("clanSafeId");
					n.ad.getVideoForClanSafeResetResults(e, "video"), this.closePopup();
				},
			});
			return a;
		}
	),
	define("text!popups/clan/safe/open.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Открыть сейчас</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe_opened.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Ты уверен что хочешь вскрыть сейф сейчас?</div>\n                <div class="popup__text-main">Игроки не смогут улучшить набранный ключ после вскрытия сейфа.</div>\n            </div>\n            <div class="popup__btns popup__btns_confirm">\n                <div class="decline popup__btns-item b-btn b-btn_grey">Отмена</div>\n                <div class="accept popup__btns-item b-btn b-btn_blue">Открыть</div>\n            </div>\n            \n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/open",
		[
			"gate",
			"popupWidget",
			"application",
			"models/clan/safe/main",
			"text!popups/clan/safe/open.html!strip",
		],
		function (e, t, n, r, i) {
			var s = t.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click .decline": function () {
						this.closePopup();
					},
					"click .accept": "clanSafeOpen",
				},
				initialize: function (e) {
					this.viewParam = {
						Application: n,
					};
				},
				clanSafeOpen: function () {
					var t = r.get("clanSafeId");
					e.clanSafeOpen(t), this.closePopup();
				},
			});
			return s;
		}
	),
	define("text!popups/clan/safe/getReward.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Большой куш!</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/clan/safe_opened.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Сейф взломан!</div>\n                <div class="popup__text-info">Все участники взлома получают заслуженную награду. </div>\n            </div>\n            <div class="popup__btns">\n                <div id="clanSafeGetRewardButton" class="popup__btns-item b-btn b-btn_blue">Забрать награду</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/clan/safe/getReward",
		["gate", "popupWidget", "application", "text!popups/clan/safe/getReward.html!strip"],
		function (e, t, n, r) {
			var i = t.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #clanSafeGetRewardButton": "clanSafeGetReward",
				},
				initialize: function () {
					this.viewParam = {
						Application: n,
					};
				},
				clanSafeGetReward: function () {
					e.clanSafeGetReward(), this.closePopup();
				},
			});
			return i;
		}
	),
	define("text!popups/profile/clan.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%=(params.type == \'clanTransfer\')? \'Передать клан?\': \'Внимание\' %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <% if (params.type == \'clanTransfer\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img" alt="" src="<%= Application.params.staticUrl %>images/app/clan/transfer_image.png">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-title">Вы собираетесь передать управление кланом игроку <%=params.memberName%>. </div>\n                    <div class="popup__text-main">С этого момента вы не сможете руководить этим кланом и будете понижены в звании до Заместителя.</div>\n                </div>\n                <div class="popup__btns">\n                    <div class="popup__btns-item b-btn b-btn_blue" id="clanTransfer">Передать</div>\n                </div>\n            <% } %>\n\n            <% if (params.type == \'clanTransferConfirm\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/clan/warn_image.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-title">Вы уверены, что хотите передать управление кланом?</div>\n                </div>\n                <div class="popup__btns popup__btns_confirm">\n                    <div class="decline popup__btns-item b-btn b-btn_blue">Нет</div>\n                    <div id="clanTransferConfirm" class="accept popup__btns-item b-btn b-btn_grey">Да</div>\n                </div>\n            <% } %>\n\n            <% if (params.type == \'excludeMember\') { %>\n                <div class="popup__icon">\n                    <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/clan/warn_image.png" alt="">\n                </div>\n                <div class="popup__text">\n                    <div class="popup__text-title">Вы уверены, что хотите исключить игрока из клана?</div>\n                </div>\n                <!-- /.b-popup [text] -->\n                <div class="popup__btns popup__btns_confirm">\n                    <div class="decline popup__btns-item b-btn b-btn_grey">Нет</div>\n                    <div id="excludeMember" class="accept popup__btns-item b-btn b-btn_blue">Да</div>\n                </div>\n            <% } %>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/profile/clan",
		[
			"gate",
			"popupWidget",
			"controllers/gameanalytics",
			"application",
			"collections/popups",
			"text!popups/profile/clan.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				template: _.template(s),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #excludeMember": "excludeMember",
					"click #clanTransfer": "clanTransfer",
					"click #clanTransferConfirm": "clanTransferConfirm",
					"click #closeButton": function () {
						this.closePopup();
					},
					"click .decline": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						console.log("clanProfile popup params: ", this.params),
						(this.viewParam = {
							Application: r,
							params: this.params,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				excludeMember: function () {
					e.clanExcludeMember(this.params.member),
						n.sendDesignEvent("Profile_clan_popup:Action:kick_out"),
						n.sendDesignEvent("Clan_entry:Reason:kicked_out"),
						this.closePopup();
				},
				clanTransfer: function () {
					var e = this.params.member;
					this.closePopup(),
						i.add({
							type: "profileClan",
							params: {
								type: "clanTransferConfirm",
								member: e,
							},
						});
				},
				clanTransferConfirm: function () {
					var t = this.params.member;
					e.clanSetUserRole(t, 3),
						n.sendDesignEvent("Profile_clan_popup:Action:change _leader"),
						this.closePopup();
				},
			});
			return o;
		}
	),
	define("text!popups/profile/complaint.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="close" class="popup__close"></div>\n        <div class="popup__title">На что жалуешься?</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%=Application.params.staticUrl%>images/app/profile/complaint-popup-icon.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-main">\n                    Выбери одну из&nbsp;двух причин. Мы&nbsp;обязательно все&nbsp;проверим!\n                </div>\n                <div class="popup__btns popup__btns_list">\n                    <div id="abuseComplaint" class="popup__btns-item b-btn b-btn_green">Оскорбления</div>\n                    <div id="foulPlayComplaint" class="popup__btns-item b-btn b-btn_blue">Нечестная игра</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/profile/complaint",
		[
			"gate",
			"application",
			"popupWidget",
			"controllers/chat",
			"text!popups/profile/complaint.html!strip",
		],
		function (e, t, n, r, i) {
			var s = n.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #abuseComplaint": "abuseHandler",
					"click #foulPlayComplaint": "foulPlayHandler",
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
						});
				},
				foulPlayHandler: function () {
					e.userReportSend(this.params.id, "foulPlay", {
						message: [],
					}),
						this.closePopup();
				},
				abuseHandler: function () {
					var t = r.genChatId(this.params.id),
						n = r.getChat(t);
					e.userReportSend(this.params.id, "abuse", {
						message: n.messages,
					}),
						this.closePopup();
				},
			});
			return s;
		}
	),
	define("text!popups/wardrobe/bagUpgrade.html!strip", [], function () {
		return '<% \nvar newCount = cellCount + upgradeCellCount;\nvar cost = upgradeCost.coins;\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Хочешь новую сумку?</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/wardrobe/bag.png" alt="">\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Увеличь вместимость сумки до <%=newCount%> <%=Application.methods.declension(newCount, [\'кармана\',\'карманов\',\'карманов\'])%>!</div>\n                <!-- <div class="popup__text-main"></div> -->\n            </div>\n            <div class="popup__btns">\n                <div id="upgradeBagBtn" class="popup__btns-item b-btn b-btn_blue">\n                    Купить <span class="b-coin b-coin_btn"><%=cost%></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/wardrobe/bagExpand.html!strip", [], function () {
		return '<% \nvar cost = upgradeCost.coins;\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Сумка заполнена!</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/wardrobe/bag.png" alt="">\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Новые вещи некуда складывать.</div>\n                <div class="popup__text-main">Увеличь сумку, или разбери какую-нибудь вещь.</div>\n            </div>\n            <div class="popup__btns">\n                <div id="upgradeBagBtn" class="popup__btns-item b-btn b-btn_blue">\n                    Купить <span class="b-coin b-coin_btn"><%=cost%></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/wardrobe/bagFull.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Сумка заполнена!</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/wardrobe/bag.png" alt="">\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Нет места для новых вещей</div>\n                <div class="popup__text-main">Разбери ненужные вещи, чтобы освободить место.</div>\n            </div>\n            <div class="popup__btns">\n                <div id="fullBagBtn" class="popup__btns-item b-btn b-btn_blue">\n                    Перейти в разбор\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/bag",
		[
			"popupWidget",
			"application",
			"gate",
			"models/appState",
			"text!popups/wardrobe/bagUpgrade.html!strip",
			"text!popups/wardrobe/bagExpand.html!strip",
			"text!popups/wardrobe/bagFull.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				templates: {
					upgrade: i,
					expand: s,
					full: o,
				},
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #upgradeBagBtn": function () {
						n.clothesUpgradeBag(), this.closePopup();
					},
					"click #fullBagBtn": function () {
						r.setScreen({
							screen: "wardrobe.dissection",
						}),
							this.closePopup();
					},
				},
				initialize: function (e) {
					var n;
					(this.model = e.data),
						"template" in e && ((n = e.template), (this.template = _.template(this.templates[n]))),
						(this.viewParam = {
							Application: t,
						});
				},
				beforeRender: function () {
					return $("#cover").fadeIn(300), this;
				},
			});
			return u;
		}
	),
	define("text!popups/wardrobe/patternInfo.html!strip", [], function () {
		return '<%\nvar rarity = Application.params.wardrobeItemRarity;\nvar rarityLabel = Application.params.wardrobePatternRarityLabel;\nvar patternCategory;\nvar patternCurrentCount;\nvar patternMaxCount;\n%>\n<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Выкройки</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="wardrobe-patterns-list">\n            <% \n            _.map(this.model.attributes, function(pattern) { \n                patternCategory = pattern.category;\n                patternCurrentCount = pattern.currentCount;\n                patternMaxCount = pattern.maxCount;\n            %>\n                <div class="wardrobe-patterns-list__item">\n                    <div class="wardrobe-pattern wardrobe-pattern_<%=rarity[patternCategory]%> <%=(patternCurrentCount >= patternMaxCount)? \'wardrobe-pattern_overload\' : \'\'%>">\n                        <div class="wardrobe-pattern__wrap">\n                            <div class="wardrobe-pattern__icon"></div>\n                            <div class="wardrobe-pattern__count">\n                                <span class="wardrobe-pattern__count-data"><%=patternCurrentCount%></span>/<span class="wardrobe-pattern__count-total"><%=patternMaxCount%></span>\n                            </div>\n                        </div>\n                        <div class="wardrobe-pattern__name wardrobe-item-type wardrobe-item-type_<%=rarity[patternCategory]%>"><%=rarityLabel[patternCategory]%></div>\n                    </div>\n                </div>\n            <%\n            });\n            %>\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Выкройки нужны для повышения уровня вещей</div>\n            </div>\n            <div class="popup__btns">\n                <div id="closeButton" class="popup__btns-item b-btn b-btn_blue">Понятно</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/patternInfo",
		[
			"popupWidget",
			"application",
			"models/wardrobe/patterns",
			"text!popups/wardrobe/patternInfo.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.model = n),
						(this.viewParam = {
							Application: t,
						});
				},
				beforeRender: function () {
					return $("#cover").fadeIn(300), this;
				},
			});
			return i;
		}
	),
	define("text!popups/wardrobe/patternLimit.html!strip", [], function () {
		return '<%\n\nvar category = this.params.category;\nvar rarity = Application.params.wardrobeItemRarity[category];\nvar currentCount = this.params.currentCount;\nvar maxCount = this.params.maxCount;\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Выкройка</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap popup-patters-limit">\n            \n            <div class="popup__icon popup-patters-limit__icon">\n                <img class="popup__icon-img popup-patters-limit__icon-img" src="<%= Application.params.staticUrl %>images/app/wardrobe/pattern-<%= rarity %>_big.png" alt="">\n            </div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">Достигнуто максимальное количество выкроек. Используй их, чтобы получить новые.</div>\n            </div>\n\n            <div class="popup-patters-limit__data">\n                <div class="wardrobe-pattern wardrobe-pattern_<%= rarity %>">\n                  <div class="wardrobe-pattern__wrap">\n                    <div class="wardrobe-pattern__icon"></div>\n                    <div class="wardrobe-pattern__count">\n                        <span class="wardrobe-pattern__count-data"><%= currentCount %></span>/<span class="wardrobe-pattern__count-total"><%= maxCount %></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            <div class="popup__btns">\n                <div id="wardrobeScreen" class="popup__btns-item b-btn b-btn_blue">Перейти в гардероб</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/patternLimit",
		[
			"popupWidget",
			"application",
			"models/appState",
			"text!popups/wardrobe/patternLimit.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #wardrobeScreen": function () {
						n.setScreen({
							screen: "wardrobe.index",
						}),
							this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	(function () {
		function e(t, n, i) {
			function s(u, a) {
				if (!n[u]) {
					if (!t[u]) {
						var f = "function" == typeof require && require;
						if (!a && f) return f(u, !0);
						if (o) return o(u, !0);
						var l = new Error("Cannot find module '" + u + "'");
						throw ((l.code = "MODULE_NOT_FOUND"), l);
					}
					var c = (n[u] = {
						exports: {},
					});
					t[u][0].call(
						c.exports,
						function (e) {
							var n = t[u][1][e];
							return s(n || e);
						},
						c,
						c.exports,
						e,
						t,
						n,
						i
					);
				}
				return n[u].exports;
			}
			for (var o = "function" == typeof require && require, u = 0; u < i.length; u++) s(i[u]);
			return s;
		}
		return e;
	})()(
		{
			1: [
				function (e, t, n) {
					(function (e) {
						(function () {
							var n = function (e) {
								function f(e) {
									i
										.children(":nth-child(" + (n.currentIndex + 1 || 0) + ")")
										.removeClass("itemslide-active"),
										i.children(":nth-child(" + (e + 1 || 0) + ")").addClass("itemslide-active"),
										e != r.currentIndex && ((n.currentIndex = e), i.trigger("changeActiveIndex"));
								}

								function l(t) {
									return -(
										e.getSlidesWidth(!1, t) -
										(i.parent().outerWidth(!0) - i.children().eq(t).outerWidth(!0)) /
											(r.left_sided ? 1 : 2)
									);
								}

								function c() {
									var e = Date.now() - a;
									r.left_sided &&
										(t.currentLandPos = clamp(
											-(n.allSlidesWidth - i.parent().width()),
											0,
											t.currentLandPos
										)),
										i.trigger("changePos"),
										i.translate3d(u - easeOutBack(e, 0, u - t.currentLandPos, s, o));
									if (e >= s) {
										i.translate3d(t.currentLandPos);
										return;
									}
									t.slidesGlobalID = requestAnimationFrame(c);
								}
								var t = this,
									n = e.vars,
									r = e.options,
									i = e.$el,
									s,
									o,
									u,
									a;
								(t.gotoSlideByIndex = function (e, h) {
									var p;
									e >= i.children().length - 1 || e <= 0
										? ((p = !0), (e = Math.min(Math.max(e, 0), i.children().length - 1)))
										: (p = !1),
										f(e),
										(s = Math.max(
											r.duration -
												(1920 / $(window).width()) * Math.abs(n.velocity) * 9 * (r.duration / 230) -
												(t.isOutBoundaries() ? n.distanceFromStart / 15 : 0) * (r.duration / 230),
											50
										)),
										(o = p ? (Math.abs(n.velocity) * 250) / $(window).width() : 0),
										(u = i.translate3d().x),
										(t.currentLandPos = l(e));
									if (h) {
										i.translate3d(l(e));
										return;
									}
									window.cancelAnimationFrame(t.slidesGlobalID),
										(a = Date.now()),
										(t.slidesGlobalID = window.requestAnimationFrame(c));
								}),
									(t.getLandingSlideIndex = function (t) {
										for (var s = 0; s < i.children().length; s++)
											if (
												e.getSlidesWidth(!1, s) +
													i.children().eq(s).outerWidth(!0) / 2 -
													i.children().eq(s).outerWidth(!0) * r.pan_threshold * n.direction -
													l(0) >
												t
											)
												return r.one_item
													? s != n.currentIndex
														? n.currentIndex + n.direction
														: n.currentIndex
													: s;
										return r.one_item ? n.currentIndex + 1 : i.children().length - 1;
									}),
									(t.isOutBoundaries = function () {
										return (
											(Math.floor(i.translate3d().x) > l(0) && n.direction == -1) ||
											(Math.ceil(i.translate3d().x) < l(i.children().length - 1) &&
												n.direction == 1)
										);
									});
							};
							(t.exports = n),
								(e.matrixToArray = function (e) {
									return e.substr(7, e.length - 8).split(", ");
								}),
								(e.easeOutBack = function (e, t, n, r, i) {
									return (
										i == undefined && (i = 1.70158),
										n * ((e = e / r - 1) * e * ((i + 1) * e + i) + 1) + t
									);
								}),
								($.fn.translate3d = function (e, t) {
									if (e == null) {
										var n = matrixToArray(this.css("transform"));
										if ($.fn.jquery != null)
											return {
												x: isExplorer ? parseFloat(n[12]) : parseFloat(n[4]),
												y: isExplorer ? parseFloat(n[13]) : parseFloat(n[5]),
											};
										var r = this.css("transform")
											.replace("translate3d", "")
											.replace("(", "")
											.replace(")", "")
											.replace(" ", "")
											.replace("px", "")
											.split(",");
										return {
											x: parseFloat(r[0]),
											y: parseFloat(r[1]),
										};
									}
									this.css("transform", "translate3d(" + e + "px" + "," + (t || 0) + "px, 0px)");
								}),
								(e.clamp = function (e, t, n) {
									return Math.min(Math.max(n, e), t);
								}),
								(e.getCurrentTotalWidth = function (e) {
									var t = 0;
									return (
										e.children().each(function () {
											t += $(this).outerWidth(!0);
										}),
										t
									);
								});
						}).call(this);
					}).call(
						this,
						typeof global != "undefined"
							? global
							: typeof self != "undefined"
							? self
							: typeof window != "undefined"
							? window
							: {}
					);
				},
				{},
			],
			2: [
				function (e, t, n) {
					var r = e("./navigation"),
						i = e("./animation"),
						s = e("./slideout"),
						o = e("./mousewheel");
					t.exports = {
						create: function (e, t) {
							var n = this;
							(n.$el = t),
								(n.options = e),
								n.options.parent_width && t.children().width(t.parent().outerWidth(!0)),
								t.css({
									"user-select": "none",
								}),
								(n.getSlidesWidth = function (e, n) {
									var e = e == undefined ? !0 : e,
										n = n == undefined ? 0 : n,
										r = 0;
									e && (n = t.children("li").toArray().length);
									for (var i = 0; i < n; i++) {
										var s = t.children("li").toArray()[i];
										r +=
											s.offsetWidth +
											parseInt(getComputedStyle(s).marginLeft) +
											parseInt(getComputedStyle(s).marginRight);
									}
									return r;
								}),
								(n.adjustCarouselWidthIfNotDisabled = function () {
									n.options.disable_autowidth || t.css("width", n.getSlidesWidth() + 10);
								}),
								n.adjustCarouselWidthIfNotDisabled(),
								(n.vars = {
									currentIndex: 0,
									parent_width: n.options.parent_width,
									velocity: 0,
									slideHeight: t.children().height(),
									direction: 1,
									allSlidesWidth: getCurrentTotalWidth(t),
								}),
								(t.end_animation = !0),
								n.options.swipe_out && s.slideout(n);
							var u = new i(n),
								a = new r(n, u);
							(n.anim = u),
								(n.nav = a),
								t.translate3d(0),
								u.gotoSlideByIndex(parseInt(n.options.start), 1);
							if (!n.options.disable_scroll)
								try {
									o.add(n, u, a, t);
								} catch (f) {}
						},
					};
				},
				{
					"./animation": 1,
					"./mousewheel": 5,
					"./navigation": 6,
					"./slideout": 8,
				},
			],
			3: [
				function (e, t, n) {
					t.exports = {
						apply: function (e, t, n) {
							(e.gotoSlide = function (e) {
								t.anim.gotoSlideByIndex(e);
							}),
								(e.nextSlide = function () {
									t.anim.gotoSlideByIndex(t.vars.currentIndex + 1);
								}),
								(e.previousSlide = function () {
									t.anim.gotoSlideByIndex(t.vars.currentIndex - 1);
								}),
								(e.reload = function () {
									var n = t.$el,
										r = t.vars;
									r.parent_width && n.children().width(n.parent().outerWidth(!0)),
										t.adjustCarouselWidthIfNotDisabled(),
										(r.slideHeight = n.children().height()),
										(r.allSlidesWidth = getCurrentTotalWidth(n)),
										(r.velocity = 0),
										e.gotoSlide(r.currentIndex);
								}),
								(e.addSlide = function (n) {
									e.append("<li>" + n + "</li>"), t.nav.createEvents(), e.reload();
								}),
								(e.removeSlide = function (e) {
									t.$el.children(":nth-child(" + (e + 1 || 0) + ")").remove(),
										(t.vars.allSlidesWidth = getCurrentTotalWidth(t.$el));
								}),
								(e.getActiveIndex = function () {
									return t.vars.currentIndex;
								}),
								(e.getCurrentPos = function () {
									return e.translate3d().x;
								}),
								(e.getIndexByPosition = function (e) {
									return t.anim.getLandingSlideIndex(-e);
								});
						},
					};
				},
				{},
			],
			4: [
				function (e, t, n) {
					(function (t) {
						(function () {
							(t.isExplorer = !!document.documentMode), e("./polyfills");
							var n = e("./carousel"),
								r = e("./external_funcs"),
								i = {
									duration: 350,
									swipe_sensitivity: 150,
									disable_slide: !1,
									disable_clicktoslide: !1,
									disable_scroll: !1,
									start: 0,
									one_item: !1,
									pan_threshold: 0.3,
									disable_autowidth: !1,
									parent_width: !1,
									swipe_out: !1,
									left_sided: !1,
								};
							$.fn.itemslide = function (e) {
								var t = $.extend(!0, {}, n),
									s = {};
								$.extend(s, i, e), r.apply(this, t, s), t.create(s, this);
							};
						}).call(this);
					}).call(
						this,
						typeof global != "undefined"
							? global
							: typeof self != "undefined"
							? self
							: typeof window != "undefined"
							? window
							: {}
					);
				},
				{
					"./carousel": 2,
					"./external_funcs": 3,
					"./polyfills": 7,
				},
			],
			5: [
				function (e, t, n) {
					t.exports = {
						add: function (e, t, n, r) {
							var i = 0,
								s = 4;
							r.mousewheel(function (o) {
								if (!n.get_vertical_pan()) {
									var u = o.deltaFactor >= 100 || o.deltaFactor % 1 == 0;
									if (!u) {
										i++;
										if (i == s) {
											i = 0;
											return;
										}
									}
									o.preventDefault();
									var a =
										e.vars.currentIndex - ((o.deltaX == 0 ? o.deltaY : o.deltaX) > 0 ? 1 : -1);
									if (a >= r.children("li").length || a < 0) return;
									(e.vars.velocity = 0), t.gotoSlideByIndex(a);
								}
							});
						},
					};
				},
				{},
			],
			6: [
				function (e, t, n) {
					function i() {
						window.getSelection
							? window.getSelection().empty
								? window.getSelection().empty()
								: window.getSelection().removeAllRanges && window.getSelection().removeAllRanges()
							: document.selection && document.selection.empty();
					}

					function s(e) {
						return e.type == "touchmove"
							? e.changedTouches[0]
							: e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
					}
					var r = function (e, t) {
						function m(e) {
							if ($(e.target).attr("no-drag") === "true" || !n.end_animation) return;
							var t;
							e.type == "touchstart" ? (t = s(e)) : (t = e),
								(a = Date.now()),
								(f = 1),
								(l = 0),
								(c = t.pageX),
								(h = t.pageY),
								(p = !1),
								(d = !1),
								(n.savedSlide = $(this)),
								(n.savedSlideIndex = n.savedSlide.index()),
								(v = 0),
								window.addEventListener("mousemove", b, {
									passive: !1,
								}),
								window.addEventListener("touchmove", b, {
									passive: !1,
								}),
								i();
						}

						function b(e) {
							var i;
							e.type == "touchmove"
								? ((i = s(e)), Math.abs(i.pageX - c) > 10 && (l = 1), l && e.preventDefault())
								: ((i = e), !r.disable_slide && !r.swipe_out && e.preventDefault()),
								-(i.pageX - c) > 0 ? (o.direction = 1) : (o.direction = -1),
								t.isOutBoundaries()
									? y && ((g = i.pageX), (y = 0))
									: (y || ((t.currentLandPos = n.translate3d().x), (c = i.pageX)), (y = 1)),
								v == 1 &&
									(n.children().css("height", o.slideHeight),
									n.savedSlide.wrapAll("<div class='itemslide_slideoutwrap' />"),
									(v = -1)),
								Math.abs(i.pageX - c) > 6 &&
									(!p && n.end_animation && (d = !0),
									window.cancelAnimationFrame(t.slidesGlobalID)),
								Math.abs(i.pageY - h) > 6 && !d && n.end_animation && (p = !0);
							if (d) {
								if (r.disable_slide) return;
								r.left_sided &&
									(t.currentLandPos = clamp(
										-(o.allSlidesWidth - n.parent().width()),
										0,
										t.currentLandPos
									)),
									(p = !1),
									n.translate3d(
										(y == 0 ? g - c + (i.pageX - g) / 4 : i.pageX - c) + t.currentLandPos
									),
									n.trigger("changePos"),
									n.trigger("pan");
							} else
								p &&
									r.swipe_out &&
									(e.preventDefault(),
									$(".itemslide_slideoutwrap").translate3d(0, i.pageY - h),
									v != -1 && (v = 1));
						}

						function w(e) {
							if (f) {
								f = !1;
								var i;
								e.type == "touchend" ? (i = s(e)) : (i = e),
									window.removeEventListener("mousemove", b),
									window.removeEventListener("touchmove", b);
								if (p && r.swipe_out) {
									(p = !1), u();
									return;
								}
								if (n.end_animation && !r.disable_slide) {
									var l = Date.now() - a;
									l++,
										(o.velocity = -(i.pageX - c) / l),
										o.velocity > 0 ? (o.direction = 1) : (o.direction = -1),
										(o.distanceFromStart = (i.pageX - c) * o.direction * -1);
									var h = t.getLandingSlideIndex(
										o.velocity * r.swipe_sensitivity - n.translate3d().x
									);
									if (o.distanceFromStart > 6) {
										t.gotoSlideByIndex(h);
										return;
									}
								}
								n.trigger({
									type: "clickSlide",
									slide: n.savedSlideIndex,
								}),
									n.savedSlideIndex != o.currentIndex &&
										!r.disable_clicktoslide &&
										(e.preventDefault(), t.gotoSlideByIndex(n.savedSlideIndex));
							}
						}
						var n = e.$el,
							r = e.options,
							o = e.vars,
							u = e.swipeOut;
						(this.createEvents = function () {
							n.children().on("mousedown touchstart", function (e) {
								m.call(this, e);
							}),
								$(window).on("mouseup touchend", function (e) {
									w(e);
								});
						}),
							this.createEvents();
						var a,
							f,
							l,
							c,
							h,
							p = !1,
							d,
							v;
						this.get_vertical_pan = function () {
							return p;
						};
						var g, y;
					};
					t.exports = r;
				},
				{},
			],
			7: [
				function (e, t, n) {
					typeof Object.create != "function" &&
						(Object.create = function (e) {
							function t() {}
							return (t.prototype = e), new t();
						}),
						$.fn.outerWidth ||
							($.fn.outerWidth = function () {
								if ($(this)[0] instanceof Element) {
									var e = $(this)[0],
										t = e.offsetWidth,
										n = getComputedStyle(e);
									return (t += parseInt(n.marginLeft) + parseInt(n.marginRight)), t;
								}
							});
				},
				{},
			],
			8: [
				function (e, t, n) {
					function r(e) {
						function y() {
							d = Date.now() - s;
							if (p)
								$(".itemslide_slideoutwrap").translate3d(0, o - easeOutBack(d, 0, o - i, 250, 0)),
									t.savedSlide.css("opacity", f - easeOutBack(d, 0, f, 250, 0) * (h ? -1 : 1));
							else {
								if (h) {
									$(".itemslide_slideoutwrap").children().unwrap(),
										$(g).children().unwrap(),
										t.children().css("height", ""),
										(t.end_animation = !0),
										(d = 0);
									return;
								}
								$(g).translate3d(
									0 - easeOutBack(d - 250, 0, 0 + t.savedSlide.width(), 125, 0) * (m ? -1 : 1),
									0
								);
							}
							v == 1 &&
								($(".itemslide_slideoutwrap").children().unwrap(),
								t.savedSlideIndex == r.currentIndex &&
									$(g).children(":nth-child(1)").addClass("itemslide-active"),
								t.savedSlideIndex == t.children().length - 1 &&
									!m &&
									t.savedSlideIndex == r.currentIndex &&
									((n.duration = 200), e.anim.gotoSlideByIndex(t.children().length - 2)),
								t.savedSlideIndex == 0 && r.currentIndex != 0 && (d = 500),
								(v = -1));
							if (d >= 250) {
								(p = !1), v != -1 && (v = 1);
								if (d >= 375) {
									$(g).children().unwrap(),
										t.removeSlide(l.index()),
										((t.savedSlideIndex == 0 && r.currentIndex != 0) || m) &&
											e.anim.gotoSlideByIndex(r.currentIndex - 1, !0),
										(n.duration = a),
										(d = 0),
										(t.end_animation = !0);
									return;
								}
							}
							u = requestAnimationFrame(y);
						}
						var t = e.$el,
							n = e.options,
							r = e.vars,
							i = -400,
							s = Date.now(),
							o = 0,
							u = 0,
							a = 0,
							f = 0,
							l,
							c;
						(t.end_animation = !0), (t.savedSlideIndex = 0);
						var h = !1;
						e.swipeOut = function () {
							(o = $(".itemslide_slideoutwrap").translate3d().y),
								(c = o < 0),
								c ? (i = -400) : (i = 400),
								Math.abs(0 - o) < 50
									? ((h = !0), (i = 0))
									: ((h = !1),
									  t.trigger({
											type: "swipeout",
											slide: t.savedSlideIndex,
									  })),
								(v = 0),
								(a = n.duration),
								(l = t.savedSlide),
								(s = Date.now()),
								(f = t.savedSlide.css("opacity")),
								t.savedSlideIndex < r.currentIndex
									? ((m = !0),
									  t
											.children(":nth-child(-n+" + (t.savedSlideIndex + 1) + ")")
											.wrapAll("<div class='itemslide_move' />"))
									: ((m = !1),
									  t
											.children(":nth-child(n+" + (t.savedSlideIndex + 2) + ")")
											.wrapAll("<div class='itemslide_move' />")),
								(p = !0),
								(t.end_animation = !1),
								(u = requestAnimationFrame(y));
						};
						var p = !0,
							d = 0,
							v = 0,
							m = !1,
							g = ".itemslide_move";
					}
					t.exports = {
						slideout: r,
					};
				},
				{},
			],
		},
		{},
		[4]
	),
	define("itemslide", ["jquery"], function () {}),
	define("popups/slider", ["popupWidget", "collections/popups", "itemslide"], function (e, t) {
		var n = e.extend({
			tagName: "div",
			className: "wardrobe-popup",
			beforeRender: function () {
				return $("#cover").fadeIn(300), this;
			},
			initSlider: function (e, t, n) {
				function u(e, t, n) {
					$(".wardrobe-popup__counter-data").text(t + 1),
						n
							? (t == 0 && $("#previousSlide").children().hide(),
							  t == e - 1 && $("#nextSlide").children().hide())
							: (t == 0
									? $("#previousSlide").children().fadeOut()
									: $("#previousSlide").children().fadeIn(),
							  t == e - 1
									? $("#nextSlide").children().fadeOut()
									: $("#nextSlide").children().fadeIn());
				}

				function a(e, t, n) {
					var r = n - e,
						i = Math.floor(n / 2);
					$(".wardrobe-popup__indicator-item").removeClass("wardrobe-popup__indicator-item_active"),
						$(".wardrobe-popup__indicator-item")
							.eq(t)
							.addClass("wardrobe-popup__indicator-item_active"),
						r >= 0
							? ($(".wardrobe-popup__indicator-list").css(
									"transform",
									"translate(" + 10 * r + "px)"
							  ),
							  $(".wardrobe-popup__indicator-item").addClass(
									"wardrobe-popup__indicator-item_full"
							  ))
							: (t >= i &&
									t < e - i &&
									$(".wardrobe-popup__indicator-list").css(
										"transform",
										"translate(-" + 20 * (t - i) + "px)"
									),
							  t >= e - i &&
									$(".wardrobe-popup__indicator-list").css(
										"transform",
										"translate(-" + 20 * (e - n) + "px)"
									),
							  f(e, t, i));
				}

				function f(e, t, n) {
					var r;
					if (t <= n) {
						for (r = 0; r < e - 1; r += 1)
							$(".wardrobe-popup__indicator-item")
								.eq(r)
								.removeClass("wardrobe-popup__indicator-item_half"),
								$(".wardrobe-popup__indicator-item")
									.eq(r)
									.addClass("wardrobe-popup__indicator-item_full");
						$(".wardrobe-popup__indicator-item")
							.eq(n * 2)
							.removeClass("wardrobe-popup__indicator-item_full"),
							$(".wardrobe-popup__indicator-item")
								.eq(n * 2)
								.addClass("wardrobe-popup__indicator-item_half"),
							$(".wardrobe-popup__indicator-item")
								.eq(n * 2 + 1)
								.removeClass("wardrobe-popup__indicator-item_full");
					}
					if (t > n && t < e - n - 1) {
						$(".wardrobe-popup__indicator-item").removeClass("wardrobe-popup__indicator-item_half"),
							$(".wardrobe-popup__indicator-item").removeClass(
								"wardrobe-popup__indicator-item_full"
							);
						for (r = t - n + 2; r < t + n - 1; r += 1)
							$(".wardrobe-popup__indicator-item")
								.eq(r)
								.removeClass("wardrobe-popup__indicator-item_half"),
								$(".wardrobe-popup__indicator-item")
									.eq(r)
									.addClass("wardrobe-popup__indicator-item_full");
						t - n == 1
							? ($(".wardrobe-popup__indicator-item")
									.eq(t - n + 1)
									.addClass("wardrobe-popup__indicator-item_full"),
							  $(".wardrobe-popup__indicator-item")
									.eq(t - n)
									.removeClass("wardrobe-popup__indicator-item_full"),
							  $(".wardrobe-popup__indicator-item")
									.eq(t - n)
									.addClass("wardrobe-popup__indicator-item_half"))
							: ($(".wardrobe-popup__indicator-item")
									.eq(t - n + 1)
									.removeClass("wardrobe-popup__indicator-item_full"),
							  $(".wardrobe-popup__indicator-item")
									.eq(t - n + 1)
									.addClass("wardrobe-popup__indicator-item_half")),
							e - t - 2 == n
								? ($(".wardrobe-popup__indicator-item")
										.eq(t + n - 1)
										.addClass("wardrobe-popup__indicator-item_full"),
								  $(".wardrobe-popup__indicator-item")
										.eq(t + n)
										.removeClass("wardrobe-popup__indicator-item_full"),
								  $(".wardrobe-popup__indicator-item")
										.eq(t + n)
										.addClass("wardrobe-popup__indicator-item_half"))
								: ($(".wardrobe-popup__indicator-item")
										.eq(t + n - 1)
										.removeClass("wardrobe-popup__indicator-item_full"),
								  $(".wardrobe-popup__indicator-item")
										.eq(t + n - 1)
										.addClass("wardrobe-popup__indicator-item_half"));
					}
					if (t >= e - n - 1)
						for (r = e - n * 2; r < e; r += 1)
							$(".wardrobe-popup__indicator-item")
								.eq(r)
								.removeClass("wardrobe-popup__indicator-item_half"),
								$(".wardrobe-popup__indicator-item")
									.eq(r)
									.addClass("wardrobe-popup__indicator-item_full"),
								r == e - n * 2 &&
									$(".wardrobe-popup__indicator-item")
										.eq(r - 1)
										.addClass("wardrobe-popup__indicator-item_half");
				}
				var r = null,
					i = t,
					s = 7,
					o = n;
				return (
					i > 1
						? ((r = $("#" + e)),
						  r.itemslide({
								one_item: !0,
								start: n,
								duration: 350,
						  }),
						  platform == "desktop"
								? (u(i, o, !0),
								  $(".wardrobe-popup__nav-btn").click(function (e) {
										e.stopPropagation();
								  }),
								  $("#nextSlide").click(function () {
										r.nextSlide();
								  }),
								  $("#previousSlide").click(function () {
										r.previousSlide();
								  }))
								: a(i, o, s),
						  r.on("changeActiveIndex", function () {
								(o = r.getActiveIndex()), platform == "desktop" ? u(i, o) : a(i, o, s);
						  }))
						: platform == "desktop" &&
						  ($("#previousSlide").children().hide(), $("#nextSlide").children().hide()),
					r
				);
			},
		});
		return n;
	}),
	define("text!popups/wardrobe/sliderList.html!strip", [], function () {
		return '<%\n\nvar i, j;\nvar itemModel;\nvar itemGroup;\nvar itemRewardParams;\nvar itemCategory;\nvar itemHasMaxLevel;\nvar itemIsClosed;\nvar itemIsCrafting;\nvar itemIsCrafted;\nvar itemCssClass;\nvar itemLevel;\nvar itemLevelSettings;\nvar itemSetInfo;\nvar itemSetName;\nvar itemTitle;\nvar itemRewards;\nvar itemReward;\nvar itemRewardBoost;\nvar itemRewardWithLetters;\nvar itemCopiesCount, itemNextLevelCopiesCount;\nvar rarity = Application.params.wardrobeItemRarity;\nvar rarityLabel;\nvar types = Application.params.wardrobeItemType;\nvar typeLabel = Application.params.wardrobeItemTypeLabel;\nvar count = Collection.length;\nvar itemWithEmptyBooster;\n%>\n<ul class="wardrobe-popup__list" id="itemslide">\n    <% for (i = 0; i < count; i += 1) { %>\n    <%\n    itemCssClass = \'\';\n    itemIsCrafting = false;\n    itemIsCrafted = false;\n    itemModel = Collection.at(i);\n    itemCraftData = itemModel.get(\'craft\');\n    itemRewards = itemModel.get(\'rewards\');\n    itemWithEmptyBooster = itemRewards.length == 1 && itemRewards[0].type == "emptyBoosterConst";\n    itemLevel = itemModel.get(\'level\') || 1;\n    itemLevelSettings = itemModel.get(\'levelSettings\');\n    itemHasMaxLevel = itemWithEmptyBooster || WardrobeController.checkingItemForMaxLevel(itemModel);\n    itemCanBeUpgraded = WardrobeController.checkingItemForUpgradable(itemModel);\n    itemGroup = itemModel.get(\'group\');\n    itemCategory = itemModel.get(\'category\');\n    itemTitle = WardrobeController.getItemTitle(itemGroup, itemCategory);\n    itemIsClosed = (content == \'workshop\' && !itemModel.get(\'setInfo\'));\n    itemCopiesCount = itemModel.get(\'copiesCount\');\n    itemSetInfo = itemModel.get(\'setInfo\');\n\n    if (itemSetInfo && itemSetInfo.name) {\n        itemSetName = \'из набора “\' + itemSetInfo.name + \'”\';\n    } else {\n        itemSetName = \'\';\n    }\n\n    if (itemCraftData) {\n        if (!itemCraftData.isFinish) {\n            if (moment().format(\'X\') - itemCraftData.tsFinish >= 0) {\n                itemIsCrafted = true;\n            } else {\n                itemIsCrafting = true;\n                itemCssClass = \'wardrobe-item_creating\';\n            }\n        } else if (itemIsClosed) {\n            itemCssClass = \'wardrobe-item-info_closed\';\n        }\n    } else {\n        itemCssClass = itemIsClosed? \'wardrobe-item-info_closed\' : \'\';\n    }\n    %>\n    <li class="wardrobe-popup__item">\n        <div class="wardrobe-popup__content">\n            <div class="wardrobe-popup__content-wrap">\n                <% if (itemIsClosed && !itemIsCrafting && !itemIsCrafted) { %>\n                <div class="wardrobe-popup__title">Закрытая вещь</div>\n                <% } %>\n                <div class="wardrobe-item-info wardrobe-item-info_<%=rarity[itemCategory]%> <%=itemCssClass%>">\n                <div class="wardrobe-item-info__title"><%=itemModel.get(\'name\')%></div>\n                <div class="wardrobe-item wardrobe-item_<%=rarity[itemCategory]%> wardrobe-item-info__icon wardrobe-item_big <%(itemIsCrafted)? \'wardrobe-item_marked\' : \'\'%>">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=itemModel.get(\'itemId\')%>.png" alt="" />\n                        <div class="wardrobe-item__level">\n                            <%=(itemHasMaxLevel)? \'Макс.\' : itemLevel + \' ур.\' %>\n                        </div>\n                        <% if (itemCanBeUpgraded) { %>\n                        <div class="wardrobe-item__upgrade"></div>\n                        <% } %>\n                        <% if (itemIsCrafting) { %>\n                            <%\n                            itemCreatingPercent = Math.floor(\n                                (moment().format(\'X\') - itemCraftData.tsStart) / \n                                (itemCraftData.tsFinish - itemCraftData.tsStart) * 100\n                            );\n                            %>\n                        <div class="wardrobe-item__progress">\n                            <canvas data-percent="<%=itemCreatingPercent%>" class="wardrobe-item__progress-canvas craftProgressPopup" width="240" height="240"></canvas>\n                        </div>\n                        <% } %>\n                    </div>\n                </div>\n                <div class="wardrobe-item-info__type wardrobe-item-type wardrobe-item-type_<%=rarity[itemCategory]%>"><%=itemTitle%> <%=itemSetName%></div>\n            <% if (itemWithEmptyBooster) { %>\n                <div class="wardrobe-boost wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__text">\n                        <%=itemRewards[0].description%>\n                    </span>\n                </div>\n            <% } else { %>\n                <% for (j = 0; j < itemRewards.length; j += 1) { \n                itemReward = itemRewards[j];\n                itemRewardWithLetters = itemReward.params.letters;\n                itemRewardBoost = WardrobeController.formatRewardBoost(itemReward);\n                %>\n                <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__value">\n                        <%=itemRewardBoost%>\n                    </span>\n                    <span class="wardrobe-boost__icon"></span>\n                    <span class="wardrobe-boost__text">\n                        <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                    </span>\n                </div>\n                <% } %>\n            <% } %>\n            <% if (!itemIsClosed && content != \'profile\') { %>\n                <% if (content == \'dissectionItemCopies\' || itemHasMaxLevel) { %>\n                <div class="wardrobe-item-info__pack">\n                    <img class="wardrobe-item-info__pack-icon" src="<%=Application.params.clothesUrl%><%=itemModel.get(\'itemId\')%>.png" alt="">\n                    <span class="wardrobe-item-info__pack-count"><%=itemCopiesCount%></span>\n                </div>\n                    <% if (itemHasMaxLevel) { %>\n                <div class="wardrobe-item-info__max-level">Максимальный уровень</div>\n                    <% } %>\n                <% } else if (content != \'dissectionItem\') { %>\n                <div class="wardrobe-item-info__amount">\n                    <div class="wardrobe-item-info__amount-items">\n                        <img class="wardrobe-item-info__amount-items-icon" src="<%=Application.params.clothesUrl%><%=itemModel.get(\'itemId\')%>.png" alt="">\n                        <div class="wardrobe-item-info__amount-count \n                            <%=(itemCopiesCount < itemLevelSettings.nextLevelCopiesCount)? \'wardrobe-item-info__amount-count_lack\' : \'\' %>">\n                            <span class="wardrobe-item-info__amount-count-current"><%=itemCopiesCount%></span>\n                            <span class="wardrobe-item-info__amount-count-max">/<%=itemLevelSettings.nextLevelCopiesCount%></span>\n                        </div>\n                    </div>\n                    <div class="wardrobe-item-info__amount-patterns">\n                        <img class="wardrobe-item-info__amount-patterns-icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/pattern-<%=rarity[itemCategory]%>.png" alt="">\n                        <div class="wardrobe-item-info__amount-count \n                            <%=(WardrobePatternsModel.getCurrentCountByCategory(itemCategory) < itemLevelSettings.nextLevelCost.clothesPatterns.cost)? \'wardrobe-item-info__amount-count_lack\' : \'\' %>">\n                            <span class="wardrobe-item-info__amount-count-current"><%=WardrobePatternsModel.getCurrentCountByCategory(itemCategory)%></span>\n                            <span class="wardrobe-item-info__amount-count-max">/<%=itemLevelSettings.nextLevelCost.clothesPatterns.cost%></span>\n                        </div>\n                    </div>\n                </div>\n                <div class="wardrobe-item-info__stats">\n                    <div class="wardrobe-item-info__stats-item <%=(itemCanBeUpgraded)? \'wardrobe-item-info__stats-item_upgradable\' : \'\'%>">\n                        <div class="wardrobe-item-info__stats-level"><%=itemModel.get(\'level\') + 1%> ур. →</div>\n                        <div>\n                        <% for (j = 0; j < itemLevelSettings.nextLevelRewards.length; j += 1) { %>\n                            <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemLevelSettings.nextLevelRewards[j].type]%> wardrobe-boost_small">\n                                <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemLevelSettings.nextLevelRewards[j])%></span>\n                                <span class="wardrobe-boost__icon"></span>\n                            </div>\n                        <% } %>\n                        </div>\n                    </div>\n                    <div class="wardrobe-item-info__stats-item">\n                        <div class="wardrobe-item-info__stats-level">макс. →</div>\n                        <div>\n                            <% for (j = 0; j < itemLevelSettings.nextLevelRewards.length; j += 1) { %>\n                            <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemLevelSettings.nextLevelRewards[j].type]%> wardrobe-boost_small">\n                                <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemLevelSettings.maxLevelRewards[j])%></span>\n                                <span class="wardrobe-boost__icon"></span>\n                            </div>\n                        <% } %>\n                        </div>\n                    </div>\n                </div>\n                    \n                <% } %>\n            <% } %>\n                \n                \n                <div class="wardrobe-item-info__btns">\n                <% if (content == \'profile\') { %>\n                    <% if (WardrobeController.isAvailable()) { %>\n                        <div class="wardrobe-item-info__btns-item b-btn b-btn_blue gotoWardrobeScreen">В гардероб</div>\n                    <% } %>\n                <% } else { %>\n                    <% if (!itemIsClosed && !itemHasMaxLevel && content != \'dissectionItem\' && content != \'dissectionItemCopies\') {%>\n                    <div data-id="<%=itemModel.get(\'id\')%>" data-cost="<%=itemLevelSettings.nextLevelCost.coins%>" data-category="<%=rarity[itemCategory]%>" class="wardrobe-item-info__btns-item b-btn b-btn_green <%=(itemCanBeUpgraded)? \'itemLevelUp\' : \'wardrobe-item-info__btns-item_disabled\'%>">Повысить  <span class="b-coin b-coin_wardrobe"><%=itemLevelSettings.nextLevelCost.coins%></span></div>\n                    <% } %>\n\n                    <% if (itemIsCrafting) { %>\n                    <div data-id="<%=itemModel.get(\'setId\')%>" class="wardrobe-item-info__btns-item b-btn b-btn_green craftItemBoost">Создать сейчас <span class="b-coin b-coin_wardrobe"><%=itemModel.get(\'craftSettings\').boostCosts.coins%></span></div>\n                    <div class="wardrobe-item-info__btns-info">Завершение через <span class="wardrobe-item-info__btns-timer"><%=Application.methods.getDaysHoursMinutesFromMS((itemCraftData.tsFinish - moment().format(\'X\')) * 1000)%></span></div>\n                    <% } else if (itemIsCrafted) { %>\n                    <div data-id="<%=itemModel.get(\'setId\')%>" class="wardrobe-item-info__btns-item b-btn b-btn_blue craftItemFinish">Забрать в сумку</div>\n                    <% } else { %>\n                        <% \n                        switch (content) { \n                            case \'set\':\n                        %>\n                    <div data-id="<%=itemModel.get(\'id\')%>" class="wardrobe-item-info__btns-item b-btn b-btn_blue <%=(WardrobeController.isFullBag())? \'wardrobe-item-info__btns-item_disabled\' : \'takeOffItem\'%>">Снять</div>\n                        <%\n                                break;\n                            case \'bag\':\n                        %>\n                    <div data-id="<%=itemModel.get(\'id\')%>" class="wardrobe-item-info__btns-item b-btn b-btn_blue putOnItem">Надеть</div>\n                        <%\n                                break;\n                            case \'profileSelf\':\n                        %>\n                    <div class="wardrobe-item-info__btns-item b-btn b-btn_blue gotoWardrobeScreen">В гардероб</div>\n                        <%\n                                break;\n                            case \'workshop\':\n                        %>\n                    <div class="wardrobe-item-info__btns-item b-btn b-btn_blue gotoWorkshopScreen">В мастерскую</div>\n                        <%\n                                break;\n                            case \'dissectionItemCopies\':\n                            case \'dissectionItem\':\n                        %>\n                    <div data-id="<%=itemModel.get(\'id\')%>" class="wardrobe-item-info__btns-item b-btn b-btn_blue destroyItem">Разобрать</div>\n                        <%\n                                break;\n                        %>\n                        <% } %>\n                    <% } %>\n                <% } %>\n                </div>\n            </div>\n        </div>\n    </li>\n    <% } %>\n</ul>\n<div class="wardrobe-popup__nav">\n    <div class="wardrobe-popup__nav-btn" id="previousSlide">\n        <div class="wardrobe-popup__nav-back"></div>\n    </div>\n    <div class="wardrobe-popup__counter">\n        <span class="wardrobe-popup__counter-data">1</span> / \n        <span class="wardrobe-popup__counter-total"><%=count%></span>\n    </div>\n    <div class="wardrobe-popup__nav-btn" id="nextSlide">\n        <div class="wardrobe-popup__nav-forward"></div>\n    </div>\n    <% if (count > 1) { %>\n    <div class="wardrobe-popup__indicator">\n        <div class="wardrobe-popup__indicator-list" style="width:<%=count*10*2%>px">\n            <% for (i = 0; i < count; i += 1) { %>\n            <div class="wardrobe-popup__indicator-item"></div>\n            <% } %>\n        </div>\n    </div>\n    <% } %>\n</div>';
	}),
	define(
		"popups/wardrobe/sliderList",
		[
			"popups/slider",
			"application",
			"gate",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/wardrobe/patterns",
			"text!popups/wardrobe/sliderList.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = e.extend({
				template: _.template(f),
				additionalEvents: {
					"click .wardrobe-popup__content": function (e) {
						e.stopPropagation();
					},
					click: "closePopup",
					"click .closeSlider": "closePopup",
					"click .gotoWardrobeScreen": "gotoWardrobeScreenHandler",
					"click .gotoWorkshopScreen": "gotoWorkshopScreenHandler",
					"click .putOnItem": "putOnItemHandler",
					"click .takeOffItem": "takeOffItemHandler",
					"click .itemLevelUp": "itemLevelUpHandler",
					"click .craftItemBoost": "craftItemBoost",
					"click .craftItemFinish": "craftItemFinish",
					"click .destroyItem": "destroyItemHandler",
				},
				initialize: function (e) {
					(this.params = e),
						(this.startIndex = e.startIndex || 0),
						(this.collection = e.data || {}),
						(this.content = e.content),
						(this.viewParam = {
							Application: t,
							content: this.content,
							WardrobeController: i,
							Collection: this.collection,
							WardrobePatternsModel: a,
						}),
						(this.viewedItems = []),
						r.sendDesignEvent("Screen_actions:Items:item_review");
				},
				afterRender: function () {
					var e = this;
					(this.slider = this.initSlider("itemslide", this.collection.length, this.startIndex)),
						this.checkItemViewStatus(this.startIndex),
						this.slider &&
							this.slider.on("changeActiveIndex", function () {
								e.checkItemViewStatus(e.slider.getActiveIndex());
							}),
						this.drawProgress();
				},
				closePopup: function () {
					s.remove(this.modelId),
						this.markedItemsAsViewed(),
						$(".wardrobe-popup").remove(),
						$("#cover").fadeOut();
				},
				gotoWardrobeScreenHandler: function () {
					this.closePopup(),
						o.setScreen({
							screen: "wardrobe.index",
						});
				},
				gotoWorkshopScreenHandler: function () {
					this.closePopup();
				},
				putOnItemHandler: function (e) {
					this.closePopup(),
						i.putOnItem($(e.currentTarget).data("id")),
						r.sendDesignEvent("Screen_actions:Items:item_put_on");
				},
				takeOffItemHandler: function (e) {
					this.closePopup(),
						i.takeOffItem($(e.currentTarget).data("id")),
						r.sendDesignEvent("Screen_actions:Items:item_put_off");
				},
				itemLevelUpHandler: function (e) {
					var t = e.currentTarget,
						i = $(t).data("id"),
						o = $(t).data("cost"),
						a = $(t).data("category"),
						f = u.get("balance");
					f < o
						? (this.closePopup(),
						  s.add({
								type: "buyCoins",
						  }))
						: (n.clothesItemLevelUp(i),
						  r.sendDesignEvent("Screen_actions:Items:item_level_up"),
						  r.sendResourceEvent("coins", -o, "item_level_up", "Consumed"),
						  r.sendDesignEvent("Items_leveling:Level_up:" + a),
						  this.closePopup());
				},
				destroyItemHandler: function (e) {
					var t = 0;
					this.slider && (t = this.slider.getActiveIndex()),
						this.params.screen.itemSelectHandler($(e.currentTarget).data("id")),
						$(".wardrobe__tabs-content-item_active")
							.find(".wardrobe-item")
							.eq(t)
							.addClass("wardrobe-items-list__item_selected"),
						this.closePopup();
				},
				craftItemBoost: function (e) {
					var t = e.currentTarget,
						r = $(t).data("id"),
						o = i.getSets(),
						a = o.get(r),
						f = a.get("craft").boostCosts.coins,
						l = u.get("balance");
					l < f
						? (this.closePopup(),
						  s.add({
								type: "buyCoins",
						  }))
						: (n.clothesSetCraftFinish(r, "boost"), this.closePopup());
				},
				craftItemFinish: function (e) {
					var t = e.currentTarget,
						r = $(t).data("id");
					n.clothesSetCraftFinish(r), this.closePopup();
				},
				markedItemsAsViewed: function () {
					(this.content == "bag" || this.content == "set") &&
						this.viewedItems.length > 0 &&
						(n.clothesItemViewed(this.viewedItems),
						i.markedItemsAsViewed(this.viewedItems, this.content));
				},
				checkItemViewStatus: function (e) {
					var t, n;
					if (this.content == "bag" || this.content == "set")
						(t = this.collection.at(e)),
							(n = t.get("id")),
							t.get("isViewed") == 0 &&
								this.viewedItems.indexOf(n) == -1 &&
								this.viewedItems.push(n);
				},
				drawProgress: function () {
					var e,
						t,
						n,
						r,
						i,
						s = $(".craftProgressPopup");
					s.each(function (s, o) {
						(e = $(o)),
							(r = e.data("percent") ? e.data("percent") : 0),
							(i = (2 * Math.PI * r) / 100),
							e.parents(".workshop-set").addClass("workshop-set_creating");
						try {
							(t = e[0].width),
								(n = e[0].getContext("2d")),
								(n.fillStyle = "#11182b"),
								n.beginPath(),
								n.moveTo(t / 2, t / 2),
								n.arc(t / 2, t / 2, t / 2, i - Math.PI / 2, 2 * Math.PI - Math.PI / 2),
								n.closePath(),
								n.fill();
						} catch (u) {
							console.warn("task canvas error: ", u);
						}
					});
				},
			});
			return l;
		}
	),
	define("text!popups/wardrobe/sliderShop.html!strip", [], function () {
		return '<%\n\nvar i, j, k;\nvar itemModel;\nvar itemData;\nvar itemRegularCost;\nvar itemRegularCostCoins;\nvar itemRegularCostPurchase;\nvar itemDiscountCost;\nvar itemCostCurrencyIsCoins;\nvar itemDiscountExpire;\nvar itemCost;\nvar itemType;\nvar itemGroup;\nvar itemRewardParams;\nvar itemCategory;\nvar itemIsClosed;\nvar itemCssClass;\nvar itemTitle;\nvar itemSetInfo;\nvar itemSetName;\nvar itemIsBought\nvar itemRewards;\nvar itemReward;\nvar itemRewardBoost;\nvar itemRewardWithLetters;\nvar rarity = Application.params.wardrobeItemRarity;\nvar rarityPatternLabel = Application.params.wardrobePatternRarityLabel;\nvar count = Collection.length;\n%>\n<ul class="wardrobe-popup__list" id="itemslide">\n    <% for (i = 0; i < count; i += 1) { %>\n    \n    <li class="wardrobe-popup__item">\n        <div class="wardrobe-popup__content">\n            <div class="wardrobe-popup__content-wrap">\n                \n                <%\n                itemModel = Collection.at(i);\n                itemType = itemModel.get(\'type\');\n                itemData = itemModel.get(\'data\');\n                itemIsBought = itemModel.get(\'isBought\');\n                itemRegularCostCoins = itemModel.get(\'regularCost\').coins;\n                if (itemRegularCostCoins) {\n                    itemRegularCost = itemRegularCostCoins;\n                } else {\n                    itemRegularCostPurchase = itemModel.get(\'regularCost\').purchase;\n                    itemPurchaseId = (social == \'ya\')? itemRegularCostPurchase.toLowerCase().replace(/\\./g,\'_\') : itemRegularCostPurchase;\n                    itemRegularCost = _.findWhere(ProductModel.get(\'clothes\'), {_id: itemPurchaseId}).price;\n                }\n                itemDiscountCost = (itemModel.get(\'discount\').cost)? (itemModel.get(\'discount\').cost.coins || itemModel.get(\'discount\').cost.purchase) : 0;\n                itemCostCurrencyIsCoins = (itemRegularCostCoins)? true : false;\n                itemDiscountExpire = itemModel.get(\'discount\').tsExpire - moment().format(\'X\');\n                itemCost = (itemDiscountExpire > 0 && itemDiscountCost)? itemDiscountCost : itemRegularCost;\n                itemSetInfo = itemData.setInfo;\n                if (itemSetInfo && itemSetInfo.name) {\n                    itemSetName = \'из набора “\' + itemSetInfo.name + \'”\';\n                } else {\n                    itemSetName = \'\';\n                }\n                %>\n\n                <% if (itemIsBought) { %>\n                <div class="wardrobe-popup__title">Купленный предмет</div>\n                <% } %>\n\n                <div class="wardrobe-item-info wardrobe-item-info_<%=rarity[itemCategory]%> <%=(itemIsBought)? \'wardrobe-item-info_bought\' : \'\'%>">\n\n            <% if (itemType == \'clothesItem\') { %>\n                <%\n                setName = \'\';\n                itemRewards = itemData.rewards;\n                itemGroup = itemData.group;\n                itemCategory = itemData.category;\n                itemTitle = WardrobeController.getItemTitle(itemGroup, itemCategory);\n                %>\n                <div class="wardrobe-item-info__title"><%=itemData.name%></div>\n                <div class="wardrobe-item wardrobe-item_<%=rarity[itemCategory]%> wardrobe-item-info__icon wardrobe-item_big <%=(itemModel.get(\'itemsCount\') > 1)? \'wardrobe-item_pack\' : \'\'%> <%=(itemIsBought)? \'wardrobe-item_bought\' : \'\'%>">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=itemData.itemId%>.png" alt="" />\n                        <div class="wardrobe-item__level">1 ур.</div>\n                        <div class="wardrobe-item__pack">\n                            <div class="wardrobe-item__pack-shadow1"></div>\n                            <div class="wardrobe-item__pack-shadow2"></div>\n                        </div>\n                        <% if (itemIsBought) { %>\n                        <div class="wardrobe-item-info__bought">\n                            <div class="wardrobe-item-info__bought-text">куплено</div>\n                        </div>\n                        <% } %>\n                    </div>\n                </div>\n                <div class="wardrobe-item-info__type wardrobe-item-type wardrobe-item-type_<%=rarity[itemCategory]%>"><%=itemTitle%> <%=itemSetName%></div>\n            <% if (itemRewards.length == 1 && itemRewards[0].type == "emptyBoosterConst") { %>\n                <div class="wardrobe-boost wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__text">\n                        <%=itemRewards[0].description%>\n                    </span>\n                </div>\n            <% } else { %>\n                <% for (j = 0; j < itemRewards.length; j += 1) { \n                itemReward = itemRewards[j];\n                itemRewardWithLetters = itemReward.params.letters;\n                itemRewardBoost = WardrobeController.formatRewardBoost(itemReward);\n                %>\n                <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__value">\n                        <%=itemRewardBoost%>\n                    </span>\n                    <span class="wardrobe-boost__icon"></span>\n                    <span class="wardrobe-boost__text">\n                        <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                    </span>\n                </div>\n                <% } %>\n            <% } %>\n                <% if (itemModel.get(\'itemsCount\') > 1) { %>\n                <div class="wardrobe-item-info__pack">\n                    <img class="wardrobe-item-info__pack-icon" src="<%=Application.params.clothesUrl%><%=itemData.itemId%>.png" alt="">\n                    <span class="wardrobe-item-info__pack-count"><%=itemModel.get(\'itemsCount\')%></span>\n                </div>\n                <% } %>\n            <% } %>\n\n            <% if (itemType == \'clothesPatterns\') { %>\n                <%\n                itemGroup = itemData.group;\n                itemCategory = itemData.category;\n                %>\n                <div class="wardrobe-item-info__title">Выкройка</div>\n                <div class="wardrobe-item-info__icon wardrobe-item-info__icon_pattern">\n                    <img class="wardrobe-item-info__icon-img" src="<%=Application.params.staticUrl%>images/app/wardrobe/pattern-<%=rarity[itemCategory]%>_big.png" alt=""/>\n                    <% if (itemIsBought) { %>\n                    <div class="wardrobe-item-info__bought">\n                        <div class="wardrobe-item-info__bought-text">куплено</div>\n                    </div>\n                    <% } %>\n                </div>\n                <div class="wardrobe-item-info__type wardrobe-item-type wardrobe-item-type_<%=rarity[itemCategory]%>"><%=rarityPatternLabel[itemCategory]%></div>\n                <div class="wardrobe-item-info__description">Нужна для улучшения вещей такой же редкости</div>\n                \n            <% } %>\n\n\n            <% if (itemType == \'box\') { %>\n                <div class="wardrobe-item-info__title">Ящик вещей</div>\n                <div class="wardrobe-item-info__icon wardrobe-item-info__icon_box">\n                    <img class="wardrobe-item-info__icon-img" src="<%=itemData.imageClosed%>" alt=""/>\n                    <% if (itemIsBought) { %>\n                    <div class="wardrobe-item-info__bought">\n                        <div class="wardrobe-item-info__bought-text">куплено</div>\n                    </div>\n                    <% } %>\n                </div>\n                <div class="wardrobe-item-info__box-content">\n                    <% \n                    for (j = 0; j < itemData.box.length; j += 1) { \n                        for (k = 0; k < itemData.box[j].count; k += 1) { \n                    %>\n                    <div class="wardrobe-item-info__box-content-icon wardrobe-item-info__box-content-icon_<%=rarity[itemData.box[j].category]%>"></div>\n                    <%  \n                        } \n                    } \n                    %>\n                  </div>\n                  <div class="wardrobe-item-info__description">Ты получишь случайные вещи указанной редкости:</div>\n                  <div class="wardrobe-item-info__box-list">\n                    <% \n                    for (j = 0; j < itemData.box.length; j += 1) { \n                    %>\n                    <div class="wardrobe-item-info__box-list-item"><%=itemData.box[j].count%> × <span class="wardrobe-item-type wardrobe-item-type_<%=rarity[itemData.box[j].category]%>"><%=Application.params.wardrobeItemRarityLabel[itemData.box[j].category][0]%> вещь</span></div>\n                    <%  \n                    } \n                    %>\n                  </div>\n            <% } %>\n\n                <div class="wardrobe-item-info__btns">\n                    <% if (itemIsBought) { %>\n                        <div class="wardrobe-item-info__btns-item b-btn b-btn_blue closeSlider">Закрыть</div>\n                    <% } else if (itemCost) { %>\n                        <div data-id="<%=itemModel.get(\'userShopItemId\')%>" \n                            class="wardrobe-item-info__btns-item b-btn b-btn_blue <%=(GateController.checkClothesShopBuyItem(itemModel.get(\'userShopItemId\')))? \'b-btn_disabled\' : \'buyItem\'%>">\n                            Купить за \n                            <%= itemCost %>\n                            <% if (itemCostCurrencyIsCoins) { %>\n                            <span class="b-coin b-coin_shop"></span>\n                            <%} else { %>\n                                <%=Application.methods.declension(itemCost, Application.params.currency[social])%>\n                            <% } %>\n                        </div>\n                    <% } %>\n                </div>\n            </div>\n        </div>\n    </li>\n    <% } %>\n</ul>\n<div class="wardrobe-popup__nav">\n    <div class="wardrobe-popup__nav-btn" id="previousSlide">\n        <div class="wardrobe-popup__nav-back"></div>\n    </div>\n    <div class="wardrobe-popup__counter">\n        <span class="wardrobe-popup__counter-data">1</span> / \n        <span class="wardrobe-popup__counter-total"><%=count%></span>\n    </div>\n    <div class="wardrobe-popup__nav-btn" id="nextSlide">\n        <div class="wardrobe-popup__nav-forward"></div>\n    </div>\n    <% if (count > 1) { %>\n    <div class="wardrobe-popup__indicator">\n        <div class="wardrobe-popup__indicator-list" style="width:<%=count*10*2%>px">\n            <% for (i = 0; i < count; i += 1) { %>\n            <div class="wardrobe-popup__indicator-item"></div>\n            <% } %>\n        </div>\n    </div>\n    <% } %>\n</div>';
	}),
	define(
		"popups/wardrobe/sliderShop",
		[
			"popups/slider",
			"application",
			"gate",
			"controllers/gate",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/product",
			"text!popups/wardrobe/sliderShop.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = e.extend({
				template: _.template(f),
				additionalEvents: {
					"click .wardrobe-popup__content": function (e) {
						e.stopPropagation();
					},
					click: "closePopup",
					"click .closeSlider": "closePopup",
					"click .buyItem": "buyItemHandler",
					"click .closeSlider": "closePopup",
				},
				initialize: function (e) {
					(this.params = e),
						(this.startIndex = e.startIndex || 0),
						(this.collection = e.data || {}),
						(this.content = e.content),
						(this.viewParam = {
							Application: t,
							content: this.content,
							GateController: r,
							WardrobeController: i,
							Collection: this.collection,
							ProductModel: a,
						});
				},
				afterRender: function () {
					var e = this;
					this.slider = this.initSlider("itemslide", this.collection.length, this.startIndex);
				},
				closePopup: function (e) {
					s.remove(this.modelId), $(".wardrobe-popup").remove(), e && $("#cover").fadeOut();
				},
				buyItemHandler: function (e) {
					var t,
						i,
						o,
						f,
						l = $(e.currentTarget),
						c = l.data("id"),
						h = this.collection.get(c),
						p = h.get("regularCost").coins ? !0 : !1;
					o = h.get("userShopItemId");
					if (p) {
						var d = h.get("regularCost").coins,
							v = h.get("discount").cost ? h.get("discount").cost.coins : 0,
							m = h.get("discount").tsExpire - moment().format("X"),
							g = m > 0 && v ? v : d,
							y = u.get("balance");
						y < g
							? (this.closePopup(!1),
							  purchase
									? s.add({
											type: "buyCoins",
									  })
									: s.add({
											type: "text",
											params: {
												header: "",
												text: "Недостаточно монет для покупки.",
												list: null,
												cursiv: null,
											},
									  }))
							: (r.clothesShopBuyItem(o), l.removeClass("buyItem").addClass("b-btn_disabled"));
					} else
						(f = h.get("regularCost").purchase),
							(i = social == "ya" ? f.toLowerCase().replace(/\./g, "_") : f),
							(t = _.findWhere(a.get("clothes"), {
								_id: i,
							})),
							social == "beeline"
								? (this.closePopup(),
								  console.log("purchase confirmation for Beeline"),
								  s.add({
										type: "confirmationPurchase",
										params: {
											product: t,
											productParams: {
												userShopItemId: o,
											},
										},
								  }))
								: n.buyProduct(u, t, {
										userShopItemId: o,
								  });
					this.closePopup();
				},
			});
			return l;
		}
	),
	define("text!popups/wardrobe/setInfo.html!strip", [], function () {
		return '<%\n\nvar collection = this.collection;\nvar models = collection.models;\n\nvar types = Application.params.wardrobeItemType;\nvar rarity = Application.params.wardrobeItemRarity;\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div class="popup__close" id="close"></div>\n        <div class="popup__title">Эффекты от наборов</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <%\n            var isSet = WardrobeController.isFullSet(models);\n            %>\n            <div class="wardrobe-set wardrobe-set_popup wardrobe-set_full <%=(isSet)? \'wardrobe-set_full wardrobe-set_\' + rarity[models[0].get(\'category\')] : \'\'%>">\n                <div class="wardrobe-set__list">\n                    <% for (var i = 0; i < types.length; i += 1) { %>\n                    <%\n                    var wardrobeItem = collection.findWhere({group: types[i]});\n                    %>\n                    <div class="wardrobe-set__item">\n                        <div class="wardrobe-set__item-wrap">\n                            <div class="wardrobe-set__shine">\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_1"></div>\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_2"></div>\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_3"></div>\n                            </div>\n                            <% if (wardrobeItem) { %>\n                            <div class="wardrobe-item wardrobe-item_<%=rarity[wardrobeItem.category]%> wardrobe-item_set-info wardrobe-set__icon">\n                                <div class="wardrobe-item__wrap">\n                                    <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=wardrobeItem.get(\'itemId\')%>.png" alt="" />\n                                </div>\n                            </div>\n                            <% } else { %>\n                            <div class="wardrobe-item wardrobe-item_set-info wardrobe-set__icon wardrobe-set__icon_empty">\n                                <div class="wardrobe-item__wrap">\n                                    <img class="wardrobe-item__icon wardrobe-set__icon-img" src="<%= Application.params.staticUrl %>images/app/wardrobe/item-<%=types[i]%>.png" alt="" />\n                                </div>\n                            </div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <% } %>\n                </div>\n                <% \n                switch (popupType) { \n                    case \'profile\': \n                %>\n                <div class="wardrobe-set__boost-info">Кроме характеристик вещей действуют эффекты от наборов.</div>\n                <%\n                        break;\n                    case \'set\':\n                %> \n                <div class="wardrobe-set__boost-info">Все эффекты от наборов учтены в общих характеристиках.</div>\n                <%\n                        break;\n                }\n                %>\n                \n                <%\n                var itemRewardWithLetters;\n                %>\n                <div class="wardrobe-set__boost">\n                    <div class="wardrobe-set__boost-section">\n                        <%if (rewards.active.length) { %>\n                        <div class="wardrobe-set__boost-section-title">Активные:</div>\n                        <% rewards.active.forEach(function(itemReward) { %>\n                        <%\n                        itemRewardWithLetters = itemReward.params.letters;\n                        %>\n                        <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-set__boost-section-item">\n                            <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemReward)%></span>\n                            <span class="wardrobe-boost__icon"></span>\n                            <span class="wardrobe-boost__text">\n                                <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                            </span>\n                        </div>\n                        <% }); %>\n                        <% } %>\n                    </div>\n                    <div class="wardrobe-set__boost-section">\n                        <%if (rewards.passive.length) { %>\n                        <div class="wardrobe-set__boost-section-title">Пассивные:</div>\n                        <% rewards.passive.forEach(function(itemReward) { %>\n                        <%\n                        itemRewardWithLetters = itemReward.params.letters;\n                        %>\n                        <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-set__boost-section-item">\n                            <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemReward)%></span>\n                            <span class="wardrobe-boost__icon"></span>\n                            <span class="wardrobe-boost__text">\n                                <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                            </span>\n                        </div>\n                        <% }); %>\n                        <% } %>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/setInfo",
		[
			"popupWidget",
			"application",
			"gate",
			"controllers/wardrobe",
			"text!popups/wardrobe/setInfo.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.collection = e.collection),
						(this.rewards = e.rewards),
						(this.viewParam = {
							Application: t,
							WardrobeController: r,
							popupType: e.content,
							rewards: this.rewards,
						});
				},
				beforeRender: function () {
					return $("#cover").fadeIn(300), this;
				},
			});
			return s;
		}
	),
	define("text!popups/wardrobe/destroyConfirm.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Внимание</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/alert.jpg" alt="">\n            </div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">Ты действительно хочешь разобрать вещи?</div>\n            </div>\n\n            <div class="popup__btns popup__btns_confirm">\n                <div class="popup__btns-item b-btn b-btn_blue decline" id="closeButton">Нет</div>\n                <div class="popup__btns-item b-btn b-btn_grey accept" id="itemDestroy">Да</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/destroyConfirm",
		["application", "popupWidget", "text!popups/wardrobe/destroyConfirm.html!strip"],
		function (e, t, n) {
			var r = t.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #itemDestroy": "itemDestroyHandler",
				},
				initialize: function (t) {
					(this.params = t),
						(this.viewParam = {
							Application: e,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				itemDestroyHandler: function () {
					this.params.screen.itemDestroyHandler(), this.closePopup();
				},
			});
			return r;
		}
	),
	define("text!popups/wardrobe/craftStart.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Создать вещь</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__text">\n                <div class="popup__text-title">Начать создание вещи?</div>\n            </div>\n\n            <div class="popup__btns popup__btns_confirm">\n                <div class="popup__btns-item b-btn b-btn_blue decline" id="closeButton">Нет</div>\n                <div class="popup__btns-item b-btn b-btn_grey accept" id="craftStart">Да</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/craftStart",
		[
			"gate",
			"popupWidget",
			"controllers/gameanalytics",
			"text!popups/wardrobe/craftStart.html!strip",
		],
		function (e, t, n, r) {
			var i = t.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #craftStart": "craftStartHandler",
				},
				initialize: function (e) {
					this.params = e;
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				craftStartHandler: function () {
					e.clothesSetCraftStart(this.params.setId),
						n.sendDesignEvent("Screen_actions:Items_craft:item_craft"),
						this.closePopup();
				},
			});
			return i;
		}
	),
	define("text!popups/wardrobe/copyCraftBoost.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Ускорить</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/acceleration.png" alt=""></div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">Забери вещь мгновенно или ускорь создание</div>\n            </div>\n            <%\n            var finishButtonIsAvailable = !GateController.checkClothesCopyCraftFinish(itemId);\n            %>\n            <div class="popup__btns popup__btns_rv">\n                <div id="copyCraftBoostByRV" class="popup__btns-item b-btn b-btn_video">Ускорить на <%=Application.methods.getDaysHoursMinutesFromMS(reduceRvTime * 1000)%></div>\n                <div id="<%=(finishButtonIsAvailable)? \'copyCraftBoostByCoins\' : \'\'%>" class="popup__btns-item b-btn b-btn_blue <%=(finishButtonIsAvailable)? \'\' : \'b-btn_disabled\' %>">\n                   Создать сейчас\n                   <span class="b-coin b-coin_wardrobe"><%=instantCreationCosts%></span>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/copyCraftBoost",
		[
			"gate",
			"application",
			"social",
			"popupWidget",
			"controllers/gate",
			"controllers/gameanalytics",
			"collections/popups",
			"models/wardrobe/copyCraftParams",
			"models/user",
			"text!popups/wardrobe/copyCraftBoost.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = r.extend({
				template: _.template(f),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #copyCraftBoostByRV": "copyCraftBoostByRVHandler",
					"click #copyCraftBoostByCoins": "copyCraftBoostByCoins",
				},
				initialize: function (e) {
					(this.params = e),
						console.log("boost copy craft popup params: ", e),
						(this.model = u),
						(this.viewParam = {
							Application: t,
							GateController: i,
							instantCreationCosts: this.params.instantCreationCosts,
							reduceRvTime: this.params.reduceRvTime,
							itemId: this.params.itemId,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				copyCraftBoostByCoins: function () {
					var e = a.get("balance"),
						t = this.params.instantCreationCosts;
					e < t
						? purchase
							? o.add({
									type: "buyCoins",
							  })
							: o.add({
									type: "text",
									params: {
										header: "",
										text: "Недостаточно монет для ускорения.",
										list: null,
										cursiv: null,
									},
							  })
						: (i.clothesCopyCraftFinish(this.params.slotId, this.params.itemId, "coins"),
						  $("#copyCraftBoostByCoins").attr("id", "").addClass("b-btn_disabled"),
						  $('.wardrobe-create__ctrl-btn[data-slot="' + this.params.slotId + '"]')
								.removeClass("copyCraftFinish copyCraftBoost")
								.addClass("b-btn_disabled"),
						  s.sendDesignEvent("Screen_actions:Creation:coins_speedup"),
						  s.sendResourceEvent(
								"coins",
								-this.params.instantCreationCosts,
								"creation_speedup",
								"Consumed"
						  )),
						this.closePopup();
				},
				copyCraftBoostByRVHandler: function () {
					n.ad.getVideoForCopyCraftBoost(this.params.slotId, this.params.itemId, "video"),
						s.sendDesignEvent("Screen_actions:Creation:video_speedup"),
						this.closePopup();
				},
			});
			return l;
		}
	),
	define("text!popups/wardrobe/copyCraftBuySlot.html!strip", [], function () {
		return '<%\n\nvar slotPrice = ProductModel.get(\'clothesCopySlots\')[0].price;\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Дополнительная ячейка</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon"><img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/wardrobe/buy-slot.png" alt=""></div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">Купи дополнительную ячейку, чтобы создавать несколько вещей одновременно</div>\n            </div>\n\n            <div class="popup__btns">\n                <div class="popup__btns-item b-btn b-btn_blue" id="copyCraftBuySlot">\n                    Купить за \n                    <span id="copyCraftBuySlotPrice"><%=slotPrice%></span>\n                    <%=Application.methods.declension(slotPrice, Application.params.currency[social])%>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/copyCraftBuySlot",
		[
			"gate",
			"application",
			"popupWidget",
			"controllers/gameanalytics",
			"models/user",
			"models/product",
			"models/wardrobe/copyCraftSlots",
			"text!popups/wardrobe/copyCraftBuySlot.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = n.extend({
				template: _.template(u),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #copyCraftBuySlot": "copyCraftBuySlotHandler",
				},
				initialize: function (e) {
					(this.params = e),
						(this.model = o),
						(this.viewParam = {
							Application: t,
							ProductModel: s,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				copyCraftBuySlotHandler: function () {
					e.buyProduct(i, s.get("clothesCopySlots")[0], null),
						r.sendDesignEvent("Screen_actions:Creation:buy_slot"),
						this.closePopup();
				},
			});
			return a;
		}
	),
	define("text!popups/wardrobe/paperLacks.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Не хватает свитков</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/wardrobe/need-scrolls.png" alt="">\n            </div>\n\n            <div class="popup__text">\n                <div class="popup__text-title">Для создания вещи<br>нужно еще <%=count%> <span class="b-icon b-icon_scrolls b-icon_small"></span></div>\n                <div class="popup__text-info">Разбери ненужные вещи, <br>чтобы получить свитки.</div>\n            </div>\n\n            <div class="popup__btns">\n                <div id="wardrobeDissectionScreen" class="popup__btns-item b-btn b-btn_blue">Перейти в разбор</div>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/wardrobe/paperLacks",
		["popupWidget", "application", "models/appState", "text!popups/wardrobe/paperLacks.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #wardrobeDissectionScreen": function () {
						n.setScreen({
							screen: "wardrobe.dissection",
						}),
							this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
							count: this.params.count,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	define("models/chase/shopItem", ["backbone"], function (e) {
		var t = e.Model.extend({
			idAttribute: "id",
		});
		return t;
	}),
	define(
		"collections/chase/shopItems",
		["backbone", "application", "models/chase/shopItem"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: n,
				comparator: "position",
			});
			return new r();
		}
	),
	define("models/chase/main", ["gate", "status"], function (e, t) {
		var n = Backbone.Model.extend({
			initialize: function () {},
		});
		return new n();
	}),
	define(
		"controllers/chase",
		[
			"backbone",
			"gate",
			"status",
			"controllers/notifications",
			"collections/popups",
			"collections/chase/shopItems",
			"models/appState",
			"models/chase/main",
			"models/storage",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = u,
				l = s,
				c = {
					isAvailable: function () {
						return !_.isEmpty(f.get("chase"));
					},
					isExpired: function () {
						var e = f.get("chase"),
							t = moment().format("X");
						return t - e.tsExpire > 0;
					},
					isFinished: function () {
						var e = f.get("chase"),
							t = moment().format("X");
						return t - e.tsFinish > 0;
					},
					isTemporaryHiden: !1,
					showInfoPopup: function () {
						i.add({
							type: "chase.info",
							params: {
								content: "info",
								iconUrl: f.get("chase").infoUrl,
								bonusUrl: f.get("chase").bonusUrl,
							},
						});
					},
					showWelcomePopup: function () {
						var e = f.get("chase").alias,
							t = {};
						c.storage.get(e) ||
							(i.add({
								type: "chase.info",
								params: {
									content: "welcome",
									iconUrl: f.get("chase").infoUrl,
									bonusUrl: f.get("chase").bonusUrl,
								},
							}),
							(t[e] = !0),
							c.storage.set(t));
					},
					goToScreenLeaders: function () {
						var e;
						$("#contentLoader").fadeIn(300),
							this.isFinished()
								? ((e = "history"),
								  t.getChaseHistory(),
								  this.listenToOnce(t, "getChaseHistory", function (t) {
										$("#contentLoader").fadeOut(300),
											o.setScreen({
												screen: "chase.leaders",
												params: {
													type: e,
													data: t,
												},
											});
								  }))
								: ((e = "rating"),
								  t.getChaseRating(),
								  this.listenToOnce(t, "getChaseRating", function (t) {
										$("#contentLoader").fadeOut(300),
											o.setScreen({
												screen: "chase.leaders",
												params: {
													type: e,
													data: t,
												},
											});
								  }));
					},
					getMainData: function () {
						return f;
					},
					getShopItems: function () {
						return l;
					},
					getGroupedListForHistory: function (e) {
						var t,
							n,
							r,
							i,
							s = [],
							o = f.get("chase"),
							u = o.rewards,
							a,
							l,
							c,
							h,
							p;
						for (t = 0; t < u.length; t += 1) {
							(a = u[t]),
								(h = a.position.from),
								(p = a.position.to),
								(s[t] = {}),
								(s[t].groupMaxPosition = p),
								(l = a.userReward),
								(s[t].groupList = []),
								(s[t].groupRewards = []);
							for (n = 0; n < l.length; n += 1)
								(c = l[n]),
									(s[t].groupRewards[n] = {}),
									(s[t].groupRewards[n].rewardType = c.rewardType),
									(s[t].groupRewards[n].count = c.count),
									c.rewardType == "beelineOnceConst" &&
										((s[t].groupRewards[n].text = c.text),
										(s[t].groupRewards[n].imageUrl = c.imageUrl),
										(s[t].groupRewards[n].descriptionUrl = c.descriptionUrl));
							i = 0;
							for (r = 0; r < e.length; r += 1)
								e[r].place >= h && e[r].place <= p && (s[t].groupList[i++] = e[r]);
							s[t].groupList = _.sortBy(s[t].groupList, function (e) {
								return e.place;
							});
						}
						return s;
					},
				};
			return (
				_.extend(c, e.Events),
				n("auth").done(function () {
					t.getChase(), t.getChaseShop();
				}),
				n("chase")
					.dependence(["chaseMainData", "chaseShop"])
					.done(function () {
						n("chase").resolve();
					}),
				c.listenTo(t, "getChase", function (e) {
					e.state != "error" &&
						(f.set(e),
						f.trigger("change"),
						n("chaseMainData").resolve(),
						c.isAvailable() &&
							!c.isFinished() &&
							((c.storage = new a().setStorageInfo({
								key: "chaseWelcomePopup",
								prefix: "socialId",
							})),
							c.storage.restoreDeferred.done(function () {
								c.showWelcomePopup();
							})));
				}),
				c.listenTo(t, "userChaseInfo", function (e) {
					var t = {},
						n,
						i = e.userChaseData,
						s = {};
					e.state != "error" &&
						((n = i.balance - f.get("userChase").balance),
						n > 0 &&
							((t.chaseTitle = f.get("chase").title),
							(t.chaseIcon = f.get("chase").avatarUrl),
							(t.chaseBalanceDiff = n),
							(t.chaseBalanceIcon = f.get("chase").bonusUrl),
							r.setChaseNotification(t)),
						(s = f.get("userChase")),
						_.extend(s, i),
						f.set({
							userChase: s,
						}));
				}),
				c.listenTo(t, "getChaseShop", function (e) {
					e.state != "error" && (l.reset(), l.set(e.items), n("chaseShop").resolve());
				}),
				c.listenTo(t, "buyChaseShopItem", function (e) {
					e.state != "error" && t.getChaseShop();
				}),
				c.listenTo(t, "confirmChaseAgreement", function (e) {
					e.state == "success" && t.getChase();
				}),
				c
			);
		}
	),
	define("text!popups/chase/info.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%=(content == \'info\')? \'Хочешь больше?\' : \'&nbsp;\'%></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <% if (iconUrl) { %>\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= iconUrl %>" alt="">\n            </div>\n            <% } %>\n\n            <div class="popup__text">\n                <div class="popup__text-title">\n                    Собирай \n                    <img class="icon icon_chase" src="<%= bonusUrl %>" alt=""> \n                    в личных поединках и&nbsp;клановых боях.</div>\n                <div class="popup__text-info">Стань лучшим по итогам недели и получи награду!</div>\n            </div>\n\n            <% if(content == \'info\') { %>\n            <div class="popup__btns">\n                <div id="showChaseLeaders" class="popup__btns-item b-btn b-btn_blue">Посмотреть лидеров</div>\n            </div>\n            <% } %>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/chase/info",
		["popupWidget", "application", "controllers/chase", "text!popups/chase/info.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #showChaseLeaders": function () {
						n.goToScreenLeaders(), this.closePopup();
					},
				},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
						iconUrl: e.iconUrl,
						bonusUrl: e.bonusUrl,
						content: e.content,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	define("text!popups/chase/shop.html!strip", [], function () {
		return '<%\n\nvar i, j;\nvar itemModel;\nvar itemType;\nvar itemData;\nvar itemCost;\nvar itemGroup;\nvar itemRewardParams;\nvar itemCategory;\nvar itemCssClass;\nvar itemTitle;\nvar itemSetInfo;\nvar itemSetName;\nvar itemRewards;\nvar itemReward;\nvar itemRewardBoost;\nvar itemRewardWithLetters;\nvar rarity = Application.params.wardrobeItemRarity;\nvar count = 0;\nvar shopItems = Collection.where({isBought: false});\n\n%>\n<ul class="wardrobe-popup__list" id="itemslide">\n\n<% for (i = 0; i < shopItems.length; i += 1) { %>\n\n    <%\n    itemModel = shopItems[i];\n    count++;\n    itemType = itemModel.get(\'type\');\n    itemData = itemModel.get(\'data\');\n    itemCost = itemModel.get(\'price\');\n    %>\n\n    <li class="wardrobe-popup__item">\n    <% if (itemType == \'item\') {\n        \n            itemSetInfo = itemData.setInfo;\n            itemRewards = itemData.rewards;\n            itemGroup = itemData.group;\n            itemCategory = itemData.category;\n            itemTitle = WardrobeController.getItemTitle(itemGroup, itemCategory);\n            if (itemSetInfo && itemSetInfo.name) {\n                itemSetName = \'из набора “\' + itemSetInfo.name + \'”\';\n            } else {\n                itemSetName = \'\';\n            }\n        \n    %>\n\n        <div class="wardrobe-popup__content">\n            <div class="wardrobe-popup__content-wrap">\n\n                <div class="wardrobe-item-info wardrobe-item-info_<%=rarity[itemCategory]%>">\n                \n                <div class="wardrobe-item-info__title"><%=itemData.name%></div>\n                <div class="wardrobe-item wardrobe-item_<%=rarity[itemCategory]%> wardrobe-item-info__icon wardrobe-item_big">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=itemData.itemId%>.png" alt="" />\n                        <!-- <div class="wardrobe-item__level">1 ур.</div> -->\n                    </div>\n                </div>\n                <div class="wardrobe-item-info__type wardrobe-item-type wardrobe-item-type_<%=rarity[itemCategory]%>"><%=itemTitle%> <%=itemSetName%></div>\n\n            <% if (itemRewards.length == 1 && itemRewards[0].type == "emptyBoosterConst") { %>\n                <div class="wardrobe-boost wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__text">\n                        <%=itemRewards[0].description%>\n                    </span>\n                </div>\n            <% } else { %>\n                <% for (j = 0; j < itemRewards.length; j += 1) { \n                itemReward = itemRewards[j];\n                itemRewardWithLetters = itemReward.params.letters;\n                itemRewardBoost = WardrobeController.formatRewardBoost(itemReward);\n                %>\n                <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-item-info__boost">\n                    <span class="wardrobe-boost__value">\n                        <%=itemRewardBoost%>\n                    </span>\n                    <span class="wardrobe-boost__icon"></span>\n                    <span class="wardrobe-boost__text">\n                        <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                    </span>\n                </div>\n                <% } %>\n            <% } %>\n                <div class="wardrobe-item-info__btns">\n                    <% if (itemCost) { %>\n                        <div data-id="<%=itemModel.get(\'id\')%>" \n                            class="wardrobe-item-info__btns-item b-btn b-btn_white <%=(GateController.checkChaseShopBuyItem(itemModel.get(\'id\')))? \'b-btn_disabled\' : \'buyItem\'%>">\n                            Купить за \n                            <%= itemCost %>\n                            <img class="icon icon_chase" src="<%=itemModel.get(\'priceUrl\')%>" alt="">\n                        </div>\n                    <% } %>\n                </div>\n            </div>\n        </div>\n\n    <% } else { %>\n    <% \n        switch (itemType) {\n            case \'coins\':\n                itemTitle = "Монеты";\n                break;\n            case \'papers\':\n                itemTitle = "Свитки";\n                break;\n        }\n    %>\n        <div class="wardrobe-popup__content">\n            <div class="wardrobe-popup__content-wrap">\n\n                <div class="wardrobe-item-info">\n                \n                <div class="wardrobe-item-info__title"><%=itemTitle%></div>\n\n                <div class="wardrobe-item  wardrobe-item-info__icon wardrobe-item_big">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%= Application.params.staticUrl %>images/app/chase/shop/<%= itemType %>_big.png" alt="" />\n                    </div>\n                </div>\n                <div class="wardrobe-item-info__description"><%=itemData.count%> шт.</div>\n\n                <div class="wardrobe-item-info__btns">\n                    <% if (itemCost) { %>\n                        <div data-id="<%=itemModel.get(\'id\')%>" \n                            class="wardrobe-item-info__btns-item b-btn b-btn_white <%=(GateController.checkChaseShopBuyItem(itemModel.get(\'id\')))? \'b-btn_disabled\' : \'buyItem\'%>">\n                            Купить за \n                            <%= itemCost %>\n                            <img class="icon icon_chase" src="<%=itemModel.get(\'priceUrl\')%>" alt="">\n                        </div>\n                    <% } %>\n                </div>\n            </div>\n        </div>\n    <% } %>\n    </li>\n<% } %>\n</ul>\n<div class="wardrobe-popup__nav">\n    <div class="wardrobe-popup__nav-btn" id="previousSlide">\n        <div class="wardrobe-popup__nav-back"></div>\n    </div>\n    <div class="wardrobe-popup__counter">\n        <span class="wardrobe-popup__counter-data">1</span> / \n        <span class="wardrobe-popup__counter-total"><%=count%></span>\n    </div>\n    <div class="wardrobe-popup__nav-btn" id="nextSlide">\n        <div class="wardrobe-popup__nav-forward"></div>\n    </div>\n    <% if (count > 1) { %>\n    <div class="wardrobe-popup__indicator">\n        <div class="wardrobe-popup__indicator-list" style="width:<%=count*10*2%>px">\n            <% for (i = 0; i < count; i += 1) { %>\n            <div class="wardrobe-popup__indicator-item"></div>\n            <% } %>\n        </div>\n    </div>\n    <% } %>\n</div>';
	}),
	define(
		"popups/chase/shop",
		[
			"popups/slider",
			"application",
			"gate",
			"controllers/gate",
			"controllers/wardrobe",
			"controllers/chase",
			"collections/popups",
			"models/appState",
			"models/user",
			"text!popups/chase/shop.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = e.extend({
				template: _.template(f),
				additionalEvents: {
					"click .wardrobe-popup__content": function (e) {
						e.stopPropagation();
					},
					click: "closePopup",
					"click .closeSlider": "closePopup",
					"click .buyItem": "buyItemHandler",
					"click .closeSlider": "closePopup",
				},
				initialize: function (e) {
					(this.params = e),
						(this.startIndex = e.startIndex || 0),
						(this.collection = e.data || {}),
						(this.viewParam = {
							Application: t,
							Collection: this.collection,
							WardrobeController: i,
							GateController: r,
						});
				},
				afterRender: function () {
					var e = this,
						t = this.collection.where({
							isBought: !1,
						}).length;
					this.slider = this.initSlider("itemslide", t, this.startIndex);
				},
				closePopup: function (e) {
					o.remove(this.modelId), $(".wardrobe-popup").remove(), e && $("#cover").fadeOut();
				},
				buyItemHandler: function (e) {
					console.log("buyItemHandler");
					var t = s.getMainData(),
						n = $(e.currentTarget),
						u = n.data("id"),
						a = this.collection.get(u),
						f = a.get("price"),
						l = a.get("id"),
						c = t.get("userChase").balance;
					i.isAvailable() && i.isFullBag()
						? i.showBagPopup()
						: c < f
						? (this.closePopup(!1),
						  o.add({
								type: "text",
								params: {
									header: "Недостаточно предметов",
									text:
										'Накопи больше <img class="icon icon_chase" src="' +
										a.get("priceUrl") +
										'" alt=""><br> чтобы приобрести это!',
									list: null,
									cursiv: null,
								},
						  }))
						: r.buyChaseShopItem(l),
						this.closePopup();
				},
			});
			return l;
		}
	),
	define("text!popups/seasonPass/disabled.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Награды сезона</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/season-pass/disabled.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-main">Получай награды, зарабатывая жетоны в личных боях и в ежедневных заданиях.</div>\n                <div class="popup__text-info">Для доступа к разделу “Награды сезона” тебе нужно повысить уровень.</div>\n            </div>\n            <div class="popup__btns">\n                <div id=\'seasonPassRulesButton\' class="popup__btns-item b-btn b-btn_blue">Читать правила</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/seasonPass/disabled",
		[
			"popupWidget",
			"application",
			"controllers/usedesk",
			"text!popups/seasonPass/disabled.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #seasonPassRulesButton": function () {
						this.closePopup(), n.showInfoPopup("seasonPass");
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	define("text!popups/seasonPass/rewardInfo_lootBox.html!strip", [], function () {
		return '<%\n\nvar lootBox = reward.lootBox || reward.lootbox;\nvar lootBoxName = reward.text || reward.lootbox.name;\n\n%>\n\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%= lootBoxName %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= lootBox.imageBig %>" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Что в сундуке?</div>\n                <div class="popup__text-main">\n                    <%= lootBox.text %>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!popups/seasonPass/rewardInfo_clothesItem.html!strip", [], function () {
		return '<%\nvar userReward = reward.userRewards[0];\nvar userRewardInfo = userReward.info;\n\nvar itemGroup = userRewardInfo.group;\nvar itemCategory = userRewardInfo.category;\nvar itemAlias = userRewardInfo.alias;\nvar itemRewards = userRewardInfo.rewards;\n\nvar title = WardrobeController.getItemTitle(itemGroup, itemCategory);\n%>\n<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title"><%= title %></div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n\n            <div class="wardrobe-item-popup">\n                <div class="wardrobe-item wardrobe-item_<%= Application.params.wardrobeItemRarity[itemCategory] %> wardrobe-item-popup__icon wardrobe-item_big ">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl + itemAlias %>.png" alt=""/>\n                    </div>\n                </div>\n                <div class="wardrobe-item-popup__title"><%=userRewardInfo.name%></div>\n                <% \n                if (itemRewards) {\n                    itemRewards.forEach(function(boost) {\n                    %>\n                    <div class="wardrobe-item-popup__boost">\n                        <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[boost.type]%> wardrobe-set__boost-section-item">\n                            <span class="wardrobe-boost__value"><%= WardrobeController.formatRewardBoost(boost) %></span>\n                            <span class="wardrobe-boost__icon"></span>\n                            <span class="wardrobe-boost__text">\n                                <%=(boost.params.letters)? boost.description.replace(\'%(letters)\', boost.params.letters) : boost.description%>\n                            </span>\n                        </div>\n                    </div>\n                    <%\n                    });\n                } %>\n                \n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/seasonPass/rewardInfo",
		[
			"popupWidget",
			"application",
			"controllers/wardrobe",
			"text!popups/seasonPass/rewardInfo_lootBox.html!strip",
			"text!popups/seasonPass/rewardInfo_clothesItem.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				templates: {
					lootBox: r,
					clothesItem: i,
				},
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					(this.params = e), console.log("popup rewardInfo params: ", e);
					var r = this.params.reward,
						i = "lootBox",
						s = "lootbox";
					!_.isEmpty(r[i]) || !_.isEmpty(r[s])
						? (this.template = _.template(this.templates.lootBox))
						: r.rewardType == "clothesItem" &&
						  (this.template = _.template(this.templates.clothesItem)),
						(this.viewParam = {
							Application: t,
							reward: r,
						}),
						r.rewardType == "clothesItem" && (this.viewParam.WardrobeController = n);
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return s;
		}
	),
	define("text!popups/seasonPass/ticketPurchase.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id="closeButton" class="popup__close"></div>\n        <div class="popup__title">Словесный пропуск</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap season-pass season-pass_popup">\n            <div class="popup__icon"> <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/season-pass/icon.png" alt=""></div>\n            <div class="popup__text">\n                <div class="popup__text-title">Купи пропуск и&nbsp;получи привилегии в&nbsp;этом сезоне:</div>\n            </div>\n            <div class="season-pass__advantages">\n                <div class="season-pass__advantages-list">\n                    <div class="season-pass__advantages-item"><img class="season-pass__advantages-icon" src="<%= Application.params.staticUrl %>images/app/popups/season-pass/icon-unlock.png" alt="">\n                        <div class="season-pass__advantages-text">Шанс забрать<br>все награды</div>\n                    </div>\n                    <div class="season-pass__advantages-item"><img class="season-pass__advantages-icon" src="<%= Application.params.staticUrl %>images/app/popups/season-pass/icon-coin.png" alt="">\n                        <div class="season-pass__advantages-text">Подарки для<br>соклановцев</div>\n                    </div>\n                </div>\n            </div>\n            <div class="popup__text-info">Платные награды открываются только после прохождения уровня сезона.</div>\n            <% if (purchase) { %>\n            <div class="popup__btns">\n                <div class="popup__btns-item b-btn b-btn_blue" id="ticketPurchaseButton"><%= ticketPurchasePrice %></div>\n            </div>\n            <div id="purchaseDisabled" class="g-hidden">\n                <div class="season-pass__timer">\n                    <div class="season-pass__timer-label">Покупка недоступна в конце сезона.</div>\n                </div>\n            </div>\n            <div id="purchaseEnabled" class="g-hidden">\n                <div class="season-pass__timer">\n                    <div class="season-pass__timer-label">До завершения:</div>\n                    <div class="season-pass__timer-icon">\n                        <canvas id="seasonPassPopupTimerCanvas" class="season-pass__timer-icon-canvas" width="24" height="24"></canvas>  \n                    </div>\n                    <div id="seasonPassPopupTimer" class="season-pass__timer-data"></div>\n                </div>\n            </div>\n            <% } %>\n            </div>\n          </div>\n    </div>\n</div>';
	}),
	define(
		"popups/seasonPass/ticketPurchase",
		[
			"popupWidget",
			"application",
			"gate",
			"controllers/seasonPass",
			"collections/popups",
			"models/seasonPass/main",
			"models/user",
			"models/product",
			"text!popups/seasonPass/ticketPurchase.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				template: _.template(a),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": "closeButtonHandler",
					"click #ticketPurchaseButton": "ticketPurchaseHandler",
				},
				initialize: function (e) {
					var r = this,
						i = null,
						o = "",
						a = t.params.currency[social];
					(this.params = e),
						(this.timerInterval = 10),
						purchase &&
							((i = u.get("seasonPass")[0]),
							(o = _.isEmpty(i) ? null : i.price + " " + t.methods.declension(i.price, a))),
						this.listenTo(n, "orderSuccess", function () {
							r.closePopup();
						}),
						(this.viewParam = {
							Application: t,
							SeasonPassMainModel: s,
							ticketPurchasePrice: o,
						});
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
				afterRender: function () {
					purchase &&
						(r.isTicketPurchaseAvailable()
							? ($("#purchaseEnabled").removeClass("g-hidden"),
							  r.drawTimerCanvas(),
							  this.timerUpdate(),
							  this.timerStart())
							: ($("#purchaseDisabled").removeClass("g-hidden"),
							  $("#ticketPurchaseButton").addClass("b-btn_disabled").attr("id", "")));
				},
				closeButtonHandler: function () {
					console.log("closeButtonHandler"), this.timerStop(), this.closePopup();
				},
				ticketPurchaseHandler: function () {
					var e = u.get("seasonPass")[0];
					console.log("product seasonPass: ", e),
						social == "beeline"
							? (this.timerStop(),
							  this.closePopup(),
							  console.log("purchase confirmation for Beeline"),
							  i.add({
									type: "confirmationPurchase",
									params: {
										product: e,
										productParams: null,
									},
							  }))
							: n.buyProduct(o, e, null);
				},
				getTimerPeriod: function () {
					return s.get("info").timeFinish - moment().format("X");
				},
				timerStart: function () {
					var e = this,
						t = r.getElapsedTimeInterval(!0);
					t < 60 + this.timerInterval && (this.timerInterval = 1),
						this.timerStop(),
						(this.timer = setInterval(this.timerUpdate.bind(e), this.timerInterval * 1e3));
				},
				timerStop: function () {
					this.timer && clearInterval(this.timer);
				},
				timerUpdate: function () {
					var e;
					r.isTicketPurchaseAvailable()
						? ((e = r.getElapsedTimeInterval(!0)),
						  e < 0
								? this.disablingPurchaseByTimer()
								: e < 60 + this.timerInterval && this.timerInterval != 1
								? ((this.timerInterval = 1), this.timerStop(), this.timerStart())
								: $("#seasonPassPopupTimer").text(t.methods.getFormattedTime(e * 1e3)))
						: this.disablingPurchaseByTimer();
				},
				disablingPurchaseByTimer: function () {
					this.timerStop(),
						$("#purchaseEnabled").addClass("g-hidden"),
						$("#purchaseDisabled").removeClass("g-hidden"),
						$("#ticketPurchaseButton").addClass("b-btn_disabled").attr("id", "");
				},
			});
			return f;
		}
	),
	define("text!popups/seasonPass/keysCount.html!strip", [], function () {
		return '<div class="popup">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">Недостаточно места</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            <div class="popup__icon">\n                <img class="popup__icon-img" src="<%= Application.params.staticUrl %>images/app/popups/season-pass/key.png" alt="" />\n            </div>\n            <div class="popup__text">\n                <div class="popup__text-title">Все слоты ключей заполнены. <br>Открой сундук, чтобы забрать ключ.</div>\n            </div>\n            <div class="popup__btns">\n                <div id=\'seasonPassRulesButton\' class="popup__btns-item b-btn b-btn_blue">Читать правила</div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/seasonPass/keysCount",
		[
			"popupWidget",
			"application",
			"controllers/usedesk",
			"text!popups/seasonPass/keysCount.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
					"click #seasonPassRulesButton": function () {
						this.closePopup(), n.showInfoPopup("seasonPass");
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return i;
		}
	),
	define("text!widgets/usedesk/category.html!strip", [], function () {
		return '<% if (articles.length > 1) { %>\n<ul class="usedesk-content__anchors">\n<% _.each(articles, function(article, index) { %>\n    <li class="usedesk-content__anchors-item">\n        <a href="#usedeskArticle<%= article.id %>" class="usedesk-content__anchors-link"><%= article.title %></a>\n    </li>\n<% }); %>\n</ul>\n<% } %>\n<% _.each(articles, function(article, index) { %>\n    <div id="usedeskArticle<%= article.id %>" class="usedesk-content__title"><%= article.title %></div>\n    <div class="usedesk-content__article"><%= article.text %></div>\n<% }); %>';
	}),
	define(
		"widgets/usedesk/category",
		["widget", "text!widgets/usedesk/category.html!strip"],
		function (e, t) {
			var n = e.extend({
				initialize: function (e) {
					this.template = _.template(t);
				},
			});
			return n;
		}
	),
	define("text!popups/usedesk/info.html!strip", [], function () {
		return '<div class="popup popup_usedesk">\n    <div class="popup__head">\n        <div id=\'close\' class="popup__close"></div>\n        <div class="popup__title">База знаний</div>\n    </div>\n    <div class="popup__content">\n        <div class="popup__content-wrap">\n            \n            <div id="usedeskCategoryContent" class="popup__text usedesk-content"></div>\n\n        </div>\n    </div>\n</div>';
	}),
	define(
		"popups/usedesk/info",
		["popupWidget", "widgets/usedesk/category", "text!popups/usedesk/info.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				className: "popup-wrapper",
				additionalEvents: {
					"click #closeButton": function () {
						this.closePopup();
					},
				},
				initialize: function (e) {
					this.params = e;
				},
				afterRender: function () {
					$("#usedeskCategoryContent").append(
						new t({
							model: this.params.data,
						}).returnableRender()
					),
						social == "ya" && $(".usedesk-content__article a").contents().unwrap();
				},
				beforeRender: function () {
					return $("#cover").show(), this;
				},
			});
			return r;
		}
	),
	define(
		"controllers/popups",
		[
			"gate",
			"status",
			"application",
			"models/appState",
			"collections/popups",
			"models/user",
			"popups/reward",
			"popups/settings/changeName",
			"popups/achievement",
			"popups/proVersion/index",
			"popups/newRank",
			"popups/text",
			"popups/server",
			"popups/chat/blockOp",
			"popups/share",
			"popups/balance/buyCoins",
			"popups/confirmationPurchase",
			"popups/tourneys/result",
			"popups/videoReward/words",
			"popups/videoReward/lifes",
			"popups/videoReward/confirm",
			"popups/quest/replace",
			"popups/quest/rewardInfo",
			"popups/static/index",
			"popups/library/boost",
			"popups/clan/disabled",
			"popups/clan/taskResult",
			"popups/clan/exit",
			"popups/clan/createError",
			"popups/clan/joinError",
			"popups/clan/chatInfo",
			"popups/clan/memberRate",
			"popups/clan/milestone",
			"popups/clan/rewardInfo",
			"popups/clan/rateCopy",
			"popups/clan/safe/disabledInfo",
			"popups/clan/safe/createInfo",
			"popups/clan/safe/rules",
			"popups/clan/safe/rewards",
			"popups/clan/safe/rewardInfo",
			"popups/clan/safe/resetResults",
			"popups/clan/safe/open",
			"popups/clan/safe/getReward",
			"popups/profile/clan",
			"popups/profile/complaint",
			"popups/wardrobe/bag",
			"popups/wardrobe/patternInfo",
			"popups/wardrobe/patternLimit",
			"popups/wardrobe/sliderList",
			"popups/wardrobe/sliderShop",
			"popups/wardrobe/setInfo",
			"popups/wardrobe/destroyConfirm",
			"popups/wardrobe/craftStart",
			"popups/wardrobe/copyCraftBoost",
			"popups/wardrobe/copyCraftBuySlot",
			"popups/wardrobe/paperLacks",
			"popups/chase/info",
			"popups/chase/shop",
			"popups/seasonPass/disabled",
			"popups/seasonPass/rewardInfo",
			"popups/seasonPass/ticketPurchase",
			"popups/seasonPass/keysCount",
			"popups/usedesk/info",
		],
		function (
			e,
			t,
			n,
			r,
			i,
			s,
			o,
			u,
			a,
			f,
			l,
			c,
			h,
			p,
			d,
			v,
			m,
			g,
			y,
			b,
			w,
			E,
			S,
			x,
			T,
			N,
			C,
			k,
			L,
			A,
			O,
			M,
			D,
			P,
			H,
			B,
			j,
			F,
			I,
			q,
			R,
			U,
			z,
			W,
			X,
			V,
			J,
			K,
			Q,
			G,
			Y,
			Z,
			et,
			tt,
			nt,
			rt,
			it,
			st,
			ot,
			ut,
			at,
			ft,
			lt
		) {
			function ct() {
				var e = this;
				(this.isPopupShowed = !1),
					(this.popupCollection = i),
					this.popupCollection.on(
						"add",
						function () {
							e.isPopupShowed || e.changePopup();
						},
						this
					),
					this.popupCollection.on(
						"remove",
						function () {
							(e.isPopupShowed = !1), e.changePopup();
						},
						this
					),
					(this.popups = this.getPopupList()),
					(this.conditions = {
						share: {},
					});
			}
			(ct.prototype.getPopupList = function () {
				return {
					achievement: a,
					proVersion: f,
					newRank: l,
					text: c,
					serverPopup: h,
					blockOp: p,
					share: d,
					buyCoins: v,
					confirmationPurchase: m,
					reward: o,
					changeName: u,
					tourneyResult: g,
					videoRewardWords: y,
					videoRewardLifes: b,
					videoRewardConfirm: w,
					questReplace: E,
					questRewardInfo: S,
					clanDisabled: N,
					clanTaskResult: C,
					clanExit: k,
					clanCreateError: L,
					clanJoinError: A,
					clanChatInfo: O,
					clanMemberRate: M,
					clanMilestone: D,
					clanRewardInfo: P,
					clanRateCopy: H,
					clanSafeDisabledInfo: B,
					clanSafeCreateInfo: j,
					clanSafeRules: F,
					clanSafeRewards: I,
					clanSafeRewardInfo: q,
					clanSafeResetResults: R,
					clanSafeOpen: U,
					clanSafeGetReward: z,
					"library.boost": T,
					static: x,
					profileClan: W,
					profileComplaint: X,
					"wardrobe.bag": V,
					"wardrobe.patternInfo": J,
					"wardrobe.patternLimit": K,
					"wardrobe.sliderList": Q,
					"wardrobe.sliderShop": G,
					"wardrobe.destroyConfirm": Z,
					"wardrobe.craftStart": et,
					"wardrobe.copyCraftBoost": tt,
					"wardrobe.copyCraftBuySlot": nt,
					wardrobeSetInfo: Y,
					"wardrobe.paperLacks": rt,
					"chase.info": it,
					"chase.shop": st,
					"seasonPass.disabled": ot,
					"seasonPass.rewardInfo": ut,
					"seasonPass.ticketPurchase": at,
					"seasonPass.keysCount": ft,
					"usedesk.info": lt,
				};
			}),
				(ct.prototype.render = function () {
					this.popupCollection.length > 0 && this.changePopup();
				}),
				(ct.prototype.changePopup = function () {
					var e = this.popupCollection.first(),
						t = !1;
					if (e)
						try {
							var n = e.get("params") ? e.get("params") : {};
							(t = new this.popups[e.get("type")](n)),
								(t.type = e.get("type")),
								(t.modelId = e.cid),
								(this.isPopupShowed = !0);
						} catch (i) {
							console.info(
								"Cant add Popup",
								"popup:",
								e,
								"this.popups:",
								this.popups,
								"Error info:",
								i
							);
						}
					else this.isPopupShowed = !1;
					if (!!r.screenObj) {
						var s = r.screenObj.el,
							o = $(s).find(".b-onboarding"),
							u = $(s).find(".b-onboarding-popup:visible");
						o.length == 0 && u.length == 0 && r.screenObj.renderPopup(t);
					}
				}),
				(ct.prototype.afterGameEndPopup = function () {
					this.showSharePopup();
				}),
				(ct.prototype.onUserInfoPopup = function () {}),
				(ct.prototype.showSharePopup = function () {
					var t = !n.params.availableSocialFriends;
					if ("countSocialGames" in this) {
						console.warn("user.isFirstGame countSocialGames:", this.countSocialGames),
							console.log(social);
						if (this.countSocialGames > 0 || t) return;
						i.add({
							type: "share",
						}),
							(this.countSocialGames = 1),
							e.storage.set("firstGame", 1);
					} else
						this.listenToOnce(e, "storage.get.firstGame", function (e) {
							(this.countSocialGames = e.length > 0 ? 1 : 0),
								console.warn("user.isFirstGame countSocialGames:", this.countSocialGames),
								this.showSharePopup();
						}),
							e.storage.get("firstGame");
				});
			var ht = new ct();
			return (
				social == "beeline" &&
					(e.on("orderSuccess", function () {
						i.add({
							type: "text",
							params: {
								text: "Поздравляем с успешной покупкой! ",
								list: null,
								cursiv: null,
							},
						});
					}),
					e.on("orderError initPaymentError", function () {
						i.add({
							type: "text",
							params: {
								header: "Ошибка",
								text: "Что-то пошло не так. Повтори попытку позднее.",
								list: null,
								cursiv: null,
							},
						});
					}),
					e.on("orderSuccess orderError initPaymentError", function () {
						$("#contentLoader").fadeOut(300);
					})),
				e.on("showAuthErrorPopup", function (e) {
					i.add({
						type: "text",
						params: {
							header: "Ошибка",
							text: e,
							list: null,
							cursiv: null,
						},
					});
					var t = i.first(),
						n = new ht.popups[t.get("type")](t.get("params"));
					$("#popup").html(""), n && n.render();
				}),
				_.extend(ct.prototype, Backbone.Events),
				ht
			);
		}
	),
	define("text!widgets/sideBar/user.html!strip", [], function () {
		return '<div class="soundingButton b-side__user-i" id="userButton">\n    <div class="b-side__user__pic">\n        <div class="b-user">\n            <% if (customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (var i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	 <img class="b-user__pic-i" src=\'<%= avatarUrl %>\' alt=""/>\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level.value %>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="b-side__user__data">\n        <p class="b-side__user__data__name"><%= playerName %></p>\n        <p class="b-side__user__data__level"><%= level.name %></p>\n		<p class="b-side__user__data__label">Посмотреть профиль и&nbsp;статистику&nbsp;игр</p>\n    </div>\n    \n</div>\n';
	}),
	define(
		"widgets/sideBar/user",
		[
			"widget",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"text!widgets/sideBar/user.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#userContainer",
				events: {
					"click #userButton": "showUserInfo",
				},
				viewParam: {
					Application: t,
				},
				initialize: function () {
					(this.model = i),
						this.listenTo(i, "change", function () {
							this.render();
						});
				},
				showUserInfo: function () {
					n.sendDesignEvent("Screen_actions:Side_menu:my_profile"),
						$(".tss-label").click(),
						r.setScreen({
							screen: "userInfo",
							params: {
								id: i.get("id"),
							},
						});
				},
			});
			return o;
		}
	),
	define("text!widgets/balance/buttonOnMenu.html!strip", [], function () {
		return '<span class="b-side__menu__item-i showProductsButton">\n    <img class="b-side__menu__item__icon" alt="" src="<%= Application.params.staticUrl %>images/app/menu/balance.png">\n    <span class="b-side__menu__item__text">Мой баланс</span>\n    <span id=\'balanceValue\' style="font-size:<%= balance>999?\'11px\':\'16px\' %>"\n          class="b-side__menu__item__balance"><%= balance %></span>\n</span>\n\n<!-- style="font-size:<%= balance>9999?\'12px\':\'19px\' %>" -->\n';
	}),
	define("text!widgets/balance/buttonOnIndex.html!strip", [], function () {
		return '<div class="showProductsButton">\n    <img src="<%= Application.params.staticUrl %>images/app/icons/balance.png" alt="" class="b-btn-balance__icon">\n    <span id=\'balanceValue\' class="b-btn-balance__count">&times;&nbsp;<span class="b-btn-balance__count-i"><%= balance %></span></span>\n</div>';
	}),
	define(
		"widgets/balance/button",
		[
			"widget",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"controllers/analytic",
			"collections/popups",
			"text!widgets/balance/buttonOnMenu.html!strip",
			"text!widgets/balance/buttonOnIndex.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				el: null,
				templates: {
					balanceOnIndex: a,
					balanceOnMenu: u,
				},
				events: {},
				initialize: function (e) {
					var n = this;
					(this.model = i),
						(this.paramType = e.template),
						(this.el = $("#" + e.el)),
						(this.template = _.template(this.templates[e.template])),
						this.listenTo(this.model, "change", function () {
							n.render();
						}),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {
					var e = this;
					$(".showProductsButton").on("click", function () {
						e.showProducts();
					});
				},
				showProducts: function () {
					this.paramType == "balanceOnIndex"
						? n.sendDesignEvent("Screen_actions:Main_screen:balance")
						: this.paramType == "balanceOnMenu" &&
						  n.sendDesignEvent("Screen_actions:Side_menu:balance"),
						r.setScreen({
							screen: "products",
						});
				},
				reduceCoins: function (e) {
					var t = this.$el.find("#balanceValue");
					t.html(t.html() - e);
				},
			});
			return f;
		}
	),
	define("text!widgets/achievements/buttonOnMenu.html!strip", [], function () {
		return '<span class="b-side__menu__item-i">\n    <img src="<%= Application.params.staticUrl %>images/app/menu/achievements.png" alt="" class="b-side__menu__item__icon"/>\n    <span class="b-side__menu__item__text">\n        Достижения\n        <span <%=(counter == 0)? \'style="display:none;"\' : \'\'%> class="b-side__menu__item__count"><%=counter%></span>\n    </span>\n</span>';
	}),
	define("text!widgets/achievements/buttonOnIndex.html!strip", [], function () {
		return '<div class="main-top__nav-icon">\n    <img class="main-top__nav-img" src="<%= Application.params.staticUrl %>images/app/main-top-nav/achieves.png" alt="">\n    <div class="main-top__nav-counter" <%=(counter)? \'style="display:block;"\' : \'\'%>><%=counter%></div>\n</div>';
	}),
	define(
		"widgets/achievements/button",
		[
			"widget",
			"gate",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"text!widgets/achievements/buttonOnMenu.html!strip",
			"text!widgets/achievements/buttonOnIndex.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				el: null,
				templates: {
					buttonOnMenu: o,
					buttonOnIndex: u,
				},
				events: {},
				initialize: function (e) {
					(this.paramType = e.template),
						(this.el = $("#" + e.el)),
						(this.template = _.template(this.templates[e.template])),
						this.setCounter(),
						this.listenTo(t, "reloadSession", function () {
							this.setCounter(), this.render();
						}),
						(this.viewParam = {
							Application: n,
						});
				},
				afterRender: function () {},
				setCounter: function () {
					this.model = {
						counter: this.getCounter(),
					};
				},
				getCounter: function () {
					var e = s.get("achievements"),
						t = _.where(e, {
							rewardStatus: !1,
						}),
						n = t ? t.length : 0;
					return n;
				},
			});
			return a;
		}
	),
	define("text!widgets/notifications/button.html!strip", [], function () {
		return '\n<span id="notificationsButton" class="soundingButton b-side__menu__item-i">\n    <img src="<%= Application.params.staticUrl %>images/app/menu/notifications.png" alt="" class="b-side__menu__item__icon"/>\n<span class="b-side__menu__item__text">Уведомления\n    <span  <% if(notificationCount==0) print(\'style="display:none;"\')%> class="b-side__menu__item__count"><%=notificationCount%></span>\n\n    </span>\n</span>\n\n';
	}),
	define(
		"widgets/notifications/button",
		[
			"widget",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"collections/notifications",
			"text!widgets/notifications/button.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#notificationButtonDiv",
				events: {
					"click #notificationsButton": "showNotifications",
				},
				initialize: function () {
					(this.collection = i),
						(this.model = {
							notificationCount: this.collection.length,
						}),
						this.listenTo(this.collection, "add remove", function () {
							console.log("notification add || remove"),
								console.log("notificationCount: ", this.collection.length),
								(this.model = {
									notificationCount: this.collection.length,
								}),
								this.render();
						}),
						(this.viewParam = {
							Application: t,
						});
				},
				showNotifications: function () {
					$(".tss-label").click(),
						n.sendDesignEvent("Screen_actions:Side_menu:notifications"),
						(this.model.notificationCount = 0),
						this.render(),
						r.setScreen({
							screen: "notifications",
						});
				},
			});
			return o;
		}
	),
	define(
		"widgets/chat/messagesCounter",
		["widget", "controllers/chat", "application"],
		function (e, t, n) {
			var r = e.extend({
				el: "#newMessagesCount",
				template: _.template(""),
				initialize: function () {
					this.listenTo(t, "newMessage", function (e) {
						e > 0 && n.methods.play("message_in"), this.render();
					});
				},
				render: function () {
					console.warn("MessagesCounter.unreadMessages", t.unreadMessages),
						$(this.el).html(t.unreadMessages === 0 ? "" : t.unreadMessages);
				},
			});
			return r;
		}
	),
	define("text!widgets/dailyWord/button.html!strip", [], function () {
		return '<%\n\nvar counter = 0;\n\n%>\n\n<span class="b-side__menu__item-i">\n    <img src="<%= Application.params.staticUrl %>images/app/menu/daily-word.png" alt="" class="b-side__menu__item__icon"/>\n    <span class="b-side__menu__item__text">\n        Слово дня\n        <span <%=(counter == 0)? \'style="display:none;"\' : \'\'%> class="b-side__menu__item__count"><%=counter%></span>\n    </span>\n</span>';
	}),
	define(
		"widgets/dailyWord/button",
		[
			"widget",
			"gate",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"text!widgets/dailyWord/button.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				el: "#dailyWordButton",
				template: _.template(o),
				events: {},
				initialize: function (e) {
					this.viewParam = {
						Application: n,
					};
				},
				afterRender: function () {},
			});
			return u;
		}
	),
	define("text!widgets/sideBar/menu.html!strip", [], function () {
		return '<div class="soundingButton b-side__menu__item">\n    <span id="indexButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/home.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Главная</span>\n    </span>\n</div>\n\n<% if (GamePartModel.get(\'clan\').isAvailable && !_.isEmpty(Clan.get(\'clanData\'))) { %>\n<div class="soundingButton b-side__menu__item">\n    <span id="clanButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/clan.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Клан</span>\n    </span>\n</div>\n<% } %>\n\n<div id=\'dailyWordButton\' class="soundingButton b-side__menu__item"></div>\n\n<div id=\'balanceContainerMenu\' class="soundingButton b-side__menu__item"></div>\n\n<div class="soundingButton b-side__menu__item">\n    <span id="libraryButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/library.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Библиотека</span>\n    </span>\n</div>\n\n<div id=\'achievementsButton\' class="soundingButton b-side__menu__item"></div>\n\n<% if (Application.params.availableSocialFriends) { %>\n<div class="soundingButton b-side__menu__item">\n    <span id="inviteFriends" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/friends.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Друзья</span>\n    </span>\n</div>\n<% } %>\n  \n<% if (social == \'vk\' && platform == \'mobile\') { %>\n<div class="soundingButton b-side__menu__item">\n    <span id="topVKPlayersButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/vk_leader_board.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Турнирная таблица VK</span>\n    </span>\n</div>\n<% } %>\n\n<div id=\'notificationButtonDiv\' class="soundingButton b-side__menu__item"></div>\n\n<div class="soundingButton b-side__menu__item">\n    <span id="chatsButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/messages.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Сообщения<span id=\'newMessagesCount\' class="b-side__menu__item__count"></span></span>\n    </span>\n</div>\n\n<div class="soundingButton b-side__menu__item">\n    <span id="finderButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/search.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Найти игрока</span>\n    </span>\n</div>\n\n<div class="soundingButton b-side__menu__item">\n    <span id="settingsButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/settings.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Настройки</span>\n    </span>\n</div>\n\n<div class="soundingButton b-side__menu__item">\n    <span id="helpButton" class="b-side__menu__item-i">\n        <img src="<%= Application.params.staticUrl %>images/app/menu/help.png" alt="" class="b-side__menu__item__icon"/>\n        <span class="b-side__menu__item__text">Помощь</span>\n    </span>\n</div>\n\n<% if (platform == \'desktop\') { %>\n<div id="VCsocialApp" style="display: none;">\n    <div class="b-side__menu__title">\n        РЕКОМЕНДУЕМ\n    </div>\n    <div class="b-side__menu__item" id="VCsocialAppLink">\n        <a href="#" class="b-side__menu__item-i" target="_blank">\n            <img src="<%= Application.params.staticUrl %>images/app/side-menu-vc.png" alt="" class="b-side__menu__item__icon" />\n            <span class="b-side__menu__item__text">Поздравления и розыгрыши</span>\n        </a>\n    </div>\n</div>\n<% } %>';
	}),
	define(
		"widgets/sideBar/menu",
		[
			"gate",
			"widget",
			"application",
			"controllers/gameanalytics",
			"controllers/achievement",
			"controllers/dailyWord",
			"models/appState",
			"models/user",
			"models/clan/main",
			"models/gamePart",
			"widgets/balance/button",
			"widgets/achievements/button",
			"widgets/notifications/button",
			"widgets/chat/messagesCounter",
			"widgets/dailyWord/button",
			"text!widgets/sideBar/menu.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v) {
			var m = t.extend({
				template: _.template(v),
				el: "#leftMenuContainer",
				events: {
					"click #indexButton": function () {
						r.sendDesignEvent("Screen_actions:Side_menu:main_screen"),
							o.setScreen({
								screen: "index",
							});
					},
					"click #inviteFriends": function () {
						e.inviteAllFriends(u);
					},
					"click #clanButton": function () {
						r.sendDesignEvent("Screen_actions:Side_menu:clan"),
							o.setScreen({
								screen: "clan",
							});
					},
					"click #finderButton": function () {
						r.sendDesignEvent("Screen_actions:Side_menu:find_player"),
							o.setScreen({
								screen: "finder",
							});
					},
					"click #chatsButton": function () {
						r.sendDesignEvent("Screen_actions:Side_menu:messages"),
							o.setScreen({
								screen: "chatList",
							});
					},
					"click #settingsButton": function () {
						r.sendDesignEvent("Screen_actions:Side_menu:settings"),
							o.setScreen({
								screen: "settings",
							});
					},
					"click #achievementsButton": function () {
						i.goToAchievementsScreen();
					},
					"click #helpButton": function () {
						console.log("helpButton click"),
							r.sendDesignEvent("Screen_actions:Side_menu:Help"),
							o.setScreen({
								screen: "help",
							});
					},
					"click #topVKPlayersButton": function () {
						e.showLeaderboardBox(u.get("level").value);
					},
					"click #libraryButton": function () {
						o.setScreen({
							screen: "library",
						});
					},
					"click #dailyWordButton": function () {
						s.isMenuMarked && $("#dailyWordButton").removeClass("b-side__menu__item_marked"),
							o.setScreen({
								screen: "dailyWord.view",
								params: {
									type: "current",
									model: null,
								},
							});
					},
					"click .b-side__menu__item": function () {
						$(".tss-label").click();
					},
				},
				initialize: function () {
					var t = this;
					(this.viewParam = {
						Application: n,
						GamePartModel: f,
						Clan: a,
					}),
						this.listenTo(u, "change", function () {
							t.render();
						}),
						this.listenTo(e, "clanJoin", function () {
							t.render();
						}),
						this.listenTo(e, "clanQuite", function () {
							t.render();
						}),
						this.listenTo(a, "change", function () {
							t.render();
						}),
						this.listenTo(e, "dailyWordGetCurrent", function () {
							this.render();
						}),
						(this.simplebar = null);
				},
				initializeWidgets: function () {
					this.widgets = [
						new l({
							template: "balanceOnMenu",
							el: "balanceContainerMenu",
						}),
						new c({
							template: "buttonOnMenu",
							el: "achievementsButton",
						}),
						new p(),
						new h(),
						new d(),
					];
				},
				afterRender: function () {
					var e = this;
					(social == "vk" || social == "ok") && this.renderBanner();
					if (!_.isEmpty(a.get("clanData"))) {
						var t = _.findWhere(a.get("clanData").members, {
								id: n.user.id,
							}).reward,
							r = a.calcMsToFreeBattle();
						(t.length > 0 || r == 0) &&
							$("#clanButton").parent().addClass("b-side__menu__item_marked");
					}
					s.isMenuMarked && $("#dailyWordButton").addClass("b-side__menu__item_marked"),
						platform == "desktop" &&
							require(["simplebar"], function (t) {
								e.simplebar && e.simplebar.unMount(), (e.simplebar = new t($(e.el)[0]));
							});
				},
				renderBanner: function () {
					var e = this;
					$("#VCsocialApp").show(),
						$("#VCsocialAppLink").click(function () {
							r.sendDesignEvent("Screen_actions:Side_menu:voicecards"),
								$("#VCsocialAppLink .b-side__menu__item-i").attr(
									"href",
									social == "vk" ? "https://vk.com/app6758519" : "https://ok.ru/game/voicecards"
								);
						});
				},
			});
			return m;
		}
	),
	define("text!widgets/sideBar/sideBar.html!strip", [], function () {
		return '<div id="userContainer" class="b-side__user"></div>\n<div id="leftMenuContainer" data-simplebar="" class="b-side__menu"></div>';
	}),
	(function (e, t) {
		typeof define == "function" && define.amd
			? define("sideswipe", t)
			: typeof module == "object" && module.exports
			? (module.exports = t())
			: (e.TouchSideSwipe = t());
	})(this, function () {
		var e = function (e) {
			function v() {
				(d = !0),
					(u = document.getElementById(t.elInitID)),
					(a = document.createElement("div")),
					(f = document.createElement("div")),
					(l = document.createElement("div")),
					(l.innerHTML = '<div class="tss-label_pic"></div>'),
					(c = document.createElement("div")),
					a.appendChild(f),
					f.appendChild(l),
					u.parentNode.insertBefore(a, u),
					f.appendChild(u),
					document.body.insertBefore(c, document.body.lastChild),
					(a.classList = "tss"),
					(f.classList = "tss-wrap"),
					(l.classList = "tss-label"),
					(c.classList = "tss-bg"),
					n * t.elSubmainMaxWidth >= t.elSubmainWidth
						? (h = t.elSubmainWidth)
						: (h = n * t.elSubmainMaxWidth),
					(f.style.width = h + "px"),
					(p = h + t.sideHookWidth),
					(a.style.transitionDuration = t.moveSpeed + "s"),
					(c.style.transitionDuration = t.moveSpeed + "s"),
					x();
			}

			function m() {
				s === !0 && x(),
					(n = window.innerWidth),
					n * t.elSubmainMaxWidth >= t.elSubmainWidth
						? (h = t.elSubmainWidth)
						: (h = n * t.elSubmainMaxWidth),
					(p = h + t.sideHookWidth),
					(f.style.width = h + "px"),
					(a.style.transform = "translateX(" + -h + "px)"),
					(a.style.width = p + "px");
			}

			function g(e) {
				(document.body.style.overflow = "hidden"),
					(a.style.transitionDuration = "0s"),
					(c.style.transitionDuration = "0s"),
					(c.style.zIndex = 999),
					(o = a.getBoundingClientRect().left),
					(r = e.changedTouches[0].clientX);
			}

			function y(e) {
				i = e.changedTouches[0].clientX;
				var n = i - (r - o);
				if (n <= 0) {
					r > h && (n += r - h), i <= h && (a.style.transform = "translateX(" + n + "px)");
					var s = i / h;
					s > 0 &&
						s < 1 &&
						(s >= t.opacityBackground
							? (c.style.opacity = t.opacityBackground)
							: (c.style.opacity = s));
				}
			}

			function b(e) {
				var n = e.changedTouches[0].clientX;
				(document.body.style.overflow = ""),
					(a.style.transitionDuration = t.moveSpeed + "s"),
					(c.style.transitionDuration = t.moveSpeed + "s"),
					!s && n > r
						? Math.abs(r - n) > t.shiftForStart
							? S()
							: x()
						: !s && n < r
						? x()
						: s &&
						  n < r &&
						  n <= h &&
						  ((r > h && n < h - t.shiftForStart) || (r < h && Math.abs(r - n) > t.shiftForStart)
								? x()
								: S());
			}

			function w(e) {
				e.stopPropagation(), s === !1 ? S() : x();
			}

			function E(e) {
				var t = a.getBoundingClientRect().left;
				e.clientX > t + h && x();
			}

			function S() {
				(c.style.opacity = t.opacityBackground),
					(a.style.width = n + "px"),
					(a.style.transform = "translateX(0px)"),
					a.classList.remove("tss--close"),
					a.classList.add("tss--open"),
					c.classList.remove("tss-bg--close"),
					c.classList.add("tss-bg--open"),
					(c.style.zIndex = "999"),
					(s = !0);
			}

			function x() {
				(document.body.style.overflow = ""),
					(c.style.opacity = 0),
					(a.style.width = p + "px"),
					(a.style.transform = "translateX(" + -h + "px)"),
					a.classList.remove("tss--open"),
					a.classList.add("tss--close"),
					c.classList.remove("tss-bg--open"),
					c.classList.add("tss-bg--close"),
					(c.style.zIndex = "-999"),
					(s = !1);
			}

			function T() {
				(a && c) != undefined &&
					(a.parentNode.insertBefore(u, a), a.remove(), c.remove(), (d = !1));
			}

			function N(e) {
				(n = window.innerWidth),
					n < t.windowMaxWidth && !d ? C() : n >= t.windowMaxWidth && d && T();
			}

			function C() {
				n < t.windowMaxWidth &&
					!d &&
					(v(),
					window.addEventListener("resize", m, !1),
					a.addEventListener("touchstart", g, !1),
					a.addEventListener("touchmove", y, !1),
					a.addEventListener("touchend", b, !1),
					a.addEventListener("click", E, !1),
					l.addEventListener("click", w, !1)),
					window.addEventListener("resize", N, !1);
			}

			function A() {
				if (n > t.windowMaxWidth) {
					var e =
						"(touch-sideswipe) cant use when window inner width > " +
						t.windowMaxWidth +
						"px (your actual option windowMaxWidth). Please, add the condition here.";
					(k = function () {
						console.log("tssOpen " + e);
					}),
						(L = function () {
							console.log("tssClose " + e);
						});
				} else (k = S), (L = x);
			}
			var t = {
					elInitID: e.elementID || "touchSideSwipe",
					elSubmainWidth: e.elementWidth || 400,
					elSubmainMaxWidth: e.elementMaxWidth || 0.8,
					sideHookWidth: e.sideHookWidth || 44,
					moveSpeed: e.moveSpeed || 0.2,
					opacityBackground: e.opacityBackground || 0.8,
					shiftForStart: e.shiftForStart || 50,
					windowMaxWidth: e.windowMaxWidth || 1024,
				},
				n = window.innerWidth,
				r,
				i,
				s,
				o,
				u,
				a,
				f,
				l,
				c,
				h,
				p,
				d = !1;
			C();
			var k, L;
			return (
				A(),
				window.addEventListener("resize", A, !1),
				{
					tssOpen: k,
					tssClose: L,
				}
			);
		};
		return e;
	}),
	define(
		"widgets/sideBar/sideBar",
		[
			"widget",
			"widgets/sideBar/user",
			"widgets/sideBar/menu",
			"models/appState",
			"text!widgets/sideBar/sideBar.html!strip",
			"sideswipe",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(i),
				el: "#sideBar",
				events: {},
				initialize: function (e) {
					var t = this;
					r.on("screenChange", function () {
						var e = r.get("screen");
						e == "game" || e == "clanBattle" ? $("#sideBar").hide() : $("#sideBar").show();
					}),
						this.render();
				},
				initializeWidgets: function () {
					this.widgets = [new t(), new n()];
				},
				afterRender: function () {
					this.el.style = "";
					var e = new s({
						elementID: "sideBar",
						elementWidth: 340,
						elementMaxWidth: 0.88,
						sideHookWidth: 20,
						moveSpeed: 0.3,
						opacityBackground: 0.7,
						shiftForStart: 40,
						windowMaxWidth: 758,
					});
				},
			});
			return o;
		}
	),
	define(
		"controllers/onboarding",
		["gate", "status", "models/storage", "models/user"],
		function (e, t, n, r) {
			function i() {
				var e = this;
				social == "ya"
					? (this.storage = new n().setStorageInfo({
							key: "onboarding",
					  }))
					: (this.storage = new n().setStorageInfo({
							key: "onboarding",
							prefix: "socialId",
					  }));
			}
			return (
				(i.prototype.get = function (e) {
					return this.storage.get(e);
				}),
				(i.prototype.set = function (e, t) {
					var n = {};
					return (n[e] = t), this.storage.set(n);
				}),
				(i.prototype.checkPassedForClan = function () {
					var t = this;
					this.listenTo(e, "playerInfoGetClan", function (e) {
						e.previousClan &&
							t.storage.set({
								clanStart: !0,
								clanMember: 7,
							});
					}),
						e.playerInfoGetClan(r.get("id"));
				}),
				_.extend(i.prototype, Backbone.Events),
				new i()
			);
		}
	),
	define("models/opponent", ["models/player"], function (e) {
		var t = e.extend({
			set: function (t, n) {
				if (!$.isEmptyObject(t)) {
					var r = _.clone(t);
					r.level = this.level(t);
				}
				e.prototype.set.apply(this, [r, n]);
			},
		});
		return t;
	}),
	define("collections/opponents", ["backbone", "models/opponent"], function (e, t) {
		var n = e.Collection.extend({
			model: t,
		});
		return n;
	}),
	define("collections/friends", ["gate", "collections/opponents"], function (e, t) {
		var n = new t();
		return (
			e.on("getFriends", function (e) {
				n.reset(_.values(e.appFriends));
			}),
			n
		);
	}),
	define("collections/friendsToInvite", ["gate", "collections/opponents"], function (e, t) {
		var n = new t();
		return (
			e.on("getFriends", function (e) {
				n.reset(_.values(e.absentFriends));
			}),
			n
		);
	}),
	define("text!widgets/main/central.html!strip", [], function () {
		return '<div id="gamesEmpty" class="b-games__empty b-games__empty_start g-hidden">\n    <div class="b-games__empty-i">\n        <p class="b-games__empty__text">Пока нет игр</p>\n        <div id="randomPlayerButton" class="b-games__empty__ctrl">Начни новую игру</div>\n    </div>\n</div>\n\n<div class="b-games__list" data-simplebar>\n\n    <div id="userTurn">\n        <div class="b-games__list__title b-games__list__title_green">\n            <div class="b-games__list__title-i">Твой ход</div>\n        </div>\n        <div id="userTurnList" class="b-games__list-i">\n            <div class="b-loader">\n                <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n            </div>\n        </div>\n    </div>\n\n    <div id="opponentTurn">\n        <div class="b-games__list__title b-games__list__title_orange">\n            <div class="b-games__list__title-i">Ожидание</div>\n        </div>\n        <div id="opponentTurnList" class="b-games__list-i">\n            <div class="b-loader">\n                <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n            </div>\n        </div>\n    </div>\n    <!-- /.b-games__list -->\n    \n    <div id="ended">\n        <div class="b-games__list__title b-games__list__title_blue">\n            <div class="b-games__list__title-i">Завершенные</div>\n        </div>\n        <!-- /.b-games__list__title -->\n        <div id="endedList" class="b-games__list-i">\n            <div class="b-loader">\n                <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n            </div>\n        </div>\n    </div>\n    <!-- /.b-games__list -->\n\n    <div class="friendsListBlock">\n        <div class=" b-games__list__title b-games__list__title_green">\n            <div class="b-games__list__title-i">брось вызов другу</div>\n        </div>\n        <!-- /.b-games__list__title -->\n        <div id=\'friendsList\' class="b-games__list-i">\n            <div class="b-loader">\n                <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n            </div>\n        </div>\n        <div class="moreFriends b-games__list__more grayscale">\n            <span class="b-games__list__more-i">Еще</span>\n        </div>\n    </div>\n\n    <div class="friendsToInviteBlock">\n        <div class="b-games__list__title b-games__list__title_blue">\n            <div class="b-games__list__title-i">Пригласить друзей</div>\n            <span class="invite-box b-games__list__title__ctrl">выбрать</span>\n        </div>\n        <!-- /.b-games__list__title -->\n        <div id="friendsToInviteList" class="b-games__list-i">\n            <div class="b-loader">\n                <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n            </div>\n        </div>\n        <div class="moreFriendsToInvite b-games__list__more grayscale">\n            <span class="b-games__list__more-i">Еще</span>\n        </div>\n    </div>\n</div>\n<!-- /.b-games__list -->';
	}),
	define("text!widgets/tutorial/gamesListItem.html!strip", [], function () {
		return '<div class="soundingButton b-games__list__item b-games__list__item_tutorial">\n    <div class="b-games__list__item__avatar">\n        <div class="b-user b-user_tutorial">\n            <div class="b-user__pic">\n            	<img alt="" src="<%=Application.params.staticUrl + \'images/app/tutorial/dubina.png\'%>" class="b-user__pic-i">\n            </div>\n        </div>\n    </div>\n    <div class="b-games__list__item-i">\n        <p class="userStatButton b-games__list__item__user">Дубина</p>\n\n        <p class="b-games__list__item__round"><%=Application.methods.declension(currentRound-1, [\'Сыгран\', \'Сыграно\', \'Сыграно\'])%> <%= currentRound-1%> из 3 раундов</p>\n\n        <p class="b-games__list__item__points">Счёт <%=score.user %> : <%=score.dubina %></p>\n\n    </div>\n    <div class="b-games__list__item__ctrls">\n        <div id="tutorialStats" class="b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_stats"></div>\n        <div id="tutorialPlay" class="b-games__list__item__ctrls__btn b-games__list__item__ctrls__btn_play"></div>\n    </div>\n</div>\n<!-- /.b-games__list__item -->';
	}),
	define(
		"widgets/tutorial/gamesListItem",
		[
			"widget",
			"application",
			"models/appState",
			"models/tutorial",
			"text!widgets/tutorial/gamesListItem.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				events: {
					"click #tutorialPlay": "tutorialPlayHandler",
					"click #tutorialStats": "tutorialStatsHandler",
				},
				initialize: function (e) {
					(this.viewParam = {
						Application: t,
					}),
						(this.model = r),
						this.listenTo(r, "change", this.render);
				},
				afterRender: function () {},
				tutorialPlayHandler: function () {
					r.get("currentRound") < 4 &&
						n.setScreen({
							screen: "tutorialGame",
						});
				},
				tutorialStatsHandler: function () {
					n.setScreen({
						screen: "tutorialStats",
					});
				},
			});
			return s;
		}
	),
	define(
		"widgets/main/central",
		[
			"gate",
			"widget",
			"application",
			"controllers/gate",
			"models/user",
			"models/storage",
			"models/appState",
			"models/onboarding",
			"models/tutorial",
			"collections/stat",
			"collections/friends",
			"collections/friendsToInvite",
			"text!widgets/main/central.html!strip",
			"widgets/opponent/index",
			"widgets/tutorial/gamesListItem",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = t.extend({
				template: _.template(h),
				el: "#centralContainer",
				widgets: [],
				events: {
					"click .invite-box": "inviteFriends",
					"click .moreFriendsToInvite": "moreFriendsToInvite",
					"click .moreFriends": "moreFriends",
					"click #friendSearch": function () {
						o.setScreen({
							screen: "finder",
						});
					},
					"click #randomPlayerButton": function () {
						o.setScreen({
							params: {
								randomOpponent: !0,
							},
							screen: "pvp.game",
						});
					},
				},
				viewParam: {
					Application: n,
				},
				gamesListEmpty: !1,
				friendsEmpty: !1,
				friendsToInviteEmpty: !1,
				tutorialEmpty: !0,
				initialize: function (e) {
					var t = this;
					(this.collection = f),
						this.collection.on(
							"setByOpponentId remove",
							function () {
								this.renderHistory(), this.renderTutorialItem(), this.showTextForEmptyLists();
							},
							this
						),
						this.listenTo(
							l,
							"reset init",
							function () {
								console.log("FriendsCollection init"),
									this.renderFriends(),
									this.showTextForEmptyLists();
							},
							this
						),
						this.listenTo(
							c,
							"reset remove init",
							function () {
								console.log("FriendsToInviteCollection init"),
									this.renderFriendsToInvite(),
									this.showTextForEmptyLists();
							},
							this
						);
				},
				loaderShow: function () {
					$("#startLoader").removeClass("g-hidden");
				},
				loaderHide: function () {
					$("#startLoader").addClass("g-hidden");
				},
				inviteFriends: function () {
					e.inviteAllFriends(i);
				},
				moreFriends: function () {
					var e = l.pages === undefined ? 1 : l.pages;
					(l.pages = ++e), this.renderFriends();
				},
				renderFriends: function () {
					if (l.length > 0) {
						(this.friendsEmpty = !1), $("#friendsList").html("");
						var e = l.pages === undefined ? 1 : l.pages,
							t = n.params.pagination.friends,
							r = e * t,
							i = 0;
						l.each(function (e) {
							if (i >= r) return;
							var t = e.toJSON(),
								n = f.inCollection({
									opponent: t,
								});
							if (!n || n.get("currentGame").status.value === "ended") {
								var s = new p({
									model: e,
									template: "opponent",
									screen: "main",
									type: "with_friend",
								});
								$("#friendsList").append(s.returnableRender()), i++;
							}
						}),
							r > i && l.length != 0 && $(".moreFriends").hide(),
							i > 0
								? ($(".friendsListBlock").show().addClass("main-content__block"),
								  (this.friendsEmpty = !1))
								: ($(".friendsListBlock").hide().removeClass("main-content__block"),
								  (this.friendsEmpty = !0));
					} else
						$(".friendsListBlock").hide().removeClass("main-content__block"),
							(this.friendsEmpty = !0);
					this.setStylesForBlocks();
				},
				moreFriendsToInvite: function () {
					var e = c.pages === undefined ? 1 : c.pages;
					(c.pages = ++e), this.renderFriendsToInvite();
				},
				renderFriendsToInvite: function () {
					if ((social == "vk" || social == "ok") && platform == "mobile")
						return $(".friendsToInviteBlock").hide(), !1;
					if (c.length > 0) {
						(this.friendsToInviteEmpty = !1), $("#friendsToInviteList").html("");
						var e = c.pages === undefined ? 1 : c.pages,
							t = n.params.pagination.friendsToInvite,
							r = e * t,
							i = 0;
						c.each(function (e) {
							if (i >= r) return;
							var t = new p({
								model: e,
								template: "friendToInvite",
							});
							$("#friendsToInviteList").append(t.returnableRender()), i++;
						}),
							r > c.length &&
								c.length != 0 &&
								($(".moreFriendsToInvite").hide().removeClass("main-content__block"),
								(this.friendsToInviteEmpty = !0)),
							i > 0 &&
								($(".friendsToInviteBlock").show().addClass("main-content__block"),
								(this.friendsToInviteEmpty = !1));
					} else
						$(".friendsToInviteBlock").hide().removeClass("main-content__block"),
							(this.friendsToInviteEmpty = !0);
					this.setStylesForBlocks();
				},
				renderHistory: function () {
					var e = {
						userTurn: 0,
						opponentTurn: 0,
						ended: 0,
					};
					_.keys(e).forEach(function (e) {
						$("#" + e + "List").html("");
					}),
						(_this = this),
						(_this.timers = []),
						this.collection.each(function (t) {
							var n = Date.parse(new Date()) / 1e3,
								r = t.get("currentGame"),
								i = r.timer,
								s = {};
							(s.model = t),
								(s.template =
									r.status.value == "opponentTurn" ? "opponentWithPush" : "opponentWithStat"),
								(s.roundId = 0),
								(s.screen = "main");
							switch (r.status.value) {
								case "userTurn":
									s.type = "round";
									break;
								case "ended":
									s.type = "rematch";
							}
							timer && i
								? ((s.roundId = r.rounds[r.status.nextRound - 1].id),
								  parseInt(i) - n + 120 > 0
										? (s.timeline = i)
										: ((s.timeline = 0),
										  console.group("send result by render"),
										  console.log("opponent: ", t.get("opponent").id),
										  console.log("round: ", s.roundId),
										  console.groupEnd("send result by render"),
										  _this.sendResult(t.get("opponent").id, s.roundId)))
								: (s.timeline = -1);
							var o = new p(s);
							$("#" + t.get("currentGame").status.value + "List").append(o.returnableRender()),
								e[t.get("currentGame").status.value]++;
						}),
						$("#userTurnList .b-games__list__item").each(function (e) {
							var t = this.dataset.timeline;
							if (t && t > 0)
								var r = $(this).find(".b-games__list__item__timeline"),
									i = r.find("span"),
									s = setInterval(function () {
										var e = Date.parse(new Date()) / 1e3,
											u = parseInt(t) - e + 120;
										u <= 0 &&
											o.get("screen") == "index" &&
											(r.text("Время хода истекло"), clearInterval(s), _this.renderHistory()),
											i.text(n.methods.roundTimer(u));
									}, 1e3);
						}),
						e.userTurn == 0
							? $("#userTurn").addClass("g-hidden").removeClass("main-content__block")
							: $("#userTurn").removeClass("g-hidden").addClass("main-content__block"),
						e.opponentTurn == 0
							? $("#opponentTurn").addClass("g-hidden").removeClass("main-content__block")
							: $("#opponentTurn").removeClass("g-hidden").addClass("main-content__block"),
						e.ended == 0
							? $("#ended").addClass("g-hidden").removeClass("main-content__block")
							: $("#ended").removeClass("g-hidden").addClass("main-content__block"),
						e.userTurn == 0 && e.opponentTurn == 0 && e.ended == 0
							? (this.gamesListEmpty = !0)
							: (this.gamesListEmpty = !1);
				},
				sendResult: function (e, t) {
					if (o.get("screen") != "index") return;
					r.sendResult(e, t);
				},
				renderTutorialItem: function () {
					if (u.get("tutorial") === !1) {
						var e = a.get("currentRound"),
							t = new d();
						e > 1 &&
							($("#userTurn").removeClass("g-hidden").addClass("main-content__block"),
							$("#userTurnList").find(".b-loader").hide(),
							$("#userTurnList").prepend(t.returnableRender())),
							(this.tutorialEmpty = !1);
					}
				},
				showTextForEmptyLists: function () {
					this.gamesListEmpty &&
					this.friendsEmpty &&
					this.friendsToInviteEmpty &&
					this.tutorialEmpty
						? $("#gamesEmpty").removeClass("g-hidden").fadeIn(300)
						: $("#gamesEmpty").addClass("g-hidden");
				},
				afterRender: function () {
					t.prototype.afterRender.apply(this, arguments),
						this.renderHistory(),
						this.renderFriends(),
						this.renderFriendsToInvite(),
						this.renderTutorialItem(),
						platform == "desktop" &&
							require(["simplebar"], function (e) {
								new e(document.getElementById("centralContainer"));
							}),
						this.setStylesForBlocks(),
						this.showTextForEmptyLists();
				},
				setStylesForBlocks: function () {
					$(".main-content__block").removeAttr("style"),
						$(".main-content__block").last().css("marginBottom", 0);
				},
			});
			return v;
		}
	),
	define("text!widgets/main/chase.html!strip", [], function () {
		return '<%\nvar chase = this.model.get(\'chase\');\nvar userChase = this.model.get(\'userChase\');\n%>\n\n<% if (chase.agreementNeeded && !userChase.isRulesAccepted) { %>\n\n<div id="chaseHide" class="chase__close"></div>\n<div class="chase__avatar">\n    <img class="chase__avatar-pic" src="<%=chase.avatarUrl%>" alt="">\n</div>\n<div class="chase__data">\n    <div class="chase__title"><%=chase.title%></div>\n    <div class="chase__time">\n        <span class="chase__time-label">До завершения </span>\n        <span class="chase__time-value"><%=Application.methods.getFormattedTime((chase.tsFinish - moment().format(\'X\')) * 1000, \'withDot\')%></span></div>\n    <div class="chase__rules"> \n        <input id="chaseRulesCheck" class="chase__rules-input" type="checkbox">\n        <label class="chase__rules-label" for="chaseRulesCheck">\n            <a class="chase__rules-link" href="<%=chase.agreementUrl%>" target="_blank">Правила</a> прочитал и согласен\n        </label>\n    </div>\n</div>\n<div class="chase__join">\n    <div id="chaseJoinBtn" class="chase__join-btn chase__join-btn_disabled b-btn b-btn_grey" href="#">Принять участие в событии!</div>\n</div>\n\n<% } else { %>\n\n<div class="chase__avatar">\n    <img class="chase__avatar-pic" src="<%=chase.avatarUrl%>" alt="">\n</div>\n<div class="chase__data">\n    <div class="chase__title"><%=chase.title%></div>\n    <div class="chase__time">\n        <% if ((chase.tsFinish - moment().format(\'X\')) > 0) { %>\n        <span class="chase__time-label">До завершения</span>\n        <span class="chase__time-value"><%=Application.methods.getFormattedTime((chase.tsFinish - moment().format(\'X\')) * 1000, \'withDot\')%></span>\n        <% } else { %>\n        <span class="chase__time-label">Завершено</span>\n        <% } %>\n    </div>\n    <div class="chase__stat">\n        <img class="chase__stat-icon" src="<%=chase.bonusUrl%>" alt="">\n        <span class="chase__stat-balance">&times; <%=userChase.balance%></span>\n        <span class="chase__stat-scores">/ <%=userChase.scores%></span>\n    </div>\n</div>\n<div class="chase__ctrls">\n    <div id="chaseLeadersButton" class="chase__ctrls-btn chase__ctrls-btn_rating"></div>\n    <div id="chaseShopButton" class="chase__ctrls-btn chase__ctrls-btn_shop"></div>\n</div>\n\n<% } %>';
	}),
	define(
		"widgets/main/chase",
		[
			"widget",
			"gate",
			"application",
			"controllers/chase",
			"models/appState",
			"models/user",
			"text!widgets/main/chase.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#ChaseWidgetContainer",
				events: {
					"click #chaseLeadersButton": "leadersButtonHandler",
					"click #chaseShopButton": "shopButtonHandler",
					"click #chaseHide": "chaseHideHandler",
					"click #chaseRulesCheck": "chaseRulesCheckHandler",
					"click #chaseJoinBtn": "chaseJoinBtnHandler",
				},
				initialize: function (e) {
					var t = this;
					(this.model = r.getMainData()),
						this.listenTo(this.model, "change", function () {
							t.render();
						}),
						(this.viewParam = {
							Application: n,
						});
				},
				afterRender: function () {
					r.isTemporaryHiden && $(this.$el).hide();
				},
				leadersButtonHandler: function () {
					r.goToScreenLeaders();
				},
				shopButtonHandler: function () {
					i.setScreen({
						screen: "chase.shop",
						params: {},
					});
				},
				chaseHideHandler: function () {
					(r.isTemporaryHiden = !0), $(this.$el).slideUp();
				},
				chaseRulesCheckHandler: function () {
					$("#chaseRulesCheck").is(":checked")
						? $("#chaseJoinBtn")
								.removeClass("chase__join-btn_disabled b-btn_grey")
								.addClass("b-btn_green")
						: $("#chaseJoinBtn")
								.removeClass("b-btn_green")
								.addClass("chase__join-btn_disabled b-btn_grey");
				},
				chaseJoinBtnHandler: function () {
					$("#chaseJoinBtn").hasClass("chase__join-btn_disabled") || t.confirmChaseAgreement();
				},
			});
			return u;
		}
	),
	define("text!widgets/main/lifeButton.html!strip", [], function () {
		return '<div id="lifeButton" class="b-btn-life-i">\n    <img src="<%= Application.params.staticUrl %>images/app/icons/life.png" alt="" class="b-btn-life__icon" />\n    <span class="b-btn-life__count">&times; <span class="b-btn-life__count-i"><%= Life.getCount() %></span></span>\n	<span class="b-btn-life__time g-hidden">| <span class="b-btn-life__time-i"></span></span>\n	<span class="b-btn-life__max g-hidden">Макс!</span>\n</div>';
	}),
	define(
		"widgets/main/lifeButton",
		[
			"widget",
			"application",
			"models/appState",
			"models/user",
			"controllers/analytic",
			"models/life",
			"collections/popups",
			"text!widgets/main/lifeButton.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				el: "#lifeContainer",
				template: _.template(u),
				events: {
					"click #lifeButton": "showVideoRewardPopup",
				},
				initialize: function (e) {
					var n = this;
					(this.model = s),
						(this.viewParam = {
							Application: t,
							User: r,
							Life: s,
						}),
						this.listenTo(this.model, "change", function () {
							n.render();
						});
				},
				afterRender: function () {
					s.isFull()
						? $("#lifeButton").find(".b-btn-life__max").removeClass("g-hidden")
						: (this.$el
								.find(".b-btn-life__time")
								.removeClass("g-hidden")
								.children()
								.html(s.restoreTime()),
						  (this.timer = setInterval(this.updateTimer, 3e4)));
				},
				updateTimer: function (e) {
					var t = $("#lifeButton"),
						n = t.find(".b-btn-life__count"),
						r = t.find(".b-btn-life__time"),
						i = t.find(".b-btn-life__max");
					s.isFull()
						? (i.removeClass("g-hidden"),
						  r.addClass("g-hidden"),
						  n.children().html(s.getCount()),
						  clearInterval(this.timer))
						: (n.children().html(s.getCount()), r.children().html(s.restoreTime()));
				},
				showVideoRewardPopup: function () {
					var e = getSocial();
					e == "vk" || e == "cm" || e == "ya"
						? o.add({
								type: "videoRewardLifes",
								params: {
									count: s.get("count"),
									countOther: s.get("countOther"),
									lifes: s.getCount(),
									isFull: s.isFull(),
									restoreTime: s.restoreTime(),
									social: getSocial(),
								},
						  })
						: o.add({
								type: "proVersion",
								params: {
									reason: "unratedCountGames",
								},
						  });
				},
			});
			return a;
		}
	),
	define("models/dailyReward", ["backbone", "gate"], function (e, t) {
		var n = e.Model.extend({});
		return new n();
	}),
	define(
		"controllers/dailyReward",
		["gate", "status", "models/dailyReward", "controllers/gameanalytics"],
		function (e, t, n, r) {
			function i() {
				var e = this;
				(this.model = n), (this.time = 0), (this.state = !1), (this.position = 0), this.getInfo();
			}
			return (
				(i.prototype.getInfo = function () {
					var n = this;
					t("auth").done(function () {
						n.listenTo(e, "dailyBonusGetInfo", function (e) {
							e.dailyBonusInfo.forEach(function (e) {
								_.has(e, "tsNextBonus") &&
									((n.time = e.tsNextBonus), (n.state = e.isReward), (n.position = e.position));
							}),
								n.model.set(e);
						}),
							e.dailyBonusGetInfo();
					});
				}),
				(i.prototype.nextBonusTime = function () {
					return (
						moment.relativeTimeThreshold("h", 24),
						this.time != "" ? moment(this.time * 1e3).fromNow() : ""
					);
				}),
				(i.prototype.getCurrentPosition = function () {
					return this.state ? this.position : this.position - 1;
				}),
				(i.prototype.isReward = function () {
					return this.state;
				}),
				(i.prototype.getReward = function () {
					var t = this;
					e.dailyBonusReward(),
						t.listenTo(e, "dailyBonusReward", function (e) {
							t.getInfo(),
								r.sendResourceEvent(
									"coins",
									t.model.get("dailyBonusInfo")[t.getCurrentPosition()].reward[0].count,
									"dailyReward",
									"Consumed"
								);
						});
				}),
				_.extend(i.prototype, Backbone.Events),
				new i()
			);
		}
	),
	define("text!widgets/main/dailyRewardButton.html!strip", [], function () {
		return '<div id="dailyRewardCtrl" style="display: none;">\n    <img class="b-btn-dailyReward__icon" src="<%= Application.params.staticUrl %>images/app/daily-reward/btn-side.png" alt="">\n</div>';
	}),
	define(
		"widgets/main/dailyRewardButton",
		[
			"application",
			"widget",
			"models/appState",
			"controllers/dailyReward",
			"controllers/gameanalytics",
			"text!widgets/main/dailyRewardButton.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				template: _.template(s),
				el: "#dailyRewardButton",
				events: {
					"click #dailyRewardCtrl": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:daily_reward"),
							n.setScreen({
								screen: "dailyReward",
							});
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: e,
					};
				},
				afterRender: function () {
					r.on("getInfo", function () {
						r.isReward() ? $("#dailyRewardCtrl").hide() : $("#dailyRewardCtrl").fadeIn();
					});
					var e = r.nextBonusTime();
					e == ""
						? $("#dailyRewardCtrl").hide()
						: ($("#dailyRewardCtrl").fadeIn(), r.isReward() && $("#dailyRewardCtrl").hide());
				},
			});
			return o;
		}
	),
	define("text!widgets/main/videoRewardButton.html!strip", [], function () {
		return '<div id="videoRewardCtrl" style="display: none;">\n    <img class="b-btn-videoReward__icon" src="<%=Application.params.userCommonProperties.rewardVideoIconSettings.icon.image%>" alt="">\n    <span class="b-btn-videoReward__text"><%=rewardText%></span>\n    <span class="b-btn-videoReward__count">Доступно: <%=rewardCount%></span>\n</div>';
	}),
	define(
		"widgets/main/videoRewardButton",
		[
			"widget",
			"social",
			"application",
			"controllers/dailyReward",
			"collections/popups",
			"models/user",
			"text!widgets/main/videoRewardButton.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#videoRewardButton",
				events: {
					"click #videoRewardCtrl": function () {
						i.add({
							type: "videoRewardConfirm",
							params: {
								rewardType: "coinsFromIndex",
							},
						});
					},
				},
				initialize: function () {
					var e = "<coinsText>",
						r = n.params.services.adsSettings.rewardVideo.coins.reward,
						i = n.params.userCommonProperties.rewardVideoIconSettings.icon.text.replace(
							e,
							r + " " + n.methods.declension(r, ["монета", "монеты", "монет"])
						);
					(this.viewParam = {
						Application: n,
						rewardText: i,
						rewardCount: t.ad.availableViewCount.coins,
					}),
						this.listenTo(t.ad, "videoRewardGetAvailableCount", this.updateViewParamAndRender),
						this.listenTo(t.ad, "videoRewardForCoins", this.updateViewParamAndRender);
				},
				afterRender: function () {
					var e = localStorage.getItem(s.get("id") + "_freeCoinsHide");
					if (
						t.ad.availableViewCount.coins > 0 &&
						(e == null || moment().diff(moment(e * 1e3)) > 0)
					) {
						r.on("getInfo", function () {
							r.isReward() ? $("#videoRewardCtrl").fadeIn() : $("#videoRewardCtrl").hide();
						});
						var n = r.nextBonusTime();
						n == ""
							? $("#videoRewardCtrl").fadeIn()
							: ($("#videoRewardCtrl").hide(), r.isReward() && $("#videoRewardCtrl").fadeIn());
					}
				},
				updateViewParamAndRender: function () {
					(this.viewParam.rewardCount = t.ad.availableViewCount.coins), this.render();
				},
			});
			return u;
		}
	),
	define("text!screens/index.html!strip", [], function () {
		return '\n    <div id="dailyRewardButton" class="b-btn-dailyReward<%=(User.checkProVersion())? \' b-btn-dailyReward_pro\' : \'\'%>"></div>\n    <div id="videoRewardButton" class="b-btn-videoReward<%=(User.checkProVersion())? \' b-btn-videoReward_pro\' : \'\'%>"></div>\n\n\n    <div class="main-top <%= (User.checkProVersion()) ? \'main-top_pro\' : \'\' %>"> \n        <div class="main-top__head">\n            <div class="main-top__head-btns">\n                <div id="menuButton" class="b-btn-menu b-btn-menu_main main-top__head-menu"></div>\n                <div id="balanceContainerIndexScreen" class="b-btn-balance main-top__head-btn soundingButton"></div>\n                <% if (User.checkProVersion() == false) { %>\n                <div id="lifeContainer" class="b-btn-life main-top__head-btn soundingButton"></div>\n            </div>\n            <div class="main-top__head-pro">\n                <div id="proVersionButton" class="b-btn-get-pro soundingButton"></div>\n            </div>\n                <% } else { %>\n\n            </div>\n                <% } %>\n            \n        </div>\n        <div class="main-top__nav">\n            <% if ((WardrobeController.isAvailable())) { %>\n            <div id="mainNavWardrobeBtn" class="main-top__nav-btn soundingButton">\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i">Твоя первая вещь уже в гардеробе. Пойдем посмотрим!</div>\n                </div>\n                <div class="main-top__nav-icon">\n                    <img class="main-top__nav-img" src="<%= Application.params.staticUrl %>images/app/main-top-nav/wardrobe.png" alt="">\n                    <div class="main-top__nav-counter"></div>\n                </div>\n            </div>\n            <% } else { %>\n            <div id="mainNavWardrobeDisabledBtn" class="main-top__nav-btn soundingButton">\n                <div class="main-top__nav-icon">\n                    <img class="main-top__nav-img" src="<%= Application.params.staticUrl %>images/app/main-top-nav/wardrobe-disabled.png" alt="">\n                </div>\n            </div>\n            <% } %>\n\n            <div id="mainNavLibrarydBtn" class="main-top__nav-btn soundingButton">\n                <div class="main-top__nav-icon"><img class="main-top__nav-img" src="<%= Application.params.staticUrl %>images/app/main-top-nav/library.png" alt=""></div>\n            </div>\n            \n            <div id="mainNavAchievesBtn" class="main-top__nav-btn soundingButton"></div>\n\n            <div id="mainNavTopBtn" class="main-top__nav-btn soundingButton">\n                <div class="main-top__nav-icon"><img class="main-top__nav-img" src="<%= Application.params.staticUrl %>images/app/main-top-nav/top.png" alt=""></div>\n            </div>\n        </div>\n    </div>\n\n    <% if (ChaseController.isAvailable()) { %>\n    <div id="ChaseWidgetContainer" class="chase"></div>\n    <% } %>\n\n    <div id="centralContainer" class="main-content b-games">\n\n    </div>\n    <!-- /.b-games -->\n\n\n    <div class="main-btm-nav">\n        <div class="main-btm-nav__list">\n\n            <% if (GamePart.get(\'clan\').isAvailable) { %>\n            <div id="mainNavClan" class="main-btm-nav__btn main-btm-nav__btn_clan soundingButton">\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i">Объединяйся с другими игроками для выполнения совместных заданий</div>\n                </div>\n                <!-- /.b-onboarding -->\n                <div id="mainNavClanBtn" class="soundingButton">\n                    <div class="main-btm-nav__btn-icon"> <!-- b-onboarding b-onboarding_clan-start -->\n                        <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/clan.png" alt="" />\n                    </div>\n                    <span class="main-btm-nav__btn-label">Клан</span>\n                </div>\n            </div>\n            <% } else { %>\n            <div id="mainNavClanDisabledBtn" class="main-btm-nav__btn main-btm-nav__btn_clan main-btm-nav__btn_disabled soundingButton">\n                <div class="main-btm-nav__btn-icon">\n                    <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/clan-disabled.png" alt="" />\n                </div>\n                <span class="main-btm-nav__btn-label">Клан</span>\n            </div>\n            <% } %>\n\n            <div id="<%= (GamePart.get(\'tourney\').isAvailable)? \'mainNavTourneysBtn\' : \'mainNavTourneysDisabledBtn\' %>" class="main-btm-nav__btn main-btm-nav__btn_tourneys soundingButton">\n                <div class="main-btm-nav__btn-icon">\n                    <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/tournaments.png" alt="" />\n                </div>\n                <span class="main-btm-nav__btn-label">Турниры</span>\n            </div>\n\n            <div class="main-btm-nav__play-btn main-btm-nav__play-btn_desktop ">\n                <img class="main-btm-nav__play-btn-img soundingButton mainNavPlay" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/play_desktop.png" alt="">\n            </div>\n            <div class="main-btm-nav__play-btn main-btm-nav__play-btn_mobile">\n                <img class="main-btm-nav__play-btn-img soundingButton mainNavPlay" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/play_mobile.png" alt="">\n            </div>\n\n            <% if (GamePart.get(\'seasonPass\').isAvailable) { %>\n            <div id="mainNavSeasonPass" class="main-btm-nav__btn main-btm-nav__btn_season-pass soundingButton">\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i">Зарабатывай жетоны и получай награды.</div>\n                </div>\n                <div id="mainNavSeasonPassBtn" class="soundingButton">\n                    <div class="main-btm-nav__btn-icon">\n                        <img class="main-btm-nav__btn-img" src="/images/app/main-btm-nav/season-pass.png" alt="">\n                        <div id="mainNavSeasonPassCounter" class="main-btm-nav__counter"></div>\n                        <div class="main-btm-nav__seasonPass" style="<%= (isSeasonPassTicketPurchased)? \'display: block;\' : \'\' %>"></div>\n                    </div>\n                    <span class="main-btm-nav__btn-label">Награды <br>сезона</span>\n                </div>\n            </div>\n            <% } else { %>\n            <div class="main-btm-nav__btn main-btm-nav__btn_season-pass main-btm-nav__btn_disabled">\n                <div id="mainNavSeasonPassDisabledBtn" class="soundingButton">\n                    <div class="main-btm-nav__btn-icon">\n                        <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/season-pass-disabled.png" alt="" />\n                    </div>\n                    <span class="main-btm-nav__btn-label">Награды <br>сезона</span>\n                </div>\n            </div>\n            <% } %>\n\n            <% if (GamePart.get(\'quest\').isAvailable) { %>\n            <div id="mainNavQuest" class="main-btm-nav__btn main-btm-nav__btn_quest">\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i">В этом разделе ты можешь получать ежедневные задания. Выполняй их и зарабатывай награды.</div>\n                </div>\n                <!-- /.b-onboarding -->\n                <div id="mainNavQuestBtn" class="soundingButton">\n                    <div class="main-btm-nav__btn-icon"> <!-- b-onboarding b-onboarding_quest-start -->\n                        <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/quest.png" alt="" />\n                        <div id="mainNavQuestCounter" class="main-btm-nav__counter"></div>\n                    </div>\n                    <span class="main-btm-nav__btn-label">Задания</span>\n                </div>\n            </div>\n            <% } else { %>\n            <div id="mainNavQuestDisabledBtn" class="main-btm-nav__btn main-btm-nav__btn_quest main-btm-nav__btn_disabled soundingButton">\n                <div class="main-btm-nav__btn-icon">\n                    <img class="main-btm-nav__btn-img" src="<%= Application.params.staticUrl %>images/app/main-btm-nav/quest-disabled.png" alt="" />\n                </div>\n                <span class="main-btm-nav__btn-label">Задания</span>\n            </div>\n            <% } %>\n        \n        </div>\n    </div>\n    <!-- /.main-btm-nav -->\n\n    <div class="tutorialOnboarding">\n        <div class="tutorialOnboarding__layout">\n            <div class="tutorialOnboarding__content">\n                <div class="tutorialOnboarding__elephant"></div>\n                <div class="tutorialOnboarding__grass1"></div>\n                <div class="tutorialOnboarding__grass2"></div>\n                <div class="tutorialOnboarding__grass3"></div>\n                <div class="tutorialOnboarding__grass4"></div>\n                <div class="tutorialOnboarding__text"></div>\n            </div>\n        </div>\n    </div>\n    <!-- /.tutorialOnboarding -->\n\n    <% if (OnboardingModel.get(\'tutorial\') === false) { %>\n    <div class="tutorialTopCover"></div>\n    <% if (scheme == \'test\') { %>\n    <a href="#" class="tutorialSkipBtn tutorialSkipBtn_main">Пропустить обучение</a>\n    <% } %>\n    <div id="tutorialCover" class="tutorialCover tutorialCover_main"></div>\n    <img id="tutorialHand" class="tutorialHand tutorialHand_main" src="<%= Application.params.staticUrl %>images/app/tutorial/hand.png" alt="" />\n    <div id="tutorialMainBtn"></div>\n    <% } %>\n    \n';
	}),
	(function () {
		function r(e) {
			e instanceof Array
				? e.forEach(function (e) {
						i(e);
				  })
				: i(e);
		}

		function i(t) {
			if (e[t]) return e[t];
			var r = new Image();
			(r.onload = function () {
				(e[t] = r),
					o() &&
						n.forEach(function (e) {
							e();
						});
			}),
				(e[t] = !1),
				(r.src = t + "?cache=" + Date.now());
		}

		function s(t) {
			return e[t];
		}

		function o() {
			var t = !0;
			for (var n in e) e.hasOwnProperty(n) && !e[n] && (t = !1);
			return t;
		}

		function u(e) {
			n.push(e);
		}
		var e = {},
			t = [],
			n = [];
		window.Resources = {
			load: r,
			get: s,
			onReady: u,
			isReady: o,
		};
	})(),
	define("resources", function () {}),
	define(
		"screens/index",
		[
			"gate",
			"widget",
			"application",
			"social",
			"controllers/gameanalytics",
			"controllers/onboarding",
			"controllers/wardrobe",
			"controllers/popups",
			"controllers/achievement",
			"collections/popups",
			"controllers/analytic",
			"models/appState",
			"controllers/chase",
			"models/user",
			"models/clan/main",
			"models/gamePart",
			"models/quest",
			"models/onboarding",
			"models/tutorial",
			"models/seasonPass/main",
			"widgets/main/central",
			"widgets/main/chase",
			"widgets/balance/button",
			"widgets/achievements/button",
			"widgets/main/lifeButton",
			"widgets/main/dailyRewardButton",
			"widgets/main/videoRewardButton",
			"text!screens/index.html!strip",
			"resources",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k) {
			var L = t.extend({
				el: "#screenContainer",
				template: _.template(k),
				events: {
					"click #proVersionButton": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:premium"),
							f.add({
								type: "proVersion",
							});
					},
					"click #lifeContainer": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:lifes");
					},
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click .mainNavPlay": "playWithRandomOpponent",
					"click #mainNavWardrobeBtn": "wardrobeStart",
					"click #mainNavWardrobeDisabledBtn": function () {
						e.trigger("serverPopup", {
							popup: v.get("clothes").popupTemplate,
						});
					},
					"click #mainNavLibrarydBtn": function () {
						c.setScreen({
							screen: "library",
						});
					},
					"click #mainNavAchievesBtn": function () {
						a.goToAchievementsScreen();
					},
					"click #mainNavTopBtn": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:rating"),
							c.setScreen({
								screen: "rating",
							});
					},
					"click #mainNavClanBtn": "clanStart",
					"click #mainNavClanDisabledBtn": function () {
						f.add({
							type: "clanDisabled",
						});
					},
					"click #mainNavTourneysBtn": function () {
						c.setScreen({
							screen: "tourney.index",
						});
					},
					"click #mainNavTourneysDisabledBtn": function () {
						c.setScreen({
							screen: "tourney.disabled",
						});
					},
					"click #mainNavSeasonPassBtn": "seasonPassStart",
					"click #mainNavSeasonPassDisabledBtn": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:seasonPass"),
							f.add({
								type: "seasonPass.disabled",
							});
					},
					"click #mainNavQuestBtn": "questStart",
					"click #mainNavQuestDisabledBtn": function () {
						i.sendDesignEvent("Screen_actions:Main_screen:quests"),
							c.setScreen({
								screen: "questDisabled",
							});
					},
					"click #tutorialMainBtn": "tutorialOnboardingHandler",
					"click .tutorialSkipBtn": function () {
						e.onboardingView({
							skipped: ["tutorial"],
						}),
							g.setTutorialStatus(0);
					},
				},
				initialize: function () {
					var e = this;
					(this.onboarding = null),
						(this.isTutorialOnboardingShown = !1),
						this.listenTo(p, "change", function () {
							e.render();
						}),
						this.listenTo(g, "change", this.render),
						(this.viewParam = {
							Application: n,
							User: p,
							GamePart: v,
							OnboardingModel: g,
							WardrobeController: o,
							ChaseController: h,
							isSeasonPassTicketPurchased: b.get("info").isTicketPurchased,
						}),
						c.clearState(),
						l.pageview("Слово-за-слово"),
						r.isAddToFavoriteAvailable && ((r.isAddToFavoriteAvailable = !1), r.addToFavorite());
				},
				initializeWidgets: function () {
					var e = !1,
						t = n.params.userCommonProperties.rewardVideoIconSettings;
					!_.isUndefined(t) && !_.isUndefined(t.isEnabled) && (e = t.isEnabled),
						(this.widgets = [
							new w(),
							new S({
								template: "balanceOnIndex",
								el: "balanceContainerIndexScreen",
							}),
							new x({
								template: "buttonOnIndex",
								el: "mainNavAchievesBtn",
							}),
							new N(),
							new T(),
						]),
						e && n.params.availableSocialRV && this.widgets.push(new C()),
						h.isAvailable() && this.widgets.push(new E());
				},
				playWithRandomOpponent: function () {
					i.sendDesignEvent("Screen_actions:Main_screen:random_play"),
						c.setScreen({
							params: {
								randomOpponent: !0,
							},
							screen: "pvp.game",
							method: "random",
						});
				},
				afterRender: function () {
					purchase || $("#proVersionButton").hide(),
						this.setQuestCounter(),
						this.setSeasonPassCounter();
					var e = g.get("tutorial") === !1;
					e && !_.isEmpty(y.attributes) ? this.initTutorialOnboarding() : this.initOnboarding();
				},
				wardrobeStart: function (e) {
					s.set("wardrobeStart", !0),
						this.hideOnboarding(),
						c.setScreen({
							screen: "wardrobe.index",
						});
				},
				seasonPassStart: function (e) {
					i.sendDesignEvent("Screen_actions:Main_screen:seasonPass"),
						s.set("seasonPassStart", !0),
						this.hideOnboarding(),
						c.setScreen({
							screen: "seasonPass",
						});
				},
				questStart: function (e) {
					i.sendDesignEvent("Screen_actions:Main_screen:quest"),
						s.set("questStart", !0),
						this.hideOnboarding(),
						c.setScreen({
							screen: "quest",
						});
				},
				clanStart: function (t) {
					i.sendDesignEvent("Screen_actions:Main_screen:clan"),
						s.set("clanStart", !0),
						this.hideOnboarding(),
						_.isEmpty(d.get("clanData"))
							? (e.clanGetUserList(),
							  this.listenToOnce(e, "clanGetUserList", function (e) {
									c.setScreen({
										screen: "clanStart",
										params: {
											model: e,
										},
									});
							  }))
							: c.setScreen({
									screen: "clan",
							  });
				},
				renderPopup: function (e) {
					var t,
						n = g.get("tutorial") === !1;
					if (n) t = this.isTutorialOnboardingShown ? !1 : !0;
					else {
						var r = v.get("quest").isAvailable ? s.get("questStart") : !0,
							i = v.get("clan").isAvailable ? s.get("clanStart") : !0,
							u = o.isAvailable() ? s.get("wardrobeStart") : !0,
							a = v.get("seasonPass").isAvailable ? s.get("seasonPassStart") : !0;
						t = r && i && u && a;
					}
					t &&
						($("#popup").html(""),
						$("#cover").fadeOut(200),
						e && ($("#cover").stop().fadeIn(300), e.render()));
				},
				initOnboarding: function () {
					v.get("quest").isAvailable && !s.get("questStart")
						? this.showOnboarding("quest")
						: v.get("clan").isAvailable && !s.get("clanStart")
						? this.showOnboarding("clan")
						: v.get("seasonPass").isAvailable && !s.get("seasonPassStart")
						? this.showOnboarding("seasonPass")
						: o.isAvailable() && !s.get("wardrobeStart") && this.showOnboarding("wardrobe");
				},
				showOnboarding: function (e) {
					function n(e, n) {
						(t.onboarding = e),
							$("#cover").show(),
							$(n).addClass("b-onboarding b-onboarding_" + e + "-start"),
							$(".b-onboarding__text", n).show();
					}
					var t = this;
					switch (e) {
						case "quest":
							n("quest", "#mainNavQuest");
							break;
						case "clan":
							n("clan", "#mainNavClan");
							break;
						case "seasonPass":
							n("seasonPass", "#mainNavSeasonPass");
							break;
						case "wardrobe":
							n("wardrobe", "#mainNavWardrobeBtn");
					}
					$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this));
				},
				hideOnboarding: function () {
					$("#cover").hide(), $("#cover").off("click"), $(".b-onboarding__text").off("click");
				},
				closeOnboarding: function () {
					function e(e, t) {
						s.set(e + "Start", !0),
							$(t)
								.removeClass("b-onboarding b-onboarding_" + e + "-start")
								.find(".b-onboarding__text")
								.hide();
					}
					this.hideOnboarding();
					switch (this.onboarding) {
						case "quest":
							e("quest", "#mainNavQuest"),
								v.get("clan").isAvailable && !s.get("clanStart")
									? this.showOnboarding("clan")
									: v.get("seasonPass").isAvailable && !s.get("seasonPassStart")
									? this.showOnboarding("seasonPass")
									: o.isAvailable() && !s.get("wardrobeStart") && this.showOnboarding("wardrobe");
							break;
						case "clan":
							e("clan", "#mainNavClan"),
								v.get("seasonPass").isAvailable &&
									!s.get("seasonPassStart") &&
									this.showOnboarding("seasonPass");
							break;
						case "seasonPass":
							e("seasonPass", "#mainNavSeasonPass"),
								o.isAvailable() && !s.get("wardrobeStart") && this.showOnboarding("wardrobe");
							break;
						case "wardrobe":
							e("wardrobe", "#mainNavWardrobeBtn");
					}
					u.changePopup();
				},
				setQuestCounter: function () {
					var e = 0,
						t = m.get("questData"),
						n = t.quests,
						r = _.findWhere(t.quests, {
							status: 2,
							statusReward: !0,
						});
					(t.quests.length < t.possibleCount || (r && t.quests.length == t.possibleCount)) &&
						m.getTimeToCreate() <= 0 &&
						(e += 1),
						n.forEach(function (t) {
							t.status == 2 && !t.statusReward && (e += 1);
						}),
						e > 0 && $("#mainNavQuestCounter").text(e).show();
				},
				setSeasonPassCounter: function () {
					var e = 0,
						t = b.get("levels"),
						n = null,
						r = null;
					t.forEach(function (t) {
						(n = t.freeReward),
							(r = t.purchasedReward),
							n && n.isAvailable && !n.isTaken && (e += 1),
							r && r.isAvailable && !r.isTaken && (e += 1);
					}),
						e > 0 && $("#mainNavSeasonPassCounter").text(e).show();
				},
				initTutorialOnboarding: function () {
					var e = g.getTutorialStatus(),
						t = y.get("isNecessaryFullGame"),
						n = y.get("currentRound");
					console.log("tutorialCurrentRound on index: ", n),
						n == 1 || (t && n == 4 && e == 3)
							? (this.showTutorialOnboarding(), (this.isTutorialOnboardingShown = !0))
							: (t || (!t && n == 2 && e != 1)) &&
							  c.setScreen({
									screen: "tutorialStats",
							  });
				},
				showTutorialOnboarding: function () {
					var e = this,
						t = $(".l-wrapper-i"),
						n = t.offset().left,
						r = t.offset().top,
						i = t.width(),
						s = $(".mainNavPlay"),
						o,
						u,
						a,
						f,
						l,
						c,
						h,
						p;
					(s = i > 600 ? $(s.eq(0)) : $(s.eq(1))),
						s.on("load", function () {
							var t = i > 600 ? -15 : 15;
							(o = s.width()),
								(u = s.height()),
								(a = s.offset().left),
								(f = s.offset().top),
								(l = o + t),
								(c = l),
								(h = a + o / 2 - n),
								(p = f + u / 2 - r),
								$("#tutorialCover").css({
									background:
										"radial-gradient(" +
										l +
										"px " +
										c +
										"px at " +
										h +
										"px " +
										p +
										"px, rgba(0, 0, 0, 0) 52.08%, #000000 100%)",
								}),
								$("#tutorialMainBtn").css({
									top: f - r,
									left: a - n,
									width: o,
									height: u,
								}),
								$("#tutorialHand").css({
									left: a + o / 2 - n,
									top: f - 52 - r,
								}),
								e.animateTutorialOnboarding();
						});
				},
				animateTutorialOnboarding: function () {
					var e = "",
						t = y.get("isNecessaryFullGame"),
						n = y.get("currentRound");
					(t && n != 4) || (!t && n == 1)
						? (e =
								'Перед первым настоящим боем сыграй с ботом. Нажми <span class="tutorialOnboarding__hl">Играть</span>. <br> Мы тебе всё объясним.')
						: (e = "Теперь ты готов к играм с реальными соперниками. <br> Начни новую игру!");
					var r = $("#tutorialHand");
					$("#tutorialCover").show(),
						$(".tutorialTopCover").show(),
						$(".tutorialOnboarding__text").html(e),
						$(".tutorialOnboarding").show(),
						$("#tutorialMainBtn").show(),
						setTimeout(function () {
							r.fadeIn(300);
						}, 600);
				},
				tutorialOnboardingHandler: function (t) {
					var n = y.get("isNecessaryFullGame"),
						r = y.get("currentRound");
					(n && r != 4) || (!n && r == 1)
						? (i.sendDesignEvent("tutorial:Action:1_bot_play"),
						  c.setScreen({
								screen: "tutorialGame",
						  }))
						: (i.sendDesignEvent("tutorial:Action:10_real_play"),
						  e.onboardingView({
								viewed: ["tutorial"],
						  }),
						  g.setTutorialStatus(0),
						  c.setScreen({
								params: {
									randomOpponent: !0,
								},
								screen: "pvp.game",
								method: "random",
						  }));
				},
			});
			return L;
		}
	),
	define("collections/achievements", ["backbone", "models/achievement"], function (e, t) {
		var n = e.Collection.extend({
			model: t,
			comparator: "position",
		});
		return new n();
	}),
	define("text!screens/achievements.html!strip", [], function () {
		return '<%\nvar id;\nvar icon;\nvar progress;\nvar progressPercent;\nvar unlockTime;\nvar unlockStatus;\nvar rewardStatus;\n%>\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div class="b-btn-menu soundingButton" id="menuButton"></div>\n    </div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n    <div class="b-screen-head__title">Достижения</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="achievements">\n    <div class="achievements__list">\n        <%\n        var _this = this;\n        this.collection.each(function (model) {\n            id = model.get(\'id\');\n            rewardStatus = (model.get(\'rewardStatus\'))? true : false;\n            unlockTime = model.get(\'unlockTime\');\n            unlockStatus = (unlockTime)? true : false;\n            icon = (unlockStatus)? model.get(\'imageUrl\') : model.get(\'closedImageUrl\');\n            progress = model.get(\'progress\') || 0;\n            progressPercent = Math.round(progress * 100);\n        %>\n        <div class="achievement achievement_list achievements__item">\n            <div class="achievement__icon">\n                <img data-id="<%=id%>" class="achievement__icon-img achievementDetailButton" src="<%=icon%>">\n            </div>\n            <div class="achievement__data">\n                <div class="achievement__name"><%=model.get(\'name\')%></div>\n                <% if (unlockStatus) { %>\n                <div class="achievement__progress achievement__progress_completed">\n                    <div class="achievement__progress-bg" style="width: 100%"></div>\n                    <div class="achievement__progress-value">100%</div>\n                </div>\n                <% } else { %>\n                <div class="achievement__progress">\n                    <div class="achievement__progress-bg" style="width: <%=progressPercent%>%"></div>\n                    <div class="achievement__progress-value"><%=progressPercent%>%</div>\n                </div>\n                <% } %>\n                <div class="achievement__description"><%=model.get(\'desc\')%></div>\n            </div>\n            <% if (rewardStatus) { %>\n            <div class="achievement__reward">\n                <div class="achievement__reward-info">\n                    <img class="achievement__reward-icon" src="<%= Application.params.staticUrl %>images/app/icons/reward_taken.png" alt="">\n                    <div class="achievement__reward-time">\n                        <%=moment(unlockTime * 1000).format(\'D MMMM YYYY\')%>\n                        <br>\n                        в\n                        <%=moment(unlockTime * 1000).format(\'HH:mm\')%></div>\n                </div>\n            </div>\n            <% } else { %>\n            <div class="achievement__reward <%=(unlockStatus)? \'achievement__reward_unlocked\' : \'\'%>">\n                <div data-id="<%=id%>" class="achievement__reward-btn achievementGetReward">\n                    <div class="achievement__reward-label">\n                        <%=(unlockStatus)? \'Забрать\' : \'Награда\' %>\n                    </div>\n                    <div class="achievement__reward-value"><%=model.get(\'reward\')%></div>\n                </div>\n            </div>\n            <% } %>\n        </div>\n        <%\n        });\n        %>\n    </div>\n</div>\n';
	}),
	define(
		"screens/achievements",
		[
			"gate",
			"application",
			"widget",
			"controllers/analytic",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"collections/achievements",
			"collections/popups",
			"models/user",
			"text!screens/achievements.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click .achievementGetReward": "getReward",
					"click .achievementDetailButton": "showPopup",
					"click #showInfoPopup": "showInfoPopup",
				},
				hiddenAchievements: [],
				initialize: function (n) {
					r.pageview("Достижения");
					var i = this;
					(this.params = n),
						(this.scrollTop = 0),
						(this.collection = o),
						this.prepareCollections(),
						e.on("reloadSession", function () {
							i.prepareCollections(), i.render();
						}),
						(this.viewParam = {
							Application: t,
						});
				},
				prepareCollections: function () {
					var e = [],
						t = this.params.data.achievements,
						n = _.toArray(a.get("achievements")),
						r = [];
					n.forEach(function (t) {
						e.push(t), r.push(t.id);
					}),
						t.forEach(function (t) {
							t.visible && r.indexOf(t.id) == -1 && e.push(t);
						}),
						this.collection.reset(e);
				},
				afterRender: function () {
					var e = this;
					platform == "desktop"
						? require(["simplebar"], function (t) {
								e.simplebar && e.simplebar.unMount(),
									(e.simplebar = new t($(".achievements")[0])),
									e.scrollTop && e.setScrollTop(e.scrollTop);
						  })
						: this.scrollTop && this.setScrollTop(this.scrollTop);
				},
				getScrollTop: function () {
					return this.simplebar
						? $(this.simplebar.contentWrapperEl).scrollTop()
						: $(".achievements").scrollTop();
				},
				setScrollTop: function (e) {
					this.simplebar
						? $(this.simplebar.contentWrapperEl).scrollTop(e)
						: $(".achievements").scrollTop(this.scrollTop);
				},
				getReward: function (t) {
					this.scrollTop = this.getScrollTop();
					var n = $(t.currentTarget),
						r = n.data("id");
					e.achievementGetReward(r), this.render();
				},
				showPopup: function (e) {
					r.event({
						category: "screen",
						action: "Достижения",
						label: "Описание ачивки",
					}),
						i.sendDesignEvent("Screen_actions:Achievements:description");
					var t = $(e.currentTarget),
						n = t.data("id"),
						s = this.collection.get(n);
					u.add({
						type: "achievement",
						params: {
							model: s,
						},
					});
				},
				showInfoPopup: function () {
					s.showInfoPopup("achievements");
				},
			});
			return l;
		}
	),
	define("text!screens/notifications.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div class="b-btn-menu soundingButton" id="menuButton"></div>\n    </div>\n    <div class="b-screen-head__title">Уведомления</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="notifications">\n    <div id="notificationList" class="notifications__list"></div>\n    <div id="notificationsEmpty" class="notifications__empty" style="display: none">\n        <div class="notifications__empty-text">У тебя нет уведомлений</div>\n    </div>\n</div>\n';
	}),
	define(
		"screens/notifications",
		[
			"widget",
			"application",
			"collections/notifications",
			"models/appState",
			"controllers/analytic",
			"widgets/notifications/element",
			"text!screens/notifications.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
				},
				initialize: function () {
					i.pageview("Уведомления"),
						(this.collection = n),
						this.listenTo(this.collection, "add change remove", this.render);
				},
				selfRender: function () {
					return (
						$(this.el).html(this.template()),
						this.collection.length > 0
							? ($("#notificationList").show(),
							  $("#notificationsEmpty").hide(),
							  $("#notificationList").html(""),
							  this.collection.each(function (e) {
									var t = new s({
										model: e,
									});
									$("#notificationList").prepend(t.returnableRender());
							  }))
							: ($("#notificationList").hide(), $("#notificationsEmpty").show()),
						this
					);
				},
				afterRender: function () {},
			});
			return u;
		}
	),
	define("collections/simpleCollection", ["backbone"], function (e) {
		var t = e.Collection.extend({});
		return t;
	}),
	define("text!screens/finder.html!strip", [], function () {
		return '\n\n\n\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div class="b-btn-menu soundingButton" id="menuButton"></div>\n    </div>\n    <div class="b-screen-head__title">Найти игрока</div>\n</div>\n<!-- /.b-screen-head -->\n\n\n<div class="b-games b-games_search">\n\n    <div class="b-games__search">\n        <div class="b-games__search-i">\n            <div class="b-games__search__form">\n                <input id="finderInput" type="text" class="b-games__search__input" name="" placeholder="Поиск">\n                <input id="letsFind" type="submit" class="soundingButton b-games__search__submit" value="Найти">\n            </div>\n        </div>\n    </div>\n    <!-- /.b-games__search -->\n\n    <div id=\'finder\' class="b-games__list" data-simplebar>\n        <!--Виджеты из central-->\n        <div class="friendsListBlockFinder">\n            <div id="friendsListHeaderFinder" class="b-games__list__title b-games__list__title_green">\n                <div class="b-games__list__title-i">брось вызов другу</div>\n            </div>\n            <!-- /.b-games__list__title -->\n            <div id=\'friendsListFinder\' class="b-games__list-i">\n                <div class="b-loader">\n                    <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n                </div>\n            </div>\n            <div class="moreFriendsFinder b-games__list__more grayscale">\n                <span class="b-games__list__more-i">Еще</span>\n            </div>\n        </div>\n\n        <div class="friendsToInviteBlockFinder">\n            <div class="b-games__list__title b-games__list__title_blue">\n                <div class="b-games__list__title-i">Пригласить друзей</div>\n                <span class="invite-box b-games__list__title__ctrl">выбрать</span>\n            </div>\n            <!-- /.b-games__list__title -->\n\n            <div id="friendsToInviteListFinder" class="b-games__list-i">\n                <div class="b-loader">\n                    <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n                </div>\n            </div>\n            <div class="moreFriendsToInviteFinder b-games__list__more grayscale">\n                <span class="b-games__list__more-i">Еще</span>\n            </div>\n        </div>\n        <!--КОНЕЦ виджеты из central-->\n    </div>\n    <!-- /.b-games__list -->\n\n    <div id=\'findResult\' class="b-games__list b-games__list_find" style="display: none;" data-simplebar>\n        <div id=\'findResult-i\' class="b-games__list-i">\n            \n        </div>\n    </div>\n\n    <div id=\'findResultEmpty\' class="b-games__empty" style="display: none;"></div>\n\n</div>\n\n';
	}),
	define(
		"screens/finder",
		[
			"gate",
			"application",
			"widget",
			"collections/friends",
			"collections/friendsToInvite",
			"collections/simpleCollection",
			"models/opponent",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"widgets/opponent/index",
			"text!screens/finder.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = n.extend({
				template: _.template(c),
				el: "#screenContainer",
				events: {
					"click #letsFind": "getPlayers",
					"keyup #finderInput": "getPlayersEnter",
					"click .invite-box": "inviteFriends",
					"click .moreFriendsToInviteFinder": "moreFriendsToInvite",
					"click .moreFriendsFinder": "moreFriends",
					"click #mainScreenButton": function () {
						u.setScreen({
							screen: "index",
						});
					},
					"click #menuButton": function () {
						$(".tss-label").click();
					},
				},
				initialize: function () {
					var n = this;
					a.pageview("Найти игрока"),
						(this.collection = new s([], {
							model: o,
						})),
						this.collection.on("reset", this.renderResult, this),
						this.listenTo(e, "findUsersByName", function (e) {
							n.collection.reset(e.users);
						}),
						this.listenTo(r, "reset", this.renderFriends, this),
						this.listenTo(i, "reset remove", this.renderFriendsToInvite, this),
						(this.viewParam = {
							Application: t,
						});
				},
				renderResult: function () {
					this.collection.length > 0
						? ($("#findResultEmpty").hide(),
						  $("#finder").html("").hide(),
						  $("#findResult").show(),
						  $("#findResult-i").html(""),
						  this.collection.each(function (e) {
								var t = new l({
									model: e,
									template: "opponent",
								});
								$("#findResult-i").append(t.returnableRender());
						  }))
						: ($("#finder").html("").hide(),
						  $("#findResult").hide(),
						  $("#findResultEmpty")
								.show()
								.html('<div class="b-games__empty-i">По запросу ничего не найдено</div>'));
				},
				getPlayers: function () {
					$("#findResult-i").html(
						'<div class="b-loader"><img class="b-loader-i" alt="" src="' +
							t.params.staticUrl +
							'images/app/loader.gif"></div>'
					),
						e.findUsersByName($("#finderInput").val());
				},
				getPlayersEnter: function (e) {
					var t = $("#finderInput");
					t.val() == ""
						? t.removeClass("b-games__search__input_value")
						: t.addClass("b-games__search__input_value"),
						e.keyCode == 13 && this.getPlayers();
				},
				inviteFriends: function () {
					e.inviteAllFriends(f);
				},
				moreFriends: function () {
					var e = r.pages === undefined ? 1 : r.pages;
					(r.pages = ++e), this.renderFriends();
				},
				renderFriends: function () {
					$(".friendsListBlockFinder").hide();
					if (r.length > 0) {
						$("#friendsListFinder").html("");
						var e = r.pages === undefined ? 1 : r.pages,
							n = t.params.pagination.friends,
							i = e * n;
						i > r.length && r.length != 0 && $(".moreFriendsFinder").hide();
						var s = 0;
						r.each(function (e) {
							if (s >= i) return;
							var t = new l({
								model: e,
								template: "opponent",
							});
							$("#friendsListFinder").append(t.returnableRender()), s++;
						}),
							i > s && r.length != 0 && $(".moreFriendsFinder").hide(),
							s > 0 && $(".friendsListBlockFinder").show();
					}
				},
				moreFriendsToInvite: function () {
					var e = i.pages === undefined ? 1 : i.pages;
					(i.pages = ++e), this.renderFriendsToInvite();
				},
				renderFriendsToInvite: function () {
					$(".friendsToInviteBlockFinder").hide();
					if (i.length > 0) {
						$("#friendsToInviteListFinder").html("");
						var e = i.pages === undefined ? 1 : i.pages,
							n = t.params.pagination.friendsToInvite,
							r = e * n,
							s = 0;
						i.each(function (e) {
							if (s >= r) return;
							var t = new l({
								model: e,
								template: "friendToInvite",
							});
							$("#friendsToInviteListFinder").append(t.returnableRender()), s++;
						}),
							r > s && i.length != 0 && $(".moreFriendsToInviteFinder").hide(),
							s > 0 && $(".friendsToInviteBlockFinder").show();
					}
				},
				afterRender: function () {
					this.renderFriends(), this.renderFriendsToInvite();
				},
			});
			return h;
		}
	),
	define("text!screens/quest/list.html!strip", [], function () {
		return '<%\nvar i, j, questToUpdate = \'\';\nvar proVersion = User.checkProVersion();\nvar questData = this.model.get(\'questData\');\nvar questParams = this.model.get(\'questParams\');\nvar questsCount = questData.quests.length;\n\nvar quests = _.clone(questData.quests);\nvar findedCompleteQuest = _.findWhere(quests, {status: 2, statusReward: true});\nvar findedCompleteQuestIndex;\nif (findedCompleteQuest && this.model.getTimeToCreate() <= 0) {\n    quests.forEach(function(el,index) {\n        if (el.id == findedCompleteQuest.id) {\n            findedCompleteQuestIndex = index;\n        }\n    });\n    questToUpdate = findedCompleteQuest.id;\n    quests.splice(findedCompleteQuestIndex, 1);\n}\n\nvar activeQuestsCount = quests.length;\nvar questPossibleCount = questData.possibleCount;\nvar quest;\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Задания</div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n    <div class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main <%= (!proVersion)? \'l-screen__main_quest\' : \'l-screen__main_fixed\' %>">\n\n    <div class="l-screen__main-content">\n        <div class="quest-tip"><%=tipText%></div>\n        <div class="quest-list">\n            <% if (activeQuestsCount > 0) {\n                for (i = 0; i < activeQuestsCount; i += 1) {\n                    quest = quests[i];\n                    questReward = quest.rewardNew;\n                %>\n                <div class="quest quest_level-<%=quest.level%><%=(quest.statusReward)? \' quest_completed\' : \'\'%>" data-quest-id="<%=quest.id%>">\n                    <div class="quest__icon"></div>\n                    <div class="quest__data">\n                        <div class="quest__title"><%=quest.task%></div>\n                        <% if (quest.status == 1 || quest.statusReward) { %>\n                        <div class="quest__progress">\n                            <div class="quest__progress-fill" style="width: <%=Math.round(quest.progress.completed/quest.progress.required*100)%>%;"></div>\n                            <div class="quest__progress-data"><%=quest.progress.completed%>/<%=quest.progress.required%></div>\n                        </div>\n                        <% } %>\n                        <% if (quest.status == 2 && !quest.statusReward) { %>\n                        <div class="quest__reward">Забрать награду</div>\n                        <% } %>                        \n                    </div>\n                    <div class="quest__info">\n                        <% if (!quest.statusReward) { %>\n                        <div class="quest__info-reward-list">\n                            <% for (j = 0; j < questReward.length; j += 1) { \n                                if (j >= 3) continue;\n                                if (questReward.length > 3 && j == 2) { %>\n                                <div class="quest__info-more">и еще…</div>\n                                <% } else { %>\n                                <div class="quest__info-reward">\n                                    <div class="quest__info-reward-count">+<%=questReward[j].count%></div>\n                                    <% switch(questReward[j].rewardType) {\n                                        case \'coinsOnceConst\': \n                                            %>  \n                                        <div class="quest__info-reward-icon">\n                                            <img class="quest__info-reward-icon-img" src="<%= Application.params.staticUrl %>images/app/icons/coin.png" alt=""> \n                                        </div>\n                                            <%\n                                            break;\n                                        case \'tokensOnceConst\':\n                                            %>      \n                                        <div class="quest__info-reward-icon quest__info-reward-icon_token">\n                                            <img class="quest__info-reward-icon-img" src="<%= Application.params.staticUrl %>images/app/season-pass/icon-token.png" alt=""> \n                                        </div>\n                                            <%\n                                            break;\n                                        case \'fieldBoosterOnceConst\': \n                                            %>      \n                                        <div class="quest__info-reward-icon quest__info-reward-icon_booster">\n                                            <img class="quest__info-reward-icon-img" src="<%= questReward[j].info.imageActiveUrl %>" alt=""> \n                                        </div>\n                                            <%\n                                            break;\n                                    }  %>\n                                </div>\n                                <% } \n                            } %>\n                        </div>\n                        <% } %>\n                    </div>\n                    <% if (quest.status == 1) { %>\n                    <div class="quest__replace <%=(this.model.getTimeToReplace() > 0)? \'quest__replace_disabled\' : \'\'%>"></div>\n                    <% } %>\n                </div>\n                <%\n                }\n                if (questToUpdate) { %>\n                <div class="quest quest_available" data-quest-id="<%=questToUpdate%>">\n                    <div class="quest__icon"></div>\n                    <div class="quest__data">\n                        <div class="quest__title">Доступно новое задание. Нажми, чтобы получить.</div>\n                        <div class="quest__update">Получить задание</div>\n                    </div>\n                    <div class="quest__info"></div>\n                </div>\n                <!-- /.quest [available] -->\n                <% }\n                if (questPossibleCount - questsCount > 0) { \n                    for (i = 0; i < questPossibleCount - questsCount; i += 1) {\n\n                        if (i == 0 && this.model.getTimeToCreate() <= 0 && !questToUpdate) { %>\n                        <div class="quest quest_available">\n                            <div class="quest__icon"></div>\n                            <div class="quest__data">\n                                <div class="quest__title">Доступно новое задание. Нажми, чтобы получить.</div>\n                                <div class="quest__add">Получить задание</div>\n                            </div>\n                            <div class="quest__info"></div>\n                        </div>\n                        <!-- /.quest [available] -->\n                        <% } else { %>\n\n                        <div class="quest quest_unavailable">\n                            <div class="quest__icon"></div>\n                            <div class="quest__data">\n                                <div class="quest__title">Задание скоро станет доступно.</div>\n                            </div>\n                            <div class="quest__info"></div>\n                        </div>\n                        <!-- /.quest [unavailable] -->\n                        <% } %>\n                    <%\n                    }\n                } %>\n\n\n            <% } else { \n                \n                for (i = 0; i < questPossibleCount; i += 1) {\n                    if (i == 0) {\n                    %>\n                    <div class="quest quest_available">\n                        <div class="b-onboarding__text">\n                            <div class="b-onboarding__text-i">А вот и первое задание! Нажми “Получить задание”, чтобы принять. Пока есть непринятое задание, новые задания будут недоступны.</div>\n                        </div>\n                        <!-- /.b-onboarding -->\n                        <div class="quest__icon"></div>\n                        <div class="quest__data">\n                            <div class="quest__title">Доступно новое задание. Нажми, чтобы получить.</div>\n                            <div class="quest__add">Получить задание</div>\n                        </div>\n                        <div class="quest__info"></div>\n                    </div>\n                    <!-- /.quest [available] -->\n                    <%\n                    } else {\n                    %>\n                    <div class="quest quest_unavailable">\n                        <div class="quest__icon"></div>\n                        <div class="quest__data">\n                            <div class="quest__title">Задание скоро станет доступно.</div>\n                        </div>\n                        <div class="quest__info"></div>\n                    </div>\n                    <!-- /.quest [unavailable] -->\n                    <%\n                    }\n                }\n            } %>\n        </div>\n        <!-- /.quest-list [satrt] -->\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n        <% if(!proVersion) { %>\n        <div id="showProPopup" class="b-screen-btns b-screen-btns_quest-pro">\n            <div class="b-onboarding__text">\n                <div class="b-onboarding__text-i">Ты можешь увеличить количество заданий с <%=questData.possibleCount%> до <%=questParams.questCountPro%>.</div>\n            </div><!-- /.b-onboarding -->\n            <div id="showProPopupBtn" class="b-screen-btns__item b-btn b-btn_orange">\n                <span class="icon icon_unlock"></span>&nbsp;Больше заданий\n            </div>\n        </div>\n        <% } %>\n        <div class="b-screen-btns">\n            <div id="questPlayBtn" class="b-screen-btns__item b-btn b-btn_blue">Играть</div>\n        </div>\n    </div>\n    <!-- /.l-screen__foot -->\n</div>\n<!-- /.l-screen__content -->';
	}),
	define(
		"screens/quest/list",
		[
			"gate",
			"widget",
			"application",
			"controllers/gameanalytics",
			"controllers/onboarding",
			"controllers/popups",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/quest",
			"text!screens/quest/list.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = t.extend({
				template: _.template(c),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #backButton": function () {
						a.previousScreen();
					},
					"click #questPlayBtn": "playBtnHandler",
					"click #showProPopupBtn": function () {
						r.sendDesignEvent("Screen_actions:Daily_quests:pro_popup"),
							u.add({
								type: "proVersion",
								params: {
									reason: "quest",
								},
							});
					},
					"click .quest__add": "questAddHandler",
					"click .quest__replace": "questReplaceHandler",
					"click .quest__update": "questUpdateHandler",
					"click .quest__reward": "questRewardHandler",
					"click .quest__info-more": "questRewardInfoHandler",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function () {
					var e = this;
					(this.model = l),
						this.listenTo(l, "change", function () {
							(e.viewParam.tipText = e.getTipText()), e.render();
						}),
						(this.viewParam = {
							Application: n,
							User: f,
							tipText: e.getTipText(),
						});
				},
				afterRender: function () {
					console.log("quest screen render"), this.initOnboarding();
				},
				initOnboarding: function () {
					!i.get("quest") && l.get("questData").quests.length == 0
						? this.showOnboarding("questAdd")
						: i.get("quest") != 2 && !f.checkProVersion() && this.showOnboarding("questPro");
				},
				showOnboarding: function (e) {
					$("#cover").on("click", this.closeOnboarding.bind(this)), $("#cover").show();
					switch (e) {
						case "questAdd":
							$(".quest_available")
								.eq(0)
								.addClass("b-onboarding b-onboarding_quest-add")
								.find(".b-onboarding__text")
								.show();
							break;
						case "questPro":
							$("#showProPopup")
								.addClass("b-onboarding b-onboarding_quest-pro")
								.find(".b-onboarding__text")
								.show();
					}
					$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
				},
				closeOnboarding: function (e) {
					console.log("closeOnboarding"),
						$("#cover").hide(),
						$("#cover").off("click"),
						$(".b-onboarding").off("click"),
						$(".quest_available").eq(0).hasClass("b-onboarding b-onboarding_quest-add")
							? (i.set("quest", 1),
							  $(".quest_available")
									.eq(0)
									.removeClass("b-onboarding b-onboarding_quest-add")
									.find(".b-onboarding__text")
									.hide(),
							  f.checkProVersion() ? s.changePopup() : this.showOnboarding("questPro"))
							: $("#showProPopup").hasClass("b-onboarding b-onboarding_quest-pro") &&
							  (i.set("quest", 2),
							  $("#showProPopup")
									.removeClass("b-onboarding b-onboarding_quest-pro")
									.find(".b-onboarding__text")
									.hide(),
							  s.changePopup());
				},
				playBtnHandler: function () {
					var e = i.get("questInfo");
					e
						? a.setScreen({
								screen: "index",
						  })
						: (i.set("questInfo", !0),
						  u.add({
								type: "static",
								params: {
									template: "questInfo",
								},
						  }));
				},
				questAddHandler: function () {
					r.sendDesignEvent("Screen_actions:Daily_quests:receive"), e.questCreate();
				},
				questReplaceHandler: function (e) {
					if (l.getTimeToReplace() <= 0) {
						var t = $(e.currentTarget).parents(".quest").eq(0).data("quest-id");
						u.add({
							type: "questReplace",
							params: {
								id: t,
							},
						});
					}
				},
				questUpdateHandler: function (t) {
					if (l.getTimeToCreate() <= 0) {
						r.sendDesignEvent("Screen_actions:Daily_quests:receive");
						var n = $(t.currentTarget).parents(".quest").eq(0).data("quest-id");
						e.questUpdate(n);
					}
				},
				questRewardHandler: function (t) {
					var n = $(t.currentTarget).parents(".quest").eq(0).data("quest-id");
					e.questGetReward(n),
						this.listenToOnce(e, "questGetReward", function (e) {
							u.add({
								type: "reward",
								params: {
									reward: e.data.rewardNew,
								},
							});
							var t = _.findWhere(e.data.rewardNew, {
								rewardType: "coinsOnceConst",
							}).count;
							r.sendResourceEvent("coins", t, "quest", "Consumed"),
								r.sendDesignEvent("Screen_actions:Daily_quests:claim");
						});
				},
				questRewardInfoHandler: function (e) {
					var t = $(e.currentTarget).parents(".quest").eq(0).data("quest-id"),
						n = _.findWhere(l.get("questData").quests, {
							id: t,
						}).rewardNew;
					u.add({
						type: "questRewardInfo",
						params: {
							reward: n,
						},
					});
				},
				getTipText: function () {
					var e = "&nbsp;",
						t = l.get("questData"),
						r = l.getTimeToCreate(),
						i = l.getTimeToReplace(),
						s = _.findWhere(t.quests, {
							status: 2,
							statusReward: !0,
						});
					return (
						t.quests.length < t.possibleCount || (s && t.quests.length == t.possibleCount && i > 0)
							? r <= 0
								? (e = "Прими задание, чтобы получить новое.")
								: (e = "До следующего задания " + n.methods.getHoursMinutesFromMS(r))
							: f.checkProVersion()
							? i <= 0 && (e = "Ты можешь заменить одно из заданий.")
							: i <= 0
							? ((e = l.tipAboutPro
									? "Ты можешь увеличить запас заданий."
									: "Ты можешь заменить одно из заданий."),
							  (l.tipAboutPro = !l.tipAboutPro))
							: (e = "Ты можешь увеличить запас заданий."),
						e
					);
				},
				showInfoPopup: function () {
					o.showInfoPopup("quest");
				},
			});
			return h;
		}
	),
	define("text!screens/quest/disabled.html!strip", [], function () {
		return '<% \nvar levelNameByLevel = Application.methods.levelNameByLevel;\nvar questLevel = Quest.get(\'questParams\').questLevel;\nvar questLevelName = levelNameByLevel(questLevel);\nvar userWins = User.get(\'uwins\');\nvar userLevelName = levelNameByLevel(Application.methods.levelForUwins(userWins));\nvar wins = Application.methods.startUwinsForLevel(questLevel) - userWins;\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Задания</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_fixed">\n\n    <div class="l-screen__main-content">\n        <div class="quest-list quest-list_empty">\n            <div class="quest-empty-text">\n                Задания станут доступны на уровне \n                <span class="quest-empty-text__required"><%=questLevelName%></span>. \n                Твой&nbsp;уровень\n                <span class="quest-empty-text__available"><%=userLevelName%></span>. \n                До&nbsp;нужного уровня еще <span class="quest-empty-text__required"><%=wins%>&nbsp;<%=Application.methods.declension(wins, [\'победа\', \'победы\', \'побед\'])%></span>.\n            </div>\n        </div>\n        <!-- /.quest-list [empty] -->\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n            <div id="questPlayBtn" class="b-screen-btns__item b-btn b-btn_blue">Играть</div>\n        </div>\n    </div>\n    <!-- /.l-screen__foot -->\n</div>\n<!-- /.l-screen__content -->';
	}),
	define(
		"screens/quest/disabled",
		[
			"widget",
			"application",
			"models/appState",
			"models/user",
			"models/quest",
			"text!screens/quest/disabled.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #backButton": function () {
						n.previousScreen();
					},
					"click #questPlayBtn": function () {
						n.setScreen({
							screen: "index",
						});
					},
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
						User: r,
						Quest: i,
					};
				},
				afterRender: function () {},
			});
			return o;
		}
	),
	define("controllers/gameLog", ["backbone", "gate", "models/user"], function (e, t, n) {
		var r = {},
			i = {
				keyLS: function () {
					return n.get("id") + "_log";
				},
				getFromLS: function () {
					var e = localStorage.getItem(this.keyLS());
					return e ? JSON.parse(e) : null;
				},
				setToLS: function () {
					localStorage.setItem(this.keyLS(), JSON.stringify(r));
				},
				clearLS: function () {
					localStorage.removeItem(this.keyLS());
				},
				init: function (e) {
					var t = this.getFromLS();
					console.log("logFromStorage: ", t),
						t && t.gameId == e.gameId
							? ((r = t), console.log("log from LS: ", r))
							: ((r = {
									suspectConfirmed: !1,
									suspect: n.get("userCommonProperties").gameLoggingSettings
										? n.get("userCommonProperties").gameLoggingSettings.isSuspiciousPlayer
										: !1,
									platform: "social",
									language: "ru",
									userId: n.get("id"),
									opponentId: e.opponentId,
									gameId: e.gameId,
									type: e.type,
									gameFields: this.prepareGameFields(e.gameFields),
									wordsCount: e.wordsCount,
									data: [],
							  }),
							  console.log("init log: ", r));
				},
				prepareGameFields: function (e) {
					var t = [];
					return (
						_.isArray(e)
							? e.forEach(function (e) {
									t.push({
										letters: e.letters,
										bonuses: e.bonuses,
									});
							  })
							: t.push({
									letters: e.letters,
									bonuses: e.bonuses,
							  }),
						t
					);
				},
				loggingStarted: function () {
					r.data.push({
						type: "loggingStarted",
						ts: Date.now(),
					});
				},
				timerStarted: function () {
					r.data.push({
						type: "timerStarted",
						ts: Date.now(),
					});
				},
				timerStopped: function () {
					r.data.push({
						type: "timerStopped",
						ts: Date.now(),
					});
				},
				wordFound: function (e) {
					r.data.push({
						type: "wordFound",
						data: {
							word: e.word,
							scores: e.scores,
						},
						ts: Date.now(),
					});
				},
				wordNotAccepted: function (e) {
					r.data.push({
						type: "wordNotAccepted",
						data: {
							word: e.word,
						},
						ts: Date.now(),
					});
				},
				scoresChanged: function (e) {
					r.data.push({
						type: "scoresChanged",
						data: {
							scoresSum: e,
						},
						ts: Date.now(),
					});
				},
				TipClicked: function () {
					r.data.push({
						type: "TipClicked",
						ts: Date.now(),
					});
				},
				tipShown: function (e) {
					r.data.push({
						type: "tipShown",
						data: {
							indexes: e,
						},
						ts: Date.now(),
					});
				},
				tipGotActive: function () {
					r.data.push({
						type: "tipGotActive",
						ts: Date.now(),
					});
				},
				balancePopUpShown: function () {
					r.data.push({
						type: "balancePopUpShown",
						ts: Date.now(),
					});
				},
				balancePopUpHidden: function () {
					r.data.push({
						type: "balancePopUpHidden",
						ts: Date.now(),
					});
				},
				swipeStarted: function (e) {
					r.data.push({
						type: "swipeStarted",
						data: {
							letters: e,
						},
						ts: Date.now(),
					});
				},
				fieldSwitched: function (e) {
					r.data.push({
						type: "fieldSwitched",
						data: {
							number: e,
						},
						ts: Date.now(),
					});
				},
				sendLog: function () {
					t.sendGameLog(r), this.clearLS();
				},
			};
		return i;
	}),
	define("controllers/gameCheat", ["gate", "backbone"], function (e, t) {
		var n = 5,
			r = function (t, r, i) {
				var s = this,
					o = 0,
					u = 0,
					a = [],
					f = 0,
					l = 0,
					c = 0,
					h = !1,
					p = 0,
					d = {},
					v = {
						exist: 0,
						notExist: 0,
					},
					m = !0,
					g = function () {
						var e = a,
							t = e.length;
						if (t > 0) {
							var n = _.reduce(
								e,
								function (e, t) {
									return e + t;
								},
								0
							);
							c = (n / t).toFixed(2);
						}
					};
				this.prepareWordsByLetterNumber = function () {
					var e = _.uniq(i.model.data.words),
						t = _.groupBy(e, "length"),
						n = 0;
					for (wordSize in t)
						d[wordSize] || (d[wordSize] = {}),
							(n = t[wordSize].length),
							(d[wordSize].all = d[wordSize].all ? d[wordSize].all + n : n),
							(d[wordSize].used = 0);
				};
				var y = function () {
						t != "tourney" && s.prepareWordsByLetterNumber();
						var e = i.model.foundWords,
							n = _.groupBy(e, "length"),
							r = 0;
						for (wordSize in n)
							(r = n[wordSize].length),
								(d[wordSize].used = d[wordSize].used ? d[wordSize].used + r : r);
					},
					b = function () {
						var e = 0,
							t = 0,
							r,
							s,
							o,
							u = i.model.foundWordsResults,
							a = u.length;
						while (e < a) {
							(r = u[e]), (s = r.usedWord.length), (o = r.usedWordScore);
							if (s >= n) {
								if (t != 0 && o > t) {
									m = !1;
									break;
								}
								t = o;
							}
							e++;
						}
					};
				(this.checkSortingLongWords = function () {
					b();
				}),
					(this.sendInfo = function () {
						var n = {};
						g(),
							y(),
							t != "tourney" && b(),
							(p = i.model.tipCount),
							(v.exist = i.model.foundWords.length),
							(v.notExist = _.without(i.model.notExistingWords, "").length),
							(n.id = r),
							(n.place = t),
							(n.firstWordTime = parseFloat(f)),
							(n.maxTouchTime = parseFloat(l)),
							(n.longWordsMiddleTime = parseFloat(c)),
							(n.longestWordUsed = h),
							(n.tips = p),
							(n.wordsByLettersNumber = d),
							(n.existWordsRelation = v),
							(n.longWordsSortedByPoints = m),
							console.log("info: ", n),
							e.cheatSendInfo(n);
					}),
					this.listenToOnce(i, "timerStarted", function (e) {
						o = e;
					}),
					this.listenToOnce(i, "wordExist", function (e, t) {
						var n = t,
							r = o;
						f = ((n - r) / 1e3).toFixed(2);
					}),
					this.listenTo(i, "wordExist", function (e, t) {
						var r = i.model.data.words[0],
							s,
							e = e.word,
							o = e.length;
						o >= n && ((s = ((t - u) / 1e3).toFixed(2)), a.push(parseFloat(s))), e == r && (h = !0);
					}),
					this.listenTo(i, "enterFirstLetter", function (e) {
						var t;
						u > 0 && ((t = ((e - u) / 1e3).toFixed(2)), (l = Math.max(l, t))), (u = e);
					}),
					this.listenToOnce(e, "cheatSendInfo", function () {
						s.stopListening();
					});
			};
		return _.extend(r.prototype, t.Events), r;
	}),
	define("models/game/abstract", [], function () {
		var e = function (e, t) {
			(this.sortData = function (e) {
				var t = e.words,
					n = e.indexes,
					r = t.length;
				for (var i = 0; i < r - 1; i++)
					for (var s = 0; s < r - 1 - i; s++)
						if (t[s + 1].length > t[s].length) {
							var o = t[s + 1];
							(t[s + 1] = t[s]), (t[s] = o), (o = n[s + 1]), (n[s + 1] = n[s]), (n[s] = o);
						}
				return e;
			}),
				(this.data = this.sortData(e)),
				(window._data = this.data),
				(this.params = t),
				(this.word = []),
				(this.foundWords = []),
				(this.foundWordsResults = []),
				(this.tipExclude = []),
				(this.whisperWords = []),
				(this.notExistingWords = []),
				(this.resultScores = 0),
				(this.tipCount = 0),
				(this.isUpdated = !1),
				(this.addLetter = function (e) {
					this.word.push(e);
				}),
				(this.removeLetter = function () {
					this.word.pop();
				}),
				(this.getAllWords = function () {
					var e = _.uniq(this.data.words),
						t = this.getResult().usedWords,
						n = [];
					for (var r = 0; r < e.length; r++) {
						var i = _.find(t, function (t) {
							return t.usedWord == e[r];
						});
						(i = i === undefined ? "-" : i.usedWordScore),
							n.push({
								word: e[r],
								points: ((1 + e[r].length) * e[r].length) / 2,
								userScore: i,
							});
					}
					return (
						(n = _.sortBy(n, function (e) {
							return -e.points;
						})),
						console.warn(n),
						n
					);
				}),
				(this.getJoinedWord = function () {
					var e = "";
					for (var t = 0; t < this.word.length; t++) e += this.word[t].letter;
					return e;
				}),
				(this.getWordIndexes = function () {
					var e = [];
					for (var t = 0; t < this.word.length; t++) e.push(this.word[t].index);
					return e;
				}),
				(this.getWordBonuses = function () {
					function n(e, n) {
						_.isArray(t[e]) ? t[e].push(n) : (t[e] = [n]);
					}
					var e = 0,
						t = {};
					for (var r = 0; r < this.word.length; r++)
						if (this.word[r].bonus) {
							var i = this.word[r].index;
							++e;
							switch (this.word[r].bonus.text) {
								case "bonusLetter2":
									n("0", i);
									break;
								case "bonusLetter3":
									n("1", i);
									break;
								case "bonusWord2":
									n("2", i);
									break;
								case "bonusWord3":
									n("3", i);
							}
						}
					return e ? t : !1;
				}),
				(this.scoreBoost = 1),
				(this.countScore = function () {
					var e = 5000,
						t = 1,
						n = 1;
					for (var r = 0; r < this.word.length; r++) {
						n = 1;
						if (this.word[r].bonus)
							switch (this.word[r].bonus.type) {
								case "word":
									t *= this.word[r].bonus.value;
									break;
								case "letter":
									n *= this.word[r].bonus.value;
							}
						var i = (r + 1) * n;
						e += i;
					}
					return e * t * this.scoreBoost;
				}),
				(this.getWord = function (e) {
					e = e ? e : !1;
					var t = this.getJoinedWord(),
						n = this.getWordIndexes(),
						r = "notExist",
						i = 0;
					if (e) {
						var s = $.inArray(t, this.foundWords);
						s == -1 && $.inArray(t, this.data.words) > -1
							? ((r = "exist"),
							  (i = this.countScore()),
							  (this.resultScores += i),
							  this.addUsedWord(t, i, n),
							  this.foundWords.push(t),
							  this.tipExclude.push(t),
							  (this.isUpdated = !0))
							: s > -1
							? (r = "alreadyFound")
							: ((r = "notExist"), this.notExistingWords.push(t)),
							(this.word = []);
					}
					return {
						word: t,
						scores: i,
						status: r,
						indexes: n,
					};
				}),
				(this.addUsedWord = function (e, t, n) {
					this.foundWordsResults.push({
						usedWord: e,
						usedWordScore: t,
						indexes: n,
					});
				}),
				(this.clearWord = function () {
					this.word = [];
				}),
				(this.getTip = function () {
					return (
						console.warn("tip.data.words", this.data.words), ++this.tipCount, this.getWordForTip()
					);
				}),
				(this.getWordForTip = function (e) {
					var t, n, r;
					for (r = 1; r <= this.data.words.length - 1; r += 1) {
						(t = this.data.words[r]),
							(n = this.data.indexes[r]),
							console.warn(
								"tip.check",
								"data.words[i] !== data.words[i - 1]",
								this.data.words[r] !== this.data.words[r - 1],
								this.data.words[r],
								this.data.words[r - 1],
								"$.inArray(word, tipExclude) < 0",
								$.inArray(t, this.tipExclude) < 0
							);
						if (
							this.data.words[r] !== this.data.words[r - 1] &&
							$.inArray(t, this.tipExclude) < 0 &&
							$.inArray(t, this.tipExclude) < 0
						) {
							this.tipExclude.push(t), e == "whisper" && this.whisperWords.push(t);
							break;
						}
					}
					return {
						word: t,
						indexes: n,
					};
				}),
				(this.getResult = function () {
					return {
						usedWords: this.foundWordsResults,
						scores: this.resultScores,
						notExistsWords: this.notExistingWords,
						tipCount: this.tipCount,
					};
				}),
				(this.setResult = function (e) {
					(_this = this),
						console.log("setResult obj: ", e),
						(this.resultScores = e.scores),
						(this.tipCount = e.tipCount),
						(this.foundWordsResults = e.usedWords),
						e.usedWords.forEach(function (e) {
							_this.foundWords.push(e.usedWord), _this.tipExclude.push(e.usedWord);
						});
				}),
				(this.getFieldWordsCount = function () {
					var e = _.uniq(this.data.words);
					return e.length;
				}),
				(this.getFoundWordsCount = function () {
					return this.foundWordsResults.length;
				}),
				(this.setGameData = function (e) {
					this.gameData = {
						letters: e.letters,
						bonuses: e.bonuses,
					};
				}),
				this.setGameData(this.data),
				(this.chase = e.chase);
		};
		return e;
	}),
	define("text!screens/pvp/game.html!strip", [], function () {
		return '    \n<div id="gameSplash" class="l-game-i"></div>\n\n<div class="b-game l-game">\n\n    <div class="l-game__top">\n\n        <div class="b-game__head">\n            <div class="b-game__head-i">\n                <div class="b-game__head__points">\n                    <i class="b-game__head__points__icon"></i>\n                    <div class="b-game__head__points__label">Очки</div>\n                    <div id="score" class="b-game__head__points-i"></div>\n                </div>\n                <div class="b-game__head__words">\n                    <div class="b-game__head__words__label">Слова</div>\n                    <div class="b-game__head__words-i">\n                        <span id="foundWordsCount" class="b-game__head__words__count">0</span>\n                        /\n                        <span id="fieldWordsCount" class="b-game__head__words__total"></span>\n                    </div>\n                </div>\n                <div class="b-game__head__time">\n                    <i class="b-game__head__time__icon"></i>\n                    <div class="b-game__head__time__label">Время</div>\n                    <div id="timer" class="b-game__head__time-i"></div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-game__head -->\n\n        <div class="b-game__word">\n            <div id=\'scoreFlag\' class="b-game__word__points" style="display: none">\n                <div id=\'wordScorePreText\' class="b-game__word__points__label">Супер!</div>\n                <div id="wordScore" class="b-game__word__points-i"></div>\n            </div>\n            <span id=\'word\' class="b-game__word-i"></span>\n            <span id=\'wordHint\' class="b-game__word__hint" style="display: none;">\n                <span class="b-game__word__hint__letters">\n                    <span id="wordHintLetters" class="b-game__word__hint__letters-i"></span><span id="wordHintLettersHL" class="b-game__word__hint__letters__hl"></span>\n                </span>\n            </span>\n            <% if(platform == \'desktop\') { %>\n                <div id=\'confirmWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_confirm" style="display: none;"></div>\n                <div id=\'dropWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_cancel" style="display: none;"></div>\n            <% } %>\n        </div>\n        <!-- /.b-game__word -->\n    \n    </div>\n    <!-- /.l-game__top -->\n\n    <div class="b-game__area l-game__area">\n        <div class="l-game__field">\n            <div id=\'canvasContainer\' class="b-game__canvas">\n                <canvas id="arrows" style="z-index:1; position:absolute;"></canvas>\n                <canvas id="background" style="z-index:2; position:absolute;"></canvas>\n                <canvas id="cells" style="z-index:3; position:absolute;"></canvas>\n                <canvas id="chaseBonuses" style="z-index:4; position:absolute;"></canvas>\n            </div>\n            <div id="startContainer" class="b-game__start">\n                <img id="startImage" class="b-game__start-img" src="<%= Application.params.staticUrl %>images/app/game-area-start.png" alt="" />\n            </div>\n        </div>\n        <!-- /.l-game__field -->\n        <div class="l-game__ctrls">\n            <div class="b-game__btn">\n                <div id="showTipButton" class="tip b-btn-cheat b-btn-cheat_disabled" style="display: none;">\n                    <span id="freeTip" class="b-icon b-icon_free-tip"></span>Подсказка\n                    <span id="coinTip" class="b-coin"><%=Application.params.services.getATip%></span>\n                </div>\n                <div id="tipCoolDown" class="tip b-btn-cheat b-btn-cheat_timer" style="display: none">\n                    Подсказка\n                    <span id=\'tipCoolDownTimer\' class="b-timer">15</span>\n                </div>\n                <div id="tipFairPlay" class="b-btn-cheat b-btn-cheat_fair-play" style="display: none">\n                    Честная игра\n                    <span class="b-icon b-icon_fair-play b-icon_btn"></span>\n                </div>\n            </div>\n        </div>\n        <!-- /.l-game__ctrls -->\n\n    </div>\n    <!-- /.b-game__area -->\n\n</div>\n<!-- /.b-game .l-game -->';
	}),
	define("canvasWidget", ["backbone"], function (e) {
		var t = e.View.extend({
			widgets: [],
			el: "",
			model: {},
			viewParam: {},
			stop: !1,
			initialize: function (e) {
				this.afterInitialize(e), this.render();
			},
			afterInitialize: function () {},
			initializeWidgets: function () {},
			requestAnimFrame: function (e, t) {
				requestAnimFrame(e, t);
			},
			render: function () {
				var e = this;
				this.update()
					.draw()
					.requestAnimFrame(function () {
						e.stop !== !0 ? e.render() : (window.clearAnimation(requestAnimFrame), e.endRender());
					});
			},
			endRender: function () {},
			update: function () {
				return this;
			},
			draw: function () {
				return this;
			},
			clearEvents: function () {
				this.stopListening(), this.undelegateEvents();
			},
		});
		return t;
	}),
	define("widgets/fields/cell", ["application"], function (e) {
		var t = function (t) {
			(this.shift = parseInt(t.params.shift)),
				(this.params = t.params),
				(this.position = t.position),
				(this.letter = t.letter),
				(this.index = t.index),
				(this.prepareScale = Math.random() * (0.025 - 0.01) + 0.01),
				(this.removeScale = Math.random() * (0.025 - 0.01) + 0.01),
				(this.basicScale = 0.33),
				(this.rotateCount = 1),
				(this.rotateDuration = 1e3),
				(this.rotateFactor = (Math.random() + 1) * 1.2),
				(this.basicDegree = 0),
				(this.x = t.position % 5),
				(this.y = Math.floor(t.position / 5)),
				(this.animationComplete = !1),
				(this.sizeX = this.params.cell.x),
				(this.sizeY = this.params.cell.y),
				(this.sizeImgX = this.params.cellImg.x),
				(this.sizeImgY = this.params.cellImg.y),
				(this.middleX = this.x * this.sizeX + this.sizeX / 2),
				(this.middleY = this.y * this.sizeY + this.sizeY / 2),
				(this.default = {
					style: "Simple",
					font: "Black",
				}),
				(this.style = this.default.style),
				(this.font = this.default.font),
				(this.drawCell = function (e) {
					(this.ctx = e.context),
						this.getStyle(e.style, e.previous),
						this.drawBackground(),
						this.drawLetter();
				}),
				(this.rotateAnimation = function (t) {
					return (
						(this.basicDegree =
							(t.ts / this.rotateDuration) * 360 * this.rotateCount * this.rotateFactor),
						this.basicDegree > 360 * this.rotateCount &&
							((this.basicDegree = 0), (this.animationComplete = !0)),
						(this.ctx = t.context),
						this.ctx.save(),
						this.ctx.translate(
							this.x * this.sizeX + this.sizeX / 2 + this.shift,
							this.y * this.sizeY + this.sizeY / 2 + this.shift
						),
						this.ctx.rotate((this.basicDegree * Math.PI) / 180),
						this.getStyle("simple", !1),
						this.ctx.drawImage(
							Resources.get(e.params.staticUrl + "images/app/field/cell" + this.style + ".png"),
							0,
							0,
							this.sizeImgX,
							this.sizeImgY,
							Math.floor(-this.sizeX / 2),
							Math.floor(-this.sizeY / 2),
							this.sizeX,
							this.sizeY
						),
						this.bonus &&
							this.ctx.drawImage(
								Resources.get(e.params.staticUrl + "images/app/field/" + this.bonus.text + ".png"),
								0,
								0,
								this.sizeImgX,
								this.sizeImgY,
								Math.floor(-this.sizeX / 2),
								Math.floor(-this.sizeY / 2),
								this.sizeX,
								this.sizeY
							),
						this.ctx.drawImage(
							Resources.get(e.params.staticUrl + "images/app/field/text" + this.font + ".png"),
							(this.letter.charCodeAt(0) - 1040) * this.sizeImgX,
							0,
							this.sizeImgX,
							this.sizeImgY,
							Math.floor(-this.sizeX / 2),
							Math.floor(-this.sizeY / 2),
							this.sizeX,
							this.sizeY
						),
						this.ctx.restore(),
						this.animationComplete
					);
				}),
				(this.prepareAnimation = function (e) {
					(this.basicScale += this.prepareScale),
						this.basicScale > 1 && ((this.basicScale = 1), (this.animationComplete = !0));
					var t = this.sizeX - this.sizeX * this.basicScale,
						n = this.sizeY - this.sizeY * this.basicScale,
						r = this.shift - this.shift * this.basicScale;
					return (
						(this.ctx = e.context),
						this.ctx.save(),
						this.ctx.translate(t / 2 + this.x * t + r, n / 2 + this.y * n + r),
						this.ctx.scale(this.basicScale, this.basicScale),
						this.getStyle("simple", !1),
						this.drawBackground(),
						this.drawLetter(),
						this.ctx.restore(),
						this.animationComplete
					);
				}),
				(this.removeAnimation = function (e) {
					this.basicScale -= this.removeScale;
					if (this.basicScale < 0.33)
						return (this.basicScale = 0.33), (this.animationComplete = !0), !0;
					var t = this.sizeX - this.sizeX * this.basicScale,
						n = this.sizeY - this.sizeY * this.basicScale,
						r = this.shift - this.shift * this.basicScale;
					return (
						(this.ctx = e.context),
						this.ctx.save(),
						this.ctx.translate(t / 2 + this.x * t + r, n / 2 + this.y * n + r),
						this.ctx.scale(this.basicScale, this.basicScale),
						this.getStyle("simple", !1),
						this.drawBackground(),
						this.drawLetter(),
						this.ctx.restore(),
						this.animationComplete
					);
				}),
				(this.drawBackground = function () {
					this.ctx.clearRect(
						this.x * this.sizeX + this.shift,
						this.y * this.sizeY + this.shift,
						this.sizeX,
						this.sizeY
					),
						this.ctx.drawImage(
							Resources.get(e.params.staticUrl + "images/app/field/cell" + this.style + ".png"),
							0,
							0,
							this.sizeImgX,
							this.sizeImgY,
							Math.floor(this.x * this.sizeX + this.shift),
							Math.floor(this.y * this.sizeY + this.shift),
							this.sizeX,
							this.sizeY
						),
						this.bonus &&
							this.ctx.drawImage(
								Resources.get(e.params.staticUrl + "images/app/field/" + this.bonus.text + ".png"),
								0,
								0,
								this.sizeImgX,
								this.sizeImgY,
								Math.floor(this.x * this.sizeX + this.shift),
								Math.floor(this.y * this.sizeY + this.shift),
								this.sizeX,
								this.sizeY
							);
				}),
				(this.drawLetter = function () {
					var t = this.letter.charCodeAt(0) - 1040;
					this.ctx.drawImage(
						Resources.get(e.params.staticUrl + "images/app/field/text" + this.font + ".png"),
						t * this.sizeImgX,
						0,
						this.sizeImgX,
						this.sizeImgY,
						Math.floor(this.x * this.sizeX + this.shift),
						Math.floor(this.y * this.sizeY + this.shift),
						this.sizeX,
						this.sizeY
					);
				}),
				(this.getStyle = function (e, t) {
					var n;
					switch (e) {
						case "simple":
							n = this.default;
							break;
						case "hold":
							n = {
								style: "Hold",
								eventual: !0,
								font: "White",
							};
							break;
						case "tip":
							n = {
								style: "Tip",
								eventual: !0,
								font: "Tip",
							};
							break;
						case "tipStart":
							n = {
								style: "TipStart",
								eventual: !0,
								font: "TipStart",
							};
					}
					for (var r in n) this[r] = n[r];
				});
		};
		return t;
	}),
	define("widgets/fields/timer", [], function () {
		var e = function (e) {
			e || (e = {}),
				(this.options = e),
				(this.processCallback = e.process || function () {}),
				(this.successCallback = e.success || function () {}),
				(this.cheatCallback = e.cheat || function () {}),
				(this.cheat = !1),
				this.options.autoStart && this.start(e);
		};
		return (
			(e.prototype.getHRTime = function () {
				var e = this.counter,
					t = e % 60,
					n = (e - t) / 60;
				return t < 10 && (t = "0" + t), n + ":" + t;
			}),
			(e.prototype.tick = function () {
				var e = Date.now(),
					t = e - this.lastTime,
					n = this.startTime;
				(this.counter = this.counter + this.increment),
					t > 2e3 && ((this.counter = this.count - Math.floor((e - n) / 1e3)), (this.lastTime = e)),
					t < 0 && (this.cheat = !0),
					(this.lastTime = e),
					this.counter < 0 && (this.counter = 0),
					this.processCallback({
						time: this.counter,
						hrTime: this.getHRTime(),
					}),
					this.counter == this.endCondition && this.stop();
			}),
			(e.prototype.start = function (e) {
				_.extend(this.options, e),
					(this.startTime = Date.now()),
					(this.lastTime = Date.now()),
					(this.count = this.options.count),
					(this.counter = this.options.reverse ? this.options.count : 0),
					(this.increment = this.options.reverse ? -1 : 1),
					(this.endCondition = this.options.reverse ? 0 : this.options.count),
					(this.intervalId = setInterval(this.tick.bind(this), 1e3));
			}),
			(e.prototype.restart = function () {
				this.stop(!0), this.start();
			}),
			(e.prototype.stop = function (e) {
				clearInterval(this.intervalId),
					e || (this.cheat ? this.cheatCallback() : this.successCallback());
			}),
			e
		);
	}),
	define(
		"widgets/fields/abstract",
		[
			"application",
			"canvasWidget",
			"controllers/achievement",
			"controllers/gameLog",
			"widgets/fields/cell",
			"widgets/fields/timer",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				mouse: {},
				stop: !1,
				gesture: !1,
				isGestureEnded: !1,
				isBackgroundComplete: !1,
				isTipAvailable: !1,
				alertTime: 15,
				fastShooterTime: 30,
				arrowMargin: 0,
				events: {},
				lettersForLog: [],
				chaseBonusImage: null,
				saveModelState: function () {
					this.screen.save();
				},
				afterInitialize: function (t) {
					(this.roundTime = t.roundTime || 120),
						scheme == "test" && e.params.testRound && (this.roundTime = 30),
						(this.screen = t.screen),
						(this.isGameLogging = this.screen.isGameLogging),
						(this.isTotemActive = !1),
						(this.isFreezAcitve = !1),
						$("#canvasContainer").contextmenu(function () {
							return !1;
						}),
						(this.eventualCells = []),
						(this.heldCells = []),
						(this.tipCells = []),
						(this.allCells = []),
						(this.container = $("#canvasContainer")[0]),
						(this.wrapper = $(".l-wrapper-i")[0]);
					var n = {};
					(n.arrows = $("#arrows")[0].getContext("2d")),
						(n.background = $("#background")[0].getContext("2d")),
						(n.cells = $("#cells")[0].getContext("2d"));
					if (this.model.chase) {
						var r = $("#chaseBonuses");
						r.show(), (n.chaseBonuses = r[0].getContext("2d"));
					}
					(this.ctx = n),
						this.setupFieldParams(t.fieldSize),
						(this.mouseMove = this.mouseMove.bind(this)),
						(this.mouseDown = this.mouseDown.bind(this)),
						(this.mouseUp = this.mouseUp.bind(this)),
						(this.touchStart = this.touchStart.bind(this)),
						(this.touchEnd = this.touchEnd.bind(this)),
						(this.touchMove = this.touchMove.bind(this)),
						this.listenTo(this, "backgroundComplete", this.onBackgroundComplete, this),
						this.createCellArray(),
						this.prepareBackground(),
						this.saveModelState();
				},
				setupFieldParams: function (e) {
					var t = 2,
						n = 0.08,
						e = e * t,
						r = Math.ceil((e * n) / 2),
						i = Math.floor((e - r * 2) / 5),
						s = Math.floor(i / 4.5),
						o = Math.floor(i * 1.18),
						u = {
							x: i,
							y: i,
						},
						a = {
							x: 132,
							y: 136,
						},
						f = {
							height: o,
							width: s,
							count: 3,
							color: {
								hold: "#115fb4",
								tip: "#fea046",
							},
						};
					this.fieldParams = {
						size: e,
						shift: r,
						cell: u,
						cellImg: a,
						arrow: f,
					};
				},
				prepareBackground: function () {
					var e = this,
						t = function () {
							var n = 25;
							for (var r = 0; r < e.cellArray.length; r++) {
								var i = e.cellArray[r];
								i.prepareAnimation({
									context: e.ctx.background,
								}) && n--;
							}
							n > 0
								? e.requestAnimFrame(t)
								: TweenMax.to($("#startImage"), 1, {
										opacity: 1,
										width: "100%",
										onComplete: function () {
											e.trigger("backgroundComplete"), $("#startContainer").hide();
										},
								  });
						};
					this.requestAnimFrame(t);
				},
				removeBackground: function () {
					var e = this,
						t = this.fieldParams.size;
					TweenMax.to($("#showTipButton"), 1, {
						opacity: 0,
					});
					for (var n = 0; n < e.cellArray.length; n++) e.cellArray[n].animationComplete = !1;
					var r = function () {
						e.ctx.background.clearRect(0, 0, t, t);
						var n = 25;
						for (var i = 0; i < e.cellArray.length; i++) {
							var s = e.cellArray[i];
							s.removeAnimation({
								context: e.ctx.background,
							}) && n--;
						}
						n > 0 ? e.requestAnimFrame(r) : e.trigger("backgroundRemoved");
					};
					this.requestAnimFrame(r);
				},
				onBackgroundComplete: function () {
					var t = this,
						n = this.model.chase;
					(this.isTipAvailable = !0),
						(this.isBackgroundComplete = !0),
						this.addEvents(),
						this.createTimers();
					if (n && n.bonuses && n.bonuses.length > 0) {
						var r = n.bonuses[0],
							i = r.url;
						(this.chaseBonusImage = Resources.get(i)),
							this.chaseBonusImage
								? this.drawChaseBonuses()
								: (Resources.load(i),
								  Resources.onReady(function () {
										(t.chaseBonusImage = Resources.get(i)), t.drawChaseBonuses();
								  }));
					}
					e.methods.play("game_start_2"),
						$("#score").html(this.model.getResult().scores),
						$("#showTipButton").removeClass("b-btn-cheat_disabled");
				},
				addEvents: function () {
					this.container.addEventListener("mousemove", this.mouseMove, !1),
						this.container.addEventListener("mousedown", this.mouseDown, !1),
						document.addEventListener("mouseup", this.mouseUp, !1),
						this.container.addEventListener("touchstart", this.touchStart, !1),
						this.container.addEventListener("touchend", this.touchEnd, !1),
						this.container.addEventListener("touchmove", this.touchMove, !1);
				},
				getTipCDTime: function () {
					return e.params.services.getATipTime;
				},
				getHRTime: function (e) {
					var t = e,
						n = t % 60,
						r = (t - n) / 60;
					return n < 10 && (n = "0" + n), r + ":" + n;
				},
				createTimers: function () {
					var t = this,
						i;
					(this.roundTimeRemaining = this.roundTime),
						$("#timer").text(this.getHRTime(this.roundTime)),
						(this.timer = new s({
							count: t.roundTime,
							reverse: !0,
							autoStart: !0,
							process: function (n) {
								(i = i || $("#timer")),
									i.html(n.hrTime),
									(t.roundTimeRemaining = n.time),
									n.time > 10
										? e.methods.stop("timer_loop")
										: n.time <= 10 && n.time > 1
										? (e.methods.play("timer_loop"), e.methods.stop("timer_preend"))
										: n.time == 1
										? (e.methods.stop("timer_loop"), e.methods.play("timer_preend"))
										: n.time == 0 &&
										  (e.methods.stop("timer_loop"),
										  e.methods.stop("timer_preend"),
										  e.methods.play("timer_end"));
							},
							success: function () {
								t.endGame();
							},
						})),
						this.isGameLogging && r.timerStarted(),
						this.trigger("timerStarted", Date.now()),
						(this.tipAlertTimer = new s({
							count: t.alertTime,
							autoStart: !0,
							success: function () {
								t.tipAlert(), this.start();
							},
						})),
						(this.tipEvailableTimer = new s({
							count: t.getTipCDTime(),
							reverse: !0,
							success: function () {
								e.methods.play("tip_ready"), t.tipAvailable();
							},
							process: function (e) {
								$("#tipCoolDownTimer").html(e.time);
							},
						})),
						(this.fastShooterTimer = new s({
							count: t.fastShooterTime,
							autoStart: !0,
							success: function () {
								console.warn("fastShooterTimer"), n.checkFastShooterAchievement(t.model);
							},
						}));
				},
				mouseDown: function (e) {
					if (this.isTotemActive) return !1;
					this.scoreFlagView.hide(),
						e.which == 1
							? ((this.mouseDownTime = e.timeStamp),
							  (this.gesture = !0),
							  (this.isGestureEnded = !1),
							  this.makeGesture(e))
							: e.which == 3 && this.endGesture();
				},
				mouseUp: function (e) {
					if (this.isTotemActive) return this.totemProcess(e), !1;
					if ($(e.target).attr("id") !== "dropWordButton") {
						this.gesture = !1;
						var t = e.timeStamp - this.mouseDownTime;
						t < 200
							? !this.isGestureEnded && this.heldCells.length > 0 && this.controls.show()
							: this.endGesture();
					} else this.dropWord();
				},
				mouseMove: function (e) {
					if (this.isTotemActive) return !1;
					this.gesture && this.makeGesture(e);
				},
				touchStart: function (e) {
					e.preventDefault();
					if (this.isTotemActive) return !1;
					this.scoreFlagView.hide(), (this.gesture = !0), this.makeGesture(e.touches[0]);
				},
				touchEnd: function (e) {
					e.preventDefault();
					if (this.isTotemActive)
						return console.log("totem use"), this.totemProcess(e.changedTouches[0]), !1;
					this.endGesture();
				},
				touchMove: function (e) {
					e.preventDefault();
					if (this.isTotemActive) return !1;
					this.gesture && this.makeGesture(e.touches[0]);
				},
				makeGesture: function (e) {
					var t = this,
						n,
						r,
						i;
					(this.mouse.x =
						(e.pageX - this.container.offsetLeft - this.wrapper.offsetLeft) * 2 -
						this.fieldParams.shift),
						(this.mouse.y =
							(e.pageY - this.container.offsetTop - this.wrapper.offsetTop) * 2 -
							this.fieldParams.shift),
						(n = Math.floor(this.mouse.x / this.cellArray[0].sizeX)),
						(r = Math.floor(this.mouse.y / this.cellArray[0].sizeY)),
						(i = n + r * 5);
					if (n >= 0 && n < 5 && r >= 0 && r < 5 && this.checkFocusRadius(i)) {
						this.tipAlertTimer && this.tipAlertTimer.restart();
						if (i == this.heldCells[this.heldCells.length - 1] && e.type == "mousedown") {
							console.log("doubleClick"), this.endGesture();
							return;
						}
						_.contains(this.eventualCells, i) && this.focusCell(i);
					}
				},
				endGesture: function () {
					var t = this.fieldParams.size;
					(this.heldCells = []),
						(this.eventualCells = this.allCells),
						this.controls.hide(),
						(this.isGestureEnded = !0),
						this.isGameLogging &&
							this.lettersForLog.length > 1 &&
							((this.lettersForLog[this.lettersForLog.length - 1].tsExit = Date.now()),
							r.swipeStarted(this.lettersForLog),
							(this.lettersForLog = []));
					var n = this.model.getWord(!0);
					this.trigger("word", n);
					if (n.word.length > 0) {
						switch (n.status) {
							case "exist":
								var i, s, o;
								this.trigger("wordExist", n, Date.now());
								switch (!0) {
									case n.scores < 20:
										(i = "right"), (s = "");
										break;
									case n.scores > 100:
										(i = "wau"), (s = "Вау!");
										break;
									default:
										(i = "super"), (s = "Супер!");
								}
								this.playExistWordSound(i),
									this.scoreFlagView.show(n.scores, s),
									this.saveModelState(),
									(o = this.model.getResult().scores),
									$("#score").html(o),
									this.checkIsCurrentWordATip(n.word),
									this.isGameLogging &&
										(r.wordFound({
											word: n.word,
											scores: n.scores,
										}),
										r.scoresChanged(o));
								break;
							case "notExist":
								this.isGameLogging &&
									r.wordNotAccepted({
										word: n.word,
									}),
									e.methods.stop("wrong"),
									e.methods.play("wrong");
								break;
							case "alreadyFound":
								e.methods.stop("repeated_word"), e.methods.play("repeated_word");
						}
						this.afterCheckWord(),
							this.ctx.arrows.clearRect(0, 0, t, t),
							this.ctx.cells.clearRect(0, 0, t, t),
							this.isGameLogging && (r.setToLS(), console.log("L O G: ", r.getFromLS()));
					}
				},
				afterCheckWord: function () {
					(_this = this),
						setTimeout(function () {
							_this.scoreFlagView.hide(),
								$("#word").html(""),
								_this.clearTip(),
								_this.tipCells.length && _this.tipEnable(_this.tipWord);
						}, 600);
				},
				playExistWordSound: function (t) {
					e.methods.stop(t), e.methods.play(t);
				},
				checkFocusRadius: function (e) {
					var t = this.cellArray[e],
						n = Math.sqrt(
							Math.pow(this.mouse.x - t.middleX, 2) + Math.pow(this.mouse.y - t.middleY, 2)
						);
					return n <= (t.sizeX / 2) * 0.9 ? !0 : !1;
				},
				focusCell: function (e) {
					var t,
						n,
						r,
						i,
						s = this.heldCells.length;
					s == 0 && this.trigger("enterFirstLetter", Date.now()), (i = this.heldCells[s - 2]);
					if (!_.contains(this.heldCells, e)) {
						if (this.isGameLogging) {
							var o = {
								tsEnter: Date.now(),
								tsExit: null,
								index: this.cellArray[e].index,
								letter: this.cellArray[e].letter,
							};
							s
								? ((this.lettersForLog[this.lettersForLog.length - 1].tsExit = Date.now()),
								  this.lettersForLog.push(o))
								: this.lettersForLog.push(o);
						}
						this.heldCells.push(e);
					} else if (e != i) return;
					(this.eventualCells = this.nearCell(e)),
						e == i
							? (this.heldCells.pop(), this.model.removeLetter())
							: ((t = {
									position: e,
									letter: this.cellArray[e].letter,
									index: this.cellArray[e].index,
							  }),
							  this.cellArray[e].bonus && (t.bonus = this.cellArray[e].bonus),
							  this.model.addLetter(t)),
						(n = this.model.getWord()),
						this.playFocusSound(n.word.length);
					for (var u = 0; u < n.indexes.length; u += 1)
						n.indexes[u] == this.tipCells[u] ? (r = !0) : (r = !1);
					r ? this.printTip(n.word) : this.printWord(n.word);
				},
				dropWord: function () {
					var e = this.fieldParams.size;
					(this.heldCells = []),
						(this.eventualCells = this.allCells),
						this.model.clearWord(),
						this.printWord(""),
						this.controls.hide(),
						this.ctx.cells.clearRect(0, 0, e, e),
						this.ctx.arrows.clearRect(0, 0, e, e);
				},
				update: function () {
					return (this.arrowMargin = this.arrowMargin > 44 ? 0 : this.arrowMargin + 2), this;
				},
				draw: function () {
					var e,
						t,
						n,
						r,
						i,
						s,
						o = this.fieldParams.size;
					this.ctx.cells.clearRect(0, 0, o, o), this.ctx.arrows.clearRect(0, 0, o, o);
					for (e = 0; e < this.tipCells.length; e++)
						(i = this.tipCells[e]),
							(r = _.find(this.cellArray, function (e) {
								return e.index == i;
							})),
							(t = r.position),
							(s = e < this.tipCells.length - 1 ? this.tipCells[e + 1] : -1),
							s > -1 &&
								((nextCellObj = _.find(this.cellArray, function (e) {
									return e.index == s;
								})),
								(n = nextCellObj.position),
								this.drawArrow("tip", t, n)),
							e == 0
								? r.drawCell({
										style: "tipStart",
										context: this.ctx.cells,
								  })
								: r.drawCell({
										style: "tip",
										context: this.ctx.cells,
								  });
					for (e = 0; e < this.heldCells.length; e++)
						(t = this.heldCells[e]),
							(n = e < this.heldCells.length - 1 ? this.heldCells[e + 1] : -1),
							(r = this.cellArray[t]),
							n > -1 && this.drawArrow("hold", t, n),
							r.drawCell({
								style: "hold",
								context: this.ctx.cells,
							});
					return this;
				},
				drawArrow: function (t, n, r, i) {
					var s,
						o = this.fieldParams;
					(x = n % 5),
						(y = Math.floor(n / 5)),
						(cW = o.cell.x),
						(cH = o.cell.y),
						(w = o.arrow.width),
						(h = o.arrow.height),
						(count = o.arrow.count),
						(i = this.ctx.arrows);
					switch (r - n) {
						case -1:
							s = Math.PI;
							break;
						case 1:
							s = 0;
							break;
						case -5:
							s = -Math.PI / 2;
							break;
						case 5:
							s = Math.PI / 2;
							break;
						case -6:
							s = -Math.PI - Math.atan(-cH / cW);
							break;
						case 6:
							s = Math.atan(cH / cW);
							break;
						case -4:
							s = Math.atan(-cH / cW);
							break;
						case 4:
							s = Math.PI + Math.atan(cH / -cW);
					}
					var u = -w / 2;
					i.save(),
						i.translate(cW * (x + 0.5) + w / 2 + u + o.shift, cH * (y + 0.5) + o.shift),
						i.rotate(s),
						(i.fillStyle = o.arrow.color[t]),
						i.fillRect(0, -w / 2, h, w);
					if (t == "tip")
						for (var a = 0; a < count; a++)
							i.drawImage(
								Resources.get(e.params.staticUrl + "images/app/field/arrow.png"),
								a * 44 + this.arrowMargin,
								-w / 4,
								w,
								w + u
							);
					i.restore();
				},
				drawCellArray: function () {
					for (var e = 0; e < this.cellArray.length; e++) {
						var t = this.cellArray[e];
						t.drawCell({
							style: "simple",
							context: this.ctx.background,
						});
					}
				},
				drawChaseBonuses: function () {
					var e,
						t,
						n,
						r,
						i,
						s,
						o = this.fieldParams.size,
						u = this.fieldParams.shift,
						a,
						f,
						l = this.model.chase;
					this.ctx.chaseBonuses.clearRect(0, 0, o, o),
						(i = this.cellArray[0].sizeX),
						(s = this.cellArray[0].sizeY);
					for (e = 0; e < l.bonuses.length; e += 1)
						(a = l.bonuses[e]),
							(f = a.index),
							(t = _.find(this.cellArray, function (e) {
								return e.index == f;
							}).position),
							(n = t % 5),
							(r = Math.floor(t / 5)),
							this.ctx.chaseBonuses.drawImage(
								this.chaseBonusImage,
								n * i + u + i - 55,
								r * s + u + s - 65,
								50,
								50
							);
				},
				totemProcess: function (e) {},
				endGame: function () {
					(this.stop = !0), this.isGameLogging && r.timerStopped();
				},
				endRender: function () {
					var e = this.fieldParams.size;
					this.container.removeEventListener("mousemove", this.mouseMove),
						this.container.removeEventListener("mousedown", this.mouseDown),
						document.removeEventListener("mouseup", this.mouseUp),
						this.container.removeEventListener("touchstart", this.touchStart),
						this.container.removeEventListener("touchend", this.touchEnd),
						this.container.removeEventListener("touchmove", this.touchMove),
						this.ctx.cells.clearRect(0, 0, e, e),
						this.ctx.arrows.clearRect(0, 0, e, e),
						this.listenTo(this, "backgroundRemoved", function () {
							this.tipEvailableTimer.stop(!0),
								this.tipAlertTimer.stop(!0),
								this.screen.sendResult();
						}),
						this.removeBackground();
				},
				createCellArray: function () {
					(this.cellArray = []), console.log("fieldParams.cell.x: " + this.fieldParams.cell.x);
					for (var t = 0; t < this.model.gameData.letters.length; t++) {
						this.allCells.push(t);
						var n = new i({
							position: t,
							letter: this.model.gameData.letters[t],
							params: this.fieldParams,
							index: t,
						});
						this.cellArray.push(n);
					}
					var r = this.model.gameData.bonuses;
					for (var s in r) this.cellArray[r[s]].bonus = e.params.bonuses[s];
					(this.eventualCells = this.allCells), console.log(this.cellArray);
				},
				nearCell: function (e) {
					var t = e % 5,
						n = Math.floor(e / 5),
						r = [];
					return (
						t - 1 >= 0 && r.push(t - 1 + (n - 0) * 5),
						t + 1 < 5 && r.push(t + 1 + (n - 0) * 5),
						n - 1 >= 0 && r.push(t - 0 + (n - 1) * 5),
						n + 1 < 5 && r.push(t - 0 + (n + 1) * 5),
						t - 1 >= 0 && n - 1 >= 0 && r.push(t - 1 + (n - 1) * 5),
						t + 1 < 5 && n + 1 < 5 && r.push(t + 1 + (n + 1) * 5),
						t - 1 >= 0 && n + 1 < 5 && r.push(t - 1 + (n + 1) * 5),
						t + 1 < 5 && n - 1 >= 0 && r.push(t + 1 + (n - 1) * 5),
						r
					);
				},
				showTip: function () {
					this.isGameLogging && r.TipClicked();
					var t = this.model.getTip();
					console.log("tip from game model: ", t),
						(this.tipWord = t.word),
						(this.tipCells = t.indexes),
						console.log("tipCells: ", this.tipCells),
						this.isGameLogging && r.tipShown(t.indexes),
						e.methods.play("tip_click"),
						this.tipEnable(this.tipWord),
						this.tipOnCoolDown(this);
				},
				printTip: function (e) {
					$("#wordHint").show(),
						$("#word").html(e),
						$("#word").hide(),
						$("#wordHintLettersHL").html(e);
				},
				clearTip: function () {
					$("#wordHintLetters").html(""), $("#wordHintLettersHL").html("");
				},
				printWord: function (e) {
					$("#wordHint").hide(), $("#wordHintLettersHL").html(""), $("#word").show().html(e);
				},
				playFocusSound: function (t) {
					t > 15 && (t = 15),
						e.methods.stop("select_letter_" + t),
						e.methods.play("select_letter_" + t);
				},
				checkIsCurrentWordATip: function (e) {
					var t = this.fieldParams.size;
					this.tipWord == e &&
						((this.tipCells = []), this.ctx.cells.clearRect(0, 0, t, t), this.clearTip());
				},
				controls: {
					show: function () {
						$(".wordControl").show();
					},
					hide: function () {
						$(".wordControl").hide();
					},
				},
				scoreFlagView: {
					show: function (e, t) {
						$("#wordScorePreText").html(t), $("#wordScore").html("+" + e), $("#scoreFlag").show();
					},
					hide: function () {
						$("#scoreFlag").hide();
					},
				},
				tipAlert: function () {
					var e = 8,
						t = setInterval(function () {
							--e % 2 == 0
								? $("#showTipButton").removeClass("b-btn-cheat_hl")
								: $("#showTipButton").addClass("b-btn-cheat_hl"),
								e == 0 && clearInterval(t);
						}, 200);
				},
				tipAvailable: function () {
					$(".tip").hide(), $("#showTipButton").show(), this.isGameLogging && r.tipGotActive();
				},
				tipEnable: function (e) {
					$("#wordHint").show(), $("#wordHintLetters").html(e);
				},
				tipOnCoolDown: function () {
					var e = this;
					$(".tip").hide(),
						$("#tipCoolDownTimer").html(e.getTipCDTime()),
						$("#tipCoolDown").show(),
						this.tipEvailableTimer.start({
							name: "TipEvailableTimer",
						});
				},
				rotateAnimation: function () {
					var e = this,
						t = null,
						n = this.fieldParams.size;
					for (var r = 0; r < e.cellArray.length; r++) e.cellArray[r].animationComplete = !1;
					var i = function (r) {
						var r = r;
						t || (t = r);
						var s = r - t;
						e.ctx.background.clearRect(0, 0, n, n);
						var o = 0;
						for (var u = 0; u < e.cellArray.length; u++) {
							var a = e.cellArray[u];
							a.animationComplete
								? (++o,
								  a.drawCell({
										style: "simple",
										context: e.ctx.background,
								  }))
								: a.rotateAnimation({
										context: e.ctx.background,
										ts: s,
								  });
						}
						o != 25 && e.requestAnimFrame(i);
					};
					this.requestAnimFrame(i);
				},
			});
			return o;
		}
	),
	define("text!widgets/pvp/gameSplash.html!strip", [], function () {
		return '<%\nvar i;\nvar userCustomAvatar = User.get(\'customAvatar\');\nvar opponentCustomAvatar = opponent.customAvatar;\n%>\n\n<canvas id="elephant" height="80" style="margin-top:-42px; top: 50%; z-index:1000; position:absolute;"></canvas>\n\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'cancelSearch\' class="b-btn-back" style=\'display:none\'></div>\n    </div>\n    <div id=\'searchLabel\' class="b-screen-head__title">&nbsp;</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-search">\n\n    <div class="b-search-i">\n\n        <div id=\'userPreview\' class="b-search__you">\n            <div class="b-search__you-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-user">\n                            <% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=userCustomAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                            <% } else { %>\n                            <div class="b-user__pic">\n                                <img alt="" src="<%= User.get(\'avatarUrl\') %>" class="b-user__pic-i">\n                            </div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value %>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-search__user__data">\n                        <div class="b-search__user__data-i">\n                        \n                        	<p class="b-search__user__data__name">Вы</p>\n                        	\n                        	<p class="b-search__user__data__rank"><%= User.get(\'level\').name %></p>\n                        	\n                        	<% if(!!User.get(\'loc\')){ %>\n                        	<p class="b-search__user__data__place">\n                        	    <%= User.get(\'loc\') %>\n                        	</p>\n                        	<% } %>\n                        	<% if(!!User.get(\'status\')){ %>\n                        	<p class="b-search__user__data__status">\n                        	    <%= User.get(\'status\') %>\n                        	</p>\n                        	<% } %>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div id=\'versusLabel\' class="b-search__status">\n            <img class="b-search__status__icon" alt="" src="<%= Application.params.staticUrl %>images/app/search-success.png">\n        </div>\n        <div id=\'opponentPreview\' class="b-search__rival">\n            <div class="b-search__rival-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-user">\n                            <% if (opponentCustomAvatar && opponentCustomAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < opponentCustomAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponentCustomAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                            <% } else { %>\n                            <div class="b-user__pic">\n                                <img alt="" src="<%= opponent.avatarUrl %>" class="b-user__pic-i">\n                            </div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(opponent.uwins) %>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-search__user__data">\n                        <div class="b-search__user__data-i">\n                        	\n                        	<p class="b-search__user__data__name"><%= opponent.playerName %></p>\n                        	\n                        	<p class="b-search__user__data__rank"><%=\n                        	    Application.methods.levelNameByLevel(Application.methods.levelForUwins(opponent.uwins)) %>\n                        	</p>\n                        	\n                        	<% if(!!opponent.loc) { %>\n                        	<p class="b-search__user__data__place">\n                        	    <%= opponent.loc %>\n                        	</p>\n                        	<% } %>\n                        	\n                        	<% if(!!opponent.status) { %>\n                        	<p class="b-search__user__data__status">\n                        	    <%= opponent.status %>\n                        	</p>\n                        	<% } %>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="b-search__splash">\n        <div class="b-search__splash-i">\n            <img class="b-search__splash__loader" src="<%= Application.params.staticUrl %>images/app/tournament-splash-loader.gif" alt="">\n            <div class="b-search__splash__text" id="adviceContainer"></div>\n        </div>\n    </div>\n</div>';
	}),
	define("text!widgets/pvp/gameSplashRandom.html!strip", [], function () {
		return '<%\nvar i;\nvar userCustomAvatar = User.get(\'customAvatar\');\n%>\n\n<canvas id="elephant" height="80" style="margin-top:-66px; top: 50%; z-index:1000; position:absolute;"></canvas>\n\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'cancelSearch\' class="b-btn-back" style=\'display:none\'></div>\n    </div>\n    <div id=\'searchLabel\' class="b-screen-head__title">Поиск соперника</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-search">\n\n    <div class="b-search-i">\n\n        <div id=\'userPreview\' class="b-search__you">\n            <div class="b-search__you-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-user">\n                            <% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=userCustomAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                            <% } else { %>\n                            <div class="b-user__pic">\n                                <img alt="" src="<%= User.get(\'avatarUrl\') %>" class="b-user__pic-i">\n                            </div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value %>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-search__user__data">\n                        <div class="b-search__user__data-i">\n                        	\n                        	<p class="b-search__user__data__name">Вы</p>\n                        	\n                        	<p class="b-search__user__data__rank"><%= User.get(\'level\').name %></p>\n                        	\n                        	<% if(!!User.get(\'loc\')){ %>\n                        	<p class="b-search__user__data__place">\n                        	    <%= User.get(\'loc\') %>\n                        	</p>\n                        	<% } %>\n                        	\n                        	<% if(!!User.get(\'status\')){ %>\n                        	<p class="b-search__user__data__status">\n                        	    <%= User.get(\'status\') %>\n                        	</p>\n                        	<% } %>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="b-search__status">\n            <span id=\'searchTimer\' class="b-timer b-timer_search">20</span>\n        </div>\n        <div id=\'opponentPreview\' class="b-search__rival">\n            <div class="b-search__rival-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-user">\n                            <div class="b-user__pic">\n                                <img id=\'splashAvatar\' alt="" src="<%= Application.params.staticUrl %>images/app/splashAvatar1.png" class="b-user__pic-i">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="b-search__user__progress">\n                        <div id=\'loaderText\' class="b-search__user__progress-i">Выстраиваем иерархию нейрисвязей...</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <div class="b-search__splash">\n        <div class="b-search__splash-i">\n            <img class="b-search__splash__loader" src="<%= Application.params.staticUrl %>images/app/tournament-splash-loader.gif" alt="">\n            <div class="b-search__splash__text" id="adviceContainer"></div>\n        </div>\n    </div>\n    \n</div>';
	}),
	define("widgets/splash/elephant", ["canvasWidget", "application"], function (e, t) {
		var n = e.extend({
			stop: !1,
			frame: 0,
			x: 0,
			acceleration: {
				basic: 8,
				back: -10,
				after: 15,
			},
			frameSpeed: 0.15,
			spriteIndex: 0,
			sizeX: 80,
			sizeY: 34,
			angle: 0,
			reverse: !1,
			once: !0,
			afterInitialize: function (e) {
				(this.canvas = e.canvas),
					(this.ctx = this.canvas.getContext("2d")),
					(this.xa = this.acceleration.basic);
			},
			update: function () {
				return (
					this.frame++,
					(this.spriteIndex += this.frameSpeed),
					this.once &&
						this.x > (this.canvas.width - this.sizeX + 80) / 2 &&
						((this.reverse = !0), (this.xa = this.acceleration.back)),
					this.once &&
						this.reverse &&
						this.x < (this.canvas.width - this.sizeX) / 2 - 80 &&
						((this.reverse = !1), (this.once = !1), (this.xa = this.acceleration.after)),
					(this.x += this.xa),
					this.spriteIndex > 6 && (this.spriteIndex = 0),
					this.x > this.canvas.width + 30 && (this.stop = !0),
					this
				);
			},
			draw: function () {
				return (
					this.ctx.save(),
					this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height),
					this.ctx.translate(this.x + this.xa, (this.canvas.height - this.sizeY) / 2),
					this.reverse &&
						(this.angle++,
						(this.angle = this.angle > 30 ? 30 : this.angle),
						this.ctx.rotate((-this.angle * Math.PI) / 180)),
					!this.once &&
						!this.reverse &&
						(this.angle--,
						(this.angle = this.angle < 0 ? 0 : this.angle),
						this.ctx.rotate((-this.angle * Math.PI) / 180)),
					this.ctx.drawImage(
						Resources.get(t.params.staticUrl + "images/app/sprites/elephant.png"),
						Math.floor(this.spriteIndex) * this.sizeX,
						0,
						this.sizeX,
						this.sizeY,
						-this.sizeX / 2,
						0,
						this.sizeX,
						this.sizeY
					),
					this.ctx.restore(),
					this
				);
			},
			endRender: function () {
				this.trigger("complete");
			},
		});
		return n;
	});
var _gsScope =
	"undefined" != typeof module && module.exports && "undefined" != typeof global
		? global
		: this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
	_gsScope._gsDefine(
		"TweenMax",
		["core.Animation", "core.SimpleTimeline", "TweenLite"],
		function (e, t, n) {
			var r = function (e) {
					var t,
						n = [],
						r = e.length;
					for (t = 0; t !== r; n.push(e[t++]));
					return n;
				},
				i = function (e, t, r) {
					n.call(this, e, t, r),
						(this._cycle = 0),
						(this._yoyo = this.vars.yoyo === !0),
						(this._repeat = this.vars.repeat || 0),
						(this._repeatDelay = this.vars.repeatDelay || 0),
						(this._dirty = !0),
						(this.render = i.prototype.render);
				},
				s = 1e-10,
				o = n._internals,
				u = o.isSelector,
				a = o.isArray,
				f = (i.prototype = n.to({}, 0.1, {})),
				l = [];
			(i.version = "1.15.1"),
				(f.constructor = i),
				(f.kill()._gc = !1),
				(i.killTweensOf = i.killDelayedCallsTo = n.killTweensOf),
				(i.getTweensOf = n.getTweensOf),
				(i.lagSmoothing = n.lagSmoothing),
				(i.ticker = n.ticker),
				(i.render = n.render),
				(f.invalidate = function () {
					return (
						(this._yoyo = this.vars.yoyo === !0),
						(this._repeat = this.vars.repeat || 0),
						(this._repeatDelay = this.vars.repeatDelay || 0),
						this._uncache(!0),
						n.prototype.invalidate.call(this)
					);
				}),
				(f.updateTo = function (e, t) {
					var r,
						i = this.ratio,
						s = this.vars.immediateRender || e.immediateRender;
					t &&
						this._startTime < this._timeline._time &&
						((this._startTime = this._timeline._time),
						this._uncache(!1),
						this._gc
							? this._enabled(!0, !1)
							: this._timeline.insert(this, this._startTime - this._delay));
					for (r in e) this.vars[r] = e[r];
					if (this._initted || s)
						if (t) (this._initted = !1), s && this.render(0, !0, !0);
						else if (
							(this._gc && this._enabled(!0, !1),
							this._notifyPluginsOfEnabled && this._firstPT && n._onPluginEvent("_onDisable", this),
							this._time / this._duration > 0.998)
						) {
							var o = this._time;
							this.render(0, !0, !1), (this._initted = !1), this.render(o, !0, !1);
						} else if (this._time > 0 || s) {
							(this._initted = !1), this._init();
							for (var u, a = 1 / (1 - i), f = this._firstPT; f; )
								(u = f.s + f.c), (f.c *= a), (f.s = u - f.c), (f = f._next);
						}
					return this;
				}),
				(f.render = function (e, t, n) {
					this._initted || (0 === this._duration && this.vars.repeat && this.invalidate());
					var r,
						i,
						u,
						a,
						f,
						c,
						h,
						p,
						d = this._dirty ? this.totalDuration() : this._totalDuration,
						v = this._time,
						m = this._totalTime,
						g = this._cycle,
						y = this._duration,
						b = this._rawPrevTime;
					if (
						(e >= d
							? ((this._totalTime = d),
							  (this._cycle = this._repeat),
							  this._yoyo && 0 !== (1 & this._cycle)
									? ((this._time = 0),
									  (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0))
									: ((this._time = y),
									  (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1)),
							  this._reversed || ((r = !0), (i = "onComplete")),
							  0 === y &&
									(this._initted || !this.vars.lazy || n) &&
									(this._startTime === this._timeline._duration && (e = 0),
									(0 === e || 0 > b || b === s) &&
										b !== e &&
										((n = !0), b > s && (i = "onReverseComplete")),
									(this._rawPrevTime = p = !t || e || b === e ? e : s)))
							: 1e-7 > e
							? ((this._totalTime = this._time = this._cycle = 0),
							  (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
							  (0 !== m || (0 === y && b > 0 && b !== s)) &&
									((i = "onReverseComplete"), (r = this._reversed)),
							  0 > e &&
									((this._active = !1),
									0 === y &&
										(this._initted || !this.vars.lazy || n) &&
										(b >= 0 && (n = !0), (this._rawPrevTime = p = !t || e || b === e ? e : s))),
							  this._initted || (n = !0))
							: ((this._totalTime = this._time = e),
							  0 !== this._repeat &&
									((a = y + this._repeatDelay),
									(this._cycle = (this._totalTime / a) >> 0),
									0 !== this._cycle && this._cycle === this._totalTime / a && this._cycle--,
									(this._time = this._totalTime - this._cycle * a),
									this._yoyo && 0 !== (1 & this._cycle) && (this._time = y - this._time),
									this._time > y ? (this._time = y) : 0 > this._time && (this._time = 0)),
							  this._easeType
									? ((f = this._time / y),
									  (c = this._easeType),
									  (h = this._easePower),
									  (1 === c || (3 === c && f >= 0.5)) && (f = 1 - f),
									  3 === c && (f *= 2),
									  1 === h
											? (f *= f)
											: 2 === h
											? (f *= f * f)
											: 3 === h
											? (f *= f * f * f)
											: 4 === h && (f *= f * f * f * f),
									  (this.ratio =
											1 === c ? 1 - f : 2 === c ? f : 0.5 > this._time / y ? f / 2 : 1 - f / 2))
									: (this.ratio = this._ease.getRatio(this._time / y))),
						v === this._time && !n && g === this._cycle)
					)
						return (
							m !== this._totalTime &&
								this._onUpdate &&
								(t ||
									this._onUpdate.apply(
										this.vars.onUpdateScope || this,
										this.vars.onUpdateParams || l
									)),
							void 0
						);
					if (!this._initted) {
						if ((this._init(), !this._initted || this._gc)) return;
						if (
							!n &&
							this._firstPT &&
							((this.vars.lazy !== !1 && this._duration) || (this.vars.lazy && !this._duration))
						)
							return (
								(this._time = v),
								(this._totalTime = m),
								(this._rawPrevTime = b),
								(this._cycle = g),
								o.lazyTweens.push(this),
								(this._lazy = [e, t]),
								void 0
							);
						this._time && !r
							? (this.ratio = this._ease.getRatio(this._time / y))
							: r &&
							  this._ease._calcEnd &&
							  (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
					}
					for (
						this._lazy !== !1 && (this._lazy = !1),
							this._active || (!this._paused && this._time !== v && e >= 0 && (this._active = !0)),
							0 === m &&
								(2 === this._initted && e > 0 && this._init(),
								this._startAt && (e >= 0 ? this._startAt.render(e, t, n) : i || (i = "_dummyGS")),
								this.vars.onStart &&
									(0 !== this._totalTime || 0 === y) &&
									(t ||
										this.vars.onStart.apply(
											this.vars.onStartScope || this,
											this.vars.onStartParams || l
										))),
							u = this._firstPT;
						u;

					)
						u.f ? u.t[u.p](u.c * this.ratio + u.s) : (u.t[u.p] = u.c * this.ratio + u.s),
							(u = u._next);
					this._onUpdate &&
						(0 > e && this._startAt && this._startTime && this._startAt.render(e, t, n),
						t ||
							((this._totalTime !== m || r) &&
								this._onUpdate.apply(
									this.vars.onUpdateScope || this,
									this.vars.onUpdateParams || l
								))),
						this._cycle !== g &&
							(t ||
								this._gc ||
								(this.vars.onRepeat &&
									this.vars.onRepeat.apply(
										this.vars.onRepeatScope || this,
										this.vars.onRepeatParams || l
									))),
						i &&
							(!this._gc || n) &&
							(0 > e &&
								this._startAt &&
								!this._onUpdate &&
								this._startTime &&
								this._startAt.render(e, t, n),
							r &&
								(this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
							!t &&
								this.vars[i] &&
								this.vars[i].apply(this.vars[i + "Scope"] || this, this.vars[i + "Params"] || l),
							0 === y && this._rawPrevTime === s && p !== s && (this._rawPrevTime = 0));
				}),
				(i.to = function (e, t, n) {
					return new i(e, t, n);
				}),
				(i.from = function (e, t, n) {
					return (
						(n.runBackwards = !0), (n.immediateRender = 0 != n.immediateRender), new i(e, t, n)
					);
				}),
				(i.fromTo = function (e, t, n, r) {
					return (
						(r.startAt = n),
						(r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender),
						new i(e, t, r)
					);
				}),
				(i.staggerTo = i.allTo =
					function (e, t, s, o, f, c, h) {
						o = o || 0;
						var p,
							d,
							v,
							m,
							g = s.delay || 0,
							y = [],
							b = function () {
								s.onComplete && s.onComplete.apply(s.onCompleteScope || this, arguments),
									f.apply(h || this, c || l);
							};
						for (
							a(e) || ("string" == typeof e && (e = n.selector(e) || e), u(e) && (e = r(e))),
								e = e || [],
								0 > o && ((e = r(e)), e.reverse(), (o *= -1)),
								p = e.length - 1,
								v = 0;
							p >= v;
							v++
						) {
							d = {};
							for (m in s) d[m] = s[m];
							(d.delay = g),
								v === p && f && (d.onComplete = b),
								(y[v] = new i(e[v], t, d)),
								(g += o);
						}
						return y;
					}),
				(i.staggerFrom = i.allFrom =
					function (e, t, n, r, s, o, u) {
						return (
							(n.runBackwards = !0),
							(n.immediateRender = 0 != n.immediateRender),
							i.staggerTo(e, t, n, r, s, o, u)
						);
					}),
				(i.staggerFromTo = i.allFromTo =
					function (e, t, n, r, s, o, u, a) {
						return (
							(r.startAt = n),
							(r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender),
							i.staggerTo(e, t, r, s, o, u, a)
						);
					}),
				(i.delayedCall = function (e, t, n, r, s) {
					return new i(t, 0, {
						delay: e,
						onComplete: t,
						onCompleteParams: n,
						onCompleteScope: r,
						onReverseComplete: t,
						onReverseCompleteParams: n,
						onReverseCompleteScope: r,
						immediateRender: !1,
						useFrames: s,
						overwrite: 0,
					});
				}),
				(i.set = function (e, t) {
					return new i(e, 0, t);
				}),
				(i.isTweening = function (e) {
					return n.getTweensOf(e, !0).length > 0;
				});
			var c = function (e, t) {
					for (var r = [], i = 0, s = e._first; s; )
						s instanceof n
							? (r[i++] = s)
							: (t && (r[i++] = s), (r = r.concat(c(s, t))), (i = r.length)),
							(s = s._next);
					return r;
				},
				h = (i.getAllTweens = function (t) {
					return c(e._rootTimeline, t).concat(c(e._rootFramesTimeline, t));
				});
			(i.killAll = function (e, n, r, i) {
				null == n && (n = !0), null == r && (r = !0);
				var s,
					o,
					u,
					a = h(0 != i),
					f = a.length,
					l = n && r && i;
				for (u = 0; f > u; u++)
					(o = a[u]),
						(l || o instanceof t || ((s = o.target === o.vars.onComplete) && r) || (n && !s)) &&
							(e ? o.totalTime(o._reversed ? 0 : o.totalDuration()) : o._enabled(!1, !1));
			}),
				(i.killChildTweensOf = function (e, t) {
					if (null != e) {
						var s,
							f,
							l,
							c,
							h,
							p = o.tweenLookup;
						if (("string" == typeof e && (e = n.selector(e) || e), u(e) && (e = r(e)), a(e)))
							for (c = e.length; --c > -1; ) i.killChildTweensOf(e[c], t);
						else {
							s = [];
							for (l in p)
								for (f = p[l].target.parentNode; f; )
									f === e && (s = s.concat(p[l].tweens)), (f = f.parentNode);
							for (h = s.length, c = 0; h > c; c++)
								t && s[c].totalTime(s[c].totalDuration()), s[c]._enabled(!1, !1);
						}
					}
				});
			var p = function (e, n, r, i) {
				(n = n !== !1), (r = r !== !1), (i = i !== !1);
				for (var s, o, u = h(i), a = n && r && i, f = u.length; --f > -1; )
					(o = u[f]),
						(a || o instanceof t || ((s = o.target === o.vars.onComplete) && r) || (n && !s)) &&
							o.paused(e);
			};
			return (
				(i.pauseAll = function (e, t, n) {
					p(!0, e, t, n);
				}),
				(i.resumeAll = function (e, t, n) {
					p(!1, e, t, n);
				}),
				(i.globalTimeScale = function (t) {
					var r = e._rootTimeline,
						i = n.ticker.time;
					return arguments.length
						? ((t = t || s),
						  (r._startTime = i - ((i - r._startTime) * r._timeScale) / t),
						  (r = e._rootFramesTimeline),
						  (i = n.ticker.frame),
						  (r._startTime = i - ((i - r._startTime) * r._timeScale) / t),
						  (r._timeScale = e._rootTimeline._timeScale = t),
						  t)
						: r._timeScale;
				}),
				(f.progress = function (e) {
					return arguments.length
						? this.totalTime(
								this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - e : e) +
									this._cycle * (this._duration + this._repeatDelay),
								!1
						  )
						: this._time / this.duration();
				}),
				(f.totalProgress = function (e) {
					return arguments.length
						? this.totalTime(this.totalDuration() * e, !1)
						: this._totalTime / this.totalDuration();
				}),
				(f.time = function (e, t) {
					return arguments.length
						? (this._dirty && this.totalDuration(),
						  e > this._duration && (e = this._duration),
						  this._yoyo && 0 !== (1 & this._cycle)
								? (e = this._duration - e + this._cycle * (this._duration + this._repeatDelay))
								: 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)),
						  this.totalTime(e, t))
						: this._time;
				}),
				(f.duration = function (t) {
					return arguments.length ? e.prototype.duration.call(this, t) : this._duration;
				}),
				(f.totalDuration = function (e) {
					return arguments.length
						? -1 === this._repeat
							? this
							: this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1))
						: (this._dirty &&
								((this._totalDuration =
									-1 === this._repeat
										? 999999999999
										: this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
								(this._dirty = !1)),
						  this._totalDuration);
				}),
				(f.repeat = function (e) {
					return arguments.length ? ((this._repeat = e), this._uncache(!0)) : this._repeat;
				}),
				(f.repeatDelay = function (e) {
					return arguments.length
						? ((this._repeatDelay = e), this._uncache(!0))
						: this._repeatDelay;
				}),
				(f.yoyo = function (e) {
					return arguments.length ? ((this._yoyo = e), this) : this._yoyo;
				}),
				i
			);
		},
		!0
	),
		_gsScope._gsDefine(
			"TimelineLite",
			["core.Animation", "core.SimpleTimeline", "TweenLite"],
			function (e, t, n) {
				var r = function (e) {
						t.call(this, e),
							(this._labels = {}),
							(this.autoRemoveChildren = this.vars.autoRemoveChildren === !0),
							(this.smoothChildTiming = this.vars.smoothChildTiming === !0),
							(this._sortChildren = !0),
							(this._onUpdate = this.vars.onUpdate);
						var n,
							r,
							i = this.vars;
						for (r in i)
							(n = i[r]),
								a(n) && -1 !== n.join("").indexOf("{self}") && (i[r] = this._swapSelfInParams(n));
						a(i.tweens) && this.add(i.tweens, 0, i.align, i.stagger);
					},
					i = 1e-10,
					s = n._internals,
					o = (r._internals = {}),
					u = s.isSelector,
					a = s.isArray,
					f = s.lazyTweens,
					l = s.lazyRender,
					c = [],
					h = _gsScope._gsDefine.globals,
					p = function (e) {
						var t,
							n = {};
						for (t in e) n[t] = e[t];
						return n;
					},
					d = (o.pauseCallback = function (e, t, n, r) {
						var i = e._timeline,
							s = i._totalTime;
						(!t && this._forcingPlayhead) ||
							i._rawPrevTime === e._startTime ||
							(i.pause(e._startTime),
							t && t.apply(r || i, n || c),
							this._forcingPlayhead && i.seek(s));
					}),
					v = function (e) {
						var t,
							n = [],
							r = e.length;
						for (t = 0; t !== r; n.push(e[t++]));
						return n;
					},
					m = (r.prototype = new t());
				return (
					(r.version = "1.15.1"),
					(m.constructor = r),
					(m.kill()._gc = m._forcingPlayhead = !1),
					(m.to = function (e, t, r, i) {
						var s = (r.repeat && h.TweenMax) || n;
						return t ? this.add(new s(e, t, r), i) : this.set(e, r, i);
					}),
					(m.from = function (e, t, r, i) {
						return this.add(((r.repeat && h.TweenMax) || n).from(e, t, r), i);
					}),
					(m.fromTo = function (e, t, r, i, s) {
						var o = (i.repeat && h.TweenMax) || n;
						return t ? this.add(o.fromTo(e, t, r, i), s) : this.set(e, i, s);
					}),
					(m.staggerTo = function (e, t, i, s, o, a, f, l) {
						var c,
							h = new r({
								onComplete: a,
								onCompleteParams: f,
								onCompleteScope: l,
								smoothChildTiming: this.smoothChildTiming,
							});
						for (
							"string" == typeof e && (e = n.selector(e) || e),
								e = e || [],
								u(e) && (e = v(e)),
								s = s || 0,
								0 > s && ((e = v(e)), e.reverse(), (s *= -1)),
								c = 0;
							e.length > c;
							c++
						)
							i.startAt && (i.startAt = p(i.startAt)), h.to(e[c], t, p(i), c * s);
						return this.add(h, o);
					}),
					(m.staggerFrom = function (e, t, n, r, i, s, o, u) {
						return (
							(n.immediateRender = 0 != n.immediateRender),
							(n.runBackwards = !0),
							this.staggerTo(e, t, n, r, i, s, o, u)
						);
					}),
					(m.staggerFromTo = function (e, t, n, r, i, s, o, u, a) {
						return (
							(r.startAt = n),
							(r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender),
							this.staggerTo(e, t, r, i, s, o, u, a)
						);
					}),
					(m.call = function (e, t, r, i) {
						return this.add(n.delayedCall(0, e, t, r), i);
					}),
					(m.set = function (e, t, r) {
						return (
							(r = this._parseTimeOrLabel(r, 0, !0)),
							null == t.immediateRender && (t.immediateRender = r === this._time && !this._paused),
							this.add(new n(e, 0, t), r)
						);
					}),
					(r.exportRoot = function (e, t) {
						(e = e || {}), null == e.smoothChildTiming && (e.smoothChildTiming = !0);
						var i,
							s,
							o = new r(e),
							u = o._timeline;
						for (
							null == t && (t = !0),
								u._remove(o, !0),
								o._startTime = 0,
								o._rawPrevTime = o._time = o._totalTime = u._time,
								i = u._first;
							i;

						)
							(s = i._next),
								(t && i instanceof n && i.target === i.vars.onComplete) ||
									o.add(i, i._startTime - i._delay),
								(i = s);
						return u.add(o, 0), o;
					}),
					(m.add = function (i, s, o, u) {
						var f, l, c, h, p, d;
						if (
							("number" != typeof s && (s = this._parseTimeOrLabel(s, 0, !0, i)), !(i instanceof e))
						) {
							if (i instanceof Array || (i && i.push && a(i))) {
								for (o = o || "normal", u = u || 0, f = s, l = i.length, c = 0; l > c; c++)
									a((h = i[c])) &&
										(h = new r({
											tweens: h,
										})),
										this.add(h, f),
										"string" != typeof h &&
											"function" != typeof h &&
											("sequence" === o
												? (f = h._startTime + h.totalDuration() / h._timeScale)
												: "start" === o && (h._startTime -= h.delay())),
										(f += u);
								return this._uncache(!0);
							}
							if ("string" == typeof i) return this.addLabel(i, s);
							if ("function" != typeof i)
								throw (
									"Cannot add " +
									i +
									" into the timeline; it is not a tween, timeline, function, or string."
								);
							i = n.delayedCall(0, i);
						}
						if (
							(t.prototype.add.call(this, i, s),
							(this._gc || this._time === this._duration) &&
								!this._paused &&
								this._duration < this.duration())
						)
							for (p = this, d = p.rawTime() > i._startTime; p._timeline; )
								d && p._timeline.smoothChildTiming
									? p.totalTime(p._totalTime, !0)
									: p._gc && p._enabled(!0, !1),
									(p = p._timeline);
						return this;
					}),
					(m.remove = function (t) {
						if (t instanceof e) return this._remove(t, !1);
						if (t instanceof Array || (t && t.push && a(t))) {
							for (var n = t.length; --n > -1; ) this.remove(t[n]);
							return this;
						}
						return "string" == typeof t ? this.removeLabel(t) : this.kill(null, t);
					}),
					(m._remove = function (e, n) {
						t.prototype._remove.call(this, e, n);
						var r = this._last;
						return (
							r
								? this._time > r._startTime + r._totalDuration / r._timeScale &&
								  ((this._time = this.duration()), (this._totalTime = this._totalDuration))
								: (this._time = this._totalTime = this._duration = this._totalDuration = 0),
							this
						);
					}),
					(m.append = function (e, t) {
						return this.add(e, this._parseTimeOrLabel(null, t, !0, e));
					}),
					(m.insert = m.insertMultiple =
						function (e, t, n, r) {
							return this.add(e, t || 0, n, r);
						}),
					(m.appendMultiple = function (e, t, n, r) {
						return this.add(e, this._parseTimeOrLabel(null, t, !0, e), n, r);
					}),
					(m.addLabel = function (e, t) {
						return (this._labels[e] = this._parseTimeOrLabel(t)), this;
					}),
					(m.addPause = function (e, t, r, i) {
						var s = n.delayedCall(0, d, ["{self}", t, r, i], this);
						return (s.data = "isPause"), this.add(s, e);
					}),
					(m.removeLabel = function (e) {
						return delete this._labels[e], this;
					}),
					(m.getLabelTime = function (e) {
						return null != this._labels[e] ? this._labels[e] : -1;
					}),
					(m._parseTimeOrLabel = function (t, n, r, i) {
						var s;
						if (i instanceof e && i.timeline === this) this.remove(i);
						else if (i && (i instanceof Array || (i.push && a(i))))
							for (s = i.length; --s > -1; )
								i[s] instanceof e && i[s].timeline === this && this.remove(i[s]);
						if ("string" == typeof n)
							return this._parseTimeOrLabel(
								n,
								r && "number" == typeof t && null == this._labels[n] ? t - this.duration() : 0,
								r
							);
						if (((n = n || 0), "string" != typeof t || (!isNaN(t) && null == this._labels[t])))
							null == t && (t = this.duration());
						else {
							if (((s = t.indexOf("=")), -1 === s))
								return null == this._labels[t]
									? r
										? (this._labels[t] = this.duration() + n)
										: n
									: this._labels[t] + n;
							(n = parseInt(t.charAt(s - 1) + "1", 10) * Number(t.substr(s + 1))),
								(t = s > 1 ? this._parseTimeOrLabel(t.substr(0, s - 1), 0, r) : this.duration());
						}
						return Number(t) + n;
					}),
					(m.seek = function (e, t) {
						return this.totalTime("number" == typeof e ? e : this._parseTimeOrLabel(e), t !== !1);
					}),
					(m.stop = function () {
						return this.paused(!0);
					}),
					(m.gotoAndPlay = function (e, t) {
						return this.play(e, t);
					}),
					(m.gotoAndStop = function (e, t) {
						return this.pause(e, t);
					}),
					(m.render = function (e, t, n) {
						this._gc && this._enabled(!0, !1);
						var r,
							s,
							o,
							u,
							a,
							h = this._dirty ? this.totalDuration() : this._totalDuration,
							p = this._time,
							d = this._startTime,
							v = this._timeScale,
							m = this._paused;
						if (
							(e >= h
								? ((this._totalTime = this._time = h),
								  this._reversed ||
										this._hasPausedChild() ||
										((s = !0),
										(u = "onComplete"),
										0 === this._duration &&
											(0 === e || 0 > this._rawPrevTime || this._rawPrevTime === i) &&
											this._rawPrevTime !== e &&
											this._first &&
											((a = !0), this._rawPrevTime > i && (u = "onReverseComplete"))),
								  (this._rawPrevTime =
										this._duration || !t || e || this._rawPrevTime === e ? e : i),
								  (e = h + 1e-4))
								: 1e-7 > e
								? ((this._totalTime = this._time = 0),
								  (0 !== p ||
										(0 === this._duration &&
											this._rawPrevTime !== i &&
											(this._rawPrevTime > 0 || (0 > e && this._rawPrevTime >= 0)))) &&
										((u = "onReverseComplete"), (s = this._reversed)),
								  0 > e
										? ((this._active = !1),
										  this._rawPrevTime >= 0 && this._first && (a = !0),
										  (this._rawPrevTime = e))
										: ((this._rawPrevTime =
												this._duration || !t || e || this._rawPrevTime === e ? e : i),
										  (e = 0),
										  this._initted || (a = !0)))
								: (this._totalTime = this._time = this._rawPrevTime = e),
							(this._time !== p && this._first) || n || a)
						) {
							if (
								(this._initted || (this._initted = !0),
								this._active || (!this._paused && this._time !== p && e > 0 && (this._active = !0)),
								0 === p &&
									this.vars.onStart &&
									0 !== this._time &&
									(t ||
										this.vars.onStart.apply(
											this.vars.onStartScope || this,
											this.vars.onStartParams || c
										)),
								this._time >= p)
							)
								for (r = this._first; r && ((o = r._next), !this._paused || m); )
									(r._active || (r._startTime <= this._time && !r._paused && !r._gc)) &&
										(r._reversed
											? r.render(
													(r._dirty ? r.totalDuration() : r._totalDuration) -
														(e - r._startTime) * r._timeScale,
													t,
													n
											  )
											: r.render((e - r._startTime) * r._timeScale, t, n)),
										(r = o);
							else
								for (r = this._last; r && ((o = r._prev), !this._paused || m); )
									(r._active || (p >= r._startTime && !r._paused && !r._gc)) &&
										(r._reversed
											? r.render(
													(r._dirty ? r.totalDuration() : r._totalDuration) -
														(e - r._startTime) * r._timeScale,
													t,
													n
											  )
											: r.render((e - r._startTime) * r._timeScale, t, n)),
										(r = o);
							this._onUpdate &&
								(t ||
									(f.length && l(),
									this._onUpdate.apply(
										this.vars.onUpdateScope || this,
										this.vars.onUpdateParams || c
									))),
								u &&
									(this._gc ||
										((d === this._startTime || v !== this._timeScale) &&
											(0 === this._time || h >= this.totalDuration()) &&
											(s &&
												(f.length && l(),
												this._timeline.autoRemoveChildren && this._enabled(!1, !1),
												(this._active = !1)),
											!t &&
												this.vars[u] &&
												this.vars[u].apply(
													this.vars[u + "Scope"] || this,
													this.vars[u + "Params"] || c
												))));
						}
					}),
					(m._hasPausedChild = function () {
						for (var e = this._first; e; ) {
							if (e._paused || (e instanceof r && e._hasPausedChild())) return !0;
							e = e._next;
						}
						return !1;
					}),
					(m.getChildren = function (e, t, r, i) {
						i = i || -9999999999;
						for (var s = [], o = this._first, u = 0; o; )
							i > o._startTime ||
								(o instanceof n
									? t !== !1 && (s[u++] = o)
									: (r !== !1 && (s[u++] = o),
									  e !== !1 && ((s = s.concat(o.getChildren(!0, t, r))), (u = s.length)))),
								(o = o._next);
						return s;
					}),
					(m.getTweensOf = function (e, t) {
						var r,
							i,
							s = this._gc,
							o = [],
							u = 0;
						for (s && this._enabled(!0, !0), r = n.getTweensOf(e), i = r.length; --i > -1; )
							(r[i].timeline === this || (t && this._contains(r[i]))) && (o[u++] = r[i]);
						return s && this._enabled(!1, !0), o;
					}),
					(m.recent = function () {
						return this._recent;
					}),
					(m._contains = function (e) {
						for (var t = e.timeline; t; ) {
							if (t === this) return !0;
							t = t.timeline;
						}
						return !1;
					}),
					(m.shiftChildren = function (e, t, n) {
						n = n || 0;
						for (var r, i = this._first, s = this._labels; i; )
							i._startTime >= n && (i._startTime += e), (i = i._next);
						if (t) for (r in s) s[r] >= n && (s[r] += e);
						return this._uncache(!0);
					}),
					(m._kill = function (e, t) {
						if (!e && !t) return this._enabled(!1, !1);
						for (
							var n = t ? this.getTweensOf(t) : this.getChildren(!0, !0, !1), r = n.length, i = !1;
							--r > -1;

						)
							n[r]._kill(e, t) && (i = !0);
						return i;
					}),
					(m.clear = function (e) {
						var t = this.getChildren(!1, !0, !0),
							n = t.length;
						for (this._time = this._totalTime = 0; --n > -1; ) t[n]._enabled(!1, !1);
						return e !== !1 && (this._labels = {}), this._uncache(!0);
					}),
					(m.invalidate = function () {
						for (var t = this._first; t; ) t.invalidate(), (t = t._next);
						return e.prototype.invalidate.call(this);
					}),
					(m._enabled = function (e, n) {
						if (e === this._gc) for (var r = this._first; r; ) r._enabled(e, !0), (r = r._next);
						return t.prototype._enabled.call(this, e, n);
					}),
					(m.totalTime = function () {
						this._forcingPlayhead = !0;
						var t = e.prototype.totalTime.apply(this, arguments);
						return (this._forcingPlayhead = !1), t;
					}),
					(m.duration = function (e) {
						return arguments.length
							? (0 !== this.duration() && 0 !== e && this.timeScale(this._duration / e), this)
							: (this._dirty && this.totalDuration(), this._duration);
					}),
					(m.totalDuration = function (e) {
						if (!arguments.length) {
							if (this._dirty) {
								for (var t, n, r = 0, i = this._last, s = 999999999999; i; )
									(t = i._prev),
										i._dirty && i.totalDuration(),
										i._startTime > s && this._sortChildren && !i._paused
											? this.add(i, i._startTime - i._delay)
											: (s = i._startTime),
										0 > i._startTime &&
											!i._paused &&
											((r -= i._startTime),
											this._timeline.smoothChildTiming &&
												(this._startTime += i._startTime / this._timeScale),
											this.shiftChildren(-i._startTime, !1, -9999999999),
											(s = 0)),
										(n = i._startTime + i._totalDuration / i._timeScale),
										n > r && (r = n),
										(i = t);
								(this._duration = this._totalDuration = r), (this._dirty = !1);
							}
							return this._totalDuration;
						}
						return (
							0 !== this.totalDuration() && 0 !== e && this.timeScale(this._totalDuration / e), this
						);
					}),
					(m.usesFrames = function () {
						for (var t = this._timeline; t._timeline; ) t = t._timeline;
						return t === e._rootFramesTimeline;
					}),
					(m.rawTime = function () {
						return this._paused
							? this._totalTime
							: (this._timeline.rawTime() - this._startTime) * this._timeScale;
					}),
					r
				);
			},
			!0
		),
		_gsScope._gsDefine(
			"TimelineMax",
			["TimelineLite", "TweenLite", "easing.Ease"],
			function (e, t, n) {
				var r = function (t) {
						e.call(this, t),
							(this._repeat = this.vars.repeat || 0),
							(this._repeatDelay = this.vars.repeatDelay || 0),
							(this._cycle = 0),
							(this._yoyo = this.vars.yoyo === !0),
							(this._dirty = !0);
					},
					i = 1e-10,
					s = [],
					o = t._internals,
					u = o.lazyTweens,
					a = o.lazyRender,
					f = new n(null, null, 1, 0),
					l = (r.prototype = new e());
				return (
					(l.constructor = r),
					(l.kill()._gc = !1),
					(r.version = "1.15.1"),
					(l.invalidate = function () {
						return (
							(this._yoyo = this.vars.yoyo === !0),
							(this._repeat = this.vars.repeat || 0),
							(this._repeatDelay = this.vars.repeatDelay || 0),
							this._uncache(!0),
							e.prototype.invalidate.call(this)
						);
					}),
					(l.addCallback = function (e, n, r, i) {
						return this.add(t.delayedCall(0, e, r, i), n);
					}),
					(l.removeCallback = function (e, t) {
						if (e)
							if (null == t) this._kill(null, e);
							else
								for (
									var n = this.getTweensOf(e, !1), r = n.length, i = this._parseTimeOrLabel(t);
									--r > -1;

								)
									n[r]._startTime === i && n[r]._enabled(!1, !1);
						return this;
					}),
					(l.removePause = function (t) {
						return this.removeCallback(e._internals.pauseCallback, t);
					}),
					(l.tweenTo = function (e, n) {
						n = n || {};
						var r,
							i,
							o,
							u = {
								ease: f,
								useFrames: this.usesFrames(),
								immediateRender: !1,
							};
						for (i in n) u[i] = n[i];
						return (
							(u.time = this._parseTimeOrLabel(e)),
							(r = Math.abs(Number(u.time) - this._time) / this._timeScale || 0.001),
							(o = new t(this, r, u)),
							(u.onStart = function () {
								o.target.paused(!0),
									o.vars.time !== o.target.time() &&
										r === o.duration() &&
										o.duration(Math.abs(o.vars.time - o.target.time()) / o.target._timeScale),
									n.onStart && n.onStart.apply(n.onStartScope || o, n.onStartParams || s);
							}),
							o
						);
					}),
					(l.tweenFromTo = function (e, t, n) {
						(n = n || {}),
							(e = this._parseTimeOrLabel(e)),
							(n.startAt = {
								onComplete: this.seek,
								onCompleteParams: [e],
								onCompleteScope: this,
							}),
							(n.immediateRender = n.immediateRender !== !1);
						var r = this.tweenTo(t, n);
						return r.duration(Math.abs(r.vars.time - e) / this._timeScale || 0.001);
					}),
					(l.render = function (e, t, n) {
						this._gc && this._enabled(!0, !1);
						var r,
							o,
							f,
							l,
							c,
							p,
							d = this._dirty ? this.totalDuration() : this._totalDuration,
							v = this._duration,
							m = this._time,
							g = this._totalTime,
							y = this._startTime,
							b = this._timeScale,
							w = this._rawPrevTime,
							E = this._paused,
							S = this._cycle;
						if (
							(e >= d
								? (this._locked || ((this._totalTime = d), (this._cycle = this._repeat)),
								  this._reversed ||
										this._hasPausedChild() ||
										((o = !0),
										(l = "onComplete"),
										0 === this._duration &&
											(0 === e || 0 > w || w === i) &&
											w !== e &&
											this._first &&
											((c = !0), w > i && (l = "onReverseComplete"))),
								  (this._rawPrevTime =
										this._duration || !t || e || this._rawPrevTime === e ? e : i),
								  this._yoyo && 0 !== (1 & this._cycle)
										? (this._time = e = 0)
										: ((this._time = v), (e = v + 1e-4)))
								: 1e-7 > e
								? (this._locked || (this._totalTime = this._cycle = 0),
								  (this._time = 0),
								  (0 !== m ||
										(0 === v && w !== i && (w > 0 || (0 > e && w >= 0)) && !this._locked)) &&
										((l = "onReverseComplete"), (o = this._reversed)),
								  0 > e
										? ((this._active = !1),
										  w >= 0 && this._first && (c = !0),
										  (this._rawPrevTime = e))
										: ((this._rawPrevTime = v || !t || e || this._rawPrevTime === e ? e : i),
										  (e = 0),
										  this._initted || (c = !0)))
								: (0 === v && 0 > w && (c = !0),
								  (this._time = this._rawPrevTime = e),
								  this._locked ||
										((this._totalTime = e),
										0 !== this._repeat &&
											((p = v + this._repeatDelay),
											(this._cycle = (this._totalTime / p) >> 0),
											0 !== this._cycle && this._cycle === this._totalTime / p && this._cycle--,
											(this._time = this._totalTime - this._cycle * p),
											this._yoyo && 0 !== (1 & this._cycle) && (this._time = v - this._time),
											this._time > v
												? ((this._time = v), (e = v + 1e-4))
												: 0 > this._time
												? (this._time = e = 0)
												: (e = this._time)))),
							this._cycle !== S && !this._locked)
						) {
							var x = this._yoyo && 0 !== (1 & S),
								T = x === (this._yoyo && 0 !== (1 & this._cycle)),
								N = this._totalTime,
								C = this._cycle,
								k = this._rawPrevTime,
								L = this._time;
							if (
								((this._totalTime = S * v),
								S > this._cycle ? (x = !x) : (this._totalTime += v),
								(this._time = m),
								(this._rawPrevTime = 0 === v ? w - 1e-4 : w),
								(this._cycle = S),
								(this._locked = !0),
								(m = x ? 0 : v),
								this.render(m, t, 0 === v),
								t ||
									this._gc ||
									(this.vars.onRepeat &&
										this.vars.onRepeat.apply(
											this.vars.onRepeatScope || this,
											this.vars.onRepeatParams || s
										)),
								T && ((m = x ? v + 1e-4 : -0.0001), this.render(m, !0, !1)),
								(this._locked = !1),
								this._paused && !E)
							)
								return;
							(this._time = L), (this._totalTime = N), (this._cycle = C), (this._rawPrevTime = k);
						}
						if (!((this._time !== m && this._first) || n || c))
							return (
								g !== this._totalTime &&
									this._onUpdate &&
									(t ||
										this._onUpdate.apply(
											this.vars.onUpdateScope || this,
											this.vars.onUpdateParams || s
										)),
								void 0
							);
						if (
							(this._initted || (this._initted = !0),
							this._active ||
								(!this._paused && this._totalTime !== g && e > 0 && (this._active = !0)),
							0 === g &&
								this.vars.onStart &&
								0 !== this._totalTime &&
								(t ||
									this.vars.onStart.apply(
										this.vars.onStartScope || this,
										this.vars.onStartParams || s
									)),
							this._time >= m)
						)
							for (r = this._first; r && ((f = r._next), !this._paused || E); )
								(r._active || (r._startTime <= this._time && !r._paused && !r._gc)) &&
									(r._reversed
										? r.render(
												(r._dirty ? r.totalDuration() : r._totalDuration) -
													(e - r._startTime) * r._timeScale,
												t,
												n
										  )
										: r.render((e - r._startTime) * r._timeScale, t, n)),
									(r = f);
						else
							for (r = this._last; r && ((f = r._prev), !this._paused || E); )
								(r._active || (m >= r._startTime && !r._paused && !r._gc)) &&
									(r._reversed
										? r.render(
												(r._dirty ? r.totalDuration() : r._totalDuration) -
													(e - r._startTime) * r._timeScale,
												t,
												n
										  )
										: r.render((e - r._startTime) * r._timeScale, t, n)),
									(r = f);
						this._onUpdate &&
							(t ||
								(u.length && a(),
								this._onUpdate.apply(
									this.vars.onUpdateScope || this,
									this.vars.onUpdateParams || s
								))),
							l &&
								(this._locked ||
									this._gc ||
									((y === this._startTime || b !== this._timeScale) &&
										(0 === this._time || d >= this.totalDuration()) &&
										(o &&
											(u.length && a(),
											this._timeline.autoRemoveChildren && this._enabled(!1, !1),
											(this._active = !1)),
										!t &&
											this.vars[l] &&
											this.vars[l].apply(
												this.vars[l + "Scope"] || this,
												this.vars[l + "Params"] || s
											))));
					}),
					(l.getActive = function (e, t, n) {
						null == e && (e = !0), null == t && (t = !0), null == n && (n = !1);
						var r,
							i,
							s = [],
							o = this.getChildren(e, t, n),
							u = 0,
							a = o.length;
						for (r = 0; a > r; r++) (i = o[r]), i.isActive() && (s[u++] = i);
						return s;
					}),
					(l.getLabelAfter = function (e) {
						e || (0 !== e && (e = this._time));
						var t,
							n = this.getLabelsArray(),
							r = n.length;
						for (t = 0; r > t; t++) if (n[t].time > e) return n[t].name;
						return null;
					}),
					(l.getLabelBefore = function (e) {
						null == e && (e = this._time);
						for (var t = this.getLabelsArray(), n = t.length; --n > -1; )
							if (e > t[n].time) return t[n].name;
						return null;
					}),
					(l.getLabelsArray = function () {
						var e,
							t = [],
							n = 0;
						for (e in this._labels)
							t[n++] = {
								time: this._labels[e],
								name: e,
							};
						return (
							t.sort(function (e, t) {
								return e.time - t.time;
							}),
							t
						);
					}),
					(l.progress = function (e, t) {
						return arguments.length
							? this.totalTime(
									this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - e : e) +
										this._cycle * (this._duration + this._repeatDelay),
									t
							  )
							: this._time / this.duration();
					}),
					(l.totalProgress = function (e, t) {
						return arguments.length
							? this.totalTime(this.totalDuration() * e, t)
							: this._totalTime / this.totalDuration();
					}),
					(l.totalDuration = function (t) {
						return arguments.length
							? -1 === this._repeat
								? this
								: this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1))
							: (this._dirty &&
									(e.prototype.totalDuration.call(this),
									(this._totalDuration =
										-1 === this._repeat
											? 999999999999
											: this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat)),
							  this._totalDuration);
					}),
					(l.time = function (e, t) {
						return arguments.length
							? (this._dirty && this.totalDuration(),
							  e > this._duration && (e = this._duration),
							  this._yoyo && 0 !== (1 & this._cycle)
									? (e = this._duration - e + this._cycle * (this._duration + this._repeatDelay))
									: 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)),
							  this.totalTime(e, t))
							: this._time;
					}),
					(l.repeat = function (e) {
						return arguments.length ? ((this._repeat = e), this._uncache(!0)) : this._repeat;
					}),
					(l.repeatDelay = function (e) {
						return arguments.length
							? ((this._repeatDelay = e), this._uncache(!0))
							: this._repeatDelay;
					}),
					(l.yoyo = function (e) {
						return arguments.length ? ((this._yoyo = e), this) : this._yoyo;
					}),
					(l.currentLabel = function (e) {
						return arguments.length ? this.seek(e, !0) : this.getLabelBefore(this._time + 1e-8);
					}),
					r
				);
			},
			!0
		),
		(function () {
			var e = 180 / Math.PI,
				t = [],
				n = [],
				r = [],
				i = {},
				s = _gsScope._gsDefine.globals,
				o = function (e, t, n, r) {
					(this.a = e),
						(this.b = t),
						(this.c = n),
						(this.d = r),
						(this.da = r - e),
						(this.ca = n - e),
						(this.ba = t - e);
				},
				u =
					",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
				a = function (e, t, n, r) {
					var i = {
							a: e,
						},
						s = {},
						o = {},
						u = {
							c: r,
						},
						a = (e + t) / 2,
						f = (t + n) / 2,
						l = (n + r) / 2,
						c = (a + f) / 2,
						h = (f + l) / 2,
						p = (h - c) / 8;
					return (
						(i.b = a + (e - a) / 4),
						(s.b = c + p),
						(i.c = s.a = (i.b + s.b) / 2),
						(s.c = o.a = (c + h) / 2),
						(o.b = h - p),
						(u.b = l + (r - l) / 4),
						(o.c = u.a = (o.b + u.b) / 2),
						[i, s, o, u]
					);
				},
				f = function (e, i, s, o, u) {
					var f,
						l,
						c,
						h,
						p,
						d,
						v,
						m,
						g,
						y,
						b,
						w,
						E,
						S = e.length - 1,
						x = 0,
						T = e[0].a;
					for (f = 0; S > f; f++)
						(p = e[x]),
							(l = p.a),
							(c = p.d),
							(h = e[x + 1].d),
							u
								? ((b = t[f]),
								  (w = n[f]),
								  (E = (0.25 * (w + b) * i) / (o ? 0.5 : r[f] || 0.5)),
								  (d = c - (c - l) * (o ? 0.5 * i : 0 !== b ? E / b : 0)),
								  (v = c + (h - c) * (o ? 0.5 * i : 0 !== w ? E / w : 0)),
								  (m = c - (d + (((v - d) * ((3 * b) / (b + w) + 0.5)) / 4 || 0))))
								: ((d = c - 0.5 * (c - l) * i), (v = c + 0.5 * (h - c) * i), (m = c - (d + v) / 2)),
							(d += m),
							(v += m),
							(p.c = g = d),
							(p.b = 0 !== f ? T : (T = p.a + 0.6 * (p.c - p.a))),
							(p.da = c - l),
							(p.ca = g - l),
							(p.ba = T - l),
							s ? ((y = a(l, T, g, c)), e.splice(x, 1, y[0], y[1], y[2], y[3]), (x += 4)) : x++,
							(T = v);
					(p = e[x]),
						(p.b = T),
						(p.c = T + 0.4 * (p.d - T)),
						(p.da = p.d - p.a),
						(p.ca = p.c - p.a),
						(p.ba = T - p.a),
						s && ((y = a(p.a, T, p.c, p.d)), e.splice(x, 1, y[0], y[1], y[2], y[3]));
				},
				l = function (e, r, i, s) {
					var u,
						a,
						f,
						l,
						c,
						h,
						p = [];
					if (s)
						for (e = [s].concat(e), a = e.length; --a > -1; )
							"string" == typeof (h = e[a][r]) &&
								"=" === h.charAt(1) &&
								(e[a][r] = s[r] + Number(h.charAt(0) + h.substr(2)));
					if (((u = e.length - 2), 0 > u))
						return (p[0] = new o(e[0][r], 0, 0, e[-1 > u ? 0 : 1][r])), p;
					for (a = 0; u > a; a++)
						(f = e[a][r]),
							(l = e[a + 1][r]),
							(p[a] = new o(f, 0, 0, l)),
							i &&
								((c = e[a + 2][r]),
								(t[a] = (t[a] || 0) + (l - f) * (l - f)),
								(n[a] = (n[a] || 0) + (c - l) * (c - l)));
					return (p[a] = new o(e[a][r], 0, 0, e[a + 1][r])), p;
				},
				c = function (e, s, o, a, c, h) {
					var p,
						d,
						v,
						m,
						g,
						y,
						b,
						w,
						E = {},
						S = [],
						x = h || e[0];
					(c = "string" == typeof c ? "," + c + "," : u), null == s && (s = 1);
					for (d in e[0]) S.push(d);
					if (e.length > 1) {
						for (w = e[e.length - 1], b = !0, p = S.length; --p > -1; )
							if (((d = S[p]), Math.abs(x[d] - w[d]) > 0.05)) {
								b = !1;
								break;
							}
						b && ((e = e.concat()), h && e.unshift(h), e.push(e[1]), (h = e[e.length - 3]));
					}
					for (t.length = n.length = r.length = 0, p = S.length; --p > -1; )
						(d = S[p]), (i[d] = -1 !== c.indexOf("," + d + ",")), (E[d] = l(e, d, i[d], h));
					for (p = t.length; --p > -1; ) (t[p] = Math.sqrt(t[p])), (n[p] = Math.sqrt(n[p]));
					if (!a) {
						for (p = S.length; --p > -1; )
							if (i[d])
								for (v = E[S[p]], y = v.length - 1, m = 0; y > m; m++)
									(g = v[m + 1].da / n[m] + v[m].da / t[m]), (r[m] = (r[m] || 0) + g * g);
						for (p = r.length; --p > -1; ) r[p] = Math.sqrt(r[p]);
					}
					for (p = S.length, m = o ? 4 : 1; --p > -1; )
						(d = S[p]),
							(v = E[d]),
							f(v, s, o, a, i[d]),
							b && (v.splice(0, m), v.splice(v.length - m, m));
					return E;
				},
				h = function (e, t, n) {
					t = t || "soft";
					var r,
						i,
						s,
						u,
						a,
						f,
						l,
						c,
						h,
						p,
						d,
						v = {},
						m = "cubic" === t ? 3 : 2,
						g = "soft" === t,
						y = [];
					if ((g && n && (e = [n].concat(e)), null == e || m + 1 > e.length))
						throw "invalid Bezier data";
					for (h in e[0]) y.push(h);
					for (f = y.length; --f > -1; ) {
						for (h = y[f], v[h] = a = [], p = 0, c = e.length, l = 0; c > l; l++)
							(r =
								null == n
									? e[l][h]
									: "string" == typeof (d = e[l][h]) && "=" === d.charAt(1)
									? n[h] + Number(d.charAt(0) + d.substr(2))
									: Number(d)),
								g && l > 1 && c - 1 > l && (a[p++] = (r + a[p - 2]) / 2),
								(a[p++] = r);
						for (c = p - m + 1, p = 0, l = 0; c > l; l += m)
							(r = a[l]),
								(i = a[l + 1]),
								(s = a[l + 2]),
								(u = 2 === m ? 0 : a[l + 3]),
								(a[p++] = d =
									3 === m ? new o(r, i, s, u) : new o(r, (2 * i + r) / 3, (2 * i + s) / 3, s));
						a.length = p;
					}
					return v;
				},
				p = function (e, t, n) {
					for (var r, i, s, o, u, a, f, l, c, h, p, d = 1 / n, v = e.length; --v > -1; )
						for (
							h = e[v], s = h.a, o = h.d - s, u = h.c - s, a = h.b - s, r = i = 0, l = 1;
							n >= l;
							l++
						)
							(f = d * l),
								(c = 1 - f),
								(r = i - (i = (f * f * o + 3 * c * (f * u + c * a)) * f)),
								(p = v * n + l - 1),
								(t[p] = (t[p] || 0) + r * r);
				},
				d = function (e, t) {
					t = t >> 0 || 6;
					var n,
						r,
						i,
						s,
						o = [],
						u = [],
						a = 0,
						f = 0,
						l = t - 1,
						c = [],
						h = [];
					for (n in e) p(e[n], o, t);
					for (i = o.length, r = 0; i > r; r++)
						(a += Math.sqrt(o[r])),
							(s = r % t),
							(h[s] = a),
							s === l && ((f += a), (s = (r / t) >> 0), (c[s] = h), (u[s] = f), (a = 0), (h = []));
					return {
						length: f,
						lengths: u,
						segments: c,
					};
				},
				v = _gsScope._gsDefine.plugin({
					propName: "bezier",
					priority: -1,
					version: "1.3.4",
					API: 2,
					global: !0,
					init: function (e, t, n) {
						(this._target = e),
							t instanceof Array &&
								(t = {
									values: t,
								}),
							(this._func = {}),
							(this._round = {}),
							(this._props = []),
							(this._timeRes = null == t.timeResolution ? 6 : parseInt(t.timeResolution, 10));
						var r,
							i,
							s,
							o,
							u,
							a = t.values || [],
							f = {},
							l = a[0],
							p = t.autoRotate || n.vars.orientToBezier;
						this._autoRotate = p
							? p instanceof Array
								? p
								: [["x", "y", "rotation", p === !0 ? 0 : Number(p) || 0]]
							: null;
						for (r in l) this._props.push(r);
						for (s = this._props.length; --s > -1; )
							(r = this._props[s]),
								this._overwriteProps.push(r),
								(i = this._func[r] = "function" == typeof e[r]),
								(f[r] = i
									? e[
											r.indexOf("set") || "function" != typeof e["get" + r.substr(3)]
												? r
												: "get" + r.substr(3)
									  ]()
									: parseFloat(e[r])),
								u || (f[r] !== a[0][r] && (u = f));
						if (
							((this._beziers =
								"cubic" !== t.type && "quadratic" !== t.type && "soft" !== t.type
									? c(
											a,
											isNaN(t.curviness) ? 1 : t.curviness,
											!1,
											"thruBasic" === t.type,
											t.correlate,
											u
									  )
									: h(a, t.type, f)),
							(this._segCount = this._beziers[r].length),
							this._timeRes)
						) {
							var v = d(this._beziers, this._timeRes);
							(this._length = v.length),
								(this._lengths = v.lengths),
								(this._segments = v.segments),
								(this._l1 = this._li = this._s1 = this._si = 0),
								(this._l2 = this._lengths[0]),
								(this._curSeg = this._segments[0]),
								(this._s2 = this._curSeg[0]),
								(this._prec = 1 / this._curSeg.length);
						}
						if ((p = this._autoRotate))
							for (
								this._initialRotations = [],
									p[0] instanceof Array || (this._autoRotate = p = [p]),
									s = p.length;
								--s > -1;

							) {
								for (o = 0; 3 > o; o++)
									(r = p[s][o]),
										(this._func[r] =
											"function" == typeof e[r]
												? e[
														r.indexOf("set") || "function" != typeof e["get" + r.substr(3)]
															? r
															: "get" + r.substr(3)
												  ]
												: !1);
								(r = p[s][2]),
									(this._initialRotations[s] = this._func[r]
										? this._func[r].call(this._target)
										: this._target[r]);
							}
						return (this._startRatio = n.vars.runBackwards ? 1 : 0), !0;
					},
					set: function (t) {
						var n,
							r,
							i,
							s,
							o,
							u,
							a,
							f,
							l,
							c,
							h = this._segCount,
							p = this._func,
							d = this._target,
							v = t !== this._startRatio;
						if (this._timeRes) {
							if (
								((l = this._lengths),
								(c = this._curSeg),
								(t *= this._length),
								(i = this._li),
								t > this._l2 && h - 1 > i)
							) {
								for (f = h - 1; f > i && t >= (this._l2 = l[++i]); );
								(this._l1 = l[i - 1]),
									(this._li = i),
									(this._curSeg = c = this._segments[i]),
									(this._s2 = c[(this._s1 = this._si = 0)]);
							} else if (this._l1 > t && i > 0) {
								for (; i > 0 && (this._l1 = l[--i]) >= t; );
								0 === i && this._l1 > t ? (this._l1 = 0) : i++,
									(this._l2 = l[i]),
									(this._li = i),
									(this._curSeg = c = this._segments[i]),
									(this._s1 = c[(this._si = c.length - 1) - 1] || 0),
									(this._s2 = c[this._si]);
							}
							if (((n = i), (t -= this._l1), (i = this._si), t > this._s2 && c.length - 1 > i)) {
								for (f = c.length - 1; f > i && t >= (this._s2 = c[++i]); );
								(this._s1 = c[i - 1]), (this._si = i);
							} else if (this._s1 > t && i > 0) {
								for (; i > 0 && (this._s1 = c[--i]) >= t; );
								0 === i && this._s1 > t ? (this._s1 = 0) : i++, (this._s2 = c[i]), (this._si = i);
							}
							u = (i + (t - this._s1) / (this._s2 - this._s1)) * this._prec;
						} else (n = 0 > t ? 0 : t >= 1 ? h - 1 : (h * t) >> 0), (u = (t - n * (1 / h)) * h);
						for (r = 1 - u, i = this._props.length; --i > -1; )
							(s = this._props[i]),
								(o = this._beziers[s][n]),
								(a = (u * u * o.da + 3 * r * (u * o.ca + r * o.ba)) * u + o.a),
								this._round[s] && (a = Math.round(a)),
								p[s] ? d[s](a) : (d[s] = a);
						if (this._autoRotate) {
							var m,
								g,
								y,
								b,
								w,
								E,
								S,
								x = this._autoRotate;
							for (i = x.length; --i > -1; )
								(s = x[i][2]),
									(E = x[i][3] || 0),
									(S = x[i][4] === !0 ? 1 : e),
									(o = this._beziers[x[i][0]]),
									(m = this._beziers[x[i][1]]),
									o &&
										m &&
										((o = o[n]),
										(m = m[n]),
										(g = o.a + (o.b - o.a) * u),
										(b = o.b + (o.c - o.b) * u),
										(g += (b - g) * u),
										(b += (o.c + (o.d - o.c) * u - b) * u),
										(y = m.a + (m.b - m.a) * u),
										(w = m.b + (m.c - m.b) * u),
										(y += (w - y) * u),
										(w += (m.c + (m.d - m.c) * u - w) * u),
										(a = v ? Math.atan2(w - y, b - g) * S + E : this._initialRotations[i]),
										p[s] ? d[s](a) : (d[s] = a));
						}
					},
				}),
				m = v.prototype;
			(v.bezierThrough = c),
				(v.cubicToQuadratic = a),
				(v._autoCSS = !0),
				(v.quadraticToCubic = function (e, t, n) {
					return new o(e, (2 * t + e) / 3, (2 * t + n) / 3, n);
				}),
				(v._cssRegister = function () {
					var e = s.CSSPlugin;
					if (e) {
						var t = e._internals,
							n = t._parseToProxy,
							r = t._setPluginRatio,
							i = t.CSSPropTween;
						t._registerComplexSpecialProp("bezier", {
							parser: function (e, t, s, o, u, a) {
								t instanceof Array &&
									(t = {
										values: t,
									}),
									(a = new v());
								var f,
									l,
									c,
									h = t.values,
									p = h.length - 1,
									d = [],
									m = {};
								if (0 > p) return u;
								for (f = 0; p >= f; f++) (c = n(e, h[f], o, u, a, p !== f)), (d[f] = c.end);
								for (l in t) m[l] = t[l];
								return (
									(m.values = d),
									(u = new i(e, "bezier", 0, 0, c.pt, 2)),
									(u.data = c),
									(u.plugin = a),
									(u.setRatio = r),
									0 === m.autoRotate && (m.autoRotate = !0),
									!m.autoRotate ||
										m.autoRotate instanceof Array ||
										((f = m.autoRotate === !0 ? 0 : Number(m.autoRotate)),
										(m.autoRotate =
											null != c.end.left
												? [["left", "top", "rotation", f, !1]]
												: null != c.end.x
												? [["x", "y", "rotation", f, !1]]
												: !1)),
									m.autoRotate &&
										(o._transform || o._enableTransforms(!1),
										(c.autoRotate = o._target._gsTransform)),
									a._onInitTween(c.proxy, m, o._tween),
									u
								);
							},
						});
					}
				}),
				(m._roundProps = function (e, t) {
					for (var n = this._overwriteProps, r = n.length; --r > -1; )
						(e[n[r]] || e.bezier || e.bezierThrough) && (this._round[n[r]] = t);
				}),
				(m._kill = function (e) {
					var t,
						n,
						r = this._props;
					for (t in this._beziers)
						if (t in e)
							for (delete this._beziers[t], delete this._func[t], n = r.length; --n > -1; )
								r[n] === t && r.splice(n, 1);
					return this._super._kill.call(this, e);
				});
		})(),
		_gsScope._gsDefine(
			"plugins.CSSPlugin",
			["plugins.TweenPlugin", "TweenLite"],
			function (e, t) {
				var n,
					r,
					i,
					s,
					o = function () {
						e.call(this, "css"),
							(this._overwriteProps.length = 0),
							(this.setRatio = o.prototype.setRatio);
					},
					u = _gsScope._gsDefine.globals,
					a = {},
					f = (o.prototype = new e("css"));
				(f.constructor = o),
					(o.version = "1.15.1"),
					(o.API = 2),
					(o.defaultTransformPerspective = 0),
					(o.defaultSkewType = "compensated"),
					(f = "px"),
					(o.suffixMap = {
						top: f,
						right: f,
						bottom: f,
						left: f,
						width: f,
						height: f,
						fontSize: f,
						padding: f,
						margin: f,
						perspective: f,
						lineHeight: "",
					});
				var l,
					c,
					h,
					p,
					d,
					v,
					m = /(?:\d|\-\d|\.\d|\-\.\d)+/g,
					g = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
					y = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
					b = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
					w = /(?:\d|\-|\+|=|#|\.)*/g,
					E = /opacity *= *([^)]*)/i,
					S = /opacity:([^;]*)/i,
					x = /alpha\(opacity *=.+?\)/i,
					T = /^(rgb|hsl)/,
					N = /([A-Z])/g,
					C = /-([a-z])/gi,
					k = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
					L = function (e, t) {
						return t.toUpperCase();
					},
					A = /(?:Left|Right|Width)/i,
					O = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
					M = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
					_ = /,(?=[^\)]*(?:\(|$))/gi,
					D = Math.PI / 180,
					P = 180 / Math.PI,
					H = {},
					B = document,
					j = function (e) {
						return B.createElementNS
							? B.createElementNS("http://www.w3.org/1999/xhtml", e)
							: B.createElement(e);
					},
					F = j("div"),
					I = j("img"),
					q = (o._internals = {
						_specialProps: a,
					}),
					R = navigator.userAgent,
					U = (function () {
						var e = R.indexOf("Android"),
							t = j("a");
						return (
							(h =
								-1 !== R.indexOf("Safari") &&
								-1 === R.indexOf("Chrome") &&
								(-1 === e || Number(R.substr(e + 8, 1)) > 3)),
							(d = h && 6 > Number(R.substr(R.indexOf("Version/") + 8, 1))),
							(p = -1 !== R.indexOf("Firefox")),
							(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(R) ||
								/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(R)) &&
								(v = parseFloat(RegExp.$1)),
							t ? ((t.style.cssText = "top:1px;opacity:.55;"), /^0.55/.test(t.style.opacity)) : !1
						);
					})(),
					z = function (e) {
						return E.test(
							"string" == typeof e
								? e
								: (e.currentStyle ? e.currentStyle.filter : e.style.filter) || ""
						)
							? parseFloat(RegExp.$1) / 100
							: 1;
					},
					W = function (e) {
						window.console && console.log(e);
					},
					X = "",
					V = "",
					$ = function (e, t) {
						t = t || F;
						var n,
							r,
							i = t.style;
						if (void 0 !== i[e]) return e;
						for (
							e = e.charAt(0).toUpperCase() + e.substr(1),
								n = ["O", "Moz", "ms", "Ms", "Webkit"],
								r = 5;
							--r > -1 && void 0 === i[n[r] + e];

						);
						return r >= 0
							? ((V = 3 === r ? "ms" : n[r]), (X = "-" + V.toLowerCase() + "-"), V + e)
							: null;
					},
					J = B.defaultView ? B.defaultView.getComputedStyle : function () {},
					K = (o.getStyle = function (e, t, n, r, i) {
						var s;
						return U || "opacity" !== t
							? (!r && e.style[t]
									? (s = e.style[t])
									: (n = n || J(e))
									? (s =
											n[t] ||
											n.getPropertyValue(t) ||
											n.getPropertyValue(t.replace(N, "-$1").toLowerCase()))
									: e.currentStyle && (s = e.currentStyle[t]),
							  null == i || (s && "none" !== s && "auto" !== s && "auto auto" !== s) ? s : i)
							: z(e);
					}),
					Q = (q.convertToPixels = function (e, n, r, i, s) {
						if ("px" === i || !i) return r;
						if ("auto" === i || !r) return 0;
						var u,
							a,
							f,
							l = A.test(n),
							c = e,
							h = F.style,
							p = 0 > r;
						if ((p && (r = -r), "%" === i && -1 !== n.indexOf("border")))
							u = (r / 100) * (l ? e.clientWidth : e.clientHeight);
						else {
							if (
								((h.cssText =
									"border:0 solid red;position:" + K(e, "position") + ";line-height:0;"),
								"%" !== i && c.appendChild)
							)
								h[l ? "borderLeftWidth" : "borderTopWidth"] = r + i;
							else {
								if (
									((c = e.parentNode || B.body),
									(a = c._gsCache),
									(f = t.ticker.frame),
									a && l && a.time === f)
								)
									return (a.width * r) / 100;
								h[l ? "width" : "height"] = r + i;
							}
							c.appendChild(F),
								(u = parseFloat(F[l ? "offsetWidth" : "offsetHeight"])),
								c.removeChild(F),
								l &&
									"%" === i &&
									o.cacheWidths !== !1 &&
									((a = c._gsCache = c._gsCache || {}), (a.time = f), (a.width = 100 * (u / r))),
								0 !== u || s || (u = Q(e, n, r, i, !0));
						}
						return p ? -u : u;
					}),
					G = (q.calculateOffset = function (e, t, n) {
						if ("absolute" !== K(e, "position", n)) return 0;
						var r = "left" === t ? "Left" : "Top",
							i = K(e, "margin" + r, n);
						return e["offset" + r] - (Q(e, t, parseFloat(i), i.replace(w, "")) || 0);
					}),
					Y = function (e, t) {
						var n,
							r,
							i = {};
						if ((t = t || J(e, null)))
							for (n in t) (-1 === n.indexOf("Transform") || St === n) && (i[n] = t[n]);
						else if ((t = e.currentStyle || e.style))
							for (n in t) "string" == typeof n && void 0 === i[n] && (i[n.replace(C, L)] = t[n]);
						return (
							U || (i.opacity = z(e)),
							(r = _t(e, t, !1)),
							(i.rotation = r.rotation),
							(i.skewX = r.skewX),
							(i.scaleX = r.scaleX),
							(i.scaleY = r.scaleY),
							(i.x = r.x),
							(i.y = r.y),
							Nt &&
								((i.z = r.z),
								(i.rotationX = r.rotationX),
								(i.rotationY = r.rotationY),
								(i.scaleZ = r.scaleZ)),
							i.filters && delete i.filters,
							i
						);
					},
					Z = function (e, t, n, r, i) {
						var s,
							o,
							u,
							a = {},
							f = e.style;
						for (o in n)
							"cssText" !== o &&
								"length" !== o &&
								isNaN(o) &&
								(t[o] !== (s = n[o]) || (i && i[o])) &&
								-1 === o.indexOf("Origin") &&
								("number" == typeof s || "string" == typeof s) &&
								((a[o] =
									"auto" !== s || ("left" !== o && "top" !== o)
										? ("" !== s && "auto" !== s && "none" !== s) ||
										  "string" != typeof t[o] ||
										  "" === t[o].replace(b, "")
											? s
											: 0
										: G(e, o)),
								void 0 !== f[o] && (u = new pt(f, o, f[o], u)));
						if (r) for (o in r) "className" !== o && (a[o] = r[o]);
						return {
							difs: a,
							firstMPT: u,
						};
					},
					et = {
						width: ["Left", "Right"],
						height: ["Top", "Bottom"],
					},
					tt = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
					nt = function (e, t, n) {
						var r = parseFloat("width" === t ? e.offsetWidth : e.offsetHeight),
							i = et[t],
							s = i.length;
						for (n = n || J(e, null); --s > -1; )
							(r -= parseFloat(K(e, "padding" + i[s], n, !0)) || 0),
								(r -= parseFloat(K(e, "border" + i[s] + "Width", n, !0)) || 0);
						return r;
					},
					rt = function (e, t) {
						(null == e || "" === e || "auto" === e || "auto auto" === e) && (e = "0 0");
						var n = e.split(" "),
							r = -1 !== e.indexOf("left") ? "0%" : -1 !== e.indexOf("right") ? "100%" : n[0],
							i = -1 !== e.indexOf("top") ? "0%" : -1 !== e.indexOf("bottom") ? "100%" : n[1];
						return (
							null == i ? (i = "center" === r ? "50%" : "0") : "center" === i && (i = "50%"),
							("center" === r || (isNaN(parseFloat(r)) && -1 === (r + "").indexOf("="))) &&
								(r = "50%"),
							t &&
								((t.oxp = -1 !== r.indexOf("%")),
								(t.oyp = -1 !== i.indexOf("%")),
								(t.oxr = "=" === r.charAt(1)),
								(t.oyr = "=" === i.charAt(1)),
								(t.ox = parseFloat(r.replace(b, ""))),
								(t.oy = parseFloat(i.replace(b, "")))),
							r + " " + i + (n.length > 2 ? " " + n[2] : "")
						);
					},
					it = function (e, t) {
						return "string" == typeof e && "=" === e.charAt(1)
							? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2))
							: parseFloat(e) - parseFloat(t);
					},
					st = function (e, t) {
						return null == e
							? t
							: "string" == typeof e && "=" === e.charAt(1)
							? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) + t
							: parseFloat(e);
					},
					ot = function (e, t, n, r) {
						var i,
							s,
							o,
							u,
							a,
							f = 1e-6;
						return (
							null == e
								? (u = t)
								: "number" == typeof e
								? (u = e)
								: ((i = 360),
								  (s = e.split("_")),
								  (a = "=" === e.charAt(1)),
								  (o =
										(a
											? parseInt(e.charAt(0) + "1", 10) * parseFloat(s[0].substr(2))
											: parseFloat(s[0])) *
											(-1 === e.indexOf("rad") ? 1 : P) -
										(a ? 0 : t)),
								  s.length &&
										(r && (r[n] = t + o),
										-1 !== e.indexOf("short") &&
											((o %= i), o !== o % (i / 2) && (o = 0 > o ? o + i : o - i)),
										-1 !== e.indexOf("_cw") && 0 > o
											? (o = ((o + 9999999999 * i) % i) - (0 | (o / i)) * i)
											: -1 !== e.indexOf("ccw") &&
											  o > 0 &&
											  (o = ((o - 9999999999 * i) % i) - (0 | (o / i)) * i)),
								  (u = t + o)),
							f > u && u > -f && (u = 0),
							u
						);
					},
					ut = {
						aqua: [0, 255, 255],
						lime: [0, 255, 0],
						silver: [192, 192, 192],
						black: [0, 0, 0],
						maroon: [128, 0, 0],
						teal: [0, 128, 128],
						blue: [0, 0, 255],
						navy: [0, 0, 128],
						white: [255, 255, 255],
						fuchsia: [255, 0, 255],
						olive: [128, 128, 0],
						yellow: [255, 255, 0],
						orange: [255, 165, 0],
						gray: [128, 128, 128],
						purple: [128, 0, 128],
						green: [0, 128, 0],
						red: [255, 0, 0],
						pink: [255, 192, 203],
						cyan: [0, 255, 255],
						transparent: [255, 255, 255, 0],
					},
					at = function (e, t, n) {
						return (
							(e = 0 > e ? e + 1 : e > 1 ? e - 1 : e),
							0 |
								(255 *
									(1 > 6 * e
										? t + 6 * (n - t) * e
										: 0.5 > e
										? n
										: 2 > 3 * e
										? t + 6 * (n - t) * (2 / 3 - e)
										: t) +
									0.5)
						);
					},
					ft = (o.parseColor = function (e) {
						var t, n, r, i, s, o;
						return e && "" !== e
							? "number" == typeof e
								? [e >> 16, 255 & (e >> 8), 255 & e]
								: ("," === e.charAt(e.length - 1) && (e = e.substr(0, e.length - 1)),
								  ut[e]
										? ut[e]
										: "#" === e.charAt(0)
										? (4 === e.length &&
												((t = e.charAt(1)),
												(n = e.charAt(2)),
												(r = e.charAt(3)),
												(e = "#" + t + t + n + n + r + r)),
										  (e = parseInt(e.substr(1), 16)),
										  [e >> 16, 255 & (e >> 8), 255 & e])
										: "hsl" === e.substr(0, 3)
										? ((e = e.match(m)),
										  (i = (Number(e[0]) % 360) / 360),
										  (s = Number(e[1]) / 100),
										  (o = Number(e[2]) / 100),
										  (n = 0.5 >= o ? o * (s + 1) : o + s - o * s),
										  (t = 2 * o - n),
										  e.length > 3 && (e[3] = Number(e[3])),
										  (e[0] = at(i + 1 / 3, t, n)),
										  (e[1] = at(i, t, n)),
										  (e[2] = at(i - 1 / 3, t, n)),
										  e)
										: ((e = e.match(m) || ut.transparent),
										  (e[0] = Number(e[0])),
										  (e[1] = Number(e[1])),
										  (e[2] = Number(e[2])),
										  e.length > 3 && (e[3] = Number(e[3])),
										  e))
							: ut.black;
					}),
					lt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
				for (f in ut) lt += "|" + f + "\\b";
				lt = RegExp(lt + ")", "gi");
				var ct = function (e, t, n, r) {
						if (null == e)
							return function (e) {
								return e;
							};
						var i,
							s = t ? (e.match(lt) || [""])[0] : "",
							o = e.split(s).join("").match(y) || [],
							u = e.substr(0, e.indexOf(o[0])),
							a = ")" === e.charAt(e.length - 1) ? ")" : "",
							f = -1 !== e.indexOf(" ") ? " " : ",",
							l = o.length,
							c = l > 0 ? o[0].replace(m, "") : "";
						return l
							? (i = t
									? function (e) {
											var t, h, p, d;
											if ("number" == typeof e) e += c;
											else if (r && _.test(e)) {
												for (d = e.replace(_, "|").split("|"), p = 0; d.length > p; p++)
													d[p] = i(d[p]);
												return d.join(",");
											}
											if (
												((t = (e.match(lt) || [s])[0]),
												(h = e.split(t).join("").match(y) || []),
												(p = h.length),
												l > p--)
											)
												for (; l > ++p; ) h[p] = n ? h[0 | ((p - 1) / 2)] : o[p];
											return (
												u + h.join(f) + f + t + a + (-1 !== e.indexOf("inset") ? " inset" : "")
											);
									  }
									: function (e) {
											var t, s, h;
											if ("number" == typeof e) e += c;
											else if (r && _.test(e)) {
												for (s = e.replace(_, "|").split("|"), h = 0; s.length > h; h++)
													s[h] = i(s[h]);
												return s.join(",");
											}
											if (((t = e.match(y) || []), (h = t.length), l > h--))
												for (; l > ++h; ) t[h] = n ? t[0 | ((h - 1) / 2)] : o[h];
											return u + t.join(f) + a;
									  })
							: function (e) {
									return e;
							  };
					},
					ht = function (e) {
						return (
							(e = e.split(",")),
							function (t, n, r, i, s, o, u) {
								var a,
									f = (n + "").split(" ");
								for (u = {}, a = 0; 4 > a; a++) u[e[a]] = f[a] = f[a] || f[((a - 1) / 2) >> 0];
								return i.parse(t, u, s, o);
							}
						);
					},
					pt =
						((q._setPluginRatio = function (e) {
							this.plugin.setRatio(e);
							for (var t, n, r, i, s = this.data, o = s.proxy, u = s.firstMPT, a = 1e-6; u; )
								(t = o[u.v]),
									u.r ? (t = Math.round(t)) : a > t && t > -a && (t = 0),
									(u.t[u.p] = t),
									(u = u._next);
							if ((s.autoRotate && (s.autoRotate.rotation = o.rotation), 1 === e))
								for (u = s.firstMPT; u; ) {
									if (((n = u.t), n.type)) {
										if (1 === n.type) {
											for (i = n.xs0 + n.s + n.xs1, r = 1; n.l > r; r++)
												i += n["xn" + r] + n["xs" + (r + 1)];
											n.e = i;
										}
									} else n.e = n.s + n.xs0;
									u = u._next;
								}
						}),
						function (e, t, n, r, i) {
							(this.t = e),
								(this.p = t),
								(this.v = n),
								(this.r = i),
								r && ((r._prev = this), (this._next = r));
						}),
					dt =
						((q._parseToProxy = function (e, t, n, r, i, s) {
							var o,
								u,
								a,
								f,
								l,
								c = r,
								h = {},
								p = {},
								d = n._transform,
								v = H;
							for (
								n._transform = null,
									H = t,
									r = l = n.parse(e, t, r, i),
									H = v,
									s &&
										((n._transform = d),
										c && ((c._prev = null), c._prev && (c._prev._next = null)));
								r && r !== c;

							) {
								if (
									1 >= r.type &&
									((u = r.p),
									(p[u] = r.s + r.c),
									(h[u] = r.s),
									s || ((f = new pt(r, "s", u, f, r.r)), (r.c = 0)),
									1 === r.type)
								)
									for (o = r.l; --o > 0; )
										(a = "xn" + o),
											(u = r.p + "_" + a),
											(p[u] = r.data[a]),
											(h[u] = r[a]),
											s || (f = new pt(r, a, u, f, r.rxp[a]));
								r = r._next;
							}
							return {
								proxy: h,
								end: p,
								firstMPT: f,
								pt: l,
							};
						}),
						(q.CSSPropTween = function (e, t, r, i, o, u, a, f, l, c, h) {
							(this.t = e),
								(this.p = t),
								(this.s = r),
								(this.c = i),
								(this.n = a || t),
								e instanceof dt || s.push(this.n),
								(this.r = f),
								(this.type = u || 0),
								l && ((this.pr = l), (n = !0)),
								(this.b = void 0 === c ? r : c),
								(this.e = void 0 === h ? r + i : h),
								o && ((this._next = o), (o._prev = this));
						})),
					vt = (o.parseComplex = function (e, t, n, r, i, s, o, u, a, f) {
						(n = n || s || ""),
							(o = new dt(e, t, 0, 0, o, f ? 2 : 1, null, !1, u, n, r)),
							(r += "");
						var c,
							h,
							p,
							d,
							v,
							y,
							b,
							w,
							E,
							S,
							x,
							N,
							C = n.split(", ").join(",").split(" "),
							k = r.split(", ").join(",").split(" "),
							L = C.length,
							A = l !== !1;
						for (
							(-1 !== r.indexOf(",") || -1 !== n.indexOf(",")) &&
								((C = C.join(" ").replace(_, ", ").split(" ")),
								(k = k.join(" ").replace(_, ", ").split(" ")),
								(L = C.length)),
								L !== k.length && ((C = (s || "").split(" ")), (L = C.length)),
								o.plugin = a,
								o.setRatio = f,
								c = 0;
							L > c;
							c++
						)
							if (((d = C[c]), (v = k[c]), (w = parseFloat(d)), w || 0 === w))
								o.appendXtra("", w, it(v, w), v.replace(g, ""), A && -1 !== v.indexOf("px"), !0);
							else if (i && ("#" === d.charAt(0) || ut[d] || T.test(d)))
								(N = "," === v.charAt(v.length - 1) ? ")," : ")"),
									(d = ft(d)),
									(v = ft(v)),
									(E = d.length + v.length > 6),
									E && !U && 0 === v[3]
										? ((o["xs" + o.l] += o.l ? " transparent" : "transparent"),
										  (o.e = o.e.split(k[c]).join("transparent")))
										: (U || (E = !1),
										  o
												.appendXtra(E ? "rgba(" : "rgb(", d[0], v[0] - d[0], ",", !0, !0)
												.appendXtra("", d[1], v[1] - d[1], ",", !0)
												.appendXtra("", d[2], v[2] - d[2], E ? "," : N, !0),
										  E &&
												((d = 4 > d.length ? 1 : d[3]),
												o.appendXtra("", d, (4 > v.length ? 1 : v[3]) - d, N, !1)));
							else if ((y = d.match(m))) {
								if (((b = v.match(g)), !b || b.length !== y.length)) return o;
								for (p = 0, h = 0; y.length > h; h++)
									(x = y[h]),
										(S = d.indexOf(x, p)),
										o.appendXtra(
											d.substr(p, S - p),
											Number(x),
											it(b[h], x),
											"",
											A && "px" === d.substr(S + x.length, 2),
											0 === h
										),
										(p = S + x.length);
								o["xs" + o.l] += d.substr(p);
							} else o["xs" + o.l] += o.l ? " " + d : d;
						if (-1 !== r.indexOf("=") && o.data) {
							for (N = o.xs0 + o.data.s, c = 1; o.l > c; c++) N += o["xs" + c] + o.data["xn" + c];
							o.e = N + o["xs" + c];
						}
						return o.l || ((o.type = -1), (o.xs0 = o.e)), o.xfirst || o;
					}),
					mt = 9;
				for (f = dt.prototype, f.l = f.pr = 0; --mt > 0; ) (f["xn" + mt] = 0), (f["xs" + mt] = "");
				(f.xs0 = ""),
					(f._next = f._prev = f.xfirst = f.data = f.plugin = f.setRatio = f.rxp = null),
					(f.appendXtra = function (e, t, n, r, i, s) {
						var o = this,
							u = o.l;
						return (
							(o["xs" + u] += s && u ? " " + e : e || ""),
							n || 0 === u || o.plugin
								? (o.l++,
								  (o.type = o.setRatio ? 2 : 1),
								  (o["xs" + o.l] = r || ""),
								  u > 0
										? ((o.data["xn" + u] = t + n),
										  (o.rxp["xn" + u] = i),
										  (o["xn" + u] = t),
										  o.plugin ||
												((o.xfirst = new dt(o, "xn" + u, t, n, o.xfirst || o, 0, o.n, i, o.pr)),
												(o.xfirst.xs0 = 0)),
										  o)
										: ((o.data = {
												s: t + n,
										  }),
										  (o.rxp = {}),
										  (o.s = t),
										  (o.c = n),
										  (o.r = i),
										  o))
								: ((o["xs" + u] += t + (r || "")), o)
						);
					});
				var gt = function (e, t) {
						(t = t || {}),
							(this.p = t.prefix ? $(e) || e : e),
							(a[e] = a[this.p] = this),
							(this.format = t.formatter || ct(t.defaultValue, t.color, t.collapsible, t.multi)),
							t.parser && (this.parse = t.parser),
							(this.clrs = t.color),
							(this.multi = t.multi),
							(this.keyword = t.keyword),
							(this.dflt = t.defaultValue),
							(this.pr = t.priority || 0);
					},
					yt = (q._registerComplexSpecialProp = function (e, t, n) {
						"object" != typeof t &&
							(t = {
								parser: n,
							});
						var r,
							i,
							s = e.split(","),
							o = t.defaultValue;
						for (n = n || [o], r = 0; s.length > r; r++)
							(t.prefix = 0 === r && t.prefix), (t.defaultValue = n[r] || o), (i = new gt(s[r], t));
					}),
					bt = function (e) {
						if (!a[e]) {
							var t = e.charAt(0).toUpperCase() + e.substr(1) + "Plugin";
							yt(e, {
								parser: function (e, n, r, i, s, o, f) {
									var l = u.com.greensock.plugins[t];
									return l
										? (l._cssRegister(), a[r].parse(e, n, r, i, s, o, f))
										: (W("Error: " + t + " js file not loaded."), s);
								},
							});
						}
					};
				(f = gt.prototype),
					(f.parseComplex = function (e, t, n, r, i, s) {
						var o,
							u,
							a,
							f,
							l,
							c,
							h = this.keyword;
						if (
							(this.multi &&
								(_.test(n) || _.test(t)
									? ((u = t.replace(_, "|").split("|")), (a = n.replace(_, "|").split("|")))
									: h && ((u = [t]), (a = [n]))),
							a)
						) {
							for (f = a.length > u.length ? a.length : u.length, o = 0; f > o; o++)
								(t = u[o] = u[o] || this.dflt),
									(n = a[o] = a[o] || this.dflt),
									h &&
										((l = t.indexOf(h)),
										(c = n.indexOf(h)),
										l !== c && ((n = -1 === c ? a : u), (n[o] += " " + h)));
							(t = u.join(", ")), (n = a.join(", "));
						}
						return vt(e, this.p, t, n, this.clrs, this.dflt, r, this.pr, i, s);
					}),
					(f.parse = function (e, t, n, r, s, o) {
						return this.parseComplex(
							e.style,
							this.format(K(e, this.p, i, !1, this.dflt)),
							this.format(t),
							s,
							o
						);
					}),
					(o.registerSpecialProp = function (e, t, n) {
						yt(e, {
							parser: function (e, r, i, s, o, u) {
								var a = new dt(e, i, 0, 0, o, 2, i, !1, n);
								return (a.plugin = u), (a.setRatio = t(e, r, s._tween, i)), a;
							},
							priority: n,
						});
					});
				var wt,
					Et =
						"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(
							","
						),
					St = $("transform"),
					xt = X + "transform",
					Tt = $("transformOrigin"),
					Nt = null !== $("perspective"),
					Ct = (q.Transform = function () {
						(this.perspective = parseFloat(o.defaultTransformPerspective) || 0),
							(this.force3D = o.defaultForce3D !== !1 && Nt ? o.defaultForce3D || "auto" : !1);
					}),
					kt = window.SVGElement,
					Lt = function (e, t, n) {
						var r,
							i = B.createElementNS("http://www.w3.org/2000/svg", e),
							s = /([a-z])([A-Z])/g;
						for (r in n) i.setAttributeNS(null, r.replace(s, "$1-$2").toLowerCase(), n[r]);
						return t.appendChild(i), i;
					},
					At = document.documentElement,
					Ot = (function () {
						var e,
							t,
							n,
							r = v || (/Android/i.test(R) && !window.chrome);
						return (
							B.createElementNS &&
								!r &&
								((e = Lt("svg", At)),
								(t = Lt("rect", e, {
									width: 100,
									height: 50,
									x: 100,
								})),
								(n = t.getBoundingClientRect().width),
								(t.style[Tt] = "50% 50%"),
								(t.style[St] = "scaleX(0.5)"),
								(r = n === t.getBoundingClientRect().width && (!p || !Nt)),
								At.removeChild(e)),
							r
						);
					})(),
					Mt = function (e, t, n) {
						var r = e.getBBox();
						(t = rt(t).split(" ")),
							(n.xOrigin =
								(-1 !== t[0].indexOf("%") ? (parseFloat(t[0]) / 100) * r.width : parseFloat(t[0])) +
								r.x),
							(n.yOrigin =
								(-1 !== t[1].indexOf("%")
									? (parseFloat(t[1]) / 100) * r.height
									: parseFloat(t[1])) + r.y);
					},
					_t = (q.getTransform = function (e, t, n, r) {
						if (e._gsTransform && n && !r) return e._gsTransform;
						var s,
							u,
							a,
							f,
							l,
							c,
							h,
							p,
							d,
							v,
							m = n ? e._gsTransform || new Ct() : new Ct(),
							g = 0 > m.scaleX,
							y = 2e-5,
							b = 1e5,
							w = Nt ? parseFloat(K(e, Tt, t, !1, "0 0 0").split(" ")[2]) || m.zOrigin || 0 : 0,
							E = parseFloat(o.defaultTransformPerspective) || 0;
						if (
							(St
								? (u = K(e, xt, t, !0))
								: e.currentStyle &&
								  ((u = e.currentStyle.filter.match(O)),
								  (u =
										u && 4 === u.length
											? [
													u[0].substr(4),
													Number(u[2].substr(4)),
													Number(u[1].substr(4)),
													u[3].substr(4),
													m.x || 0,
													m.y || 0,
											  ].join(",")
											: "")),
							(s = !u || "none" === u || "matrix(1, 0, 0, 1, 0, 0)" === u),
							(m.svg = !!(
								kt &&
								"function" == typeof e.getBBox &&
								e.getCTM &&
								(!e.parentNode || (e.parentNode.getBBox && e.parentNode.getCTM))
							)),
							m.svg &&
								(Mt(e, K(e, Tt, i, !1, "50% 50%") + "", m),
								(wt = o.useSVGTransformAttr || Ot),
								(a = e.getAttribute("transform")),
								s && a && -1 !== a.indexOf("matrix") && ((u = a), (s = 0))),
							!s)
						) {
							for (a = (u || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [], f = a.length; --f > -1; )
								(l = Number(a[f])),
									(a[f] = (c = l - (l |= 0)) ? (0 | (c * b + (0 > c ? -0.5 : 0.5))) / b + l : l);
							if (16 === a.length) {
								var S,
									x,
									T,
									N,
									C,
									k = a[0],
									L = a[1],
									A = a[2],
									M = a[3],
									_ = a[4],
									D = a[5],
									H = a[6],
									B = a[7],
									j = a[8],
									F = a[9],
									I = a[10],
									q = a[12],
									R = a[13],
									U = a[14],
									z = a[11],
									W = Math.atan2(H, I);
								m.zOrigin &&
									((U = -m.zOrigin),
									(q = j * U - a[12]),
									(R = F * U - a[13]),
									(U = I * U + m.zOrigin - a[14])),
									(m.rotationX = W * P),
									W &&
										((N = Math.cos(-W)),
										(C = Math.sin(-W)),
										(S = _ * N + j * C),
										(x = D * N + F * C),
										(T = H * N + I * C),
										(j = _ * -C + j * N),
										(F = D * -C + F * N),
										(I = H * -C + I * N),
										(z = B * -C + z * N),
										(_ = S),
										(D = x),
										(H = T)),
									(W = Math.atan2(j, I)),
									(m.rotationY = W * P),
									W &&
										((N = Math.cos(-W)),
										(C = Math.sin(-W)),
										(S = k * N - j * C),
										(x = L * N - F * C),
										(T = A * N - I * C),
										(F = L * C + F * N),
										(I = A * C + I * N),
										(z = M * C + z * N),
										(k = S),
										(L = x),
										(A = T)),
									(W = Math.atan2(L, k)),
									(m.rotation = W * P),
									W &&
										((N = Math.cos(-W)),
										(C = Math.sin(-W)),
										(k = k * N + _ * C),
										(x = L * N + D * C),
										(D = L * -C + D * N),
										(H = A * -C + H * N),
										(L = x)),
									m.rotationX &&
										Math.abs(m.rotationX) + Math.abs(m.rotation) > 359.9 &&
										((m.rotationX = m.rotation = 0), (m.rotationY += 180)),
									(m.scaleX = (0 | (Math.sqrt(k * k + L * L) * b + 0.5)) / b),
									(m.scaleY = (0 | (Math.sqrt(D * D + F * F) * b + 0.5)) / b),
									(m.scaleZ = (0 | (Math.sqrt(H * H + I * I) * b + 0.5)) / b),
									(m.skewX = 0),
									(m.perspective = z ? 1 / (0 > z ? -z : z) : 0),
									(m.x = q),
									(m.y = R),
									(m.z = U);
							} else if (
								!(
									(Nt &&
										!r &&
										a.length &&
										m.x === a[4] &&
										m.y === a[5] &&
										(m.rotationX || m.rotationY)) ||
									(void 0 !== m.x && "none" === K(e, "display", t))
								)
							) {
								var X = a.length >= 6,
									V = X ? a[0] : 1,
									$ = a[1] || 0,
									J = a[2] || 0,
									Q = X ? a[3] : 1;
								(m.x = a[4] || 0),
									(m.y = a[5] || 0),
									(h = Math.sqrt(V * V + $ * $)),
									(p = Math.sqrt(Q * Q + J * J)),
									(d = V || $ ? Math.atan2($, V) * P : m.rotation || 0),
									(v = J || Q ? Math.atan2(J, Q) * P + d : m.skewX || 0),
									Math.abs(v) > 90 &&
										270 > Math.abs(v) &&
										(g
											? ((h *= -1), (v += 0 >= d ? 180 : -180), (d += 0 >= d ? 180 : -180))
											: ((p *= -1), (v += 0 >= v ? 180 : -180))),
									(m.scaleX = h),
									(m.scaleY = p),
									(m.rotation = d),
									(m.skewX = v),
									Nt &&
										((m.rotationX = m.rotationY = m.z = 0), (m.perspective = E), (m.scaleZ = 1));
							}
							m.zOrigin = w;
							for (f in m) y > m[f] && m[f] > -y && (m[f] = 0);
						}
						return n && (e._gsTransform = m), m;
					}),
					Dt = function (e) {
						var t,
							n,
							r = this.data,
							i = -r.rotation * D,
							s = i + r.skewX * D,
							o = 1e5,
							u = (0 | (Math.cos(i) * r.scaleX * o)) / o,
							a = (0 | (Math.sin(i) * r.scaleX * o)) / o,
							f = (0 | (Math.sin(s) * -r.scaleY * o)) / o,
							l = (0 | (Math.cos(s) * r.scaleY * o)) / o,
							c = this.t.style,
							h = this.t.currentStyle;
						if (h) {
							(n = a), (a = -f), (f = -n), (t = h.filter), (c.filter = "");
							var p,
								d,
								m = this.t.offsetWidth,
								g = this.t.offsetHeight,
								y = "absolute" !== h.position,
								b =
									"progid:DXImageTransform.Microsoft.Matrix(M11=" +
									u +
									", M12=" +
									a +
									", M21=" +
									f +
									", M22=" +
									l,
								S = r.x + (m * r.xPercent) / 100,
								x = r.y + (g * r.yPercent) / 100;
							if (
								(null != r.ox &&
									((p = (r.oxp ? 0.01 * m * r.ox : r.ox) - m / 2),
									(d = (r.oyp ? 0.01 * g * r.oy : r.oy) - g / 2),
									(S += p - (p * u + d * a)),
									(x += d - (p * f + d * l))),
								y
									? ((p = m / 2),
									  (d = g / 2),
									  (b +=
											", Dx=" +
											(p - (p * u + d * a) + S) +
											", Dy=" +
											(d - (p * f + d * l) + x) +
											")"))
									: (b += ", sizingMethod='auto expand')"),
								(c.filter =
									-1 !== t.indexOf("DXImageTransform.Microsoft.Matrix(")
										? t.replace(M, b)
										: b + " " + t),
								(0 === e || 1 === e) &&
									1 === u &&
									0 === a &&
									0 === f &&
									1 === l &&
									((y && -1 === b.indexOf("Dx=0, Dy=0")) ||
										(E.test(t) && 100 !== parseFloat(RegExp.$1)) ||
										(-1 === t.indexOf(t.indexOf("Alpha")) && c.removeAttribute("filter"))),
								!y)
							) {
								var T,
									N,
									C,
									k = 8 > v ? 1 : -1;
								for (
									p = r.ieOffsetX || 0,
										d = r.ieOffsetY || 0,
										r.ieOffsetX = Math.round(
											(m - ((0 > u ? -u : u) * m + (0 > a ? -a : a) * g)) / 2 + S
										),
										r.ieOffsetY = Math.round(
											(g - ((0 > l ? -l : l) * g + (0 > f ? -f : f) * m)) / 2 + x
										),
										mt = 0;
									4 > mt;
									mt++
								)
									(N = tt[mt]),
										(T = h[N]),
										(n =
											-1 !== T.indexOf("px")
												? parseFloat(T)
												: Q(this.t, N, parseFloat(T), T.replace(w, "")) || 0),
										(C =
											n !== r[N]
												? 2 > mt
													? -r.ieOffsetX
													: -r.ieOffsetY
												: 2 > mt
												? p - r.ieOffsetX
												: d - r.ieOffsetY),
										(c[N] = (r[N] = Math.round(n - C * (0 === mt || 2 === mt ? 1 : k))) + "px");
							}
						}
					},
					Pt = (q.set3DTransformRatio = function (e) {
						var t,
							n,
							r,
							i,
							s,
							o,
							u,
							a,
							f,
							l,
							c,
							h,
							d,
							v,
							m,
							g,
							y,
							b,
							w,
							E,
							S,
							x = this.data,
							T = this.t.style,
							N = x.rotation * D,
							C = x.scaleX,
							k = x.scaleY,
							L = x.scaleZ,
							A = x.x,
							O = x.y,
							M = x.z,
							_ = x.perspective;
						if (
							!(
								(1 !== e && 0 !== e && x.force3D) ||
								x.force3D === !0 ||
								x.rotationY ||
								x.rotationX ||
								1 !== L ||
								_ ||
								M
							)
						)
							return Ht.call(this, e), void 0;
						if (
							(p &&
								((v = 1e-4),
								v > C && C > -v && (C = L = 2e-5),
								v > k && k > -v && (k = L = 2e-5),
								!_ || x.z || x.rotationX || x.rotationY || (_ = 0)),
							N || x.skewX)
						)
							(m = t = Math.cos(N)),
								(g = i = Math.sin(N)),
								x.skewX &&
									((N -= x.skewX * D),
									(m = Math.cos(N)),
									(g = Math.sin(N)),
									"simple" === x.skewType &&
										((y = Math.tan(x.skewX * D)), (y = Math.sqrt(1 + y * y)), (m *= y), (g *= y))),
								(n = -g),
								(s = m);
						else {
							if (!(x.rotationY || x.rotationX || 1 !== L || _ || x.svg))
								return (
									(T[St] =
										(x.xPercent || x.yPercent
											? "translate(" + x.xPercent + "%," + x.yPercent + "%) translate3d("
											: "translate3d(") +
										A +
										"px," +
										O +
										"px," +
										M +
										"px)" +
										(1 !== C || 1 !== k ? " scale(" + C + "," + k + ")" : "")),
									void 0
								);
							(t = s = 1), (n = i = 0);
						}
						(f = 1),
							(r = o = u = a = l = c = 0),
							(h = _ ? -1 / _ : 0),
							(d = x.zOrigin),
							(v = 1e-6),
							(E = ","),
							(S = "0"),
							(N = x.rotationY * D),
							N &&
								((m = Math.cos(N)),
								(g = Math.sin(N)),
								(u = -g),
								(l = h * -g),
								(r = t * g),
								(o = i * g),
								(f = m),
								(h *= m),
								(t *= m),
								(i *= m)),
							(N = x.rotationX * D),
							N &&
								((m = Math.cos(N)),
								(g = Math.sin(N)),
								(y = n * m + r * g),
								(b = s * m + o * g),
								(a = f * g),
								(c = h * g),
								(r = n * -g + r * m),
								(o = s * -g + o * m),
								(f *= m),
								(h *= m),
								(n = y),
								(s = b)),
							1 !== L && ((r *= L), (o *= L), (f *= L), (h *= L)),
							1 !== k && ((n *= k), (s *= k), (a *= k), (c *= k)),
							1 !== C && ((t *= C), (i *= C), (u *= C), (l *= C)),
							(d || x.svg) &&
								(d && ((A += r * -d), (O += o * -d), (M += f * -d + d)),
								x.svg &&
									((A += x.xOrigin - (x.xOrigin * t + x.yOrigin * n)),
									(O += x.yOrigin - (x.xOrigin * i + x.yOrigin * s))),
								v > A && A > -v && (A = S),
								v > O && O > -v && (O = S),
								v > M && M > -v && (M = 0)),
							(w =
								x.xPercent || x.yPercent
									? "translate(" + x.xPercent + "%," + x.yPercent + "%) matrix3d("
									: "matrix3d("),
							(w +=
								(v > t && t > -v ? S : t) +
								E +
								(v > i && i > -v ? S : i) +
								E +
								(v > u && u > -v ? S : u)),
							(w +=
								E +
								(v > l && l > -v ? S : l) +
								E +
								(v > n && n > -v ? S : n) +
								E +
								(v > s && s > -v ? S : s)),
							x.rotationX || x.rotationY
								? ((w +=
										E +
										(v > a && a > -v ? S : a) +
										E +
										(v > c && c > -v ? S : c) +
										E +
										(v > r && r > -v ? S : r)),
								  (w +=
										E +
										(v > o && o > -v ? S : o) +
										E +
										(v > f && f > -v ? S : f) +
										E +
										(v > h && h > -v ? S : h) +
										E))
								: (w += ",0,0,0,0,1,0,"),
							(w += A + E + O + E + M + E + (_ ? 1 + -M / _ : 1) + ")"),
							(T[St] = w);
					}),
					Ht = (q.set2DTransformRatio = function (e) {
						var t,
							n,
							r,
							i,
							s,
							o,
							u,
							a,
							f,
							l,
							c,
							h = this.data,
							p = this.t,
							d = p.style,
							v = h.x,
							m = h.y;
						return !(
							h.rotationX ||
							h.rotationY ||
							h.z ||
							h.force3D === !0 ||
							("auto" === h.force3D && 1 !== e && 0 !== e)
						) ||
							(h.svg && wt) ||
							!Nt
							? ((i = h.scaleX),
							  (s = h.scaleY),
							  h.rotation || h.skewX || h.svg
									? ((t = h.rotation * D),
									  (n = t - h.skewX * D),
									  (r = 1e5),
									  (o = Math.cos(t) * i),
									  (u = Math.sin(t) * i),
									  (a = Math.sin(n) * -s),
									  (f = Math.cos(n) * s),
									  h.svg &&
											((v += h.xOrigin - (h.xOrigin * o + h.yOrigin * a)),
											(m += h.yOrigin - (h.xOrigin * u + h.yOrigin * f)),
											(c = 1e-6),
											c > v && v > -c && (v = 0),
											c > m && m > -c && (m = 0)),
									  (l =
											(0 | (o * r)) / r +
											"," +
											(0 | (u * r)) / r +
											"," +
											(0 | (a * r)) / r +
											"," +
											(0 | (f * r)) / r +
											"," +
											v +
											"," +
											m +
											")"),
									  h.svg && wt
											? p.setAttribute("transform", "matrix(" + l)
											: (d[St] =
													(h.xPercent || h.yPercent
														? "translate(" + h.xPercent + "%," + h.yPercent + "%) matrix("
														: "matrix(") + l))
									: (d[St] =
											(h.xPercent || h.yPercent
												? "translate(" + h.xPercent + "%," + h.yPercent + "%) matrix("
												: "matrix(") +
											i +
											",0,0," +
											s +
											"," +
											v +
											"," +
											m +
											")"),
							  void 0)
							: ((this.setRatio = Pt), Pt.call(this, e), void 0);
					});
				(f = Ct.prototype),
					(f.x =
						f.y =
						f.z =
						f.skewX =
						f.skewY =
						f.rotation =
						f.rotationX =
						f.rotationY =
						f.zOrigin =
						f.xPercent =
						f.yPercent =
							0),
					(f.scaleX = f.scaleY = f.scaleZ = 1),
					yt(
						"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent",
						{
							parser: function (e, t, n, r, s, u, a) {
								if (r._lastParsedTransform === a) return s;
								r._lastParsedTransform = a;
								var f,
									l,
									c,
									h,
									p,
									d,
									v,
									m = (r._transform = _t(e, i, !0, a.parseTransform)),
									g = e.style,
									y = 1e-6,
									b = Et.length,
									w = a,
									E = {};
								if ("string" == typeof w.transform && St)
									(c = F.style),
										(c[St] = w.transform),
										(c.display = "block"),
										(c.position = "absolute"),
										B.body.appendChild(F),
										(f = _t(F, null, !1)),
										B.body.removeChild(F);
								else if ("object" == typeof w) {
									if (
										((f = {
											scaleX: st(null != w.scaleX ? w.scaleX : w.scale, m.scaleX),
											scaleY: st(null != w.scaleY ? w.scaleY : w.scale, m.scaleY),
											scaleZ: st(w.scaleZ, m.scaleZ),
											x: st(w.x, m.x),
											y: st(w.y, m.y),
											z: st(w.z, m.z),
											xPercent: st(w.xPercent, m.xPercent),
											yPercent: st(w.yPercent, m.yPercent),
											perspective: st(w.transformPerspective, m.perspective),
										}),
										(v = w.directionalRotation),
										null != v)
									)
										if ("object" == typeof v) for (c in v) w[c] = v[c];
										else w.rotation = v;
									"string" == typeof w.x &&
										-1 !== w.x.indexOf("%") &&
										((f.x = 0), (f.xPercent = st(w.x, m.xPercent))),
										"string" == typeof w.y &&
											-1 !== w.y.indexOf("%") &&
											((f.y = 0), (f.yPercent = st(w.y, m.yPercent))),
										(f.rotation = ot(
											"rotation" in w
												? w.rotation
												: "shortRotation" in w
												? w.shortRotation + "_short"
												: "rotationZ" in w
												? w.rotationZ
												: m.rotation,
											m.rotation,
											"rotation",
											E
										)),
										Nt &&
											((f.rotationX = ot(
												"rotationX" in w
													? w.rotationX
													: "shortRotationX" in w
													? w.shortRotationX + "_short"
													: m.rotationX || 0,
												m.rotationX,
												"rotationX",
												E
											)),
											(f.rotationY = ot(
												"rotationY" in w
													? w.rotationY
													: "shortRotationY" in w
													? w.shortRotationY + "_short"
													: m.rotationY || 0,
												m.rotationY,
												"rotationY",
												E
											))),
										(f.skewX = null == w.skewX ? m.skewX : ot(w.skewX, m.skewX)),
										(f.skewY = null == w.skewY ? m.skewY : ot(w.skewY, m.skewY)),
										(l = f.skewY - m.skewY) && ((f.skewX += l), (f.rotation += l));
								}
								for (
									Nt && null != w.force3D && ((m.force3D = w.force3D), (d = !0)),
										m.skewType = w.skewType || m.skewType || o.defaultSkewType,
										p =
											m.force3D ||
											m.z ||
											m.rotationX ||
											m.rotationY ||
											f.z ||
											f.rotationX ||
											f.rotationY ||
											f.perspective,
										p || null == w.scale || (f.scaleZ = 1);
									--b > -1;

								)
									(n = Et[b]),
										(h = f[n] - m[n]),
										(h > y || -y > h || null != w[n] || null != H[n]) &&
											((d = !0),
											(s = new dt(m, n, m[n], h, s)),
											n in E && (s.e = E[n]),
											(s.xs0 = 0),
											(s.plugin = u),
											r._overwriteProps.push(s.n));
								return (
									(h = w.transformOrigin),
									h &&
										m.svg &&
										(Mt(e, rt(h), f),
										(s = new dt(
											m,
											"xOrigin",
											m.xOrigin,
											f.xOrigin - m.xOrigin,
											s,
											-1,
											"transformOrigin"
										)),
										(s.b = m.xOrigin),
										(s.e = s.xs0 = f.xOrigin),
										(s = new dt(
											m,
											"yOrigin",
											m.yOrigin,
											f.yOrigin - m.yOrigin,
											s,
											-1,
											"transformOrigin"
										)),
										(s.b = m.yOrigin),
										(s.e = s.xs0 = f.yOrigin),
										(h = "0px 0px")),
									(h || (Nt && p && m.zOrigin)) &&
										(St
											? ((d = !0),
											  (n = Tt),
											  (h = (h || K(e, n, i, !1, "50% 50%")) + ""),
											  (s = new dt(g, n, 0, 0, s, -1, "transformOrigin")),
											  (s.b = g[n]),
											  (s.plugin = u),
											  Nt
													? ((c = m.zOrigin),
													  (h = h.split(" ")),
													  (m.zOrigin =
															(h.length > 2 && (0 === c || "0px" !== h[2])
																? parseFloat(h[2])
																: c) || 0),
													  (s.xs0 = s.e = h[0] + " " + (h[1] || "50%") + " 0px"),
													  (s = new dt(m, "zOrigin", 0, 0, s, -1, s.n)),
													  (s.b = c),
													  (s.xs0 = s.e = m.zOrigin))
													: (s.xs0 = s.e = h))
											: rt(h + "", m)),
									d &&
										(r._transformType = (m.svg && wt) || (!p && 3 !== this._transformType) ? 2 : 3),
									s
								);
							},
							prefix: !0,
						}
					),
					yt("boxShadow", {
						defaultValue: "0px 0px 0px 0px #999",
						prefix: !0,
						color: !0,
						multi: !0,
						keyword: "inset",
					}),
					yt("borderRadius", {
						defaultValue: "0px",
						parser: function (e, t, n, s, o) {
							t = this.format(t);
							var u,
								a,
								f,
								l,
								c,
								h,
								p,
								d,
								v,
								m,
								g,
								y,
								b,
								w,
								E,
								S,
								x = [
									"borderTopLeftRadius",
									"borderTopRightRadius",
									"borderBottomRightRadius",
									"borderBottomLeftRadius",
								],
								T = e.style;
							for (
								v = parseFloat(e.offsetWidth),
									m = parseFloat(e.offsetHeight),
									u = t.split(" "),
									a = 0;
								x.length > a;
								a++
							)
								this.p.indexOf("border") && (x[a] = $(x[a])),
									(c = l = K(e, x[a], i, !1, "0px")),
									-1 !== c.indexOf(" ") && ((l = c.split(" ")), (c = l[0]), (l = l[1])),
									(h = f = u[a]),
									(p = parseFloat(c)),
									(y = c.substr((p + "").length)),
									(b = "=" === h.charAt(1)),
									b
										? ((d = parseInt(h.charAt(0) + "1", 10)),
										  (h = h.substr(2)),
										  (d *= parseFloat(h)),
										  (g = h.substr((d + "").length - (0 > d ? 1 : 0)) || ""))
										: ((d = parseFloat(h)), (g = h.substr((d + "").length))),
									"" === g && (g = r[n] || y),
									g !== y &&
										((w = Q(e, "borderLeft", p, y)),
										(E = Q(e, "borderTop", p, y)),
										"%" === g
											? ((c = 100 * (w / v) + "%"), (l = 100 * (E / m) + "%"))
											: "em" === g
											? ((S = Q(e, "borderLeft", 1, "em")), (c = w / S + "em"), (l = E / S + "em"))
											: ((c = w + "px"), (l = E + "px")),
										b && ((h = parseFloat(c) + d + g), (f = parseFloat(l) + d + g))),
									(o = vt(T, x[a], c + " " + l, h + " " + f, !1, "0px", o));
							return o;
						},
						prefix: !0,
						formatter: ct("0px 0px 0px 0px", !1, !0),
					}),
					yt("backgroundPosition", {
						defaultValue: "0 0",
						parser: function (e, t, n, r, s, o) {
							var u,
								a,
								f,
								l,
								c,
								h,
								p = "background-position",
								d = i || J(e, null),
								m = this.format(
									(d
										? v
											? d.getPropertyValue(p + "-x") + " " + d.getPropertyValue(p + "-y")
											: d.getPropertyValue(p)
										: e.currentStyle.backgroundPositionX +
										  " " +
										  e.currentStyle.backgroundPositionY) || "0 0"
								),
								g = this.format(t);
							if (
								(-1 !== m.indexOf("%")) != (-1 !== g.indexOf("%")) &&
								((h = K(e, "backgroundImage").replace(k, "")), h && "none" !== h)
							) {
								for (
									u = m.split(" "), a = g.split(" "), I.setAttribute("src", h), f = 2;
									--f > -1;

								)
									(m = u[f]),
										(l = -1 !== m.indexOf("%")),
										l !== (-1 !== a[f].indexOf("%")) &&
											((c = 0 === f ? e.offsetWidth - I.width : e.offsetHeight - I.height),
											(u[f] = l
												? (parseFloat(m) / 100) * c + "px"
												: 100 * (parseFloat(m) / c) + "%"));
								m = u.join(" ");
							}
							return this.parseComplex(e.style, m, g, s, o);
						},
						formatter: rt,
					}),
					yt("backgroundSize", {
						defaultValue: "0 0",
						formatter: rt,
					}),
					yt("perspective", {
						defaultValue: "0px",
						prefix: !0,
					}),
					yt("perspectiveOrigin", {
						defaultValue: "50% 50%",
						prefix: !0,
					}),
					yt("transformStyle", {
						prefix: !0,
					}),
					yt("backfaceVisibility", {
						prefix: !0,
					}),
					yt("userSelect", {
						prefix: !0,
					}),
					yt("margin", {
						parser: ht("marginTop,marginRight,marginBottom,marginLeft"),
					}),
					yt("padding", {
						parser: ht("paddingTop,paddingRight,paddingBottom,paddingLeft"),
					}),
					yt("clip", {
						defaultValue: "rect(0px,0px,0px,0px)",
						parser: function (e, t, n, r, s, o) {
							var u, a, f;
							return (
								9 > v
									? ((a = e.currentStyle),
									  (f = 8 > v ? " " : ","),
									  (u =
											"rect(" +
											a.clipTop +
											f +
											a.clipRight +
											f +
											a.clipBottom +
											f +
											a.clipLeft +
											")"),
									  (t = this.format(t).split(",").join(f)))
									: ((u = this.format(K(e, this.p, i, !1, this.dflt))), (t = this.format(t))),
								this.parseComplex(e.style, u, t, s, o)
							);
						},
					}),
					yt("textShadow", {
						defaultValue: "0px 0px 0px #999",
						color: !0,
						multi: !0,
					}),
					yt("autoRound,strictUnits", {
						parser: function (e, t, n, r, i) {
							return i;
						},
					}),
					yt("border", {
						defaultValue: "0px solid #000",
						parser: function (e, t, n, r, s, o) {
							return this.parseComplex(
								e.style,
								this.format(
									K(e, "borderTopWidth", i, !1, "0px") +
										" " +
										K(e, "borderTopStyle", i, !1, "solid") +
										" " +
										K(e, "borderTopColor", i, !1, "#000")
								),
								this.format(t),
								s,
								o
							);
						},
						color: !0,
						formatter: function (e) {
							var t = e.split(" ");
							return t[0] + " " + (t[1] || "solid") + " " + (e.match(lt) || ["#000"])[0];
						},
					}),
					yt("borderWidth", {
						parser: ht("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth"),
					}),
					yt("float,cssFloat,styleFloat", {
						parser: function (e, t, n, r, i) {
							var s = e.style,
								o = "cssFloat" in s ? "cssFloat" : "styleFloat";
							return new dt(s, o, 0, 0, i, -1, n, !1, 0, s[o], t);
						},
					});
				var Bt = function (e) {
					var t,
						n = this.t,
						r = n.filter || K(this.data, "filter") || "",
						i = 0 | (this.s + this.c * e);
					100 === i &&
						(-1 === r.indexOf("atrix(") &&
						-1 === r.indexOf("radient(") &&
						-1 === r.indexOf("oader(")
							? (n.removeAttribute("filter"), (t = !K(this.data, "filter")))
							: ((n.filter = r.replace(x, "")), (t = !0))),
						t ||
							(this.xn1 && (n.filter = r = r || "alpha(opacity=" + i + ")"),
							-1 === r.indexOf("pacity")
								? (0 === i && this.xn1) || (n.filter = r + " alpha(opacity=" + i + ")")
								: (n.filter = r.replace(E, "opacity=" + i)));
				};
				yt("opacity,alpha,autoAlpha", {
					defaultValue: "1",
					parser: function (e, t, n, r, s, o) {
						var u = parseFloat(K(e, "opacity", i, !1, "1")),
							a = e.style,
							f = "autoAlpha" === n;
						return (
							"string" == typeof t &&
								"=" === t.charAt(1) &&
								(t = ("-" === t.charAt(0) ? -1 : 1) * parseFloat(t.substr(2)) + u),
							f && 1 === u && "hidden" === K(e, "visibility", i) && 0 !== t && (u = 0),
							U
								? (s = new dt(a, "opacity", u, t - u, s))
								: ((s = new dt(a, "opacity", 100 * u, 100 * (t - u), s)),
								  (s.xn1 = f ? 1 : 0),
								  (a.zoom = 1),
								  (s.type = 2),
								  (s.b = "alpha(opacity=" + s.s + ")"),
								  (s.e = "alpha(opacity=" + (s.s + s.c) + ")"),
								  (s.data = e),
								  (s.plugin = o),
								  (s.setRatio = Bt)),
							f &&
								((s = new dt(
									a,
									"visibility",
									0,
									0,
									s,
									-1,
									null,
									!1,
									0,
									0 !== u ? "inherit" : "hidden",
									0 === t ? "hidden" : "inherit"
								)),
								(s.xs0 = "inherit"),
								r._overwriteProps.push(s.n),
								r._overwriteProps.push(n)),
							s
						);
					},
				});
				var jt = function (e, t) {
						t &&
							(e.removeProperty
								? ("ms" === t.substr(0, 2) && (t = "M" + t.substr(1)),
								  e.removeProperty(t.replace(N, "-$1").toLowerCase()))
								: e.removeAttribute(t));
					},
					Ft = function (e) {
						if (((this.t._gsClassPT = this), 1 === e || 0 === e)) {
							this.t.setAttribute("class", 0 === e ? this.b : this.e);
							for (var t = this.data, n = this.t.style; t; )
								t.v ? (n[t.p] = t.v) : jt(n, t.p), (t = t._next);
							1 === e && this.t._gsClassPT === this && (this.t._gsClassPT = null);
						} else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e);
					};
				yt("className", {
					parser: function (e, t, r, s, o, u, a) {
						var f,
							l,
							c,
							h,
							p,
							d = e.getAttribute("class") || "",
							v = e.style.cssText;
						if (
							((o = s._classNamePT = new dt(e, r, 0, 0, o, 2)),
							(o.setRatio = Ft),
							(o.pr = -11),
							(n = !0),
							(o.b = d),
							(l = Y(e, i)),
							(c = e._gsClassPT))
						) {
							for (h = {}, p = c.data; p; ) (h[p.p] = 1), (p = p._next);
							c.setRatio(1);
						}
						return (
							(e._gsClassPT = o),
							(o.e =
								"=" !== t.charAt(1)
									? t
									: d.replace(RegExp("\\s*\\b" + t.substr(2) + "\\b"), "") +
									  ("+" === t.charAt(0) ? " " + t.substr(2) : "")),
							s._tween._duration &&
								(e.setAttribute("class", o.e),
								(f = Z(e, l, Y(e), a, h)),
								e.setAttribute("class", d),
								(o.data = f.firstMPT),
								(e.style.cssText = v),
								(o = o.xfirst = s.parse(e, f.difs, o, u))),
							o
						);
					},
				});
				var It = function (e) {
					if (
						(1 === e || 0 === e) &&
						this.data._totalTime === this.data._totalDuration &&
						"isFromStart" !== this.data.data
					) {
						var t,
							n,
							r,
							i,
							s = this.t.style,
							o = a.transform.parse;
						if ("all" === this.e) (s.cssText = ""), (i = !0);
						else
							for (t = this.e.split(" ").join("").split(","), r = t.length; --r > -1; )
								(n = t[r]),
									a[n] &&
										(a[n].parse === o ? (i = !0) : (n = "transformOrigin" === n ? Tt : a[n].p)),
									jt(s, n);
						i && (jt(s, St), this.t._gsTransform && delete this.t._gsTransform);
					}
				};
				for (
					yt("clearProps", {
						parser: function (e, t, r, i, s) {
							return (
								(s = new dt(e, r, 0, 0, s, 2)),
								(s.setRatio = It),
								(s.e = t),
								(s.pr = -10),
								(s.data = i._tween),
								(n = !0),
								s
							);
						},
					}),
						f = "bezier,throwProps,physicsProps,physics2D".split(","),
						mt = f.length;
					mt--;

				)
					bt(f[mt]);
				(f = o.prototype),
					(f._firstPT = f._lastParsedTransform = f._transform = null),
					(f._onInitTween = function (e, t, u) {
						if (!e.nodeType) return !1;
						(this._target = e),
							(this._tween = u),
							(this._vars = t),
							(l = t.autoRound),
							(n = !1),
							(r = t.suffixMap || o.suffixMap),
							(i = J(e, "")),
							(s = this._overwriteProps);
						var a,
							f,
							p,
							v,
							m,
							g,
							y,
							b,
							w,
							E = e.style;
						if (
							(c &&
								"" === E.zIndex &&
								((a = K(e, "zIndex", i)),
								("auto" === a || "" === a) && this._addLazySet(E, "zIndex", 0)),
							"string" == typeof t &&
								((v = E.cssText),
								(a = Y(e, i)),
								(E.cssText = v + ";" + t),
								(a = Z(e, a, Y(e)).difs),
								!U && S.test(t) && (a.opacity = parseFloat(RegExp.$1)),
								(t = a),
								(E.cssText = v)),
							(this._firstPT = f = this.parse(e, t, null)),
							this._transformType)
						) {
							for (
								w = 3 === this._transformType,
									St
										? h &&
										  ((c = !0),
										  "" === E.zIndex &&
												((y = K(e, "zIndex", i)),
												("auto" === y || "" === y) && this._addLazySet(E, "zIndex", 0)),
										  d &&
												this._addLazySet(
													E,
													"WebkitBackfaceVisibility",
													this._vars.WebkitBackfaceVisibility || (w ? "visible" : "hidden")
												))
										: (E.zoom = 1),
									p = f;
								p && p._next;

							)
								p = p._next;
							(b = new dt(e, "transform", 0, 0, null, 2)),
								this._linkCSSP(b, null, p),
								(b.setRatio = w && Nt ? Pt : St ? Ht : Dt),
								(b.data = this._transform || _t(e, i, !0)),
								s.pop();
						}
						if (n) {
							for (; f; ) {
								for (g = f._next, p = v; p && p.pr > f.pr; ) p = p._next;
								(f._prev = p ? p._prev : m) ? (f._prev._next = f) : (v = f),
									(f._next = p) ? (p._prev = f) : (m = f),
									(f = g);
							}
							this._firstPT = v;
						}
						return !0;
					}),
					(f.parse = function (e, t, n, s) {
						var o,
							u,
							f,
							c,
							h,
							p,
							d,
							v,
							m,
							g,
							y = e.style;
						for (o in t)
							(p = t[o]),
								(u = a[o]),
								u
									? (n = u.parse(e, p, o, this, n, s, t))
									: ((h = K(e, o, i) + ""),
									  (m = "string" == typeof p),
									  "color" === o ||
									  "fill" === o ||
									  "stroke" === o ||
									  -1 !== o.indexOf("Color") ||
									  (m && T.test(p))
											? (m ||
													((p = ft(p)),
													(p = (p.length > 3 ? "rgba(" : "rgb(") + p.join(",") + ")")),
											  (n = vt(y, o, h, p, !0, "transparent", n, 0, s)))
											: !m || (-1 === p.indexOf(" ") && -1 === p.indexOf(","))
											? ((f = parseFloat(h)),
											  (d = f || 0 === f ? h.substr((f + "").length) : ""),
											  ("" === h || "auto" === h) &&
													("width" === o || "height" === o
														? ((f = nt(e, o, i)), (d = "px"))
														: "left" === o || "top" === o
														? ((f = G(e, o, i)), (d = "px"))
														: ((f = "opacity" !== o ? 0 : 1), (d = ""))),
											  (g = m && "=" === p.charAt(1)),
											  g
													? ((c = parseInt(p.charAt(0) + "1", 10)),
													  (p = p.substr(2)),
													  (c *= parseFloat(p)),
													  (v = p.replace(w, "")))
													: ((c = parseFloat(p)), (v = m ? p.replace(w, "") : "")),
											  "" === v && (v = o in r ? r[o] : d),
											  (p = c || 0 === c ? (g ? c + f : c) + v : t[o]),
											  d !== v &&
													"" !== v &&
													(c || 0 === c) &&
													f &&
													((f = Q(e, o, f, d)),
													"%" === v
														? ((f /= Q(e, o, 100, "%") / 100),
														  t.strictUnits !== !0 && (h = f + "%"))
														: "em" === v
														? (f /= Q(e, o, 1, "em"))
														: "px" !== v && ((c = Q(e, o, c, v)), (v = "px")),
													g && (c || 0 === c) && (p = c + f + v)),
											  g && (c += f),
											  (!f && 0 !== f) || (!c && 0 !== c)
													? void 0 !== y[o] && (p || ("NaN" != p + "" && null != p))
														? ((n = new dt(y, o, c || f || 0, 0, n, -1, o, !1, 0, h, p)),
														  (n.xs0 =
																"none" !== p || ("display" !== o && -1 === o.indexOf("Style"))
																	? p
																	: h))
														: W("invalid " + o + " tween value: " + t[o])
													: ((n = new dt(
															y,
															o,
															f,
															c - f,
															n,
															0,
															o,
															l !== !1 && ("px" === v || "zIndex" === o),
															0,
															h,
															p
													  )),
													  (n.xs0 = v)))
											: (n = vt(y, o, h, p, !0, null, n, 0, s))),
								s && n && !n.plugin && (n.plugin = s);
						return n;
					}),
					(f.setRatio = function (e) {
						var t,
							n,
							r,
							i = this._firstPT,
							s = 1e-6;
						if (1 !== e || (this._tween._time !== this._tween._duration && 0 !== this._tween._time))
							if (
								e ||
								(this._tween._time !== this._tween._duration && 0 !== this._tween._time) ||
								this._tween._rawPrevTime === -0.000001
							)
								for (; i; ) {
									if (
										((t = i.c * e + i.s),
										i.r ? (t = Math.round(t)) : s > t && t > -s && (t = 0),
										i.type)
									)
										if (1 === i.type)
											if (((r = i.l), 2 === r)) i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2;
											else if (3 === r)
												i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3;
											else if (4 === r)
												i.t[i.p] =
													i.xs0 + t + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4;
											else if (5 === r)
												i.t[i.p] =
													i.xs0 +
													t +
													i.xs1 +
													i.xn1 +
													i.xs2 +
													i.xn2 +
													i.xs3 +
													i.xn3 +
													i.xs4 +
													i.xn4 +
													i.xs5;
											else {
												for (n = i.xs0 + t + i.xs1, r = 1; i.l > r; r++)
													n += i["xn" + r] + i["xs" + (r + 1)];
												i.t[i.p] = n;
											}
										else -1 === i.type ? (i.t[i.p] = i.xs0) : i.setRatio && i.setRatio(e);
									else i.t[i.p] = t + i.xs0;
									i = i._next;
								}
							else for (; i; ) 2 !== i.type ? (i.t[i.p] = i.b) : i.setRatio(e), (i = i._next);
						else for (; i; ) 2 !== i.type ? (i.t[i.p] = i.e) : i.setRatio(e), (i = i._next);
					}),
					(f._enableTransforms = function (e) {
						(this._transform = this._transform || _t(this._target, i, !0)),
							(this._transformType =
								(this._transform.svg && wt) || (!e && 3 !== this._transformType) ? 2 : 3);
					});
				var qt = function () {
					(this.t[this.p] = this.e), this.data._linkCSSP(this, this._next, null, !0);
				};
				(f._addLazySet = function (e, t, n) {
					var r = (this._firstPT = new dt(e, t, 0, 0, this._firstPT, 2));
					(r.e = n), (r.setRatio = qt), (r.data = this);
				}),
					(f._linkCSSP = function (e, t, n, r) {
						return (
							e &&
								(t && (t._prev = e),
								e._next && (e._next._prev = e._prev),
								e._prev
									? (e._prev._next = e._next)
									: this._firstPT === e && ((this._firstPT = e._next), (r = !0)),
								n ? (n._next = e) : r || null !== this._firstPT || (this._firstPT = e),
								(e._next = t),
								(e._prev = n)),
							e
						);
					}),
					(f._kill = function (t) {
						var n,
							r,
							i,
							s = t;
						if (t.autoAlpha || t.alpha) {
							s = {};
							for (r in t) s[r] = t[r];
							(s.opacity = 1), s.autoAlpha && (s.visibility = 1);
						}
						return (
							t.className &&
								(n = this._classNamePT) &&
								((i = n.xfirst),
								i && i._prev
									? this._linkCSSP(i._prev, n._next, i._prev._prev)
									: i === this._firstPT && (this._firstPT = n._next),
								n._next && this._linkCSSP(n._next, n._next._next, i._prev),
								(this._classNamePT = null)),
							e.prototype._kill.call(this, s)
						);
					});
				var Rt = function (e, t, n) {
					var r, i, s, o;
					if (e.slice) for (i = e.length; --i > -1; ) Rt(e[i], t, n);
					else
						for (r = e.childNodes, i = r.length; --i > -1; )
							(s = r[i]),
								(o = s.type),
								s.style && (t.push(Y(s)), n && n.push(s)),
								(1 !== o && 9 !== o && 11 !== o) || !s.childNodes.length || Rt(s, t, n);
				};
				return (
					(o.cascadeTo = function (e, n, r) {
						var i,
							s,
							o,
							u = t.to(e, n, r),
							a = [u],
							f = [],
							l = [],
							c = [],
							h = t._internals.reservedProps;
						for (
							e = u._targets || u.target,
								Rt(e, f, c),
								u.render(n, !0),
								Rt(e, l),
								u.render(0, !0),
								u._enabled(!0),
								i = c.length;
							--i > -1;

						)
							if (((s = Z(c[i], f[i], l[i])), s.firstMPT)) {
								s = s.difs;
								for (o in r) h[o] && (s[o] = r[o]);
								a.push(t.to(c[i], n, s));
							}
						return a;
					}),
					e.activate([o]),
					o
				);
			},
			!0
		),
		(function () {
			var e = _gsScope._gsDefine.plugin({
					propName: "roundProps",
					priority: -1,
					API: 2,
					init: function (e, t, n) {
						return (this._tween = n), !0;
					},
				}),
				t = e.prototype;
			(t._onInitAllProps = function () {
				for (
					var e,
						t,
						n,
						r = this._tween,
						i =
							r.vars.roundProps instanceof Array ? r.vars.roundProps : r.vars.roundProps.split(","),
						s = i.length,
						o = {},
						u = r._propLookup.roundProps;
					--s > -1;

				)
					o[i[s]] = 1;
				for (s = i.length; --s > -1; )
					for (e = i[s], t = r._firstPT; t; )
						(n = t._next),
							t.pg
								? t.t._roundProps(o, !0)
								: t.n === e &&
								  (this._add(t.t, e, t.s, t.c),
								  n && (n._prev = t._prev),
								  t._prev ? (t._prev._next = n) : r._firstPT === t && (r._firstPT = n),
								  (t._next = t._prev = null),
								  (r._propLookup[e] = u)),
							(t = n);
				return !1;
			}),
				(t._add = function (e, t, n, r) {
					this._addTween(e, t, n, n + r, t, !0), this._overwriteProps.push(t);
				});
		})(),
		_gsScope._gsDefine.plugin({
			propName: "attr",
			API: 2,
			version: "0.3.3",
			init: function (e, t) {
				var n, r, i;
				if ("function" != typeof e.setAttribute) return !1;
				(this._target = e), (this._proxy = {}), (this._start = {}), (this._end = {});
				for (n in t)
					(this._start[n] = this._proxy[n] = r = e.getAttribute(n)),
						(i = this._addTween(this._proxy, n, parseFloat(r), t[n], n)),
						(this._end[n] = i ? i.s + i.c : t[n]),
						this._overwriteProps.push(n);
				return !0;
			},
			set: function (e) {
				this._super.setRatio.call(this, e);
				for (
					var t,
						n = this._overwriteProps,
						r = n.length,
						i = 1 === e ? this._end : e ? this._proxy : this._start;
					--r > -1;

				)
					(t = n[r]), this._target.setAttribute(t, i[t] + "");
			},
		}),
		(_gsScope._gsDefine.plugin({
			propName: "directionalRotation",
			version: "0.2.1",
			API: 2,
			init: function (e, t) {
				"object" != typeof t &&
					(t = {
						rotation: t,
					}),
					(this.finals = {});
				var n,
					r,
					i,
					s,
					o,
					u,
					a = t.useRadians === !0 ? 2 * Math.PI : 360,
					f = 1e-6;
				for (n in t)
					"useRadians" !== n &&
						((u = (t[n] + "").split("_")),
						(r = u[0]),
						(i = parseFloat(
							"function" != typeof e[n]
								? e[n]
								: e[
										n.indexOf("set") || "function" != typeof e["get" + n.substr(3)]
											? n
											: "get" + n.substr(3)
								  ]()
						)),
						(s = this.finals[n] =
							"string" == typeof r && "=" === r.charAt(1)
								? i + parseInt(r.charAt(0) + "1", 10) * Number(r.substr(2))
								: Number(r) || 0),
						(o = s - i),
						u.length &&
							((r = u.join("_")),
							-1 !== r.indexOf("short") &&
								((o %= a), o !== o % (a / 2) && (o = 0 > o ? o + a : o - a)),
							-1 !== r.indexOf("_cw") && 0 > o
								? (o = ((o + 9999999999 * a) % a) - (0 | (o / a)) * a)
								: -1 !== r.indexOf("ccw") &&
								  o > 0 &&
								  (o = ((o - 9999999999 * a) % a) - (0 | (o / a)) * a)),
						(o > f || -f > o) && (this._addTween(e, n, i, i + o, n), this._overwriteProps.push(n)));
				return !0;
			},
			set: function (e) {
				var t;
				if (1 !== e) this._super.setRatio.call(this, e);
				else
					for (t = this._firstPT; t; )
						t.f ? t.t[t.p](this.finals[t.p]) : (t.t[t.p] = this.finals[t.p]), (t = t._next);
			},
		})._autoCSS = !0),
		_gsScope._gsDefine(
			"easing.Back",
			["easing.Ease"],
			function (e) {
				var t,
					n,
					r,
					i = _gsScope.GreenSockGlobals || _gsScope,
					s = i.com.greensock,
					o = 2 * Math.PI,
					u = Math.PI / 2,
					a = s._class,
					f = function (t, n) {
						var r = a("easing." + t, function () {}, !0),
							i = (r.prototype = new e());
						return (i.constructor = r), (i.getRatio = n), r;
					},
					l = e.register || function () {},
					c = function (e, t, n, r) {
						var i = a(
							"easing." + e,
							{
								easeOut: new t(),
								easeIn: new n(),
								easeInOut: new r(),
							},
							!0
						);
						return l(i, e), i;
					},
					h = function (e, t, n) {
						(this.t = e),
							(this.v = t),
							n && ((this.next = n), (n.prev = this), (this.c = n.v - t), (this.gap = n.t - e));
					},
					p = function (t, n) {
						var r = a(
								"easing." + t,
								function (e) {
									(this._p1 = e || 0 === e ? e : 1.70158), (this._p2 = 1.525 * this._p1);
								},
								!0
							),
							i = (r.prototype = new e());
						return (
							(i.constructor = r),
							(i.getRatio = n),
							(i.config = function (e) {
								return new r(e);
							}),
							r
						);
					},
					d = c(
						"Back",
						p("BackOut", function (e) {
							return (e -= 1) * e * ((this._p1 + 1) * e + this._p1) + 1;
						}),
						p("BackIn", function (e) {
							return e * e * ((this._p1 + 1) * e - this._p1);
						}),
						p("BackInOut", function (e) {
							return 1 > (e *= 2)
								? 0.5 * e * e * ((this._p2 + 1) * e - this._p2)
								: 0.5 * ((e -= 2) * e * ((this._p2 + 1) * e + this._p2) + 2);
						})
					),
					v = a(
						"easing.SlowMo",
						function (e, t, n) {
							(t = t || 0 === t ? t : 0.7),
								null == e ? (e = 0.7) : e > 1 && (e = 1),
								(this._p = 1 !== e ? t : 0),
								(this._p1 = (1 - e) / 2),
								(this._p2 = e),
								(this._p3 = this._p1 + this._p2),
								(this._calcEnd = n === !0);
						},
						!0
					),
					m = (v.prototype = new e());
				return (
					(m.constructor = v),
					(m.getRatio = function (e) {
						var t = e + (0.5 - e) * this._p;
						return this._p1 > e
							? this._calcEnd
								? 1 - (e = 1 - e / this._p1) * e
								: t - (e = 1 - e / this._p1) * e * e * e * t
							: e > this._p3
							? this._calcEnd
								? 1 - (e = (e - this._p3) / this._p1) * e
								: t + (e - t) * (e = (e - this._p3) / this._p1) * e * e * e
							: this._calcEnd
							? 1
							: t;
					}),
					(v.ease = new v(0.7, 0.7)),
					(m.config = v.config =
						function (e, t, n) {
							return new v(e, t, n);
						}),
					(t = a(
						"easing.SteppedEase",
						function (e) {
							(e = e || 1), (this._p1 = 1 / e), (this._p2 = e + 1);
						},
						!0
					)),
					(m = t.prototype = new e()),
					(m.constructor = t),
					(m.getRatio = function (e) {
						return 0 > e ? (e = 0) : e >= 1 && (e = 0.999999999), ((this._p2 * e) >> 0) * this._p1;
					}),
					(m.config = t.config =
						function (e) {
							return new t(e);
						}),
					(n = a(
						"easing.RoughEase",
						function (t) {
							t = t || {};
							for (
								var n,
									r,
									i,
									s,
									o,
									u,
									a = t.taper || "none",
									f = [],
									l = 0,
									c = 0 | (t.points || 20),
									p = c,
									d = t.randomize !== !1,
									v = t.clamp === !0,
									m = t.template instanceof e ? t.template : null,
									g = "number" == typeof t.strength ? 0.4 * t.strength : 0.4;
								--p > -1;

							)
								(n = d ? Math.random() : (1 / c) * p),
									(r = m ? m.getRatio(n) : n),
									"none" === a
										? (i = g)
										: "out" === a
										? ((s = 1 - n), (i = s * s * g))
										: "in" === a
										? (i = n * n * g)
										: 0.5 > n
										? ((s = 2 * n), (i = 0.5 * s * s * g))
										: ((s = 2 * (1 - n)), (i = 0.5 * s * s * g)),
									d ? (r += Math.random() * i - 0.5 * i) : p % 2 ? (r += 0.5 * i) : (r -= 0.5 * i),
									v && (r > 1 ? (r = 1) : 0 > r && (r = 0)),
									(f[l++] = {
										x: n,
										y: r,
									});
							for (
								f.sort(function (e, t) {
									return e.x - t.x;
								}),
									u = new h(1, 1, null),
									p = c;
								--p > -1;

							)
								(o = f[p]), (u = new h(o.x, o.y, u));
							this._prev = new h(0, 0, 0 !== u.t ? u : u.next);
						},
						!0
					)),
					(m = n.prototype = new e()),
					(m.constructor = n),
					(m.getRatio = function (e) {
						var t = this._prev;
						if (e > t.t) {
							for (; t.next && e >= t.t; ) t = t.next;
							t = t.prev;
						} else for (; t.prev && t.t >= e; ) t = t.prev;
						return (this._prev = t), t.v + ((e - t.t) / t.gap) * t.c;
					}),
					(m.config = function (e) {
						return new n(e);
					}),
					(n.ease = new n()),
					c(
						"Bounce",
						f("BounceOut", function (e) {
							return 1 / 2.75 > e
								? 7.5625 * e * e
								: 2 / 2.75 > e
								? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
								: 2.5 / 2.75 > e
								? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
								: 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375;
						}),
						f("BounceIn", function (e) {
							return 1 / 2.75 > (e = 1 - e)
								? 1 - 7.5625 * e * e
								: 2 / 2.75 > e
								? 1 - (7.5625 * (e -= 1.5 / 2.75) * e + 0.75)
								: 2.5 / 2.75 > e
								? 1 - (7.5625 * (e -= 2.25 / 2.75) * e + 0.9375)
								: 1 - (7.5625 * (e -= 2.625 / 2.75) * e + 0.984375);
						}),
						f("BounceInOut", function (e) {
							var t = 0.5 > e;
							return (
								(e = t ? 1 - 2 * e : 2 * e - 1),
								(e =
									1 / 2.75 > e
										? 7.5625 * e * e
										: 2 / 2.75 > e
										? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
										: 2.5 / 2.75 > e
										? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
										: 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375),
								t ? 0.5 * (1 - e) : 0.5 * e + 0.5
							);
						})
					),
					c(
						"Circ",
						f("CircOut", function (e) {
							return Math.sqrt(1 - (e -= 1) * e);
						}),
						f("CircIn", function (e) {
							return -(Math.sqrt(1 - e * e) - 1);
						}),
						f("CircInOut", function (e) {
							return 1 > (e *= 2)
								? -0.5 * (Math.sqrt(1 - e * e) - 1)
								: 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1);
						})
					),
					(r = function (t, n, r) {
						var i = a(
								"easing." + t,
								function (e, t) {
									(this._p1 = e || 1),
										(this._p2 = t || r),
										(this._p3 = (this._p2 / o) * (Math.asin(1 / this._p1) || 0));
								},
								!0
							),
							s = (i.prototype = new e());
						return (
							(s.constructor = i),
							(s.getRatio = n),
							(s.config = function (e, t) {
								return new i(e, t);
							}),
							i
						);
					}),
					c(
						"Elastic",
						r(
							"ElasticOut",
							function (e) {
								return (
									this._p1 * Math.pow(2, -10 * e) * Math.sin(((e - this._p3) * o) / this._p2) + 1
								);
							},
							0.3
						),
						r(
							"ElasticIn",
							function (e) {
								return -(
									this._p1 *
									Math.pow(2, 10 * (e -= 1)) *
									Math.sin(((e - this._p3) * o) / this._p2)
								);
							},
							0.3
						),
						r(
							"ElasticInOut",
							function (e) {
								return 1 > (e *= 2)
									? -0.5 *
											this._p1 *
											Math.pow(2, 10 * (e -= 1)) *
											Math.sin(((e - this._p3) * o) / this._p2)
									: 0.5 *
											this._p1 *
											Math.pow(2, -10 * (e -= 1)) *
											Math.sin(((e - this._p3) * o) / this._p2) +
											1;
							},
							0.45
						)
					),
					c(
						"Expo",
						f("ExpoOut", function (e) {
							return 1 - Math.pow(2, -10 * e);
						}),
						f("ExpoIn", function (e) {
							return Math.pow(2, 10 * (e - 1)) - 0.001;
						}),
						f("ExpoInOut", function (e) {
							return 1 > (e *= 2)
								? 0.5 * Math.pow(2, 10 * (e - 1))
								: 0.5 * (2 - Math.pow(2, -10 * (e - 1)));
						})
					),
					c(
						"Sine",
						f("SineOut", function (e) {
							return Math.sin(e * u);
						}),
						f("SineIn", function (e) {
							return -Math.cos(e * u) + 1;
						}),
						f("SineInOut", function (e) {
							return -0.5 * (Math.cos(Math.PI * e) - 1);
						})
					),
					a(
						"easing.EaseLookup",
						{
							find: function (t) {
								return e.map[t];
							},
						},
						!0
					),
					l(i.SlowMo, "SlowMo", "ease,"),
					l(n, "RoughEase", "ease,"),
					l(t, "SteppedEase", "ease,"),
					d
				);
			},
			!0
		);
}),
	_gsScope._gsDefine && _gsScope._gsQueue.pop()(),
	(function (e, t) {
		var n = (e.GreenSockGlobals = e.GreenSockGlobals || e);
		if (!n.TweenLite) {
			var r,
				i,
				s,
				o,
				u,
				a = function (e) {
					var t,
						r = e.split("."),
						i = n;
					for (t = 0; r.length > t; t++) i[r[t]] = i = i[r[t]] || {};
					return i;
				},
				f = a("com.greensock"),
				l = 1e-10,
				c = function (e) {
					var t,
						n = [],
						r = e.length;
					for (t = 0; t !== r; n.push(e[t++]));
					return n;
				},
				h = function () {},
				p = (function () {
					var e = Object.prototype.toString,
						t = e.call([]);
					return function (n) {
						return (
							null != n &&
							(n instanceof Array || ("object" == typeof n && !!n.push && e.call(n) === t))
						);
					};
				})(),
				d = {},
				v = function (r, i, s, o) {
					(this.sc = d[r] ? d[r].sc : []), (d[r] = this), (this.gsClass = null), (this.func = s);
					var u = [];
					(this.check = function (f) {
						for (var l, c, h, p, m = i.length, g = m; --m > -1; )
							(l = d[i[m]] || new v(i[m], [])).gsClass
								? ((u[m] = l.gsClass), g--)
								: f && l.sc.push(this);
						if (0 === g && s)
							for (
								c = ("com.greensock." + r).split("."),
									h = c.pop(),
									p = a(c.join("."))[h] = this.gsClass = s.apply(s, u),
									o &&
										((n[h] = p),
										"function" == typeof define && define.amd
											? define(
													(e.GreenSockAMDPath ? e.GreenSockAMDPath + "/" : "") + r.split(".").pop(),
													[],
													function () {
														return p;
													}
											  )
											: r === t &&
											  "undefined" != typeof module &&
											  module.exports &&
											  (module.exports = p)),
									m = 0;
								this.sc.length > m;
								m++
							)
								this.sc[m].check();
					}),
						this.check(!0);
				},
				m = (e._gsDefine = function (e, t, n, r) {
					return new v(e, t, n, r);
				}),
				g = (f._class = function (e, t, n) {
					return (
						(t = t || function () {}),
						m(
							e,
							[],
							function () {
								return t;
							},
							n
						),
						t
					);
				});
			m.globals = n;
			var y = [0, 0, 1, 1],
				b = [],
				w = g(
					"easing.Ease",
					function (e, t, n, r) {
						(this._func = e),
							(this._type = n || 0),
							(this._power = r || 0),
							(this._params = t ? y.concat(t) : y);
					},
					!0
				),
				E = (w.map = {}),
				S = (w.register = function (e, t, n, r) {
					for (
						var i,
							s,
							o,
							u,
							a = t.split(","),
							l = a.length,
							c = (n || "easeIn,easeOut,easeInOut").split(",");
						--l > -1;

					)
						for (
							s = a[l], i = r ? g("easing." + s, null, !0) : f.easing[s] || {}, o = c.length;
							--o > -1;

						)
							(u = c[o]), (E[s + "." + u] = E[u + s] = i[u] = e.getRatio ? e : e[u] || new e());
				});
			for (
				s = w.prototype,
					s._calcEnd = !1,
					s.getRatio = function (e) {
						if (this._func) return (this._params[0] = e), this._func.apply(null, this._params);
						var t = this._type,
							n = this._power,
							r = 1 === t ? 1 - e : 2 === t ? e : 0.5 > e ? 2 * e : 2 * (1 - e);
						return (
							1 === n
								? (r *= r)
								: 2 === n
								? (r *= r * r)
								: 3 === n
								? (r *= r * r * r)
								: 4 === n && (r *= r * r * r * r),
							1 === t ? 1 - r : 2 === t ? r : 0.5 > e ? r / 2 : 1 - r / 2
						);
					},
					r = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
					i = r.length;
				--i > -1;

			)
				(s = r[i] + ",Power" + i),
					S(new w(null, null, 1, i), s, "easeOut", !0),
					S(new w(null, null, 2, i), s, "easeIn" + (0 === i ? ",easeNone" : "")),
					S(new w(null, null, 3, i), s, "easeInOut");
			(E.linear = f.easing.Linear.easeIn), (E.swing = f.easing.Quad.easeInOut);
			var x = g("events.EventDispatcher", function (e) {
				(this._listeners = {}), (this._eventTarget = e || this);
			});
			(s = x.prototype),
				(s.addEventListener = function (e, t, n, r, i) {
					i = i || 0;
					var s,
						a,
						f = this._listeners[e],
						l = 0;
					for (null == f && (this._listeners[e] = f = []), a = f.length; --a > -1; )
						(s = f[a]),
							s.c === t && s.s === n ? f.splice(a, 1) : 0 === l && i > s.pr && (l = a + 1);
					f.splice(l, 0, {
						c: t,
						s: n,
						up: r,
						pr: i,
					}),
						this !== o || u || o.wake();
				}),
				(s.removeEventListener = function (e, t) {
					var n,
						r = this._listeners[e];
					if (r) for (n = r.length; --n > -1; ) if (r[n].c === t) return r.splice(n, 1), void 0;
				}),
				(s.dispatchEvent = function (e) {
					var t,
						n,
						r,
						i = this._listeners[e];
					if (i)
						for (t = i.length, n = this._eventTarget; --t > -1; )
							(r = i[t]),
								r &&
									(r.up
										? r.c.call(r.s || n, {
												type: e,
												target: n,
										  })
										: r.c.call(r.s || n));
				});
			var T = e.requestAnimationFrame,
				N = e.cancelAnimationFrame,
				C =
					Date.now ||
					function () {
						return new Date().getTime();
					},
				k = C();
			for (r = ["ms", "moz", "webkit", "o"], i = r.length; --i > -1 && !T; )
				(T = e[r[i] + "RequestAnimationFrame"]),
					(N = e[r[i] + "CancelAnimationFrame"] || e[r[i] + "CancelRequestAnimationFrame"]);
			g("Ticker", function (e, t) {
				var n,
					r,
					i,
					s,
					a,
					f = this,
					c = C(),
					p = t !== !1 && T,
					d = 500,
					v = 33,
					m = "tick",
					g = function (e) {
						var t,
							o,
							u = C() - k;
						u > d && (c += u - v),
							(k += u),
							(f.time = (k - c) / 1e3),
							(t = f.time - a),
							(!n || t > 0 || e === !0) &&
								(f.frame++, (a += t + (t >= s ? 0.004 : s - t)), (o = !0)),
							e !== !0 && (i = r(g)),
							o && f.dispatchEvent(m);
					};
				x.call(f),
					(f.time = f.frame = 0),
					(f.tick = function () {
						g(!0);
					}),
					(f.lagSmoothing = function (e, t) {
						(d = e || 1 / l), (v = Math.min(t, d, 0));
					}),
					(f.sleep = function () {
						null != i &&
							(p && N ? N(i) : clearTimeout(i), (r = h), (i = null), f === o && (u = !1));
					}),
					(f.wake = function () {
						null !== i ? f.sleep() : f.frame > 10 && (k = C() - d + 5),
							(r =
								0 === n
									? h
									: p && T
									? T
									: function (e) {
											return setTimeout(e, 0 | (1e3 * (a - f.time) + 1));
									  }),
							f === o && (u = !0),
							g(2);
					}),
					(f.fps = function (e) {
						return arguments.length
							? ((n = e), (s = 1 / (n || 60)), (a = this.time + s), f.wake(), void 0)
							: n;
					}),
					(f.useRAF = function (e) {
						return arguments.length ? (f.sleep(), (p = e), f.fps(n), void 0) : p;
					}),
					f.fps(e),
					setTimeout(function () {
						p && (!i || 5 > f.frame) && f.useRAF(!1);
					}, 1500);
			}),
				(s = f.Ticker.prototype = new f.events.EventDispatcher()),
				(s.constructor = f.Ticker);
			var L = g("core.Animation", function (e, t) {
				if (
					((this.vars = t = t || {}),
					(this._duration = this._totalDuration = e || 0),
					(this._delay = Number(t.delay) || 0),
					(this._timeScale = 1),
					(this._active = t.immediateRender === !0),
					(this.data = t.data),
					(this._reversed = t.reversed === !0),
					z)
				) {
					u || o.wake();
					var n = this.vars.useFrames ? U : z;
					n.add(this, n._time), this.vars.paused && this.paused(!0);
				}
			});
			(o = L.ticker = new f.Ticker()),
				(s = L.prototype),
				(s._dirty = s._gc = s._initted = s._paused = !1),
				(s._totalTime = s._time = 0),
				(s._rawPrevTime = -1),
				(s._next = s._last = s._onUpdate = s._timeline = s.timeline = null),
				(s._paused = !1);
			var A = function () {
				u && C() - k > 2e3 && o.wake(), setTimeout(A, 2e3);
			};
			A(),
				(s.play = function (e, t) {
					return null != e && this.seek(e, t), this.reversed(!1).paused(!1);
				}),
				(s.pause = function (e, t) {
					return null != e && this.seek(e, t), this.paused(!0);
				}),
				(s.resume = function (e, t) {
					return null != e && this.seek(e, t), this.paused(!1);
				}),
				(s.seek = function (e, t) {
					return this.totalTime(Number(e), t !== !1);
				}),
				(s.restart = function (e, t) {
					return this.reversed(!1)
						.paused(!1)
						.totalTime(e ? -this._delay : 0, t !== !1, !0);
				}),
				(s.reverse = function (e, t) {
					return null != e && this.seek(e || this.totalDuration(), t), this.reversed(!0).paused(!1);
				}),
				(s.render = function () {}),
				(s.invalidate = function () {
					return (
						(this._time = this._totalTime = 0),
						(this._initted = this._gc = !1),
						(this._rawPrevTime = -1),
						(this._gc || !this.timeline) && this._enabled(!0),
						this
					);
				}),
				(s.isActive = function () {
					var e,
						t = this._timeline,
						n = this._startTime;
					return (
						!t ||
						(!this._gc &&
							!this._paused &&
							t.isActive() &&
							(e = t.rawTime()) >= n &&
							n + this.totalDuration() / this._timeScale > e)
					);
				}),
				(s._enabled = function (e, t) {
					return (
						u || o.wake(),
						(this._gc = !e),
						(this._active = this.isActive()),
						t !== !0 &&
							(e && !this.timeline
								? this._timeline.add(this, this._startTime - this._delay)
								: !e && this.timeline && this._timeline._remove(this, !0)),
						!1
					);
				}),
				(s._kill = function () {
					return this._enabled(!1, !1);
				}),
				(s.kill = function (e, t) {
					return this._kill(e, t), this;
				}),
				(s._uncache = function (e) {
					for (var t = e ? this : this.timeline; t; ) (t._dirty = !0), (t = t.timeline);
					return this;
				}),
				(s._swapSelfInParams = function (e) {
					for (var t = e.length, n = e.concat(); --t > -1; ) "{self}" === e[t] && (n[t] = this);
					return n;
				}),
				(s.eventCallback = function (e, t, n, r) {
					if ("on" === (e || "").substr(0, 2)) {
						var i = this.vars;
						if (1 === arguments.length) return i[e];
						null == t
							? delete i[e]
							: ((i[e] = t),
							  (i[e + "Params"] =
									p(n) && -1 !== n.join("").indexOf("{self}") ? this._swapSelfInParams(n) : n),
							  (i[e + "Scope"] = r)),
							"onUpdate" === e && (this._onUpdate = t);
					}
					return this;
				}),
				(s.delay = function (e) {
					return arguments.length
						? (this._timeline.smoothChildTiming &&
								this.startTime(this._startTime + e - this._delay),
						  (this._delay = e),
						  this)
						: this._delay;
				}),
				(s.duration = function (e) {
					return arguments.length
						? ((this._duration = this._totalDuration = e),
						  this._uncache(!0),
						  this._timeline.smoothChildTiming &&
								this._time > 0 &&
								this._time < this._duration &&
								0 !== e &&
								this.totalTime(this._totalTime * (e / this._duration), !0),
						  this)
						: ((this._dirty = !1), this._duration);
				}),
				(s.totalDuration = function (e) {
					return (this._dirty = !1), arguments.length ? this.duration(e) : this._totalDuration;
				}),
				(s.time = function (e, t) {
					return arguments.length
						? (this._dirty && this.totalDuration(),
						  this.totalTime(e > this._duration ? this._duration : e, t))
						: this._time;
				}),
				(s.totalTime = function (e, t, n) {
					if ((u || o.wake(), !arguments.length)) return this._totalTime;
					if (this._timeline) {
						if ((0 > e && !n && (e += this.totalDuration()), this._timeline.smoothChildTiming)) {
							this._dirty && this.totalDuration();
							var r = this._totalDuration,
								i = this._timeline;
							if (
								(e > r && !n && (e = r),
								(this._startTime =
									(this._paused ? this._pauseTime : i._time) -
									(this._reversed ? r - e : e) / this._timeScale),
								i._dirty || this._uncache(!1),
								i._timeline)
							)
								for (; i._timeline; )
									i._timeline._time !== (i._startTime + i._totalTime) / i._timeScale &&
										i.totalTime(i._totalTime, !0),
										(i = i._timeline);
						}
						this._gc && this._enabled(!0, !1),
							(this._totalTime !== e || 0 === this._duration) &&
								(this.render(e, t, !1), P.length && W());
					}
					return this;
				}),
				(s.progress = s.totalProgress =
					function (e, t) {
						return arguments.length
							? this.totalTime(this.duration() * e, t)
							: this._time / this.duration();
					}),
				(s.startTime = function (e) {
					return arguments.length
						? (e !== this._startTime &&
								((this._startTime = e),
								this.timeline &&
									this.timeline._sortChildren &&
									this.timeline.add(this, e - this._delay)),
						  this)
						: this._startTime;
				}),
				(s.endTime = function (e) {
					return (
						this._startTime + (0 != e ? this.totalDuration() : this.duration()) / this._timeScale
					);
				}),
				(s.timeScale = function (e) {
					if (!arguments.length) return this._timeScale;
					if (((e = e || l), this._timeline && this._timeline.smoothChildTiming)) {
						var t = this._pauseTime,
							n = t || 0 === t ? t : this._timeline.totalTime();
						this._startTime = n - ((n - this._startTime) * this._timeScale) / e;
					}
					return (this._timeScale = e), this._uncache(!1);
				}),
				(s.reversed = function (e) {
					return arguments.length
						? (e != this._reversed &&
								((this._reversed = e),
								this.totalTime(
									this._timeline && !this._timeline.smoothChildTiming
										? this.totalDuration() - this._totalTime
										: this._totalTime,
									!0
								)),
						  this)
						: this._reversed;
				}),
				(s.paused = function (e) {
					if (!arguments.length) return this._paused;
					if (e != this._paused && this._timeline) {
						u || e || o.wake();
						var t = this._timeline,
							n = t.rawTime(),
							r = n - this._pauseTime;
						!e && t.smoothChildTiming && ((this._startTime += r), this._uncache(!1)),
							(this._pauseTime = e ? n : null),
							(this._paused = e),
							(this._active = this.isActive()),
							!e &&
								0 !== r &&
								this._initted &&
								this.duration() &&
								this.render(
									t.smoothChildTiming ? this._totalTime : (n - this._startTime) / this._timeScale,
									!0,
									!0
								);
					}
					return this._gc && !e && this._enabled(!0, !1), this;
				});
			var O = g("core.SimpleTimeline", function (e) {
				L.call(this, 0, e), (this.autoRemoveChildren = this.smoothChildTiming = !0);
			});
			(s = O.prototype = new L()),
				(s.constructor = O),
				(s.kill()._gc = !1),
				(s._first = s._last = s._recent = null),
				(s._sortChildren = !1),
				(s.add = s.insert =
					function (e, t) {
						var n, r;
						if (
							((e._startTime = Number(t || 0) + e._delay),
							e._paused &&
								this !== e._timeline &&
								(e._pauseTime = e._startTime + (this.rawTime() - e._startTime) / e._timeScale),
							e.timeline && e.timeline._remove(e, !0),
							(e.timeline = e._timeline = this),
							e._gc && e._enabled(!0, !0),
							(n = this._last),
							this._sortChildren)
						)
							for (r = e._startTime; n && n._startTime > r; ) n = n._prev;
						return (
							n
								? ((e._next = n._next), (n._next = e))
								: ((e._next = this._first), (this._first = e)),
							e._next ? (e._next._prev = e) : (this._last = e),
							(e._prev = n),
							(this._recent = e),
							this._timeline && this._uncache(!0),
							this
						);
					}),
				(s._remove = function (e, t) {
					return (
						e.timeline === this &&
							(t || e._enabled(!1, !0),
							e._prev ? (e._prev._next = e._next) : this._first === e && (this._first = e._next),
							e._next ? (e._next._prev = e._prev) : this._last === e && (this._last = e._prev),
							(e._next = e._prev = e.timeline = null),
							e === this._recent && (this._recent = this._last),
							this._timeline && this._uncache(!0)),
						this
					);
				}),
				(s.render = function (e, t, n) {
					var r,
						i = this._first;
					for (this._totalTime = this._time = this._rawPrevTime = e; i; )
						(r = i._next),
							(i._active || (e >= i._startTime && !i._paused)) &&
								(i._reversed
									? i.render(
											(i._dirty ? i.totalDuration() : i._totalDuration) -
												(e - i._startTime) * i._timeScale,
											t,
											n
									  )
									: i.render((e - i._startTime) * i._timeScale, t, n)),
							(i = r);
				}),
				(s.rawTime = function () {
					return u || o.wake(), this._totalTime;
				});
			var M = g(
					"TweenLite",
					function (t, n, r) {
						if ((L.call(this, n, r), (this.render = M.prototype.render), null == t))
							throw "Cannot tween a null target.";
						this.target = t = "string" != typeof t ? t : M.selector(t) || t;
						var i,
							s,
							o,
							u =
								t.jquery ||
								(t.length &&
									t !== e &&
									t[0] &&
									(t[0] === e || (t[0].nodeType && t[0].style && !t.nodeType))),
							a = this.vars.overwrite;
						if (
							((this._overwrite = a =
								null == a ? R[M.defaultOverwrite] : "number" == typeof a ? a >> 0 : R[a]),
							(u || t instanceof Array || (t.push && p(t))) && "number" != typeof t[0])
						)
							for (
								this._targets = o = c(t), this._propLookup = [], this._siblings = [], i = 0;
								o.length > i;
								i++
							)
								(s = o[i]),
									s
										? "string" != typeof s
											? s.length &&
											  s !== e &&
											  s[0] &&
											  (s[0] === e || (s[0].nodeType && s[0].style && !s.nodeType))
												? (o.splice(i--, 1), (this._targets = o = o.concat(c(s))))
												: ((this._siblings[i] = X(s, this, !1)),
												  1 === a &&
														this._siblings[i].length > 1 &&
														$(s, this, null, 1, this._siblings[i]))
											: ((s = o[i--] = M.selector(s)), "string" == typeof s && o.splice(i + 1, 1))
										: o.splice(i--, 1);
						else
							(this._propLookup = {}),
								(this._siblings = X(t, this, !1)),
								1 === a && this._siblings.length > 1 && $(t, this, null, 1, this._siblings);
						(this.vars.immediateRender ||
							(0 === n && 0 === this._delay && this.vars.immediateRender !== !1)) &&
							((this._time = -l), this.render(-this._delay));
					},
					!0
				),
				_ = function (t) {
					return (
						t &&
						t.length &&
						t !== e &&
						t[0] &&
						(t[0] === e || (t[0].nodeType && t[0].style && !t.nodeType))
					);
				},
				D = function (e, t) {
					var n,
						r = {};
					for (n in e)
						q[n] ||
							(n in t &&
								"transform" !== n &&
								"x" !== n &&
								"y" !== n &&
								"width" !== n &&
								"height" !== n &&
								"className" !== n &&
								"border" !== n) ||
							!(!j[n] || (j[n] && j[n]._autoCSS)) ||
							((r[n] = e[n]), delete e[n]);
					e.css = r;
				};
			(s = M.prototype = new L()),
				(s.constructor = M),
				(s.kill()._gc = !1),
				(s.ratio = 0),
				(s._firstPT = s._targets = s._overwrittenProps = s._startAt = null),
				(s._notifyPluginsOfEnabled = s._lazy = !1),
				(M.version = "1.15.1"),
				(M.defaultEase = s._ease = new w(null, null, 1, 1)),
				(M.defaultOverwrite = "auto"),
				(M.ticker = o),
				(M.autoSleep = !0),
				(M.lagSmoothing = function (e, t) {
					o.lagSmoothing(e, t);
				}),
				(M.selector =
					e.$ ||
					e.jQuery ||
					function (t) {
						var n = e.$ || e.jQuery;
						return n
							? ((M.selector = n), n(t))
							: "undefined" == typeof document
							? t
							: document.querySelectorAll
							? document.querySelectorAll(t)
							: document.getElementById("#" === t.charAt(0) ? t.substr(1) : t);
					});
			var P = [],
				H = {},
				B = (M._internals = {
					isArray: p,
					isSelector: _,
					lazyTweens: P,
				}),
				j = (M._plugins = {}),
				F = (B.tweenLookup = {}),
				I = 0,
				q = (B.reservedProps = {
					ease: 1,
					delay: 1,
					overwrite: 1,
					onComplete: 1,
					onCompleteParams: 1,
					onCompleteScope: 1,
					useFrames: 1,
					runBackwards: 1,
					startAt: 1,
					onUpdate: 1,
					onUpdateParams: 1,
					onUpdateScope: 1,
					onStart: 1,
					onStartParams: 1,
					onStartScope: 1,
					onReverseComplete: 1,
					onReverseCompleteParams: 1,
					onReverseCompleteScope: 1,
					onRepeat: 1,
					onRepeatParams: 1,
					onRepeatScope: 1,
					easeParams: 1,
					yoyo: 1,
					immediateRender: 1,
					repeat: 1,
					repeatDelay: 1,
					data: 1,
					paused: 1,
					reversed: 1,
					autoCSS: 1,
					lazy: 1,
					onOverwrite: 1,
				}),
				R = {
					none: 0,
					all: 1,
					auto: 2,
					concurrent: 3,
					allOnStart: 4,
					preexisting: 5,
					true: 1,
					false: 0,
				},
				U = (L._rootFramesTimeline = new O()),
				z = (L._rootTimeline = new O()),
				W = (B.lazyRender = function () {
					var e,
						t = P.length;
					for (H = {}; --t > -1; )
						(e = P[t]),
							e && e._lazy !== !1 && (e.render(e._lazy[0], e._lazy[1], !0), (e._lazy = !1));
					P.length = 0;
				});
			(z._startTime = o.time),
				(U._startTime = o.frame),
				(z._active = U._active = !0),
				setTimeout(W, 1),
				(L._updateRoot = M.render =
					function () {
						var e, t, n;
						if (
							(P.length && W(),
							z.render((o.time - z._startTime) * z._timeScale, !1, !1),
							U.render((o.frame - U._startTime) * U._timeScale, !1, !1),
							P.length && W(),
							!(o.frame % 120))
						) {
							for (n in F) {
								for (t = F[n].tweens, e = t.length; --e > -1; ) t[e]._gc && t.splice(e, 1);
								0 === t.length && delete F[n];
							}
							if (
								((n = z._first),
								(!n || n._paused) && M.autoSleep && !U._first && 1 === o._listeners.tick.length)
							) {
								for (; n && n._paused; ) n = n._next;
								n || o.sleep();
							}
						}
					}),
				o.addEventListener("tick", L._updateRoot);
			var X = function (e, t, n) {
					var r,
						i,
						s = e._gsTweenID;
					if (
						(F[s || (e._gsTweenID = s = "t" + I++)] ||
							(F[s] = {
								target: e,
								tweens: [],
							}),
						t && ((r = F[s].tweens), (r[(i = r.length)] = t), n))
					)
						for (; --i > -1; ) r[i] === t && r.splice(i, 1);
					return F[s].tweens;
				},
				V = function (e, t, n, r) {
					var i,
						s,
						o = e.vars.onOverwrite;
					return (
						o && (i = o(e, t, n, r)),
						(o = M.onOverwrite),
						o && (s = o(e, t, n, r)),
						i !== !1 && s !== !1
					);
				},
				$ = function (e, t, n, r, i) {
					var s, o, u, a;
					if (1 === r || r >= 4) {
						for (a = i.length, s = 0; a > s; s++)
							if ((u = i[s]) !== t) u._gc || (V(u, t) && u._enabled(!1, !1) && (o = !0));
							else if (5 === r) break;
						return o;
					}
					var f,
						c = t._startTime + l,
						h = [],
						p = 0,
						d = 0 === t._duration;
					for (s = i.length; --s > -1; )
						(u = i[s]) === t ||
							u._gc ||
							u._paused ||
							(u._timeline !== t._timeline
								? ((f = f || J(t, 0, d)), 0 === J(u, f, d) && (h[p++] = u))
								: c >= u._startTime &&
								  u._startTime + u.totalDuration() / u._timeScale > c &&
								  (((d || !u._initted) && 2e-10 >= c - u._startTime) || (h[p++] = u)));
					for (s = p; --s > -1; )
						if (
							((u = h[s]),
							2 === r && u._kill(n, e, t) && (o = !0),
							2 !== r || (!u._firstPT && u._initted))
						) {
							if (2 !== r && !V(u, t)) continue;
							u._enabled(!1, !1) && (o = !0);
						}
					return o;
				},
				J = function (e, t, n) {
					for (var r = e._timeline, i = r._timeScale, s = e._startTime; r._timeline; ) {
						if (((s += r._startTime), (i *= r._timeScale), r._paused)) return -100;
						r = r._timeline;
					}
					return (
						(s /= i),
						s > t
							? s - t
							: (n && s === t) || (!e._initted && 2 * l > s - t)
							? l
							: (s += e.totalDuration() / e._timeScale / i) > t + l
							? 0
							: s - t - l
					);
				};
			(s._init = function () {
				var e,
					t,
					n,
					r,
					i,
					s = this.vars,
					o = this._overwrittenProps,
					u = this._duration,
					a = !!s.immediateRender,
					f = s.ease;
				if (s.startAt) {
					this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), (i = {});
					for (r in s.startAt) i[r] = s.startAt[r];
					if (
						((i.overwrite = !1),
						(i.immediateRender = !0),
						(i.lazy = a && s.lazy !== !1),
						(i.startAt = i.delay = null),
						(this._startAt = M.to(this.target, 0, i)),
						a)
					)
						if (this._time > 0) this._startAt = null;
						else if (0 !== u) return;
				} else if (s.runBackwards && 0 !== u)
					if (this._startAt)
						this._startAt.render(-1, !0), this._startAt.kill(), (this._startAt = null);
					else {
						0 !== this._time && (a = !1), (n = {});
						for (r in s) (q[r] && "autoCSS" !== r) || (n[r] = s[r]);
						if (
							((n.overwrite = 0),
							(n.data = "isFromStart"),
							(n.lazy = a && s.lazy !== !1),
							(n.immediateRender = a),
							(this._startAt = M.to(this.target, 0, n)),
							a)
						) {
							if (0 === this._time) return;
						} else
							this._startAt._init(),
								this._startAt._enabled(!1),
								this.vars.immediateRender && (this._startAt = null);
					}
				if (
					((this._ease = f =
						f
							? f instanceof w
								? f
								: "function" == typeof f
								? new w(f, s.easeParams)
								: E[f] || M.defaultEase
							: M.defaultEase),
					s.easeParams instanceof Array &&
						f.config &&
						(this._ease = f.config.apply(f, s.easeParams)),
					(this._easeType = this._ease._type),
					(this._easePower = this._ease._power),
					(this._firstPT = null),
					this._targets)
				)
					for (e = this._targets.length; --e > -1; )
						this._initProps(
							this._targets[e],
							(this._propLookup[e] = {}),
							this._siblings[e],
							o ? o[e] : null
						) && (t = !0);
				else t = this._initProps(this.target, this._propLookup, this._siblings, o);
				if (
					(t && M._onPluginEvent("_onInitAllProps", this),
					o && (this._firstPT || ("function" != typeof this.target && this._enabled(!1, !1))),
					s.runBackwards)
				)
					for (n = this._firstPT; n; ) (n.s += n.c), (n.c = -n.c), (n = n._next);
				(this._onUpdate = s.onUpdate), (this._initted = !0);
			}),
				(s._initProps = function (t, n, r, i) {
					var s, o, u, a, f, l;
					if (null == t) return !1;
					H[t._gsTweenID] && W(),
						this.vars.css ||
							(t.style &&
								t !== e &&
								t.nodeType &&
								j.css &&
								this.vars.autoCSS !== !1 &&
								D(this.vars, t));
					for (s in this.vars) {
						if (((l = this.vars[s]), q[s]))
							l &&
								(l instanceof Array || (l.push && p(l))) &&
								-1 !== l.join("").indexOf("{self}") &&
								(this.vars[s] = l = this._swapSelfInParams(l, this));
						else if (j[s] && (a = new j[s]())._onInitTween(t, this.vars[s], this)) {
							for (
								this._firstPT = f =
									{
										_next: this._firstPT,
										t: a,
										p: "setRatio",
										s: 0,
										c: 1,
										f: !0,
										n: s,
										pg: !0,
										pr: a._priority,
									},
									o = a._overwriteProps.length;
								--o > -1;

							)
								n[a._overwriteProps[o]] = this._firstPT;
							(a._priority || a._onInitAllProps) && (u = !0),
								(a._onDisable || a._onEnable) && (this._notifyPluginsOfEnabled = !0);
						} else
							(this._firstPT =
								n[s] =
								f =
									{
										_next: this._firstPT,
										t: t,
										p: s,
										f: "function" == typeof t[s],
										n: s,
										pg: !1,
										pr: 0,
									}),
								(f.s = f.f
									? t[
											s.indexOf("set") || "function" != typeof t["get" + s.substr(3)]
												? s
												: "get" + s.substr(3)
									  ]()
									: parseFloat(t[s])),
								(f.c =
									"string" == typeof l && "=" === l.charAt(1)
										? parseInt(l.charAt(0) + "1", 10) * Number(l.substr(2))
										: Number(l) - f.s || 0);
						f && f._next && (f._next._prev = f);
					}
					return i && this._kill(i, t)
						? this._initProps(t, n, r, i)
						: this._overwrite > 1 &&
						  this._firstPT &&
						  r.length > 1 &&
						  $(t, this, n, this._overwrite, r)
						? (this._kill(n, t), this._initProps(t, n, r, i))
						: (this._firstPT &&
								((this.vars.lazy !== !1 && this._duration) ||
									(this.vars.lazy && !this._duration)) &&
								(H[t._gsTweenID] = !0),
						  u);
				}),
				(s.render = function (e, t, n) {
					var r,
						i,
						s,
						o,
						u = this._time,
						a = this._duration,
						f = this._rawPrevTime;
					if (e >= a)
						(this._totalTime = this._time = a),
							(this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
							this._reversed || ((r = !0), (i = "onComplete")),
							0 === a &&
								(this._initted || !this.vars.lazy || n) &&
								(this._startTime === this._timeline._duration && (e = 0),
								(0 === e || 0 > f || (f === l && "isPause" !== this.data)) &&
									f !== e &&
									((n = !0), f > l && (i = "onReverseComplete")),
								(this._rawPrevTime = o = !t || e || f === e ? e : l));
					else if (1e-7 > e)
						(this._totalTime = this._time = 0),
							(this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
							(0 !== u || (0 === a && f > 0 && f !== l)) &&
								((i = "onReverseComplete"), (r = this._reversed)),
							0 > e &&
								((this._active = !1),
								0 === a &&
									(this._initted || !this.vars.lazy || n) &&
									(f >= 0 && (f !== l || "isPause" !== this.data) && (n = !0),
									(this._rawPrevTime = o = !t || e || f === e ? e : l))),
							this._initted || (n = !0);
					else if (((this._totalTime = this._time = e), this._easeType)) {
						var c = e / a,
							h = this._easeType,
							p = this._easePower;
						(1 === h || (3 === h && c >= 0.5)) && (c = 1 - c),
							3 === h && (c *= 2),
							1 === p
								? (c *= c)
								: 2 === p
								? (c *= c * c)
								: 3 === p
								? (c *= c * c * c)
								: 4 === p && (c *= c * c * c * c),
							(this.ratio = 1 === h ? 1 - c : 2 === h ? c : 0.5 > e / a ? c / 2 : 1 - c / 2);
					} else this.ratio = this._ease.getRatio(e / a);
					if (this._time !== u || n) {
						if (!this._initted) {
							if ((this._init(), !this._initted || this._gc)) return;
							if (
								!n &&
								this._firstPT &&
								((this.vars.lazy !== !1 && this._duration) || (this.vars.lazy && !this._duration))
							)
								return (
									(this._time = this._totalTime = u),
									(this._rawPrevTime = f),
									P.push(this),
									(this._lazy = [e, t]),
									void 0
								);
							this._time && !r
								? (this.ratio = this._ease.getRatio(this._time / a))
								: r &&
								  this._ease._calcEnd &&
								  (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
						}
						for (
							this._lazy !== !1 && (this._lazy = !1),
								this._active ||
									(!this._paused && this._time !== u && e >= 0 && (this._active = !0)),
								0 === u &&
									(this._startAt &&
										(e >= 0 ? this._startAt.render(e, t, n) : i || (i = "_dummyGS")),
									this.vars.onStart &&
										(0 !== this._time || 0 === a) &&
										(t ||
											this.vars.onStart.apply(
												this.vars.onStartScope || this,
												this.vars.onStartParams || b
											))),
								s = this._firstPT;
							s;

						)
							s.f ? s.t[s.p](s.c * this.ratio + s.s) : (s.t[s.p] = s.c * this.ratio + s.s),
								(s = s._next);
						this._onUpdate &&
							(0 > e && this._startAt && e !== -0.0001 && this._startAt.render(e, t, n),
							t ||
								((this._time !== u || r) &&
									this._onUpdate.apply(
										this.vars.onUpdateScope || this,
										this.vars.onUpdateParams || b
									))),
							i &&
								(!this._gc || n) &&
								(0 > e &&
									this._startAt &&
									!this._onUpdate &&
									e !== -0.0001 &&
									this._startAt.render(e, t, n),
								r &&
									(this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
								!t &&
									this.vars[i] &&
									this.vars[i].apply(this.vars[i + "Scope"] || this, this.vars[i + "Params"] || b),
								0 === a && this._rawPrevTime === l && o !== l && (this._rawPrevTime = 0));
					}
				}),
				(s._kill = function (e, t, n) {
					if (("all" === e && (e = null), null != e || (null != t && t !== this.target))) {
						t = "string" != typeof t ? t || this._targets || this.target : M.selector(t) || t;
						var r, i, s, o, u, a, f, l, c;
						if ((p(t) || _(t)) && "number" != typeof t[0])
							for (r = t.length; --r > -1; ) this._kill(e, t[r]) && (a = !0);
						else {
							if (this._targets) {
								for (r = this._targets.length; --r > -1; )
									if (t === this._targets[r]) {
										(u = this._propLookup[r] || {}),
											(this._overwrittenProps = this._overwrittenProps || []),
											(i = this._overwrittenProps[r] = e ? this._overwrittenProps[r] || {} : "all");
										break;
									}
							} else {
								if (t !== this.target) return !1;
								(u = this._propLookup),
									(i = this._overwrittenProps = e ? this._overwrittenProps || {} : "all");
							}
							if (u) {
								if (
									((f = e || u),
									(l = e !== i && "all" !== i && e !== u && ("object" != typeof e || !e._tempKill)),
									n && (M.onOverwrite || this.vars.onOverwrite))
								) {
									for (s in f) u[s] && (c || (c = []), c.push(s));
									if (!V(this, n, t, c)) return !1;
								}
								for (s in f)
									(o = u[s]) &&
										(o.pg && o.t._kill(f) && (a = !0),
										(o.pg && 0 !== o.t._overwriteProps.length) ||
											(o._prev
												? (o._prev._next = o._next)
												: o === this._firstPT && (this._firstPT = o._next),
											o._next && (o._next._prev = o._prev),
											(o._next = o._prev = null)),
										delete u[s]),
										l && (i[s] = 1);
								!this._firstPT && this._initted && this._enabled(!1, !1);
							}
						}
						return a;
					}
					return (this._lazy = !1), this._enabled(!1, !1);
				}),
				(s.invalidate = function () {
					return (
						this._notifyPluginsOfEnabled && M._onPluginEvent("_onDisable", this),
						(this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null),
						(this._notifyPluginsOfEnabled = this._active = this._lazy = !1),
						(this._propLookup = this._targets ? {} : []),
						L.prototype.invalidate.call(this),
						this.vars.immediateRender && ((this._time = -l), this.render(-this._delay)),
						this
					);
				}),
				(s._enabled = function (e, t) {
					if ((u || o.wake(), e && this._gc)) {
						var n,
							r = this._targets;
						if (r) for (n = r.length; --n > -1; ) this._siblings[n] = X(r[n], this, !0);
						else this._siblings = X(this.target, this, !0);
					}
					return (
						L.prototype._enabled.call(this, e, t),
						this._notifyPluginsOfEnabled && this._firstPT
							? M._onPluginEvent(e ? "_onEnable" : "_onDisable", this)
							: !1
					);
				}),
				(M.to = function (e, t, n) {
					return new M(e, t, n);
				}),
				(M.from = function (e, t, n) {
					return (
						(n.runBackwards = !0), (n.immediateRender = 0 != n.immediateRender), new M(e, t, n)
					);
				}),
				(M.fromTo = function (e, t, n, r) {
					return (
						(r.startAt = n),
						(r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender),
						new M(e, t, r)
					);
				}),
				(M.delayedCall = function (e, t, n, r, i) {
					return new M(t, 0, {
						delay: e,
						onComplete: t,
						onCompleteParams: n,
						onCompleteScope: r,
						onReverseComplete: t,
						onReverseCompleteParams: n,
						onReverseCompleteScope: r,
						immediateRender: !1,
						lazy: !1,
						useFrames: i,
						overwrite: 0,
					});
				}),
				(M.set = function (e, t) {
					return new M(e, 0, t);
				}),
				(M.getTweensOf = function (e, t) {
					if (null == e) return [];
					e = "string" != typeof e ? e : M.selector(e) || e;
					var n, r, i, s;
					if ((p(e) || _(e)) && "number" != typeof e[0]) {
						for (n = e.length, r = []; --n > -1; ) r = r.concat(M.getTweensOf(e[n], t));
						for (n = r.length; --n > -1; )
							for (s = r[n], i = n; --i > -1; ) s === r[i] && r.splice(n, 1);
					} else
						for (r = X(e).concat(), n = r.length; --n > -1; )
							(r[n]._gc || (t && !r[n].isActive())) && r.splice(n, 1);
					return r;
				}),
				(M.killTweensOf = M.killDelayedCallsTo =
					function (e, t, n) {
						"object" == typeof t && ((n = t), (t = !1));
						for (var r = M.getTweensOf(e, t), i = r.length; --i > -1; ) r[i]._kill(n, e);
					});
			var K = g(
				"plugins.TweenPlugin",
				function (e, t) {
					(this._overwriteProps = (e || "").split(",")),
						(this._propName = this._overwriteProps[0]),
						(this._priority = t || 0),
						(this._super = K.prototype);
				},
				!0
			);
			if (
				((s = K.prototype),
				(K.version = "1.10.1"),
				(K.API = 2),
				(s._firstPT = null),
				(s._addTween = function (e, t, n, r, i, s) {
					var o, u;
					return null != r &&
						(o =
							"number" == typeof r || "=" !== r.charAt(1)
								? Number(r) - n
								: parseInt(r.charAt(0) + "1", 10) * Number(r.substr(2)))
						? ((this._firstPT = u =
								{
									_next: this._firstPT,
									t: e,
									p: t,
									s: n,
									c: o,
									f: "function" == typeof e[t],
									n: i || t,
									r: s,
								}),
						  u._next && (u._next._prev = u),
						  u)
						: void 0;
				}),
				(s.setRatio = function (e) {
					for (var t, n = this._firstPT, r = 1e-6; n; )
						(t = n.c * e + n.s),
							n.r ? (t = Math.round(t)) : r > t && t > -r && (t = 0),
							n.f ? n.t[n.p](t) : (n.t[n.p] = t),
							(n = n._next);
				}),
				(s._kill = function (e) {
					var t,
						n = this._overwriteProps,
						r = this._firstPT;
					if (null != e[this._propName]) this._overwriteProps = [];
					else for (t = n.length; --t > -1; ) null != e[n[t]] && n.splice(t, 1);
					for (; r; )
						null != e[r.n] &&
							(r._next && (r._next._prev = r._prev),
							r._prev
								? ((r._prev._next = r._next), (r._prev = null))
								: this._firstPT === r && (this._firstPT = r._next)),
							(r = r._next);
					return !1;
				}),
				(s._roundProps = function (e, t) {
					for (var n = this._firstPT; n; )
						(e[this._propName] || (null != n.n && e[n.n.split(this._propName + "_").join("")])) &&
							(n.r = t),
							(n = n._next);
				}),
				(M._onPluginEvent = function (e, t) {
					var n,
						r,
						i,
						s,
						o,
						u = t._firstPT;
					if ("_onInitAllProps" === e) {
						for (; u; ) {
							for (o = u._next, r = i; r && r.pr > u.pr; ) r = r._next;
							(u._prev = r ? r._prev : s) ? (u._prev._next = u) : (i = u),
								(u._next = r) ? (r._prev = u) : (s = u),
								(u = o);
						}
						u = t._firstPT = i;
					}
					for (; u; ) u.pg && "function" == typeof u.t[e] && u.t[e]() && (n = !0), (u = u._next);
					return n;
				}),
				(K.activate = function (e) {
					for (var t = e.length; --t > -1; ) e[t].API === K.API && (j[new e[t]()._propName] = e[t]);
					return !0;
				}),
				(m.plugin = function (e) {
					if (!(e && e.propName && e.init && e.API)) throw "illegal plugin definition.";
					var t,
						n = e.propName,
						r = e.priority || 0,
						i = e.overwriteProps,
						s = {
							init: "_onInitTween",
							set: "setRatio",
							kill: "_kill",
							round: "_roundProps",
							initAll: "_onInitAllProps",
						},
						o = g(
							"plugins." + n.charAt(0).toUpperCase() + n.substr(1) + "Plugin",
							function () {
								K.call(this, n, r), (this._overwriteProps = i || []);
							},
							e.global === !0
						),
						u = (o.prototype = new K(n));
					(u.constructor = o), (o.API = e.API);
					for (t in s) "function" == typeof e[t] && (u[s[t]] = e[t]);
					return (o.version = e.version), K.activate([o]), o;
				}),
				(r = e._gsQueue))
			) {
				for (i = 0; r.length > i; i++) r[i]();
				for (s in d)
					d[s].func || e.console.log("GSAP encountered missing dependency: com.greensock." + s);
			}
			u = !1;
		}
	})(
		"undefined" != typeof module && module.exports && "undefined" != typeof global
			? global
			: this || window,
		"TweenMax"
	),
	define("tweenMax", function () {}),
	define(
		"widgets/pvp/gameSplash",
		[
			"widget",
			"application",
			"models/appState",
			"models/user",
			"text!widgets/pvp/gameSplash.html!strip",
			"text!widgets/pvp/gameSplashRandom.html!strip",
			"widgets/splash/elephant",
			"widgets/splash/advice",
			"tweenMax",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				templates: {
					found: i,
					random: s,
				},
				events: {
					"click #cancelSearch": function () {
						n.setScreen({
							screen: "index",
						});
					},
				},
				isPreviewAnimationComplete: !1,
				el: "#gameSplash",
				initialize: function (e) {
					var n = this;
					(this.params = e),
						(this.skipAnimation = e.skipAnimation),
						(this.type = e.template),
						(this.viewParam = {
							User: r,
							Application: t,
						}),
						(this.animTL = new TimelineMax({
							onComplete: function () {
								(n.isPreviewAnimationComplete = !0), n.trigger("previewAnimationComplete");
							},
						})),
						(this.template = _.template(this.templates[e.template]));
				},
				startAnimation: function () {
					this.isPreviewAnimationComplete || this.skipAnimation
						? (TweenMax.to($("#versusLabel"), 0.4, {
								opacity: 0,
						  }),
						  (this.elephant = new o({
								canvas: $("#elephant")[0],
						  })),
						  this.listenTo(this.elephant, "complete", function () {
								this.trigger("animationComplete");
						  }))
						: this.listenTo(this, "previewAnimationComplete", function () {
								this.startAnimation();
						  });
				},
				randomAnimation: function () {
					var e = [
						"Выстраиваем иерархию нейросвязей...",
						"Активируем шаманов слова...",
						"Элиминируем профанов и невежд...",
						"Сканируем базу данных эрудитов...",
					];
					(function n(r) {
						var i = $("#searchTimer"),
							s = $("#splashAvatar");
						if (i.length == 0) return;
						i.html(60 - (r % 60)),
							s.attr("src", t.params.staticUrl + "images/app/splashAvatar" + (r % 5) + ".png"),
							r > 60 && $("#cancelSearch").show();
						var o = e[r],
							u = document.getElementById("loaderText");
						if (u === null) return;
						(u.textContent = o),
							delete e[r],
							e.push(o),
							setTimeout(function () {
								n(r + 1);
							}, 1500);
					})(0);
				},
				initializeWidgets: function () {
					this.widgets.advice = new u({
						el: "#adviceContainer",
					});
				},
				afterRender: function () {
					this.params.template == "random" && this.randomAnimation(),
						$("#elephant").attr("width", $(".l-wrapper-i").width()),
						this.skipAnimation ||
							this.animTL
								.from($("#userPreview"), 0.5, {
									top: "-600px",
								})
								.from($("#opponentPreview"), 0.5, {
									top: "600px",
								})
								.from(
									$("#searchLabel"),
									0.4,
									{
										opacity: 0,
									},
									"-=0.5"
								);
					switch (this.type) {
						case "found":
							t.methods.play("bomb");
							break;
						case "random":
					}
				},
			});
			return a;
		}
	),
	define(
		"screens/pvp/game",
		[
			"widget",
			"gate",
			"application",
			"controllers/achievement",
			"social",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/gameLog",
			"controllers/gameCheat",
			"collections/popups",
			"collections/stat",
			"models/user",
			"models/appState",
			"models/game/abstract",
			"controllers/analytic",
			"models/life",
			"models/storage",
			"text!screens/pvp/game.html!strip",
			"widgets/fields/abstract",
			"widgets/pvp/gameSplash",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b) {
			var w = e.extend({
				el: "#screenContainer",
				template: _.template(g),
				events: {
					"click #showTipButton": "showTip",
				},
				initialize: function (e) {
					d.pageview("Игровое поле"),
						console.warn("game.initialize params", e),
						(this.params = e),
						(this.method = this.params.method || ""),
						(this.viewParam = {
							Application: n,
						});
					var t = c.get("userCommonProperties"),
						r = t.gameLoggingSettings;
					(this.isGameLogging = r ? r.isGameLogging : !1),
						"opponent" in e
							? (this.statModel = l.getByOpponentId(e.opponent.id))
							: (this.statModel = !1),
						console.warn("game.statModel", this.statModel),
						this.createRound(),
						this.boosterGetInfo();
				},
				afterRender: function () {
					this.initGameSplash(), (this.fieldSize = this.getFieldSize());
				},
				createRound: function () {
					this.listenToOnce(t, "createRound", function (e) {
						var t;
						(this.statModel = l.getByOpponentId(e.userId)),
							(t =
								this.statModel.get("currentGame").rounds[
									this.statModel.get("currentGame").status.nextRound - 1
								].id),
							this.getRound(t);
					});
					var e = this.params;
					if (this.statModel === !1)
						e.randomOpponent == 1
							? this.createRandGame()
							: t.createRound({
									socialId: e.opponent.socialId,
							  });
					else {
						var n = this.statModel.get("currentGame"),
							r = n.status,
							i = n.rounds,
							s = r.nextRound - 1,
							o = i[s],
							u = o ? o.id : null;
						r.value == "userTurn"
							? s in i
								? (t.joinGame(u), this.getRound(u))
								: t.createRound({
										socialId: e.opponent.socialId,
								  })
							: this.statModel.get("currentGame").status.value == "ended" &&
							  t.createRound({
									socialId: e.opponent.socialId,
							  });
					}
				},
				createRandGame: function () {
					this.listenTo(t, "createRandGame", function (e) {
						e.state == "success" &&
							(console.warn("game.initialize We find random opponent", e),
							h.setScreen({
								screen: "pvp.game",
								params: {
									skipSplashAnimation: !0,
									opponent: {
										id: e.userId,
									},
									method: "random",
								},
							}));
					}),
						t.createRandGame();
				},
				getRound: function (e) {
					this.listenTo(t, "getRound", function (e) {
						(this.roundId = e.id),
							(this.opponent =
								e.opponentPlayer.id == c.get("id") ? e.serverPlayer.id : e.opponentPlayer.id),
							console.log("this.opponent: ", this.opponent),
							(this.gameModel = new p(e.gameData)),
							this.isGameLogging &&
								u.init({
									type: "game",
									gameId: this.roundId,
									opponentId: this.opponent,
									gameFields: e.gameData,
									wordsCount: this.gameModel.getFieldWordsCount(),
								});
						if (timer) {
							this.storage = new m().setStorageInfo({
								key: this.opponent,
							});
							var n = this.storage.get("result"),
								r = this.storage.get("roundId");
							n && r == this.roundId && this.gameModel.setResult(n);
						} else console.log("timer false"), t.storage.set("lastPlayedRound", this.roundId);
						this.gameSplash.startAnimation();
					}),
						t.getRound(e);
				},
				boosterGetInfo: function () {
					this.listenTo(t, "boosterGetInfo", function (e) {
						this.tipCostRate = 1;
						var t = e.boosterInfo;
						for (var n = 0; n < t.length; n += 1)
							t[n].type == "tipCost" && (this.tipCostRate = t[n].params.rate);
					}),
						t.boosterGetInfo();
				},
				initGameSplash: function () {
					console.warn("game.skipSplashAnimation", this.params.skipSplashAnimation);
					var e = this.params.randomOpponent ? "random" : "found",
						t = this.statModel;
					console.warn("before new GS check model", t),
						(this.gameSplash = new b({
							template: e,
							model: this.statModel || this.params,
							skipAnimation: this.params.skipSplashAnimation ? this.params.skipSplashAnimation : !1,
						})),
						this.gameSplash.render(),
						this.listenTo(this.gameSplash, "animationComplete", function () {
							console.log("gameSplash animationComplete"),
								$(this.gameSplash.el).remove(),
								$(".l-screen").addClass("l-screen_game"),
								t !== !1 && t.get("currentGame").isFairGame === !0
									? $("#tipFairPlay").show()
									: (this.setTipButtonType(), $("#showTipButton").show()),
								this.startRound(this.roundId, []);
						});
				},
				startRound: function (e, n) {
					t.startRound(e, n),
						this.initGameField(),
						this.listenToOnce(t, "startRound", function () {
							var n = 120;
							(this.defaultTipCost = 25),
								(this.tipCostIndex = this.gameModel.getResult().tipCount + 1),
								(this.tipFreeIndex = 1),
								this.updateTipButtonCost();
							if (this.statModel !== !1) {
								var r = this.statModel.get("currentGame"),
									i = r.timer;
								if (timer && i) {
									var s = parseInt(i) - Date.parse(new Date()) / 1e3 + 120;
									s > 10 ? (n = s) : (n = 10);
								}
							}
							t.setRoundStartTime(this.roundId),
								this.isGameLogging && u.loggingStarted(),
								(this.field = new y({
									model: this.gameModel,
									screen: this,
									roundTime: n,
									fieldSize: this.fieldSize,
								})),
								(this.CheatController = new a("game", e, this.field)),
								$("#fieldWordsCount").text(this.gameModel.getFieldWordsCount()),
								$(".b-game__head__words").fadeIn();
						}),
						o.sendDesignEvent("Start_battle:Method:" + this.method);
				},
				getFieldSize: function () {
					var e = $(".l-game__field"),
						t = e.width(),
						n = e.height(),
						r = t <= n ? t : n,
						i = 410,
						s = i;
					return r < i && (s = r), s;
				},
				initGameField: function () {
					var e = this.fieldSize,
						t = 2,
						n = 0.08;
					$("#canvasContainer").css({
						width: e,
						height: e,
					}),
						$("#canvasContainer canvas")
							.attr({
								width: e * t,
								height: e * t,
							})
							.css({
								width: e,
								height: e,
							}),
						$(".b-game__btn").css("width", e - e * n);
				},
				save: function () {
					console.warn("save", this.gameModel, this.gameModel.isUpdated);
					var e = this.gameModel.getResult();
					(e.notExistsWords = []),
						timer
							? this.storage.set({
									roundId: this.roundId,
									result: e,
							  })
							: t.storage.set(
									"lastPlayedRound",
									JSON.stringify({
										roundId: this.roundId,
										result: e,
									})
							  ),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				checkClientAchievements: function () {
					r.onRoundComplete(this.gameModel);
				},
				sendResult: function () {
					s.checkUsedTips();
					var e = this.statModel.get("opponent");
					timer ? t.storage.remove(e.id) : t.storage.set("lastPlayedRound", ""),
						this.checkClientAchievements(this.gameModel),
						console.warn("gameModel", this.gameModel),
						e.isBot == 1
							? t.sendRobotResults(this.roundId, this.gameModel.getResult(), [])
							: t.sendResults(this.roundId, this.gameModel.getResult(), []),
						this.isGameLogging && u.sendLog(),
						this.CheatController.sendInfo(),
						h.setScreen({
							screen: "pvp.result",
							params: {
								opponent: e,
							},
						}),
						$(".l-screen").removeClass("l-screen_game"),
						!c.checkProVersion() &&
							n.params.availableSocialRV &&
							i.ad.getVideoAfterRound(this.roundId);
				},
				renderPopup: function (e) {
					$("#popup").html(""),
						$("#cover").hide(),
						(e.type == "buyCoins" || e.type == "confirmationPurchase") &&
							e &&
							($("#cover").show(), e.render());
				},
				showTip: function (e) {
					if (
						!this.field.isBackgroundComplete ||
						(this.statModel !== !1 && this.statModel.get("currentGame").isFairGame === !0)
					)
						return !1;
					var t = c.get("freeTips"),
						n = this.getCurrentTipCost();
					t > 0
						? (this.field.showTip(),
						  this.useTip(this.tipFreeIndex, "freeTips"),
						  ++this.tipFreeIndex,
						  (t -= 1),
						  c.set({
								freeTips: t,
						  }),
						  this.setTipButtonType())
						: c.get("balance") >= n
						? (d.event({
								category: "screen",
								action: "Игровое поле",
								label: "Подсказка",
						  }),
						  this.field.showTip(),
						  this.reduceBalance(n),
						  this.useTip(this.tipCostIndex, "coins"),
						  ++this.tipCostIndex,
						  this.updateTipButtonCost())
						: purchase &&
						  (f.add({
								type: "buyCoins",
						  }),
						  this.isGameLogging &&
								(u.balancePopUpShown(),
								$("#close").on("click", function () {
									$("#close").off(), u.balancePopUpHidden();
								}))),
						o.sendDesignEvent("Screen_actions:Play_field_PvP:hint");
				},
				getCurrentTipCost: function () {
					return Math.floor(this.defaultTipCost * this.tipCostRate) * this.tipCostIndex;
				},
				reduceBalance: function (e) {
					var t = c.get("balance");
					(t -= e),
						c.set({
							balance: t,
						});
				},
				updateTipButtonCost: function () {
					$("#showTipButton .b-coin").text(this.getCurrentTipCost());
				},
				setTipButtonType: function () {
					var e = c.get("freeTips");
					e > 0
						? ($("#freeTip").show().text(e), $("#coinTip").hide())
						: ($("#freeTip").hide(), $("#coinTip").show()),
						c.get("balance") < this.getCurrentTipCost() &&
							!purchase &&
							$("#showTipButton").addClass("b-btn-cheat_disabled");
				},
				useTip: function (e, t) {
					s.useTip({
						place: "game",
						id: this.roundId,
						indexes: [e],
						usageType: t,
					}),
						o.sendResourceEvent("coins", -this.getCurrentTipCost(), "hint", "Consumed"),
						o.sendDesignEvent("spend_virtual_currency:Reason:tip_pvp");
				},
				checkScreenCondition: function (e) {
					var t;
					"opponent" in e ? (t = l.getByOpponentId(e.opponent.id)) : (t = !1),
						console.log("game screen statModel: ", t);
					if (timer && t) {
						var n = t.get("currentGame"),
							r = n.timer;
						if (r) {
							var i = parseInt(r) - Date.parse(new Date()) / 1e3 + 120;
							return (
								console.log("timeDelta: ", i),
								i > 0
									? (console.log("game screenCondition: ", !0), !0)
									: (console.log("game screenCondition: ", !1), !1)
							);
						}
					}
					if (!c.checkProVersion() && v.getCount() <= 0) {
						if (!t) return this.showProVersionPopup("lifeCount"), !1;
						var n = t.get("currentGame"),
							s = parseInt(n.possibleCount),
							o = n.rounds.length > 1 && n.rounds.length < s,
							u =
								n.rounds.length == 1 &&
								"results" in n.rounds[0] &&
								n.rounds[0].results[c.get("id")] !== undefined,
							a = timer
								? n.rounds.length == 1 &&
								  (n.rounds[0].gameConfirmed == 1 || n.rounds[0].ownerId == c.get("id"))
								: !0,
							f = n.rounds.length == s && n.rounds[s - 1].results[c.get("id")] === undefined;
						console.warn("checkGameAvailable.activeGames statModel:", o, u, a, f);
						if (!(o || u || a || f)) return this.showProVersionPopup("lifeCount"), !1;
					}
					return !0;
				},
				showProVersionPopup: function (e) {
					f.add({
						type: "proVersion",
						params: {
							reason: "unratedCountGames",
							type: e,
						},
					});
				},
			});
			return w;
		}
	),
	define("models/pvp/result", ["backbone", "models/user"], function (e, t) {
		var n = e.Model.extend({
			setWithParsing: function (n, r) {
				var i = _.clone(n);
				n.serverPlayer.id === t.get("id")
					? ((i.userId = n.serverPlayer.id), (i.opponentId = n.opponentPlayer.id))
					: ((i.userId = n.opponentPlayer.id), (i.opponentId = n.serverPlayer.id)),
					(i.words = this.serializeWords(i)),
					(i.allWords = this.serializeAllWords(i)),
					e.Model.prototype.set.apply(this, [i, r]);
			},
			serializeWords: function (e) {
				var t = {};
				if (e.userId in e.results)
					for (var n = 0; n < e.results[e.userId].usedWords.length; n++) {
						var r = e.results[e.userId].usedWords[n];
						t[r.usedWord] = {
							userScore: r.usedWordScore,
						};
					}
				if (e.opponentId in e.results)
					for (var n = 0; n < e.results[e.opponentId].usedWords.length; n++) {
						var r = e.results[e.opponentId].usedWords[n];
						r.usedWord in t
							? (t[r.usedWord].opponentScore = r.usedWordScore)
							: (t[r.usedWord] = {
									opponentScore: r.usedWordScore,
							  });
					}
				return (
					(t = _.zip(_.keys(t), _.values(t))),
					(t = _.sortBy(t, function (e) {
						return -(e[1].userScore !== undefined ? e[1].userScore : e[1].opponentScore);
					})),
					t
				);
			},
			serializeAllWords: function (e) {
				var t = "words" in e.gameData ? _.uniq(e.gameData.words) : [],
					n = e.userId in e.results ? e.results[e.userId].usedWords : [],
					r = [];
				for (var i = 0; i < t.length; i++) {
					var s = _.find(n, function (e) {
						return e.usedWord == t[i];
					});
					(s = s === undefined ? "-" : s.usedWordScore),
						r.push({
							word: t[i],
							points: ((1 + t[i].length) * t[i].length) / 2,
							userScore: s,
						});
				}
				return (
					(r = _.sortBy(r, function (e) {
						return -e.points;
					})),
					r
				);
			},
		});
		return n;
	}),
	define("text!widgets/pvp/roundResult.html!strip", [], function () {
		return '<div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n    <p class="b-result__points__label">Очки</p>\n\n    <div class="b-result__points-i">\n        <div id=\'userScores\' style="width: 50%;" class="userPointsAnim b-result__points__you">\n            <div class="b-result__points__you-i">\n                <div id=\'userScoresValue\' class="b-result__points__you__data">\n                    <%= results[userId].scores %>\n                </div>\n            </div>\n        </div>\n        <div id=\'opponentScores\' style="width: 50%;" class="opponentPointsAnim b-result__points__rival">\n            <div class="b-result__points__rival-i">\n                <div id=\'opponentScoresValue\' class="b-result__points__rival__data">\n                    <%\n                    var opponentScore;\n                    if (opponentId in results) {\n                        opponentScore = results[opponentId].scores\n                    } else {\n                        if (gameConfirmed > 0) {\n                            if ((new Date(gameConfirmedTime * 1000 + 4 * 60 * 1000)) < (new Date())) {\n                                opponentScore = \'<span class="b-result__points__rival__data__text">Нет данных</span> <img class="noInfo b-result__points__rival__data__text__icon" src="\' + Application.params.staticUrl + \'images/app/result/info.png">\'\n                            } else {\n                                opponentScore = \'<span class="b-result__points__rival__data__text">Сейчас играет</span>\'\n                            }\n                        } else {\n                            opponentScore = \'<span class="b-result__points__rival__data__text">Ещё не играет </span>\'\n                        }\n                    }\n                    print(opponentScore);\n                    %>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-result__points -->\n\n    <div class="b-result__words b-result__words_lose"> <!-- b-result__words_win -->\n        <p class="b-result__words__label">Слова</p>\n\n        <div class="b-result__words-i">\n            <div class="b-result__words__you">\n                <%= results[userId].usedWords.length %>\n            </div>\n            <div class="b-result__words__rival">\n                <% var opponentWordsLength = (opponentId in results) ? results[opponentId].usedWords.length : \'-\'\n                print(opponentWordsLength);\n                %>\n            </div>\n        </div>\n        <div class="b-result__words__tabs">\n            <div class="b-result__words__tabs-i">\n                <div class="showFoundWordsButton soundingButton b-result__words__tabs__item b-result__words__tabs__item_act">\n                        <div class="b-result__words__tabs__item-i">Найденные слова</div>\n                </div>\n                <div class="showAllWordsButton soundingButton b-result__words__tabs__item b-result__words__tabs__item_all <%= (User.checkProVersion()) ? \'\' : \'b-result__words__tabs__item_lock\' %>">\n                    <div class="b-result__words__tabs__item-i">Все слова (<%=allWords.length%>)</div>\n                </div>\n            </div>\n        </div>\n        <div class="b-result__words__list">\n            <div class="foundWordsList b-result__words__list-i">\n                <%\n                if (words.length > 0) {\n                    for (var i = 0, l = words.length; i < l; i++) {\n                        var word = words[i];\n                        var userScore = word[1].userScore ? word[1].userScore : \'-\';\n                        var opponentScore = word[1].opponentScore ? word[1].opponentScore : \'-\';\n                        print(\'<div class="b-result__words__list__item">\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_you">\' + userScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_rival">\' + opponentScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item-i">\' +\n                        \'<span class="b-result__words__list__item__data">\' + word[0] + \'</span>\' +\n                        \'</div>\' +\n                        \'</div>\');\n                    }\n                } else {\n                    print(\'<div class="b-result__words__list__empty">Ты не нашёл слов!</div>\')\n                }\n                %>\n            </div>\n            <div class="allWordsList b-result__words__list-i" style="display: none">\n                <%\n                if (!HideAllWords) {\n                    for (var i = 0, l = allWords.length; i < l; i++) {\n                        var word = allWords[i];\n                        print(\'<div class="b-result__words__list__item">\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_you">\' + word.userScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_rival">\' + word.points + \'</div>\' +\n                        \'<div class="b-result__words__list__item-i">\' +\n                        \'<span class="b-result__words__list__item__data">\' + word.word + \'</span>\' +\n                        \'</div>\' +\n                        \'</div>\');\n                    }\n                }\n                %>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<!-- /.b-result__words -->';
	}),
	define("text!widgets/pvp/roundResultHidden.html!strip", [], function () {
		return '<div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n    <p class="b-result__points__label">Очки</p>\n\n    <div class="b-result__points-i">\n        <div style="width: 50%;" class="b-result__points__you">\n            <div class="b-result__points__you-i">\n                <div class="b-result__points__you__data">\n                    -\n                </div>\n            </div>\n        </div>\n        <div style="width: 50%;" class="b-result__points__rival">\n            <div class="b-result__points__rival-i">\n                <div class="b-result__points__rival__data">\n                    <span class="b-result__points__rival__data__text"> скрыто </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-result__points -->\n\n</div>\n<div class="b-result__words">\n    <div class="b-result__words__tabs">\n        <div class="b-result__words__tabs-i">\n            <div class="soundingButton b-result__words__tabs__item b-result__words__tabs__item_act">\n                <div class="b-result__words__tabs__item-i">Найденные слова</div>\n            </div>\n            <div class="soundingButton b-result__words__tabs__item b-result__words__tabs__item_lock">\n                <div class="b-result__words__tabs__item-i">Все слова</div>\n            </div>\n        </div>\n    </div>\n    <div class="b-result__words__list">\n        <div class="b-result__words__list-i">\n            <div class="b-result__words__list__empty">Список слов будет доступен после завершения раунда</div>\n        </div>\n    </div>\n</div>\n<!-- /.b-result__words -->';
	}),
	define("text!widgets/pvp/roundResultTimer.html!strip", [], function () {
		return '<div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n    <p class="b-result__points__label">Очки</p>\n\n    <div class="b-result__points-i">\n        <div style="width: 50%;" class="b-result__points__you">\n            <div class="b-result__points__you-i">\n                <div class="b-result__points__you__data">\n                    -\n                </div>\n            </div>\n        </div>\n        <div style="width: 50%;" class="b-result__points__rival">\n            <div class="b-result__points__rival-i">\n                <div class="b-result__points__rival__data">\n                    <span class="b-result__points__rival__data__text"> скрыто </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-result__points -->\n\n</div>\n<div class="b-result__info">\n    <div class="b-result__info-i">\n        <p class="b-result__info__text">Твой ход автоматически завершится, когда&nbsp;истечет время таймера. Ты&nbsp;получишь столько очков, сколько&nbsp;удалось набрать до&nbsp;выхода из&nbsp;раунда.</p>\n        <% if (timelineStart) { %>\n        <div class="b-result__timeline">\n            До конца хода: <span class="b-result__timeline__countdown"></span>\n        </div>\n        <% } else { %>\n        <div class="b-result__timeline">\n            Время хода истекло\n        </div>\n        <% } %>\n    </div>\n</div>\n<!-- /.b-result__words -->';
	}),
	define(
		"widgets/pvp/roundResult",
		[
			"widget",
			"gate",
			"application",
			"social",
			"controllers/gate",
			"controllers/gameanalytics",
			"models/appState",
			"models/storage",
			"models/user",
			"models/pvp/result",
			"controllers/analytic",
			"collections/popups",
			"text!widgets/pvp/roundResult.html!strip",
			"text!widgets/pvp/roundResultHidden.html!strip",
			"text!widgets/pvp/roundResultTimer.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = e.extend({
				template: _.template(h),
				hiddenTemplate: _.template(p),
				templateTimer: _.template(d),
				events: {
					"click .showAllWordsButton": "showAllWords",
					"click .showFoundWordsButton": "showFoundWords",
					"click .noInfo": "noInfoPopup",
				},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: n,
							User: a,
							HideAllWords: !a.checkProVersion(),
						}),
						(this.id = "#round" + e.roundData.id),
						this.setElement($(this.id)),
						this.delegateEvents(this.events),
						(this.model = new f()),
						this.model.on("change", this.renderRoundResult, this),
						this.listenTo(t, "getRound", function (t) {
							if (t.state == "error") {
								var n = $(".b-result__round__item_current").children().attr("roundid");
								$("#round" + n).html('<div class="b-result__round__empty">Нет данных</div>');
							}
							t.id == e.roundData.id && this.model.setWithParsing(t);
						});
				},
				render: function () {},
				renderRoundResult: function () {
					$("#roundResultButtonsDiv").show();
					var e,
						t = this.model instanceof Backbone.Model ? this.model.toJSON() : this.model,
						n = this.model.has("results") && a.get("id") in this.model.get("results"),
						r = Date.parse(new Date()) / 1e3,
						i = this.model.get("timeline")[a.get("id")];
					n
						? (e = this.template)
						: timer && i
						? ((e = this.templateTimer),
						  i.start - r + 120 > 0
								? (this.viewParam.timelineStart = i.start)
								: (this.viewParam.timelineStart = 0),
						  console.log("this.viewParam.timelineStart: ", this.viewParam.timelineStart))
						: (e = this.hiddenTemplate),
						this.$el.html(e(_.extend(this.viewParam, t))),
						console.log("before timeline check"),
						timer &&
							i &&
							(console.log("into timeline check"),
							i.start - r + 120 > 0 ? this.countdown(i.start) : n || this.sendResult()),
						console.log("round result model: ", t),
						t.userId in t.results &&
							t.opponentId in t.results &&
							this.viewParam.HideAllWords &&
							this.animateScoreBars(t),
						this.params.screen.roundsWithOpenedAllWords.indexOf(this.params.roundData.id) != "-1" &&
							this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_lock");
				},
				countdown: function (e) {
					var t = this;
					console.log("countdown fn timestamp: ", e);
					var r = $(this.id).find(".b-result__timeline"),
						i = r.find(".b-result__timeline__countdown"),
						s = setInterval(function () {
							var o = Date.parse(new Date()) / 1e3,
								u = parseInt(e) - o + 120;
							u <= 0 &&
								(r.text("Время хода истекло"),
								console.log("send result by countdown"),
								clearInterval(s),
								t.sendResult()),
								i.text(n.methods.roundTimer(u));
						}, 1e3);
				},
				sendResult: function () {
					console.log("round sendRusult");
					if (o.get("screen") != "result") return;
					var e = this.model.get("opponentId"),
						t = this.model.get("id");
					i.sendResult(e, t);
				},
				animateScoreBars: function (e) {
					var t = this,
						r,
						i = e.results[e.userId].scores + e.results[e.opponentId].scores;
					i > 0 ? (r = (e.results[e.userId].scores / i).toFixed(2)) : (r = 0.5),
						n.methods.play("scores");
					var s = {
						user: 0,
						opponent: 0,
					};
					TweenMax.to(s, 1.25, {
						user: e.results[e.userId].scores,
						onUpdate: function () {
							$(t.id + " #userScoresValue").html(s.user.toFixed(0));
						},
						ease: Linear.easeNone,
					}),
						TweenMax.to(s, 1.25, {
							opponent: e.results[e.opponentId].scores,
							onUpdate: function () {
								$(t.id + " #opponentScoresValue").html(s.opponent.toFixed(0));
							},
							ease: Linear.easeNone,
						}),
						TweenMax.to(this.$("#userScores"), 1.25, {
							width: r * 100 + "%",
						}),
						TweenMax.to(this.$("#opponentScores"), 1.25, {
							width: (1 - r) * 100 + "%",
						});
				},
				showAllWords: function () {
					s.sendDesignEvent("Screen_actions:Result_screen:see_all_words"),
						a.checkProVersion() == 1 || !this.viewParam.HideAllWords
							? (l.event({
									category: "screen",
									action: "Результат игры",
									label: "Все слова",
							  }),
							  this.showAllWordsTab())
							: this.params.screen.roundsWithOpenedAllWords.indexOf(this.params.roundData.id) !=
							  "-1"
							? ((this.viewParam = {
									Application: n,
									User: a,
									HideAllWords: !1,
							  }),
							  this.renderRoundResult(),
							  this.showAllWordsTab())
							: n.params.availableSocialRV
							? (c.add({
									type: "videoRewardWords",
							  }),
							  this.listenToOnce(r.ad, "getVideoForWords", function (e) {
									(this.viewParam = {
										Application: n,
										User: a,
										HideAllWords: !1,
									}),
										this.renderRoundResult(),
										this.showAllWordsTab(),
										this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_lock"),
										this.params.screen.roundsWithOpenedAllWords.push(this.params.roundData.id);
							  }))
							: c.add({
									type: "proVersion",
									params: {
										reason: "allWords",
									},
							  });
				},
				showAllWordsTab: function () {
					this.$(".showFoundWordsButton").removeClass("b-result__words__tabs__item_act"),
						this.$(".showAllWordsButton").addClass("b-result__words__tabs__item_act"),
						this.$(".foundWordsList").hide(),
						this.$(".allWordsList").show();
				},
				showFoundWords: function () {
					l.event({
						category: "screen",
						action: "Результат игры",
						label: "Найденные слова",
					}),
						s.sendDesignEvent("Screen_actions:Result_screen:see_words_found"),
						this.showFoundWordsTab();
				},
				showFoundWordsTab: function () {
					this.$(".showFoundWordsButton").addClass("b-result__words__tabs__item_act"),
						this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_act"),
						this.$(".foundWordsList").show(),
						this.$(".allWordsList").hide();
				},
				noInfoPopup: function () {
					c.add({
						type: "text",
						params: {
							header: "Ожидание противника",
							text: "С игроком была потеряна связь по одной из причин:",
							list: [
								"отсутствует доступ в интернет;",
								"соперник вышел из игры во время раунда;",
								"разрядилось устройство;",
							],
							cursiv: "Информация обновится, как только игрок вернется в игру",
						},
					});
				},
			});
			return v;
		}
	),
	define("text!widgets/pvp/resultNextRound.html!strip", [], function () {
		return '<div class="b-result__btn b-result__btn_play playWithUserButton" value=\'<% print(JSON.stringify(statModel.get("opponent").socialId)) %>\'>\n    Играть <span id="roundNumber"><%=nextRound%></span>-й\n    раунд\n</div>\n\n<div class="b-result__ctrl b-result__ctrl_alt">\n	<div class="b-result__ctrl__text">или</div>\n    <span class="selectAnotherOpponentButton soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n</div>\n\n<div class="b-result__btns-blocker g-hidden"></div>';
	}),
	define("text!widgets/pvp/resultShowResult.html!strip", [], function () {
		return '<div class="b-result__btn b-result__btn_play showResultButton">\n    Смотреть результат\n</div>\n\n<div class="b-result__ctrl b-result__ctrl_alt">\n    <div class="b-result__ctrl__text">или</div>\n    <span class="selectAnotherOpponentButton soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n</div>';
	}),
	define("text!widgets/pvp/resultOnlyChoseAnother.html!strip", [], function () {
		return '<div class="b-result__ctrl">\n    <span class="selectAnotherOpponentButton soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n</div>\n<div class="b-result__btns-blocker g-hidden"></div>';
	}),
	define(
		"widgets/pvp/resultButtons",
		[
			"widget",
			"controllers/gameanalytics",
			"models/appState",
			"controllers/analytic",
			"text!widgets/pvp/resultNextRound.html!strip",
			"text!widgets/pvp/resultShowResult.html!strip",
			"text!widgets/pvp/resultOnlyChoseAnother.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				el: "#roundResultButtonsDiv",
				events: {
					"click .playWithUserButton": function () {
						r.event({
							category: "screen",
							action: "Результат игры",
							label: "Играть",
						}),
							r.event({
								category: "screen",
								action: "Результат игры",
								label: "Новый раунд",
							}),
							t.sendDesignEvent("Screen_actions:Result_screen:play_round"),
							n.setScreen({
								screen: "pvp.game",
								params: {
									opponent: this.statModel.get("opponent"),
									method: "rematch",
								},
							});
					},
				},
				initialize: function (e) {
					var t = this;
					(this.statModel = e.model), this.listenTo(this.statModel, "change", this.render, !0);
				},
				beforeRender: function () {
					switch (this.statModel.get("currentGame").status.value) {
						case "userTurn":
							this.template = _.template(i);
							break;
						case "ended":
							this.template = _.template(s);
							break;
						case "opponentTurn":
						default:
							this.template = _.template(o);
					}
					return (
						(this.model = {
							statModel: this.statModel,
							nextRound: this.statModel.get("currentGame").status.nextRound,
						}),
						this
					);
				},
			});
			return u;
		}
	),
	define("text!screens/pvp/result.html!strip", [], function () {
		return '\n<%\nvar i;\nvar userCustomAvatar = User.get(\'customAvatar\');\nvar opponentCustomAvatar = opponent.customAvatar;\n%>\n<!-- <div id="ResultScreen" class="l-screen b-result"> -->\n    <div class="b-result__head">\n        <div class="b-result__head-i">\n            <div class="b-result__head__user">\n                <div class="b-result__head__user__rank"><%= User.get(\'level\').name %></div>\n                <div class="b-result__head__user-i resultMyAvatar">\n                    <div class="b-user b-user_result">\n                        <% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n                        <div class="custom-avatar b-user__custom-avatar">\n                            <% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n                            <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=userCustomAvatar[i]%>.png" alt="" />\n                            <% } %>\n                        </div>\n                        <% } else { %>\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%= User.get(\'avatarUrl\') %>" alt="">\n                        </div>\n                        <% } %>\n                        <img src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value %>.png" class="b-user__rank" />\n                    </div>\n                    <div class="b-result__head__user__name">Вы</div>\n                </div>\n            </div>\n\n            <div class="b-result__head__user b-result__head__user_rival">\n                <div class="b-result__head__user__rank"><%= Application.methods.levelNameByLevel(Application.methods.levelForUwins(opponent.uwins))%></div>\n                <div class="b-result__head__user-i resultOpponentAvatar">\n                    <div class="b-user b-user_result">\n                        <% if (opponentCustomAvatar && opponentCustomAvatar.length > 0) { %>\n                        <div class="custom-avatar b-user__custom-avatar">\n                            <% for (i = 0; i < opponentCustomAvatar.length; i += 1) { %>\n                            <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=opponentCustomAvatar[i]%>.png" alt="" />\n                            <% } %>\n                        </div>\n                        <% } else { %>\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%= opponent.avatarUrl %>" alt="">\n                        </div>\n                        <% } %>\n                        <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(opponent.uwins)%>.png" class="b-user__rank" />\n                    </div>\n                    <div class="b-result__head__user__name"><%= opponent.playerName%></div>\n                </div>\n            </div>\n            <% if (currentGame.status.value != \'ended\') { %>\n                <div class="b-result__head__score <%=(currentGame.isFairGame == true)? \'b-result__head__score_fair-play\' : \'\' %>">\n                    <p class="b-result__head__score__label">Счет в игре</p>\n\n                    <p class="b-result__head__score-i"><%=currentGame.score.user %>:<%=currentGame.score.opponent %></p>\n                </div>\n            <% } else if (currentGame.isFairGame == true) { %>\n                <div class="b-result__head__fair-play">\n                    <p class="b-result__head__fair-play__label">Честная игра</p>\n                    <span class="b-icon b-icon_fair-play b-result__head__fair-play__icon"></span>\n                </div>\n            <% } %>\n            <!-- /.b-result__head__score -->\n        </div>\n    </div>\n    <!-- /.b-result__head -->\n\n    <div class="l-result">\n\n        <div class="b-result__round <%=(currentGame.status.value != \'ended\')? \'b-result__round_\' + currentGame.rounds.length : \'\'%>"> <!-- b-result__round_2 b-result__round_3  -->\n            <%\n            for (i = 1; i <= currentGame.possibleCount; i++) {\n                var id = currentGame.rounds[i - 1] ? currentGame.rounds[i - 1].id : false;\n                var modEnable = (i  > currentGame.endedRounds.maxFromBoth()) ? \' b-result__round__item_disabled\' : \'\';\n                var modCurrent = \'\';\n                if (timer && currentGame.timer) {\n                    modCurrent = (i  == currentGame.status.nextRound && (currentGame.status.value!=\'ended\' || currentRound == 3)) ? \' b-result__round__item_current\' : \'\';\n                } else {\n                    modCurrent = (i  == currentGame.endedRounds.user && (currentGame.status.value!=\'ended\' || currentRound == 3)) ? \' b-result__round__item_current\' : \'\';\n                } %>\n                <div class="b-result__round__item <%=modEnable%> <%=modCurrent%>">\n                    <div roundId="<%=id%>" value="<%=i%>" class="changeRoundButton b-result__round__item-i">\n                        <img class="b-result__round__item__icon" src="<%=Application.params.staticUrl%>images/app/result/round-<%=i%>.png" alt="">\n                    </div>\n                    <p class="b-result__round__item__label">раунд</p>\n                </div>\n            <% } %>\n            <!-- /.b-result__round__item -->\n            <div class="b-result__round__item b-result__round__item_finish b-result__round__item_disabled <%=(currentGame.status.value == \'ended\' && currentRound != 3)?\'b-result__round__item_current\' : \'\' %>">\n                <div  class="showResultButton b-result__round__item-i">\n                    <img class="b-result__round__item__icon" src="<%= Application.params.staticUrl %>images/app/result/finish.png" alt="">\n                </div>\n                <p class="b-result__round__item__label">результат</p>\n            </div>\n            <!-- /.b-result__round__item -->\n        </div>\n        <!-- /.b-result__rounds -->\n\n        <div class="l-result-i">\n            <%\n            for (i = 0; i <= currentGame.possibleCount-1; i++) {\n                var id = currentGame.rounds[i]? currentGame.rounds[i].id : i; %>\n                <div id="round<%=id%>" class="round" style="display: none">\n                    <div class="b-result__loader">\n                        <div class="b-loader">\n                            <img class="b-loader-i" src="<%=Application.params.staticUrl%>images/app/loader.gif" alt="">\n                        </div>\n                    </div>\n                </div>\n            <% } %>\n\n            <div class="round gameResult" style="display: none">\n\n                <div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n                    <p class="b-result__points__label">Cчет в игре</p>\n                    <div class="b-result__points-i">\n                        <div  id="userScores" style="width: 50%;" class="b-result__points__you">\n                            <div class="b-result__points__you-i">\n                                <div id="userScoresValue" class="b-result__points__you__data">\n                                    <%=currentGame.score.user%>\n                                </div>\n                            </div>\n                        </div>\n                        <div id="opponentScores" style="width: 50%;" class="b-result__points__rival">\n                            <div class="b-result__points__rival-i">\n                                <div id="opponentScoresValue" class="b-result__points__rival__data">\n                                    <%=currentGame.score.opponent%>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.b-reslut__points -->\n\n                <div class="b-result__data">\n                    <%\n                    var funFaceImgName = null;\n                    var resultTitle = \'\';\n                    switch (true) {\n                        case (currentGame.score.opponent > currentGame.score.user):\n                            funFaceImgName = \'lose\';\n                            resultTitle = \'ПОРАЖЕНИЕ\';\n                            break;\n                        case (currentGame.score.opponent < currentGame.score.user):\n                            funFaceImgName = \'win\';\n                            resultTitle = \'ПОБЕДА\';\n                            break;\n                        case (currentGame.score.opponent == currentGame.score.user):\n                            funFaceImgName = \'draw\';\n                            resultTitle = \'НИЧЬЯ\';\n                            break;\n                    } \n                    %>\n                    <div class="b-result__data__icon">\n                        <img id=\'smilePicture\' class="b-result__data__icon-i" src="<%= Application.params.staticUrl %>images/app/funFace/<%=funFaceImgName%>.png" alt="">\n                    </div>\n                    <div id=\'resultDescriptionContainer\' class="b-result__data-i">\n                        <h2 class="b-result__data__title"><%=resultTitle%></h2>\n                        <p class="b-result__data__count">\n                        <% \n                        if (\'ratingInfo\' in currentGame) {\n                            var ratingInfo = currentGame.ratingInfo;\n                            var tokensInfo = currentGame.tokensInfo;\n                            var bookInfo = currentGame.bookInfo;\n                            var chaseInfo = currentGame.chaseInfo;\n                            var user = User.get(\'id\');\n                            if ((\'resetRating\' in currentGame) && currentGame.resetRating > 0) { %>\n                            Поражение не зачтено\n                            <% } else {\n                                var rating = ratingInfo[user].ratingAfter-ratingInfo[user].ratingBefore;\n                                if (rating > 0) { %>\n                                    <span class="b-result__data__count__item b-result__data__count__item_rate">\n                                        <span class="b-result__data__count__item-i">+<%=rating%></span>\n                                        <img class="b-result__data__count__item__icon" src="<%=Application.params.staticUrl%>images/app/icons/star_result.png" alt="">\n                                    </span>\n                                    <% if (!User.checkProVersion()) { %>\n                                        <span class="b-result__data__count__item b-result__data__count__item_life">\n                                            <span class="b-result__data__count__item-i">+1</span>\n                                            <img class="b-result__data__count__item__icon" src="<%=Application.params.staticUrl%>images/app/icons/life_result.png" alt="">\n                                        </span>\n                                    <% } \n                                } else { %>\n                                    <span class="b-result__data__count__item b-result__data__count__item_rate">\n                                        <span class="b-result__data__count__item-i"><%=rating%></span>\n                                        <img class="b-result__data__count__item__icon" src="<%=Application.params.staticUrl%>images/app/icons/star_result.png" alt="">\n                                    </span>\n                                <% }\n                            }\n                            if (tokensInfo && tokensInfo[user]) { %>\n                                <span class="b-result__data__count__item b-result__data__count__item_seasonPass">\n                                    <span class="b-result__data__count__item-i">+<%= tokensInfo[user] %></span>\n                                    <img class="b-result__data__count__item__icon" src="<%= Application.params.staticUrl %>images/app/season-pass/icon-token.png" alt="">\n                                </span>\n                            <% }\n                            if (bookInfo && bookInfo[user]) { %>\n                                <span class="b-result__data__count__item b-result__data__count__item_rate">\n                                    <span class="b-result__data__count__item-i">+<%= bookInfo[user] %></span>\n                                    <img class="b-result__data__count__item__icon" src="<%= Application.params.staticUrl %>images/app/icons/books.png" alt="">\n                                </span>\n                            <% }\n                            if (chaseInfo && chaseInfo.count && chaseInfo.count[user]) { %>\n                                <span class="b-result__data__count__item b-result__data__count__item_chase">\n                                    <span class="b-result__data__count__item-i">+<%= chaseInfo.count[user] %></span>\n                                    <img class="b-result__data__count__item__icon" src="<%= chaseInfo.bonusUrl %>" alt="">\n                                </span>\n                            <% }\n                        } %>\n                        </p>\n\n                        <%\n                        var uwins = User.get(\'uwins\');\n                        var nextLevel = Application.methods.levelForUwins(uwins) + 1;\n                        if (nextLevel <= Application.params.MAX_LEVEL) {\n                            var nextLevelName = Application.methods.levelNameByLevel(nextLevel);\n                            var uwinsLeft = Application.methods.startUwinsForLevel(nextLevel) - uwins; %>\n                            <p class="b-result__data__rank">\n                                До уровня \n                                <span class="b-result__data__rank-i"><%=nextLevelName%></span>\n                                <br />\n                                <%=Application.methods.declension(uwinsLeft,[\'осталась\', \'осталось\', \'осталось\'])%>\n                                <%=uwinsLeft%> <%=Application.methods.declension(uwinsLeft,[\'победа\', \'победы\', \'побед\'])%>\n                            </p>\n                        <% } %>\n                        <p class="b-result__data__stats">\n                            <span id="showRating" class="b-result__data__stats-i">Посмотреть рейтинг в сезоне</span>\n                        </p>\n                    </div>\n                </div>\n                <!-- /.b-reslut__data -->\n\n                <div id=\'shareVictoryButton\' class="b-result__btn b-result__btn_share" style="display: none">\n                    Поделись рекордом\n                </div>\n\n                <div id =\'revengeButton\' class="b-result__btn b-result__btn_play">\n                    <% if (currentGame.score.user >= currentGame.score.opponent) { %>\n                    Закрепить успех\n                    <% } else { %>\n                    Взять реванш\n                    <% } %>\n                </div>\n\n                <div class="b-result__ctrl b-result__ctrl_alt">\n                    <div class="b-result__ctrl__text">или</div>\n                    <span class="selectAnotherOpponentButton soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n                </div>\n\n            </div>\n            <!-- /.gameResult -->\n        </div>\n        <!-- /.l-result-i -->\n        <div id="roundResultButtonsDiv" style="display: none;"></div>\n    </div>\n<!-- </div> -->';
	}),
	define(
		"screens/pvp/result",
		[
			"gate",
			"application",
			"widget",
			"controllers/popups",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"models/pvp/result",
			"controllers/analytic",
			"collections/stat",
			"collections/popups",
			"widgets/pvp/roundResult",
			"widgets/pvp/resultButtons",
			"text!screens/pvp/result.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p) {
			var d = n.extend({
				el: "#screenContainer",
				template: _.template(p),
				widgets: [],
				isSmileAnimationComplete: !1,
				events: {
					"click .changeRoundButton": "showRound",
					"click .showResultButton": "showGameResult",
					"click #showRating": "showRating",
					"click #backButton": function () {
						s.back();
					},
					"click #revengeButton": "playWithUser",
					"click .selectAnotherOpponentButton": function () {
						a.event({
							category: "screen",
							action: "Результат игры",
							label: "Выбрать другого соперника",
						}),
							i.sendDesignEvent("Screen_actions:Result_screen:another_opponent"),
							s.setScreen({
								screen: "index",
							});
					},
					"click #shareVictoryButton": function () {
						i.sendDesignEvent("Screen_actions:Result_screen:share_result"),
							e.wallPost.win(this.model);
					},
					"click .resultMyAvatar": "showMyStat",
					"click .resultOpponentAvatar": "showOpponentStat",
				},
				showRound: function (e) {
					$(e.currentTarget).attr("roundid") != "false" &&
						($(".round").hide(),
						$("#roundResultButtonsDiv").show(),
						this.getRound($(e.currentTarget).attr("roundid")),
						$(".b-result__round__item").removeClass("b-result__round__item_current"),
						$(e.currentTarget).parent().addClass("b-result__round__item_current"),
						$("#round" + $(e.currentTarget).attr("roundid")).show());
				},
				initialize: function (e) {
					var n = this;
					(this.params = e || this.params),
						(this.roundsWithOpenedAllWords = []),
						a.pageview("Результат игры"),
						(this.smileTimeLine = new TimelineMax()),
						(this.model = f.getByOpponentId(this.params.opponent.id)),
						(this.currentRound = this.model.get("currentGame").status.nextRound),
						console.log("currentRound: ", this.currentRound),
						(this.viewParam = {
							Application: t,
							User: o,
							currentRound: this.currentRound,
						}),
						this.listenTo(this.model, "change", this.render),
						this.listenToOnce(this, "playResultSound", function (e) {
							e && t.methods.play(e);
						});
				},
				initializeWidgets: function () {
					var e = this.model.get("currentGame").rounds;
					for (var t = 0; t < e.length; t++)
						this.widgets.push(
							new c({
								roundData: e[t],
								screen: this,
							})
						);
					this.widgets.push(
						new h({
							model: this.model,
						})
					);
				},
				afterRender: function () {
					var e = this.model.get("currentGame"),
						r = this.model.get("currentGame").rounds,
						i = o.get("id");
					if (e.status.value !== "ended" || this.currentRound == 3) {
						var s = e.endedRounds.user - 1 > 0 ? e.endedRounds.user - 1 : 0;
						timer && e.timer && (s = e.status.nextRound - 1),
							this.getRound(r[s].id),
							$("#round" + e.rounds[s].id).show();
					} else this.showGameResult();
					"ratingInfo" in e &&
						$(".b-result__round__item_finish").removeClass("b-result__round__item_disabled"),
						"ratingInfo" in e &&
							e.score.user >= e.score.opponent &&
							t.params.availableSocialFriends &&
							$("#shareVictoryButton").show(),
						n.prototype.afterRender.apply(this, arguments);
				},
				animateScores: function (e) {
					e == 0 && (e = 0.5), t.methods.play("scores");
					var n = this.model.get("currentGame"),
						r = {
							user: 0,
							opponent: 0,
						};
					TweenMax.to(r, 1.25, {
						user: n.score.user,
						onUpdate: function () {
							$("#userScoresValue").html(r.user.toFixed(0));
						},
						ease: Linear.easeNone,
					}),
						TweenMax.to(r, 1.25, {
							opponent: n.score.opponent,
							onUpdate: function () {
								$("#opponentScoresValue").html(r.opponent.toFixed(0));
							},
							ease: Linear.easeNone,
						}),
						TweenMax.to($("#userScores"), 1.25, {
							width: e * 100 + "%",
						}),
						TweenMax.to($("#opponentScores"), 1.25, {
							width: (1 - e) * 100 + "%",
						});
				},
				animateSmile: function () {
					if (!this.isSmileAnimationComplete) {
						var e = this.model.get("currentGame");
						this.animateScores((e.score.user / (e.score.user + e.score.opponent)).toFixed(2)),
							this.smileTimeLine
								.from($("#smilePicture"), 2, {
									marginLeft: Math.PI * 91 * 1.2,
									rotation: 432,
								})
								.from($("#resultDescriptionContainer"), 0.8, {
									opacity: 0,
								}),
							(this.isSmileAnimationComplete = !0);
					}
				},
				getRound: function (t) {
					e.getRound(t);
				},
				showGameResult: function () {
					if (this.model.get("currentGame").status.value == "ended") {
						var e = this.model.get("currentGame").score,
							n = "finish_no_sides";
						switch (!0) {
							case e.user > e.opponent:
								n = "finish_win";
								break;
							case e.user < e.opponent:
								n = "";
						}
						this.trigger("playResultSound", n),
							$(".round").hide(),
							$(".b-result__round__item").removeClass("b-result__round__item_current"),
							$(".b-result__round__item_finish").removeClass("b-result__round__item_disabled"),
							$(".showResultButton").parent().addClass("b-result__round__item_current"),
							$("#roundResultButtonsDiv").hide(),
							$(".gameResult").show(),
							this.animateSmile(),
							t.params.availableSocialFriends && r.afterGameEndPopup();
					}
				},
				showRating: function () {
					i.sendDesignEvent("Screen_actions:Result_screen:rating"),
						s.setScreen({
							screen: "rating",
						});
				},
				showMyStat: function () {
					s.setScreen({
						screen: "userInfo",
						params: {
							id: o.get("id"),
						},
					});
				},
				showOpponentStat: function () {
					var e = this.model.get("opponent").id;
					i.sendDesignEvent("Screen_actions:Result_screen:opponent_profile"),
						s.setScreen({
							screen: "userInfo",
							params: {
								id: e,
							},
						});
				},
				playWithUser: function () {
					var e = this.model.get("opponent");
					i.sendDesignEvent("Screen_actions:Result_screen:rematch"),
						s.setScreen({
							screen: "pvp.game",
							params: {
								opponent: e,
								method: "rematch",
							},
						});
				},
			});
			return d;
		}
	),
	define("text!screens/balance/products.html!strip", [], function () {
		return '<%\nvar balanceCount = UserModel.get(\'balance\');\nvar products = this.model;\nvar productWithBonus = _.find(products, function(product) { return product.numberFirstPurchase > 0; });\n%>\n\n<div class="balance balance_page">\n    <div class="balance__head">\n        <div class="balance__head-ctrl">\n            <div class="b-btn-menu soundingButton" id="menuButton"></div>\n        </div>\n        <div id="showInfoPopup" class="balance__head-info soundingButton"> \n            <div class="btn-info"></div>\n        </div>\n        <div class="balance__head-data" id="balanceData">\n            <div class="balance__head-label balance__head-label_title">Баланс</div>\n            <div class="balance__head-count" style="font-size: <%= balanceCount > 9999? \'18px\' : \'22px\' %>;"><%= balanceCount %></div>\n            <div class="balance__head-label balance__head-label_units">монет</div>\n        </div>\n    </div>\n\n    <div class="balance__content">\n        <div class="balance__title">\n            <div class="balance__title-text">Пополнить</div>\n            <% if (productWithBonus) { %>\n            <div class="balance__bonus"> \n                <div class="balance__bonus-title">+100% за первую покупку!</div>\n            </div>\n            <% } %>\n        </div>\n\n        <div id="productsList" class="products-list"></div>\n        <!-- /.products-list -->\n    </div>\n\n    <div class="balance__free-coins">\n    <% if (Application.params.availableSocialRV) { %>\n        <div class="balance__free-coins-btn b-btn b-btn_violet soundingButton" id="freeCoinsBtn"> \n            <div class="icon icon_free-coins"></div>\n            Монеты бесплатно\n        </div>\n    <% } %>\n    </div>\n\n</div>\n';
	}),
	define(
		"screens/balance/products",
		[
			"widget",
			"application",
			"gate",
			"controllers/gameanalytics",
			"controllers/analytic",
			"controllers/usedesk",
			"models/user",
			"models/product",
			"models/appState",
			"widgets/balance/product",
			"text!screens/balance/products.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = e.extend({
				template: _.template(l),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #freeCoinsBtn": function () {
						r.sendDesignEvent("Screen_actions:Balance:free_coins"),
							a.setScreen({
								screen: "freeCoins",
							});
					},
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function () {
					var e = this;
					i.pageview("Баланс"),
						(this.model = u.get("products")),
						this.listenTo(u, "productsUpdated", function () {
							(this.model = u.get("products")), e.render();
						}),
						(this.viewParam = {
							Application: t,
							UserModel: o,
						});
				},
				afterRender: function () {
					TweenMax.from("#balanceData", 0.75, {
						top: -150,
						ease: Power3.easeOut,
					});
					if (purchase) {
						$("#productsList").html("");
						if (!_.isEmpty(this.model))
							for (var e = 0; e < this.model.length; e++) {
								var t = new f({
									model: this.model[e],
									context: "screen",
								});
								$("#productsList").append(t.returnableRender());
							}
					} else $(".balance__title").hide();
				},
				showInfoPopup: function () {
					s.showInfoPopup("balance");
				},
			});
			return c;
		}
	),
	define("text!screens/balance/freeCoins.html!strip", [], function () {
		return '<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back b-btn-back_help"></div>\n    </div>\n    <div class="b-screen-head__title">Монеты бесплатно</div>\n</div>\n<!-- /.b-screen-head -->\n\n<% if (count > 0) { %>\n<div id="getFreeCoins" class="get-free-coins">\n    <img class="get-free-coins__icon" src="<%= Application.params.staticUrl %>images/app/video-reward/reward-video.png" alt="">\n    <div class="get-free-coins__text">\n        <div class="get-free-coins__title">Посмотреть видеоролик</div>\n        <div class="get-free-coins__info">Доступно <%=count%> видео</div>\n    </div>\n    <div class="get-free-coins__reward">\n        <span class="b-coin"><%=coins%></span>\n    </div>\n</div>\n<% } else { %>\n<div class="get-free-coins get-free-coins_noads">\n    <img class="get-free-coins__icon" src="<%= Application.params.staticUrl %>images/app/video-reward/reward-video_noads.png" alt="">\n    <div class="get-free-coins__text">\n        <div class="get-free-coins__title">Посмотреть видеоролик</div>\n        <div class="get-free-coins__info">Будет доступно через <%=Application.methods.getFormattedTime(time)%></div>\n    </div>\n</div>\n<% } %>\n\n';
	}),
	define(
		"screens/balance/freeCoins",
		[
			"widget",
			"application",
			"gate",
			"social",
			"controllers/analytic",
			"models/appState",
			"collections/popups",
			"text!screens/balance/freeCoins.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #getFreeCoins": "showVideoRewardPopup",
				},
				initialize: function () {
					i.pageview("Монеты бесплатно"),
						console.log("time diff: ", moment(r.ad.videoRestoreTime.coins * 1e3).diff(moment())),
						(this.viewParam = {
							Application: t,
							coins: t.params.services.adsSettings.rewardVideo.coins.reward,
							count: r.ad.availableViewCount.coins,
							time: moment(r.ad.videoRestoreTime.coins * 1e3).diff(moment()),
						}),
						moment(r.ad.videoRestoreTime.coins * 1e3).diff(moment()) <= 0 &&
							n.videoRewardGetAvailableCount();
				},
				afterRender: function () {
					this.listenTo(r.ad, "videoRewardGetAvailableCount", this.updateViewParamAndRender),
						this.listenTo(r.ad, "videoRewardForCoins", this.updateViewParamAndRender);
				},
				showVideoRewardPopup: function () {
					o.add({
						type: "videoRewardConfirm",
						params: {
							rewardType: "coins",
						},
					}),
						i.event({
							category: "popup",
							action: "rewardVideoCoins",
							label: "show",
						});
				},
				updateViewParamAndRender: function () {
					(this.viewParam.count = r.ad.availableViewCount.coins),
						(this.viewParam.time = moment(r.ad.videoRestoreTime.coins * 1e3).diff(moment())),
						this.render();
				},
			});
			return a;
		}
	),
	define("text!widgets/wardrobe/avatar.html!strip", [], function () {
		return '<%\nvar i;\nvar User = this.model;\nvar customAvatar = this.model.get(\'customAvatar\');\n%>\n\n<div class="b-user b-user_wardrobe">\n    <% if (customAvatar.length > 0) { %>\n    <div class="custom-avatar b-user__custom-avatar">\n        <% for (i = 0; i < customAvatar.length; i += 1) { %>\n        <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n        <% } %>\n    </div>\n    <% } else { %>\n    <div class="b-user__pic">\n        <img class="b-user__pic-i" alt="" src="<%= User.get(\'avatarUrl\') %>">\n    </div>\n    <% } %>\n    <img class="b-user__rank" src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value%>.png" />\n</div>';
	}),
	define(
		"widgets/wardrobe/avatar",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/gamePart",
			"text!widgets/wardrobe/avatar.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#wardrobeAvatarWidget",
				events: {},
				initialize: function (e) {
					var n = this;
					(this.model = o),
						this.listenTo(this.model, "change", this.render),
						(this.viewParam = {
							Application: t,
						});
				},
			});
			return f;
		}
	),
	define("text!widgets/wardrobe/avatarSettings.html!strip", [], function () {
		return '<% \nvar i, j, id;\nvar types = Application.params.wardrobeBaseItemType;\nvar type;\nvar baseItem;\nvar baseItemId\nvar itemsList;\n\nvar baseItems = WardrobeController.getBaseItems();\nvar isAvailableCustomAvatar = baseItems.length;\n\nfor (i = 0; i < types.length; i += 1) {\n    baseItem = null;\n    baseItemId = null;\n    type = types[i]; \n    if (isAvailableCustomAvatar) {\n        baseItem = baseItems.get(type);\n        baseItemId = baseItem.get(\'itemId\');\n    }\n    itemsList = this.model.get(type + \'List\');\n%>\n    <div class="wardrobe-avatar-item">\n        <div class="wardrobe-avatar-item__ctrl">\n            <% if (isAvailableCustomAvatar) { %>\n            <img class="wardrobe-avatar-item__icon" src="https://cdn.wordbyword.me/content/clothes/<%=baseItemId%>.png" alt="" />\n            <% } else { %>\n            <img class="wardrobe-avatar-item__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/avatar-<%=type%>.png" alt="" />\n            <% } %>\n            <div class="wardrobe-avatar-items-list wardrobe-avatar-items-list_<%=type%>">\n                <div data-simplebar class="wardrobe-avatar-items-list__scroll">\n                    <div class="wardrobe-avatar-items-list__wrap">\n                        <% for (j = 0; j < itemsList.length; j += 1) { %>\n                        <%\n                            if (!itemsList[j].isRemoved) {\n                                id = itemsList[j].itemId;\n                            %>\n                        <div data-id="<%=id%>" class="wardrobe-avatar-items-list__icon <%=(id == baseItemId)? \'wardrobe-avatar-items-list__icon_active\' : \'\' %>">\n                            <img class="wardrobe-avatar-items-list__img" src="https://cdn.wordbyword.me/content/clothes/<%=id%>.png" alt=""/>\n                        </div>\n                            <% \n                            }\n                        } \n                        %>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n<% } %>';
	}),
	define(
		"widgets/wardrobe/avatarSettings",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"models/user",
			"models/wardrobe/appearanceItems",
			"text!widgets/wardrobe/avatarSettings.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = n.extend({
				template: _.template(u),
				el: "#wardrobeAvatarSettingsWidget",
				events: {
					"click .wardrobe-avatar-item__icon": "customAvatarItemHandler",
					"click .wardrobe-avatar-items-list__icon": "putOnItemHandler",
				},
				initialize: function (e) {
					var n = this;
					(this.model = o),
						this.listenTo(i, "baseItemsUpdated", function () {
							n.render();
						}),
						(this.viewParam = {
							Application: t,
							User: s,
							WardrobeController: i,
						}),
						$("#wardrobeCover").on("click", function () {
							var e = $(".wardrobe-avatar-item_active"),
								t = e.find(".wardrobe-avatar-items-list");
							e &&
								(e.toggleClass("wardrobe-avatar-item_active"),
								t.fadeToggle(300),
								$(this).fadeToggle(500));
						});
				},
				customAvatarItemHandler: function (e) {
					var t = $(e.currentTarget),
						n = $(t.parents(".wardrobe-avatar-item")),
						r = $(t.next(".wardrobe-avatar-items-list")),
						i = $("#wardrobeCover");
					n.toggleClass("wardrobe-avatar-item_active"), r.fadeToggle(300), i.fadeToggle(500);
				},
				putOnItemHandler: function (t) {
					var n = $(t.currentTarget),
						r = n.data("id"),
						i = $(".wardrobe-avatar-item_active"),
						s = i.find(".wardrobe-avatar-items-list"),
						o = $("#wardrobeCover");
					s.fadeToggle(300),
						o.fadeToggle(500),
						e.clothesPutOnItem([
							{
								id: "",
								itemId: r,
							},
						]);
				},
			});
			return a;
		}
	),
	define("text!widgets/wardrobe/rewards.html!strip", [], function () {
		return '<%\nvar itemRewardWithLetters;\nvar rewards = WardrobeController.getRewards();\n%>\n<div class="wardrobe__boost-title">Действующие эффекты:</div>\n<div class="wardrobe__boost-list">\n    <% rewards.forEach(function(itemReward) { %>\n    <%\n    itemRewardWithLetters = itemReward.params.letters;\n    %>\n    <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe__boost-item wardrobe-boost_small">\n        <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemReward)%></span>\n        <span class="wardrobe-boost__icon"></span>\n        <span class="wardrobe-boost__text">\n            <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n        </span>\n    </div>\n    <% }); %>\n</div>\n\n<div class="b-onboarding__text">\n    <div class="b-onboarding__text-i">У каждой вещи есть свой эффект. Здесь показываются все эффекты от надетых вещей.</div>\n</div>';
	}),
	define(
		"widgets/wardrobe/rewards",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"text!widgets/wardrobe/rewards.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = n.extend({
				template: _.template(s),
				el: "#wardrobeRewardsWidget",
				events: {},
				initialize: function (n) {
					var r = this;
					(this.viewParam = {
						Application: t,
						WardrobeController: i,
					}),
						this.listenTo(e, "clothesPutOnItem clothesTakeOffItem", function () {
							r.render();
						});
				},
			});
			return o;
		}
	),
	define("text!widgets/wardrobe/set.html!strip", [], function () {
		return '<%\n\nvar collection = this.collection;\nvar models = collection.models;\n\nvar types = Application.params.wardrobeItemType;\nvar rarity = Application.params.wardrobeItemRarity;\nvar firstItemRarity;\nvar isSet = false;\nvar index = 0;\n\nvar itemModel;\nvar itemLevel;\nvar itemHasMaxLevel;\nvar itemCanBeUpgraded;\n\nif (models.length > 0) {\n    isSet = WardrobeController.isFullSet(models);\n    firstItemRarity = rarity[models[0].get(\'category\')];\n} \n%> \n<div class="wardrobe__set-content">\n    <div class="wardrobe__set-title">\n        <% if (isSet) { %>\n        <img id="WardrobeSetInfo" class="wardrobe__set-info" src="<%= Application.params.staticUrl %>images/app/wardrobe/icon-info.png" alt="">\n        <% } %>\n        Сейчас надето: \n        <% if (isSet) { %>\n        <span class="wardrobe__set-name wardrobe__set-name_<%=firstItemRarity%>">набор «<%=models[0].get(\'setInfo\').name%>»</span>\n        <% } %>\n        <div id="showClanRate" class="wardrobe__set-rate">\n            <div class="wardrobe__set-rate-plate">\n              <div class="wardrobe__set-rate-icon"></div>? \n            </div>\n        </div>\n    </div>\n    <div class="wardrobe-set wardrobe-set_ctrl <%=(isSet)? \'wardrobe-set_full wardrobe-set_\' + firstItemRarity : \'\'%>">\n        <div class="wardrobe-set__list">\n            <% for (var i = 0; i < types.length; i += 1) { %>\n            <%\n            itemModel = collection.findWhere({group: types[i]});\n            itemCanBeUpgraded = WardrobeController.checkingItemForUpgradable(itemModel);\n            itemCanBeUpgradedClass = (itemCanBeUpgraded)? \'itemCanBeUpgraded\' : \'\';\n            %>\n            <div class="wardrobe-set__item">\n                <div class="wardrobe-set__item-wrap">\n                    <div class="wardrobe-set__shine">\n                        <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_1"></div>\n                        <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_2"></div>\n                        <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_3"></div>\n                    </div>\n                    <% if (itemModel) { %>\n                    <%\n                    itemLevel = itemModel.get(\'level\') || 1;\n                    itemHasMaxLevel = WardrobeController.checkingItemForMaxLevel(itemModel);\n                    %>\n                    <div data-index="<%=index++%>" class="wardrobe-item wardrobe-item_<%=rarity[itemModel.get(\'category\')]%> wardrobe-set__icon wardrobe-item_ctrl showSliderForSet <%=itemCanBeUpgradedClass%>"> <!-- wardrobe-item_drop-zone -->\n                        <div class="wardrobe-item__wrap">\n                            <img class="wardrobe-item__icon" src="https://cdn.wordbyword.me/content/clothes/<%=itemModel.get(\'itemId\')%>.png" alt="" />\n                            <div class="wardrobe-item__level">\n                                <%= (itemHasMaxLevel)? \'Макс.\' : itemLevel + \' ур.\'%>\n                            </div>\n                            <% if (itemCanBeUpgraded) { %>\n                            <div class="wardrobe-item__upgrade"></div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <% } else { %>\n                    <div class="wardrobe-item wardrobe-set__icon wardrobe-item_ctrl wardrobe-item_empty">\n                        <div class="wardrobe-item__wrap">\n                            <img class="wardrobe-item__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/item-<%=types[i]%>.png" alt="" />\n                        </div>\n                    </div>\n                    <% } %>\n                </div>\n            </div>\n            <% } %>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"widgets/wardrobe/set",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"text!widgets/wardrobe/set.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#wardrobeSetWidget",
				events: {
					"click .showSliderForSet": "showSlider",
					"click #WardrobeSetInfo": "profileSetInfoHandler",
					"click #showClanRate": "showClanRate",
				},
				initialize: function (e) {
					var n = this;
					(this.params = e || this.params),
						(this.collection = i.getActiveItems()),
						this.listenTo(this.collection, "add remove", function () {
							this.render();
						}),
						(this.viewParam = {
							Application: t,
							WardrobeController: i,
						});
				},
				showSlider: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index");
					s.add({
						type: "wardrobe.sliderList",
						params: {
							data: this.collection,
							startIndex: n,
							content: "set",
						},
					});
				},
				profileSetInfoHandler: function () {
					var e = this.collection.models[0].get("setInfo").id,
						t = i.getSets().get(e),
						n = {
							active: i.combineRewardsParams(t.get("rewardsActive")),
							passive: i.combineRewardsParams(t.get("rewardsPassive")),
						};
					s.add({
						type: "wardrobeSetInfo",
						params: {
							content: "set",
							collection: this.collection,
							rewards: n,
						},
					});
				},
				showClanRate: function () {
					e.playerInfoGetClan(u.get("id")),
						this.listenToOnce(e, "playerInfoGetClan", function (e) {
							s.add({
								type: "clanRateCopy",
								params: {
									clanRate: e.clan.rate.rate,
								},
							});
						});
				},
			});
			return f;
		}
	),
	define("text!widgets/wardrobe/bag.html!strip", [], function () {
		return '<%\nvar i;\nvar bagItems = this.bagItemsModelList;\nvar bagItemsCount = bagItems.length;\nvar bagSize = this.model.get(\'cellCount\');\nvar emptySlotsCount = bagSize - bagItemsCount;\nvar isBagUpgradable = this.model.get(\'isUpgradable\');\nvar rarity = Application.params.wardrobeItemRarity;\nvar itemModel;\nvar itemLevel;\nvar itemLevelSettings;\nvar itemMarkedClass;\nvar itemOverloadClass;\nvar itemCopiesCount;\nvar itemNextLevelCopiesCount\nvar itemHasMaxLevel;\nvar itemCanBeUpgraded;\nvar itemCanBeUpgradedClass;\nvar itemCopiesRatio;\nvar index = 0;\n%>\n\n<div class="b-onboarding__text">\n    <div class="b-onboarding__text-i">Все полученные тобой вещи хранятся в сумке.</div>\n</div>\n\n<% if (emptySlotsCount <= 0) { %>\n<div class="wardrobe__bag-status">\n    <img id="bagOverloadInfo" class="wardrobe__bag-status-info" src="<%= Application.params.staticUrl %>images/app/wardrobe/icon-info.png" alt="">\n    <span class="wardrobe__bag-status-text">Сумка переполнена! Некуда складывать вещи.</span>\n</div>\n<% } %>\n\n<div class="wardrobe-filter">\n    <div class="wardrobe-filter__title">Сумка</div>\n    <div class="wardrobe-filter__ctrl"> \n        <div class="wardrobe-filter__ctrl-text"></div>\n    </div>\n</div>\n\n<div id="wardrobeBagList" class="wardrobe-items-list wardrobe-items-list_bag <%=(emptySlotsCount <= 0)? \'wardrobe-items-list_bag-overload\' : \'\' %>">\n    <div class="wardrobe-items-list__content">\n        <% for (i = 0; i < bagItemsCount; i += 1) { %>\n        <%\n        itemModel = bagItems[i];\n        itemLevel = itemModel.get(\'level\') || 1;\n        itemLevelSettings = itemModel.get(\'levelSettings\');\n        itemCopiesCount = itemModel.get(\'copiesCount\');\n        itemNextLevelCopiesCount = itemLevelSettings.nextLevelCopiesCount || 1;\n        itemCopiesRatio = itemCopiesCount/itemNextLevelCopiesCount;\n        itemHasMaxLevel = WardrobeController.checkingItemForMaxLevel(itemModel);\n        itemCanBeUpgraded = WardrobeController.checkingItemForUpgradable(itemModel);\n        itemMarkedClass = (itemModel.get(\'isViewed\'))? \'\' : \'wardrobe-items-list__item_marked\';\n        itemOverloadClass = (i > bagSize - 1)? \'wardrobe-items-list__item_overload\' : \'\';\n        itemCanBeUpgradedClass = (itemCanBeUpgraded)? \'itemCanBeUpgraded\' : \'\';\n        %>\n        <div data-index="<%=index++%>" class="wardrobe-items-list__item showSliderForBag <%=itemCanBeUpgradedClass%> <%=itemMarkedClass%> <%=itemOverloadClass%>">\n            <div class="wardrobe-items-list__item-wrap">\n                <div class="wardrobe-item wardrobe-item_<%=rarity[itemModel.get(\'category\')]%> wardrobe-items-list__item-icon">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="https://cdn.wordbyword.me/content/clothes/<%=itemModel.get(\'itemId\')%>.png" alt="" />\n                        <div class="wardrobe-item__level">\n                            <%= (itemHasMaxLevel)? \'Макс.\' : itemLevel + \' ур.\'%>\n                        </div>\n                    </div>\n                </div>\n                <% if (itemHasMaxLevel) { %>\n                <div class="wardrobe-items-list__counter wardrobe-items-list__counter_text">\n                    <div class="wardrobe-items-list__counter-data">\n                        <span class="wardrobe-items-list__counter-data-label">1 ур.:</span> <%=itemCopiesCount%>\n                    </div>\n                </div>\n                <% } else { %>\n                <div class="wardrobe-items-list__counter \n                    <%=(itemCanBeUpgraded)? \'wardrobe-items-list__counter_upgradable\' : \'\'%> \n                    <%=(itemCopiesRatio >= 1)? \'wardrobe-items-list__counter_full\' : \'\'%> \n                    <%=(itemCopiesCount == 0)? \'wardrobe-items-list__counter_empty\' : \'\'%>">\n                    <div class="wardrobe-items-list__counter-progress" style="width: <%=(itemCopiesRatio >= 1)? \'100\' : Math.floor(itemCopiesRatio*100) %>%"></div>\n                    <div class="wardrobe-items-list__counter-data"><%=itemCopiesCount%>/<%=itemNextLevelCopiesCount%></div> \n                    \n                </div>\n                <% } %>\n            </div>\n        </div>\n        <% } %>\n        <% if (emptySlotsCount > 0) { %>\n            <% for (i = 0; i < emptySlotsCount; i += 1) { %>\n        <div class="wardrobe-items-list__item wardrobe-items-list__item_empty">\n            <div class="wardrobe-items-list__item-wrap">\n                <div class="wardrobe-items-list__icon"></div>\n            </div>\n        </div>\n            <% } %>\n        <% } %>\n\n        <% if (isBagUpgradable) { %>\n        <div class="wardrobe-items-list__item wardrobe-items-list__item_add">\n            <div id="upgradeBag" class="wardrobe-items-list__add"></div>\n        </div>\n        <% } %>\n        \n    </div>\n</div>';
	}),
	define(
		"widgets/wardrobe/bag",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/onboarding",
			"collections/popups",
			"collections/simpleCollection",
			"models/appState",
			"models/wardrobe/bag",
			"models/user",
			"text!widgets/wardrobe/bag.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = "_wardrobe-bag-sort",
				p = n.extend({
					template: _.template(c),
					el: "#wardrobeBagWidget",
					events: {
						"click .showSliderForBag": "showSlider",
						"click #upgradeBag": "upgradeBagHandler",
						"click #bagOverloadInfo": "bagOverloadInfoHandler",
						"click .wardrobe-filter__ctrl": "filterHandler",
					},
					initialize: function (e) {
						var n = this,
							r = localStorage.getItem(l.get("id") + h);
						if (r)
							switch (r) {
								case "byRare":
									this.comparator = "comparatorForRare";
									break;
								case "byLevel":
									this.comparator = "comparatorForLevel";
							}
						else this.comparator = "comparatorForRare";
						(this.collection = i.getBagItems()),
							(this.model = f),
							(this.scrollTop = 0),
							this.sortCollection(),
							this.listenTo(f, "change", function () {
								n.render();
							}),
							this.listenTo(this.collection, "add remove update", function () {
								n.getScroll(), this.sortCollection(), n.render();
							}),
							(this.viewParam = {
								Application: t,
								WardrobeController: i,
							});
					},
					afterRender: function () {
						this.setScroll(), this.setFilterText();
					},
					sortCollection: function () {
						this.bagItemsModelList = _.sortBy(this.collection.models, i[this.comparator]);
					},
					showSlider: function (e) {
						e.stopPropagation();
						var t = $(e.currentTarget),
							n = t.data("index"),
							r = new u();
						r.set(this.bagItemsModelList),
							o.add({
								type: "wardrobe.sliderList",
								params: {
									data: r,
									startIndex: n,
									content: "bag",
								},
							});
					},
					upgradeBagHandler: function () {
						i.showBagPopup("upgrade");
					},
					bagOverloadInfoHandler: function () {
						i.showBagPopup();
					},
					filterHandler: function () {
						switch (this.comparator) {
							case "comparatorForRare":
								(this.comparator = "comparatorForLevel"),
									localStorage.setItem(l.get("id") + h, "byLevel"),
									(label = "по уровню");
								break;
							case "comparatorForLevel":
								(this.comparator = "comparatorForRare"),
									localStorage.setItem(l.get("id") + h, "byRare"),
									(label = "по редкости");
						}
						this.sortCollection(),
							this.getScroll(),
							this.render(),
							r.sendDesignEvent("Screen_actions:Items:sorting");
					},
					setFilterText: function () {
						var e = $(".wardrobe-filter__ctrl-text");
						switch (this.comparator) {
							case "comparatorForRare":
								e.text("по редкости");
								break;
							case "comparatorForLevel":
								e.text("по уровню");
						}
					},
					getScroll: function () {
						this.scroll = $("#wardrobeBagList").scrollTop();
					},
					setScroll: function () {
						$("#wardrobeBagList").scrollTop(this.scroll);
					},
				});
			return p;
		}
	),
	define("text!screens/wardrobe/index.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Гардероб</div>\n    <div class="b-screen-head__ctrl l b-screen-head__ctrl_pattern-info">\n        <div id="wardrobePatternInfo" class="b-screen-head__wardrobe-pattern-info"></div>\n    </div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton">\n        <div class="btn-info"></div>\n    </div>\n</div>\n<!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_fixed l-screen__main_wardrobe">\n    <div class="l-screen__main-content">\n        <div class="wardrobe">\n            <div class="wardrobe__layout">\n                <div class="wardrobe__layout-avatar">\n                    <div id="wardrobeAvatarWidget" class="wardrobe__avatar"></div>\n                    <div id="wardrobeAvatarSettingsWidget" class="wardrobe__avatar-settings"></div>\n                </div>\n\n                <div id="wardrobeRewardsWidget" class="wardrobe__layout-boost wardrobe__boost"></div>\n                \n            </div>\n\n            <div id="wardrobeSetWidget" class="wardrobe__set"></div>\n            \n            <div id="wardrobeBagWidget" class="wardrobe__bag wardrobe__bag_index"></div>\n\n        </div>\n    </div>\n    <!-- /.l-screen__main-content -->\n    <div class="l-screen__main-foot l-screen__main-foot_wardrobe-index">\n        <div class="wardrobe-nav">\n            <div class="wardrobe-nav__list">\n                <div id="wardrobeShop" class="wardrobe-nav__item"> <!-- wardrobe-nav__item_marked -->\n                    <img class="wardrobe-nav__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/nav-shop.png" alt="">\n                    Магазин\n                </div>\n                <div id="wardrobeDissection" class="wardrobe-nav__item">\n                    <img class="wardrobe-nav__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/nav-dissection.png" alt="">\n                    Разбор\n                </div>\n                <div id="wardrobeCreate" class="wardrobe-nav__item">\n                    <img class="wardrobe-nav__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/nav-create.png" alt="">\n                    Создание</div>\n                <div id="wardrobeWorkshop" class="wardrobe-nav__item">\n                    <img id="wardrobeWorkshopIcon" class="wardrobe-nav__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/nav-workshop.png" alt="">\n                    Мастерская\n                    <div class="b-onboarding__text">\n                        <div class="b-onboarding__text-i">Вещи можно создать в Мастерской.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.l-screen__main-foot -->\n</div>\n<!-- /.l-screen__main -->\n\n<div id="wardrobeCover"></div>';
	}),
	define(
		"screens/wardrobe/index",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/onboarding",
			"controllers/popups",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/wardrobe/copyCraftSlots",
			"widgets/wardrobe/avatar",
			"widgets/wardrobe/avatarSettings",
			"widgets/wardrobe/rewards",
			"widgets/wardrobe/set",
			"widgets/wardrobe/bag",
			"text!screens/wardrobe/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m) {
			var g = n.extend({
				template: _.template(m),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						f.previousScreen();
					},
					"click #wardrobePatternInfo": "patternInfoHandler",
					"click #wardrobeShop": function () {
						f.setScreen({
							screen: "wardrobe.shop",
						}),
							r.sendDesignEvent("Screen_actions:Items:items_shop");
					},
					"click #wardrobeDissection": function () {
						f.setScreen({
							screen: "wardrobe.dissection",
						}),
							r.sendDesignEvent("Screen_actions:Items:disassembly");
					},
					"click #wardrobeCreate": function () {
						f.setScreen({
							screen: "wardrobe.create",
						}),
							r.sendDesignEvent("Screen_actions:Items:creation");
					},
					"click #wardrobeWorkshopIcon": function () {
						this.closeOnboarding(),
							f.setScreen({
								screen: "wardrobe.workshop",
							}),
							r.sendDesignEvent("Screen_actions:Items:items_craft");
					},
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (n) {
					var r = this;
					(this.params = n || this.params),
						(this.currentOnboarding = "init"),
						(this.viewParam = {
							Application: t,
							WardrobeController: i,
							WardrobeCopyCraftSlotsModel: l,
						}),
						this.listenTo(e, "clothesPutOnItem", function (e) {
							var t = _.findWhere(e.clothesItemsInfo, {
								active: !0,
							});
							!s.get("wardrobeBoost") && t.rewards.length && this.showBoostOnboarding();
						});
				},
				initializeWidgets: function () {
					this.widgets = [new c(), new h(), new p(), new d(), new v()];
				},
				afterRenderWidgets: function () {
					this.initOnboarding();
				},
				renderPopup: function (e) {
					this.currentOnboarding == null &&
						($("#popup").html(""),
						$("#cover").fadeOut(200),
						e && ($("#cover").stop().fadeIn(300), e.render()));
				},
				initOnboarding: function () {
					this.currentOnboarding = null;
					var e = s.get("wardrobeBag"),
						t = s.get("wardrobeItem"),
						n = s.get("wardrobeWorkshop"),
						r = s.get("wardrobeItemUpgrade");
					e
						? t
							? n
								? r || this.showItemOnboarding("upgrade")
								: this.showWorkshopOnboarding()
							: this.showItemOnboarding("first")
						: this.showBagOnboarding();
				},
				showBagOnboarding: function () {
					(this.currentOnboarding = "bag"),
						$("#cover").show(),
						$("#wardrobeBagWidget").addClass("b-onboarding b-onboarding_wardrobe-bag").css({
							overflow: "visible",
						}),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding").on("click", this.closeOnboarding.bind(this)),
						$(".wardrobe-items-list__item-wrap").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this));
				},
				showBoostOnboarding: function () {
					(this.currentOnboarding = "boost"),
						$("#cover").show(),
						$("#wardrobeRewardsWidget").addClass("b-onboarding b-onboarding_wardrobe-boost"),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
				},
				showWorkshopOnboarding: function () {
					s.get("wardrobeWorkshop") ||
						((this.currentOnboarding = "workshop"),
						$("#cover").show(),
						$("#wardrobeWorkshop").addClass("b-onboarding b-onboarding_wardrobe-workshop"),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this)));
				},
				showItemOnboarding: function (e) {
					function w(e) {
						var t = -115,
							n = 80,
							r,
							i;
						(r = y + d / 2),
							(i = a - r),
							e.css({
								top: l - o - n,
								left: r,
							}),
							r < -t
								? ((t += -t - r), e.find(".b-onboarding__text").css("marginLeft", t))
								: i < -t && ((t -= -t - i), e.find(".b-onboarding__text").css("marginLeft", t));
					}
					var t = $("#wardrobeBagWidget"),
						n = $("#wardrobeSetWidget"),
						r = $(".l-wrapper-i"),
						o = r.offset().top,
						u,
						a,
						f,
						l,
						c = t.find(".itemCanBeUpgraded"),
						h = n.find(".itemCanBeUpgraded"),
						p = null,
						d,
						v,
						m,
						g,
						y,
						b = {
							first:
								"<div class='b-onboarding b-onboarding_wardrobe-item'><div class='b-onboarding__text'><div class='b-onboarding__text-i'>Чтобы надеть вещь, помести ее в свободную ячейку.</div></div></div>",
							upgrade:
								"<div class='b-onboarding b-onboarding_wardrobe-itemUpgrade'><div class='b-onboarding__text'><div class='b-onboarding__text-i'>Собрано достаточно предметов. Эту вещь можно улучшить!</div></div></div>",
						};
					switch (e) {
						case "first":
							_.size(i.getBagItems()) == 1 && _.size(i.getActiveItems()) == 0
								? ((this.currentOnboarding = "item"),
								  $("#cover").show(),
								  t.append(b[e]),
								  (u = $(".wardrobe-items-list")),
								  (a = u.width()),
								  (f = u.offset().left),
								  (l = u.offset().top),
								  (p = u.find(".wardrobe-items-list__item").eq(0)),
								  (d = p.width()),
								  (v = p.offset().top),
								  (m = v - l),
								  (g = p.offset().left),
								  (y = g - f),
								  p.addClass("b-onboarding b-onboarding_item"),
								  $("#cover").on("click", this.closeOnboarding.bind(this)),
								  $(".wardrobe-items-list__item-wrap").on("click", this.closeOnboarding.bind(this)),
								  $(".b-onboarding__text").on("click", this.closeOnboarding.bind(this)),
								  w($(".b-onboarding_wardrobe-item")))
								: (s.set("wardrobeItem", !0), this.showWorkshopOnboarding());
							break;
						case "upgrade":
							if (c.length || h.length)
								$("#cover").show(),
									c.length &&
										((this.currentOnboarding = "itemUpgrade"),
										t.append(b[e]),
										(u = $(".wardrobe-items-list")),
										(p = $(c[0]))),
									h.length &&
										((this.currentOnboarding = "itemUpgrade"),
										n.append(b[e]),
										(u = $(".wardrobe-set")),
										(p = $(h[0]))),
									(a = u.width()),
									(f = u.offset().left),
									(l = u.offset().top),
									(d = p.width()),
									(v = p.offset().top),
									(m = v - l),
									(g = p.offset().left),
									(y = g - f),
									p.addClass("b-onboarding b-onboarding_item"),
									$("#cover").on("click", this.closeOnboarding.bind(this)),
									$(".wardrobe-items-list__item-wrap").on("click", this.closeOnboarding.bind(this)),
									$(".wardrobe-item__wrap").on("click", this.closeOnboarding.bind(this)),
									$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this)),
									w($(".b-onboarding_wardrobe-itemUpgrade")),
									c.length && u.scrollTop(m);
					}
				},
				closeOnboarding: function (e) {
					var t = this.currentOnboarding;
					(this.currentOnboarding = null),
						$("#cover").off("click"),
						$(".b-onboarding__text").off("click"),
						$("#cover").hide();
					switch (t) {
						case "bag":
							e.stopPropagation(),
								$("#wardrobeBagWidget").removeClass("b-onboarding b-onboarding_wardrobe-bag").css({
									overflow: "hidden",
								}),
								s.set("wardrobeBag", !0),
								$(".b-onboarding").off("click"),
								$(".wardrobe-items-list__item-wrap").off("click"),
								s.get("wardrobeItem") || this.showItemOnboarding("first");
							break;
						case "item":
							e.stopPropagation(),
								$(".b-onboarding_item").removeClass("b-onboarding b-onboarding_item"),
								s.set("wardrobeItem", !0),
								$(".wardrobe-items-list__item-wrap").off("click"),
								$(".wardrobe-item__wrap").off("click"),
								$(".b-onboarding_wardrobe-item").remove(),
								s.get("wardrobeWorkshop") || this.showWorkshopOnboarding();
							break;
						case "boost":
							$("#wardrobeRewardsWidget").removeClass("b-onboarding b-onboarding_wardrobe-boost"),
								s.set("wardrobeBoost", !0);
							break;
						case "workshop":
							$("#wardrobeWorkshop").removeClass("b-onboarding b-onboarding_wardrobe-workshop"),
								s.set("wardrobeWorkshop", !0),
								s.get("wardrobeItemUpgrade") || this.showItemOnboarding("upgrade");
							break;
						case "itemUpgrade":
							e.stopPropagation(),
								$(".b-onboarding_item").removeClass("b-onboarding b-onboarding_item"),
								$(".wardrobe-items-list__item-wrap").off("click"),
								s.set("wardrobeItemUpgrade", !0),
								$(".b-onboarding_wardrobe-itemUpgrade").remove();
					}
					o.changePopup();
				},
				patternInfoHandler: function () {
					a.add({
						type: "wardrobe.patternInfo",
						params: {
							data: {},
						},
					}),
						r.sendDesignEvent("Screen_actions:Items:pattern");
				},
				showInfoPopup: function () {
					u.showInfoPopup("wardrobe");
				},
			});
			return g;
		}
	),
	define("text!widgets/wardrobe/papers.html!strip", [], function () {
		return '<div class="b-screen-head__wardrobe-scrolls">\n    <span class="b-screen-head__wardrobe-scrolls-count"><%=balance%></span>\n    <span class="b-screen-head__wardrobe-scrolls-sign">&times;</span>\n    <span class="b-screen-head__wardrobe-scrolls-icon b-icon b-icon_scrolls"></span>\n</div>';
	}),
	define(
		"widgets/wardrobe/papers",
		["widget", "application", "models/wardrobe/papers", "text!widgets/wardrobe/papers.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				el: "#wardrobePapersWidget",
				template: _.template(r),
				initialize: function (e) {
					var r = this;
					(this.model = n),
						(this.viewParam = {
							Application: t,
						}),
						this.listenTo(this.model, "change", function () {
							r.render();
						});
				},
				afterRender: function () {},
			});
			return i;
		}
	),
	define("text!screens/wardrobe/workshop.html!strip", [], function () {
		return '<%\nvar _this = this;\nvar sets = WardrobeController.getSets();\nvar activeItems = WardrobeController.getActiveItems();\nvar bagItems = WardrobeController.getBagItems();\nvar baseItems = WardrobeController.getBaseItems();\n\nvar setIsActive;\nvar setInBag;\nvar setIsCrafting;\nvar setIsCrafted;\n\nvar existingItem;\n\nvar rarity = Application.params.wardrobeItemRarity;\nvar rarityLabel = Application.params.wardrobeSetRarityLabel;\nvar types = Application.params.wardrobeItemType;\n\nvar setItemsList;\nvar setRarity;\n\nvar activeItemsCount;\nvar bagItemsCount;\nvar craftedItemsCount;\n\nvar itemCreatingPercent;\nvar itemIsCrafting;\nvar itemIsCrafted;\nvar itemCssClass;\nvar itemCanBeUpgraded;\n\n\nvar rewardsPassive;\nvar rewardsActive;\nvar itemRewardWithLetters;\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Мастерская</div>\n    <div id="wardrobePapersWidget" class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_workshop">\n    <div class="l-screen__main-content">\n        <div class="workshop">\n            <div class="wardrobe-filter workshop__head">\n                <div class="wardrobe-filter__title workshop__head-title">Наборы</div>\n                <div class="wardrobe-filter__toggle wardrobe-filter__toggle_off useFilter">\n                    <div class="wardrobe-filter__toggle-ctrl"></div>\n                    <div class="wardrobe-filter__toggle-text">можно<br>надеть</div>\n                </div>\n            </div>\n            <div class="workshop__content">\n                <%\n                sets.forEach(function(setModel) {\n                    setIsCrafting = false;\n                    setIsCrafted = false;\n                    craftedItemsCount = 0;\n                    setItemsList = [];\n                    setRarity = rarity[setModel.get(\'category\')];\n                    for (var i = 0; i < types.length; i += 1) { \n                        setItemsList.push(_.findWhere(setModel.get(\'items\'), {group: types[i]}));\n                    }\n                    activeItemsCount = 0;\n                    bagItemsCount = 0;\n                    for (i = 0; i < setItemsList.length; i += 1) {\n                        if (activeItems.findWhere({itemId: setItemsList[i].itemId})) {\n                            activeItemsCount++;\n                            bagItemsCount++;\n                        }\n                        if (bagItems.findWhere({itemId: setItemsList[i].itemId})) {\n                            bagItemsCount++;\n                        }\n                    }\n                    setIsActive = (activeItemsCount == 4)? true : false;\n                    setInBag = (bagItemsCount == 4)? true : false;\n\n                    if (!setInBag && (setModel.get(\'category\') == 5 || !setModel.get(\'craft\'))) return;\n                    \n                    if (_this.filtred && !(setIsActive || setInBag)) {\n                        return;\n                    } else {\n                %>\n                <div data-id="<%=setModel.get(\'id\')%>" class="workshop-set workshop-set_<%=setRarity%> <%=(setIsActive)? \'workshop-set_used\' : \'\'%> <%=(!setInBag && !setIsActive)? \' workshop-set_availableToCreate\' : \'\'%>">\n                    <div class="workshop-set__info">\n                        <div class="workshop-set__avatar">\n                            <div class="b-user b-user_wardrobe">\n                                <div class="custom-avatar b-user__custom-avatar">\n                                    <img class="custom-avatar__item custom-avatar__item_aura" src="<%=Application.params.customAvatarUrl%><%=setItemsList[3].itemId%>.png" alt="" />\n                                    <% if (baseItems.models.length < 3) { %>\n                                    <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%>bodys/body1.png" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%>mouth/mouth1.png" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%>eyes/eyes1.png" alt="" />\n                                    <% } else { %>\n                                    <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'body\').get(\'itemId\')%>.png" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'mouth\').get(\'itemId\')%>.png" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'eyes\').get(\'itemId\')%>.png" alt="" />\n                                    <% } %>\n                                    <img class="custom-avatar__item custom-avatar__item_hair" src="<%=Application.params.customAvatarUrl%><%=setItemsList[1].itemId%>.png" style="z-index: <%=setItemsList[1].render%>;" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_head" src="<%=Application.params.customAvatarUrl%><%=setItemsList[0].itemId%>.png" style="z-index: <%=setItemsList[0].render%>;" alt="" />\n                                    <img class="custom-avatar__item custom-avatar__item_subject" src="<%=Application.params.customAvatarUrl%><%=setItemsList[2].itemId%>.png" style="z-index: <%=setItemsList[2].render%>;" alt="" />\n                                </div>\n                                <img class="b-user__rank" src="https://cdn.wordbyword.me/content/user/laurels/avatar-<%= User.get(\'level\').value%>.png" />\n                            </div>\n                        </div>\n                        <div class="workshop-set__description">\n                            <div class="workshop-set__title"><%=rarityLabel[setModel.get(\'category\')]%> набор «<%=setModel.get(\'name\')%>»</div>\n                            <% if (setModel.get(\'rewardsPassive\').length) { %>\n                            <%\n                            rewardsPassive = WardrobeController.combineRewardsParams(JSON.parse(JSON.stringify(setModel.get(\'rewardsPassive\'))));\n                            %>\n                            <div class="workshop-set__boost workshop-set__boost_passive">\n                                <div class="workshop-set__boost-title">\n                                    <img class="workshop-set__boost-info showBoostInfo" src="<%= Application.params.staticUrl %>images/app/wardrobe/icon-info.png" alt="">Пассивный эффект:\n                                </div>\n                                <div class="workshop-set__boost-list">\n                                    <% rewardsPassive.forEach(function(itemReward) { %>\n                                    <%\n                                    itemRewardWithLetters = itemReward.params.letters;\n                                    %>\n                                    <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe__boost-item wardrobe-boost_small">\n                                        <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemReward)%></span>\n                                        <span class="wardrobe-boost__icon"></span>\n                                        <span class="wardrobe-boost__text">\n                                            <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                                        </span>\n                                    </div>\n                                    <% }); %>\n                                </div>\n                            </div>\n                            <% } %>\n                            <% if (setModel.get(\'rewardsActive\').length) { %>\n                            <%\n                            rewardsActive = WardrobeController.combineRewardsParams(JSON.parse(JSON.stringify(setModel.get(\'rewardsActive\'))));\n                            %>\n                            <div class="workshop-set__boost workshop-set__boost_active">\n                                <div class="workshop-set__boost-title">Когда набор надет:</div>\n                                <div class="workshop-set__boost-list">\n                                    <% rewardsActive.forEach(function(itemReward) { %>\n                                    <%\n                                    itemRewardWithLetters = itemReward.params.letters;\n                                    %>\n                                    <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe__boost-item wardrobe-boost_small">\n                                        <span class="wardrobe-boost__value"><%=WardrobeController.formatRewardBoost(itemReward)%></span>\n                                        <span class="wardrobe-boost__icon"></span>\n                                        <span class="wardrobe-boost__text">\n                                            <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                                        </span>\n                                    </div>\n                                    <% }); %>\n                                </div>\n                            </div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <div class="workshop-set__items">\n                        <div class="workshop-set__items-list">\n                        <% for (i = 0; i < setItemsList.length; i += 1) { %>\n                            <% \n                            itemCssClass = \'\';\n                            itemIsCrafting = false;\n                            itemIsCrafted = false;\n                            itemCanBeUpgraded = false;\n                            existingItem = bagItems.findWhere({itemId: setItemsList[i].itemId}) || activeItems.findWhere({itemId: setItemsList[i].itemId});\n                            if (existingItem) {\n                                itemCanBeUpgraded = WardrobeController.checkingItemForUpgradable(existingItem);\n                                craftedItemsCount++;\n                            } else {\n                                itemCssClass = \'workshop-set__item_closed\';\n                            }\n                            if (setItemsList[i].craft) {\n                                if (!setItemsList[i].craft.isFinish) {\n                                    if (moment().format(\'X\') - setItemsList[i].craft.tsFinish >= 0) {\n                                        itemIsCrafted = true;\n                                        setIsCrafted = true;\n                                        itemCssClass = \'workshop-set__item_marked\';\n                                    } else {\n                                        itemIsCrafting = true;\n                                        setIsCrafting = true;\n                                        itemCssClass = \'workshop-set__item_creating\';\n                                    }\n                                }\n                            } \n                            %>\n                            <div data-index="<%=i%>" \n                                <% if(itemIsCrafting) { %> data-start = "<%=setItemsList[i].craft.tsStart%>" data-finish = "<%=setItemsList[i].craft.tsFinish%>" <% } %> \n                                class="workshop-set__item <%=itemCssClass%> showSlider">\n                                <div class="wardrobe-item wardrobe-item_<%=setRarity%> workshop-set__item-icon">\n                                    <div class="wardrobe-item__wrap">\n                                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=setItemsList[i].itemId%>.png" alt="" />\n                                        <% if (existingItem) { %>\n                                        <div class="wardrobe-item__level"><%=(WardrobeController.checkingItemForMaxLevel(existingItem))? \'Макс.\' : existingItem.get(\'level\') + \' ур.\' %></div>\n                                        <% } %>\n                                        <% if (itemCanBeUpgraded) { %>\n                                        <div class="wardrobe-item__upgrade"></div>\n                                        <% } %>\n                                        <% if (itemIsCrafting) { \n                                        itemCreatingPercent = Math.floor(\n                                            (moment().format(\'X\') - setItemsList[i].craft.tsStart) / \n                                            (setItemsList[i].craft.tsFinish - setItemsList[i].craft.tsStart) * 100\n                                        ); \n                                        %>\n                                        <div class="wardrobe-item__progress">\n                                            <canvas data-percent="<%=itemCreatingPercent%>" class="wardrobe-item__progress-canvas craftProgress" width="200" height="200"></canvas>\n                                        </div>\n                                    </div>\n                                    <div class="workshop-set__item-timer"><%=Application.methods.getDaysHoursMinutesFromMS((setItemsList[i].craft.tsFinish - moment().format(\'X\')) * 1000)%></div>\n                                        <% } else { %>\n                                    </div>\n                                        <% } %>\n                                </div>\n                            </div>\n                        <% } %>\n                        </div>\n                        <div class="workshop-set__items-ctrl">\n                            <% if (setIsActive) { %>\n                                <div class="workshop-set__items-ctrl-status">Надетый набор</div>\n                            <% } else if (setInBag) { %>\n                                <div class="workshop-set__items-ctrl-item">\n                                    <div class="workshop-set__items-ctrl-btn b-btn b-btn_blue useSet">Надеть набор</div>\n                                </div>\n                            <% } else if (setIsCrafted) { %>\n                                <div class="workshop-set__items-ctrl-item">\n                                    <div class="workshop-set__items-ctrl-btn b-btn b-btn_blue craftItemFinish">Забрать в сумку</div>\n                                </div>\n                            <% } else if (setIsCrafting) { %>\n                                <div class="workshop-set__items-ctrl-item">\n                                    <div class="workshop-set__items-ctrl-btn b-btn b-btn_green craftItemBoost">\n                                        Сейчас <%=setModel.get(\'craft\').boostCosts.coins%>\n                                        <span class="b-icon b-icon_coin"> </span>\n                                    </div>\n                                    <div class="workshop-set__items-ctrl-info">Создать мгновенно</div>\n                                </div>\n                            <% } else if (setModel.get(\'craft\')) { %>\n                                <div class="workshop-set__items-ctrl-item">\n                                    <div data-index="<%=craftedItemsCount%>" class="workshop-set__items-ctrl-btn b-btn b-btn_yellow craftItemStart">\n                                        Создать <%=setModel.get(\'craft\').costs[craftedItemsCount].papers%>\n                                        <div class="b-icon b-icon_scrolls b-icon_small"></div>\n                                    </div>\n                                    <div class="workshop-set__items-ctrl-info">Случайная вещь 1 уровня</div>\n                                </div>\n                            <% } %>\n                        </div>\n                    </div>\n                </div>\n                <%\n                    }\n                });\n                %>\n            </div>\n            \n        </div>\n\n    </div>\n    <!-- /.l-screen__main-content -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/wardrobe/workshop",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"collections/simpleCollection",
			"collections/wardrobe/sets",
			"collections/wardrobe/activeItems",
			"collections/wardrobe/bagItems",
			"models/appState",
			"models/user",
			"models/wardrobe/papers",
			"widgets/wardrobe/papers",
			"text!screens/wardrobe/workshop.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = n.extend({
				template: _.template(d),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						l.previousScreen();
					},
					"click .showBoostInfo": "showBoostInfo",
					"click .showSlider": "showSlider",
					"click .useFilter": "useFilter",
					"click .useSet": "useSet",
					"click .craftItemStart": "craftItemStart",
					"click .craftItemBoost": "craftItemBoost",
					"click .craftItemFinish": "craftItemFinish",
				},
				initialize: function (n) {
					(this.filtred = !1),
						(this.simplebar = null),
						(this.scrollTop = 0),
						(this.viewParam = {
							Application: t,
							User: c,
							WardrobeController: i,
						}),
						this.listenTo(u, "add change remove", function () {
							this.onCollectionUpdate();
						}),
						this.listenTo(e, "clothesItemLevelUp", function () {
							this.onCollectionUpdate();
						}),
						this.listenTo(e, "clothesPutOnItem", function () {
							this.onCollectionUpdate();
						});
				},
				initializeWidgets: function () {
					this.widgets = [new p()];
				},
				afterRender: function () {
					var e = this;
					platform == "desktop"
						? require(["simplebar"], function (t) {
								e.simplebar && e.simplebar.unMount(),
									(e.simplebar = new t($(".workshop__content")[0])),
									e.scrollTop && e.setScrollTop(e.scrollTop);
						  })
						: this.scrollTop && this.setScrollTop(this.scrollTop);
					switch (this.filtred) {
						case !1:
							$(".wardrobe-filter__toggle").addClass("wardrobe-filter__toggle_off");
							break;
						case !0:
							$(".wardrobe-filter__toggle").removeClass("wardrobe-filter__toggle_off");
					}
					this.drawProgress(), this.updateProgressData();
				},
				getScrollTop: function () {
					return this.simplebar
						? $(this.simplebar.contentWrapperEl).scrollTop()
						: $(".workshop__content").scrollTop();
				},
				setScrollTop: function (e) {
					this.simplebar
						? $(this.simplebar.contentWrapperEl).scrollTop(e)
						: $(".workshop__content").scrollTop(this.scrollTop);
				},
				showBoostInfo: function () {
					s.add({
						type: "text",
						params: {
							header: "Пассивные эффекты",
							text: "Пассивный эффект действует даже когда набор не надет и даже если вещи из набора разобраны.",
							list: null,
							cursiv:
								"Главное — один раз собрать набор и его пассивный эффект останется с тобой навсегда.",
						},
					});
				},
				onCollectionUpdate: function () {
					(this.scrollTop = this.getScrollTop()), this.render();
				},
				showSlider: function (e) {
					var n,
						r,
						u = $(e.currentTarget),
						a = u.data("index"),
						f = t.params.wardrobeItemType,
						l = u.parents(".workshop-set").data("id"),
						c = i.getSets().get(l).get("items"),
						h = i.getBagItems(),
						p = i.getActiveItems(),
						d = new o(),
						v = [];
					for (var m = 0; m < f.length; m += 1)
						(r = _.findWhere(c, {
							group: f[m],
						})),
							(n =
								h.findWhere({
									itemId: r.itemId,
								}) ||
								p.findWhere({
									itemId: r.itemId,
								})),
							v.push(
								n
									? n
									: _.extend(r, {
											craftSettings: i.getSets().get(l).get("craft"),
											setId: i.getSets().get(l).get("id"),
									  })
							);
					d.set(v),
						s.add({
							type: "wardrobe.sliderList",
							params: {
								data: d,
								startIndex: a,
								content: "workshop",
							},
						});
				},
				useFilter: function (e) {
					(this.filtred = !this.filtred), this.render();
				},
				useSet: function (t) {
					var n = t.currentTarget,
						s = $(n).parents(".workshop-set").data("id"),
						o = i.getSets().get(s).get("items"),
						u = i.getBagItems(),
						a,
						f = [];
					$(n).removeClass("useSet").addClass("b-btn_disabled");
					for (var l = 0; l < o.length; l += 1)
						(a = u.findWhere({
							itemId: o[l].itemId,
						})),
							a &&
								f.push({
									id: a.get("id"),
									itemId: a.get("itemId"),
								});
					e.clothesPutOnItem(f), r.sendDesignEvent("Screen_actions:Items_craft:set_put_on");
				},
				craftItemStart: function (e) {
					var t = e.currentTarget,
						n = $(t).parents(".workshop-set").data("id"),
						r = $(t).data("index"),
						o = i.getSets(),
						u = o.get(n),
						a = h.get("balance"),
						f = u.get("craft").costs[r].papers;
					a < f
						? s.add({
								type: "wardrobe.paperLacks",
								params: {
									count: f - a,
								},
						  })
						: s.add({
								type: "wardrobe.craftStart",
								params: {
									setId: n,
								},
						  });
				},
				craftItemBoost: function (t) {
					var n = t.currentTarget,
						r = $(n).parents(".workshop-set").data("id"),
						o = i.getSets(),
						u = o.get(r),
						a = u.get("craft").boostCosts.coins,
						f = c.get("balance");
					f < a
						? purchase
							? s.add({
									type: "buyCoins",
							  })
							: s.add({
									type: "text",
									params: {
										header: "",
										text: "Недостаточно монет для ускорения.",
										list: null,
										cursiv: null,
									},
							  })
						: e.clothesSetCraftFinish(r, "boost");
				},
				craftItemFinish: function (t) {
					var n = t.currentTarget,
						r = $(n).parents(".workshop-set").data("id");
					e.clothesSetCraftFinish(r);
				},
				drawProgress: function () {
					var e,
						t,
						n,
						r,
						i,
						s = $(".craftProgress");
					s.each(function (s, o) {
						(e = $(o)),
							(r = e.attr("data-percent") ? e.attr("data-percent") : 0),
							(i = (2 * Math.PI * r) / 100),
							e.parents(".workshop-set").addClass("workshop-set_creating");
						try {
							(t = e[0].width),
								(n = e[0].getContext("2d")),
								n.clearRect(0, 0, t, t),
								(n.fillStyle = "#544a70"),
								n.beginPath(),
								n.moveTo(t / 2, t / 2),
								n.arc(t / 2, t / 2, t / 2, i - Math.PI / 2, 2 * Math.PI - Math.PI / 2),
								n.closePath(),
								n.fill();
						} catch (u) {
							console.warn("task canvas error: ", u);
						}
					});
				},
				updateProgressData: function () {
					var e = this,
						n = $(".workshop-set__item_creating"),
						r = n.length ? !0 : !1;
					if (r) {
						console.log("apply workshop timer");
						var i, s, o, u, a, f, l;
						this.timer = setTimeout(function () {
							n.each(function (n, r) {
								(i = $(r)),
									(a = i.data("start")),
									(f = i.data("finish")),
									(s = i.find(".craftProgress")),
									(o = i.find(".workshop-set__item-timer")),
									moment().format("X") - f >= 0
										? (i
												.removeClass("workshop-set__item_creating")
												.addClass("workshop-set__item_marked"),
										  s.remove(),
										  o.remove(),
										  (u = i
												.parents(".workshop-set__items")
												.find(".workshop-set__items-ctrl-item")),
										  u.remove(".b-btn"),
										  u.html(
												'<div class="workshop-set__items-ctrl-btn b-btn b-btn_blue craftItemFinish">Забрать в сумку</div>'
										  ))
										: ((l = Math.floor(((moment().format("X") - a) / (f - a)) * 100)),
										  console.log("creatingPercent: ", l),
										  s.attr("data-percent", l),
										  o.text(t.methods.getDaysHoursMinutesFromMS((f - moment().format("X")) * 1e3)),
										  e.drawProgress(),
										  e.updateProgressData());
							});
						}, 1e4);
					} else console.log("remove workshop timer"), clearTimeout(this.timer);
				},
			});
			return v;
		}
	),
	define("text!screens/wardrobe/dissection.html!strip", [], function () {
		return '<%\n\nvar i, item;\nvar rarity = Application.params.wardrobeItemRarity;\n\nvar firstLevelItems = this.firstLevelItems;\nvar upgradedItems = this.upgradedItems;\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Разбор</div>\n    <div id="wardrobePapersWidget" class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_fixed l-screen__main_wardrobe">\n    <div class="l-screen__main-content">\n        <div class="wardrobe wardrobe_dissection">\n            <div class="wardrobe__dissection-view">\n                <div class="wardrobe__tabs wardrobe__dissection-tabs">\n                    <div class="wardrobe__tabs-ctrl wardrobe__dissection-tabs-ctrl">\n                        <div class="wardrobe__tabs-ctrl-item wardrobe__tabs-ctrl-item_active">Вещи 1 уровня</div>\n                        <div class="wardrobe__tabs-ctrl-item">\n                            Улучшенные\n                            <div class="b-onboarding__text">\n                                <div class="b-onboarding__text-i">Перейди во вкладку, чтобы разобрать улучшенные вещи.</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="wardrobe__tabs-content wardrobe__dissection-tabs-content">\n                        <div class="wardrobe__tabs-content-item wardrobe__tabs-content-item_active">\n                            <% if (firstLevelItems.length > 0) { %>\n                            <div class="wardrobe-items-list wardrobe-items-list_dissection">\n                                <div class="wardrobe-items-list__content">\n                                <% for (i = 0; i < firstLevelItems.length; i += 1) { %>\n                                    <%\n                                    item = firstLevelItems[i];\n                                    %>\n                                    <div data-index="<%=i%>" class="wardrobe-items-list__item firstLevelItem">\n                                        <div class="wardrobe-items-list__item-wrap">\n                                            <div data-id="<%=item.get(\'id\')%>" class="wardrobe-item wardrobe-item_<%=rarity[item.get(\'category\')]%> wardrobe-items-list__item-icon">\n                                                <div class="wardrobe-item__wrap">\n                                                    <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=item.get(\'itemId\')%>.png" alt=""/>\n                                                    <div class="wardrobe-item__level">1 ур.</div>\n                                                </div>\n                                            </div>\n                                            <div class="wardrobe-items-list__counter wardrobe-items-list__counter_text"> \n                                                <div class="wardrobe-items-list__counter-data">\n                                                    <span class="wardrobe-items-list__counter-data-label">всего: </span><%=item.get(\'copiesCount\')%>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                <% } %>\n                                </div>\n                            </div>\n                            <% } else { %>\n                            <div class="wardrobe__tabs-content-empty">\n                                <div class="wardrobe__tabs-content-empty-text">Нет вещей 1 уровня</div>\n                            </div>\n                            <% } %>\n                            \n                        </div>\n                        <div class="wardrobe__tabs-content-item">\n                        <% if (upgradedItems.length > 0) { %>\n                            <div class="wardrobe-items-list wardrobe-items-list_dissection" data-simplebar>\n                                <div class="wardrobe-items-list__content">\n                                <% for (i = 0; i < upgradedItems.length; i += 1) { %>\n                                    <%\n                                    item = upgradedItems[i];\n                                    %>\n                                    <div data-index="<%=i%>" class="wardrobe-items-list__item upgradedItem">\n                                        <div class="wardrobe-items-list__item-wrap">\n                                            <div data-id="<%=item.get(\'id\')%>" class="wardrobe-item wardrobe-item_<%=rarity[item.get(\'category\')]%> wardrobe-items-list__item-icon">\n                                                <div class="wardrobe-item__wrap">\n                                                    <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=item.get(\'itemId\')%>.png" alt=""/>\n                                                    <div class="wardrobe-item__level">\n                                                        <%=(WardrobeController.checkingItemForMaxLevel(item))? \'Макс.\' : item.get(\'level\') + \' ур.\'%>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                <% } %>\n                                </div>\n                            </div>\n                            <% } else { %>\n                            <div class="wardrobe__tabs-content-empty">\n                                <div class="wardrobe__tabs-content-empty-text">Нет улучшенных вещей</div>\n                            </div>\n                            <% } %>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="wardrobe__dissection-ctrl wardrobe-dissection">\n                <div class="wardrobe-dissection__container">\n                    <div id="destroyAlert" class="wardrobe-dissection__container-text" style="display:none">\n                        <div class="wardrobe-dissection__container-text-label">Внимание:</div>\n                        <div class="wardrobe-dissection__container-text-info dissectionInfo">Вещи исчезнут</div>\n                        <div class="wardrobe-dissection__container-text-info dissectionInfo" style="display: none;">Вещь исчезнет</div>\n                    </div>\n                    <div class="wardrobe-dissection__container-content">\n                        <div id="destroyEmptyItem" class="wardrobe-dissection__item">\n                            <img class="wardrobe-dissection__item-icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/item-dissection.png">\n                            <div class="b-onboarding__text">\n                                <div class="b-onboarding__text-i">Здесь можно разобрать ненужные вещи на свитки.</div>\n                            </div>\n                        </div>\n                        <div id="destroyItem" class="wardrobe-dissection__item" style="display: none;">\n                            <div class="wardrobe-item wardrobe-item_selected">\n                                <div class="wardrobe-item__wrap">\n                                    <img class="wardrobe-item__icon" src="" alt="">\n                                    <div class="wardrobe-item__level"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div id="destroyReward" class="wardrobe-dissection__container-text" style="display:none">\n                        <div class="wardrobe-dissection__container-text-label">Ты получишь:</div>\n                        <div class="wardrobe-dissection__container-text-count">\n                            +<span id="destroyRewardCount"></span>\n                            <div class="b-icon b-icon_scrolls b-icon_small"></div>\n                        </div>\n                    </div>\n                </div>\n                <div id="destroyCount" class="wardrobe-dissection__count" style="display:none">\n                    <div class="wardrobe-dissection__count-ctrls">\n                        <div id="destroyCountDecrease" class="wardrobe-dissection__count-ctrl">\n                            <img class="wardrobe-dissection__count-btn" src="<%= Application.params.staticUrl %>images/app/buttons/minus.png" alt="">\n                        </div>\n                        <div class="wardrobe-dissection__count-data">\n                            <input id="destroyCountValue" class="wardrobe-dissection__count-input" value="" inputmode="decimal" autocomplete="off">\n                        </div>\n                        <div id="destroyCountIncrease" class="wardrobe-dissection__count-ctrl">\n                            <img class="wardrobe-dissection__count-btn" src="<%= Application.params.staticUrl %>images/app/buttons/plus.png" alt="">\n                        </div>\n                    </div>\n                </div>\n                <div id="destroyInfo" class="wardrobe-dissection__info">Выбери вещь для разбора <br>и помести ее в ячейку</div>\n            </div>\n        </div>\n    </div>\n    <!-- /.l-screen__main-content -->\n    <div id="destroyFoot" class="l-screen__main-foot" style="display:none">\n        <div class="b-screen-btns">\n          <div id="destroyCancelBtn" class="b-screen-btns__item b-btn b-btn_white soundingButton">Отмена</div>\n          <div id="destroyConfirmBtn" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Разобрать</div>\n        </div>\n      </div><!-- /.l-screen__main-foot -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/wardrobe/dissection",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/onboarding",
			"collections/popups",
			"collections/simpleCollection",
			"models/appState",
			"models/user",
			"widgets/wardrobe/papers",
			"text!screens/wardrobe/dissection.html!strip",
		],
		function (e, t, n, r, s, o, u, a, f, l, c, h) {
			var p = 360,
				d = 30,
				v = 120,
				m = n.extend({
					template: _.template(h),
					el: "#screenContainer",
					events: {
						"click #backButton": function () {
							f.previousScreen();
						},
						"click .firstLevelItem": "showSliderForFirstLevelItems",
						"click .upgradedItem": "showSliderForUpgradedItems",
						"click .wardrobe__tabs-ctrl-item": "tabHandler",
						"click #destroyCancelBtn": "destroyCancelHandler",
						"click #destroyConfirmBtn": "destroyConfirmHandler",
						"mousedown #destroyCountIncrease": "increaseCountHandler",
						"mousedown #destroyCountDecrease": "decreaseCountHandler",
						"mouseup .wardrobe-dissection__count-ctrl": "endCountActionByTimeout",
						"mouseout .wardrobe-dissection__count-ctrl": "endCountActionByTimeout",
						"keyup #destroyCountValue": "changeCountHandler",
						"change #destroyCountValue": "changeCountHandler",
					},
					initialize: function (n) {
						var r = this,
							i;
						(this.selectedItem = null),
							(this.currentTabIndex = 0),
							(this.countActionTimer = null),
							(this.countActionInterval = null),
							this.prepareCollections(),
							(this.viewParam = {
								Application: t,
								User: l,
								WardrobeController: s,
							}),
							this.listenTo(e, "clothesDestroyItemCopies", function () {
								this.prepareCollections(), this.render(), this.changeTab(this.currentTabIndex);
							}),
							this.listenTo(e, "clothesDestroyItem", function () {
								this.prepareCollections(), this.render(), this.changeTab(this.currentTabIndex);
							});
					},
					initializeWidgets: function () {
						this.widgets = [new c()];
					},
					afterRenderWidgets: function () {
						this.initOnboarding();
					},
					afterRender: function () {},
					prepareCollections: function () {
						(this.BagItems = s.getBagItems()),
							(this.ActiveItems = s.getActiveItems()),
							(this.itemsList = _.union(this.ActiveItems.models, this.BagItems.models)),
							(this.firstLevelItems = []),
							(this.upgradedItems = []);
						for (i = 0; i < this.itemsList.length; i += 1)
							this.itemsList[i].get("copiesCount") > 0 &&
								this.firstLevelItems.push(this.itemsList[i]),
								this.itemsList[i].get("level") > 1 && this.upgradedItems.push(this.itemsList[i]);
						(this.firstLevelItems = _.sortBy(this.firstLevelItems, s.comparatorForRare)),
							(this.upgradedItems = _.sortBy(this.upgradedItems, s.comparatorForRare));
					},
					showSliderForFirstLevelItems: function (e) {
						var t, n, r;
						$(".wardrobe-items-list__item_selected").length == 0 &&
							((t = new a()),
							t.set(this.firstLevelItems),
							(n = $(e.currentTarget)),
							(r = n.data("index")),
							u.add({
								type: "wardrobe.sliderList",
								params: {
									data: t,
									startIndex: r,
									content: "dissectionItemCopies",
									screen: this,
								},
							}));
					},
					showSliderForUpgradedItems: function (e) {
						var t, n, r;
						$(".wardrobe-items-list__item_selected").length == 0 &&
							((t = new a()),
							t.set(this.upgradedItems),
							(n = $(e.currentTarget)),
							(r = n.data("index")),
							u.add({
								type: "wardrobe.sliderList",
								params: {
									data: t,
									startIndex: r,
									content: "dissectionItem",
									screen: this,
								},
							}));
					},
					tabHandler: function (e) {
						var t = $(e.currentTarget),
							n = t.index(".wardrobe__tabs-ctrl-item");
						t.hasClass("wardrobe__tabs-ctrl-item_active") || this.changeTab(n);
					},
					changeTab: function (e) {
						(this.currentTabIndex = e),
							$(".wardrobe__tabs-ctrl-item").removeClass("wardrobe__tabs-ctrl-item_active"),
							$(".wardrobe__tabs-ctrl-item").eq(e).addClass("wardrobe__tabs-ctrl-item_active"),
							$(".wardrobe__tabs-content-item").removeClass("wardrobe__tabs-content-item_active"),
							$(".wardrobe__tabs-content-item")
								.eq(e)
								.addClass("wardrobe__tabs-content-item_active"),
							$(".dissectionInfo").hide(),
							$(".dissectionInfo").eq(e).show(),
							this.clearDestroyCtrl();
					},
					itemSelectHandler: function (e) {
						var n,
							r,
							i,
							o,
							u = this.currentTabIndex == 0;
						(n = this.BagItems.get(e) || this.ActiveItems.get(e)),
							(this.selectedItem = n),
							$("#destroyEmptyItem").hide(),
							(destroyItemDom = $("#destroyItem")),
							destroyItemDom
								.find(".wardrobe-item__icon")
								.attr("src", t.params.clothesUrl + n.get("itemId") + ".png"),
							(r = u ? "1 ур." : s.checkingItemForMaxLevel(n) ? "Макс." : n.get("level") + " ур."),
							destroyItemDom.find(".wardrobe-item__level").text(r),
							(i = t.params.wardrobeItemRarity[n.get("category")]),
							destroyItemDom.addClass("wardrobe-item_" + i),
							u &&
								($("#destroyCount").show(),
								$("#destroyCountValue").val("1"),
								this.setCountCtrlsState(n)),
							this.setRewardValue(n),
							$("#destroyInfo").hide(),
							destroyItemDom.show(),
							$("#destroyRewardCount").text(o),
							$("#destroyReward").show(),
							$("#destroyAlert").show(),
							$("#destroyFoot").show();
					},
					decreaseCountHandler: function () {
						(this.countActionInterval = p), this.decreaseCountAction();
					},
					decreaseCountAction: function () {
						var e = $("#destroyCountValue").val();
						e > 1 &&
							($("#destroyCountValue").val(e - 1),
							this.setCountCtrlsState(this.selectedItem),
							this.setRewardValue(this.selectedItem)),
							this.startCountActionByTimeout(this.decreaseCountAction.bind(this));
					},
					increaseCountHandler: function () {
						(this.countActionInterval = p), this.increaseCountAction();
					},
					increaseCountAction: function () {
						var e = this.selectedItem.get("copiesCount"),
							t = +$("#destroyCountValue").val();
						t < e &&
							($("#destroyCountValue").val(t + 1),
							this.setCountCtrlsState(this.selectedItem),
							this.setRewardValue(this.selectedItem)),
							this.startCountActionByTimeout(this.increaseCountAction.bind(this));
					},
					startCountActionByTimeout: function (e) {
						(this.countActionTimer = setTimeout(e, this.countActionInterval)),
							(this.countActionInterval =
								this.countActionInterval > v ? this.countActionInterval - d : v);
					},
					endCountActionByTimeout: function () {
						clearTimeout(this.countActionTimer);
					},
					changeCountHandler: function () {
						var e = this.selectedItem.get("copiesCount"),
							t = +$("#destroyCountValue").val();
						if (t == "") return !1;
						(t < 1 || t > e || isNaN(t)) && $("#destroyCountValue").val("1"),
							this.setRewardValue(this.selectedItem),
							this.setCountCtrlsState(this.selectedItem);
					},
					destroyConfirmHandler: function () {
						u.add({
							type: "wardrobe.destroyConfirm",
							params: {
								screen: this,
							},
						});
					},
					destroyCancelHandler: function () {
						this.clearDestroyCtrl();
					},
					itemDestroyHandler: function () {
						var t;
						this.currentTabIndex == 0
							? ((t = $("#destroyCountValue").val()),
							  e.clothesDestroyItemCopies(this.selectedItem.get("id"), +t),
							  r.sendDesignEvent("Screen_actions:Disassembly:first_lvl_destroy"))
							: (e.clothesDestroyItem(this.selectedItem.get("id")),
							  r.sendDesignEvent("Screen_actions:Disassembly:improved_destroy"));
					},
					clearDestroyCtrl: function () {
						$(".wardrobe-items-list__item_selected").removeClass(
							"wardrobe-items-list__item_selected"
						),
							$("#destroyAlert").hide(),
							$("#destroyItem").hide(),
							$("#destroyReward").hide(),
							$("#destroyCountValue").val(""),
							$("#destroyCount").hide(),
							$("#destroyFoot").hide(),
							$("#destroyEmptyItem").show(),
							$("#destroyInfo").show();
					},
					setCountCtrlsState: function (e) {
						var t = this.selectedItem.get("copiesCount"),
							n = $("#destroyCountValue").val();
						n == 1
							? $("#destroyCountDecrease").addClass("wardrobe-dissection__count-ctrl_disabled")
							: $("#destroyCountDecrease").removeClass("wardrobe-dissection__count-ctrl_disabled"),
							n == t
								? $("#destroyCountIncrease").addClass("wardrobe-dissection__count-ctrl_disabled")
								: $("#destroyCountIncrease").removeClass(
										"wardrobe-dissection__count-ctrl_disabled"
								  );
					},
					setRewardValue: function (e) {
						var t;
						this.currentTabIndex == 1
							? (t = e.get("destroyRewards")[0].count)
							: (t = e.get("copyDestroyRewards")[0].count * $("#destroyCountValue").val()),
							$("#destroyRewardCount").text(t);
					},
					initOnboarding: function () {
						var e = o.get("wardrobeDissectionSlot"),
							t = o.get("wardrobeDissectionItem"),
							n = o.get("wardrobeDissectionTab");
						e
							? t
								? n || this.showDissectionTabOnboarding()
								: this.showDissectionItemOnboarding()
							: this.showDissectionSlotOnboarding();
					},
					showDissectionSlotOnboarding: function () {
						(this.currentOnboarding = "wardrobeDissectiontSlot"),
							$("#cover").show(),
							$("#destroyEmptyItem").addClass("b-onboarding b-onboarding_wardrobe-dissection-slot"),
							$("#cover").on("click", this.closeOnboarding.bind(this)),
							$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
					},
					showDissectionItemOnboarding: function () {
						this.currentOnboarding = "wardrobeDissectionItem";
						var e = $(".wardrobe__dissection-view"),
							t = null,
							n =
								"<div class='b-onboarding b-onboarding_wardrobe-dissection-item'><div class='b-onboarding__text'><div class='b-onboarding__text-i'>Можно разобрать на свитки сразу несколько одинаковых вещей первого уровня.</div></div></div>";
						$("#cover").show(),
							e.append(n),
							(t = $(".wardrobe-items-list").find(".wardrobe-items-list__item").eq(0)),
							t.addClass("b-onboarding b-onboarding_item"),
							$("#cover").on("click", this.closeOnboarding.bind(this)),
							$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
					},
					showDissectionTabOnboarding: function () {
						this.upgradedItems.length &&
							((this.currentOnboarding = "wardrobeDissectionTab"),
							$("#cover").show(),
							$(".wardrobe__tabs-ctrl-item")
								.eq(1)
								.addClass("b-onboarding b-onboarding_wardrobe-dissection-tab"),
							$("#cover").on("click", this.closeOnboarding.bind(this)),
							$(".b-onboarding").on("click", this.closeOnboarding.bind(this)));
					},
					closeOnboarding: function () {
						$("#cover").off("click"),
							$(".b-onboarding").off("click", ".b-onboarding"),
							$("#cover").hide();
						switch (this.currentOnboarding) {
							case "wardrobeDissectiontSlot":
								$("#destroyEmptyItem").removeClass(
									"b-onboarding b-onboarding_wardrobe-dissection-slot"
								),
									o.set("wardrobeDissectionSlot", !0),
									this.showDissectionItemOnboarding();
								break;
							case "wardrobeDissectionItem":
								$(".b-onboarding_item").removeClass("b-onboarding b-onboarding_item"),
									o.set("wardrobeDissectionItem", !0),
									$(".b-onboarding_wardrobe-dissection-item").remove();
								break;
							case "wardrobeDissectionTab":
								$(".wardrobe__tabs-ctrl-item")
									.eq(1)
									.removeClass("b-onboarding b-onboarding_wardrobe-dissection-tab"),
									o.set("wardrobeDissectionTab", !0);
						}
					},
				});
			return m;
		}
	),
	define("text!widgets/wardrobe/copyCraftSlots.html!strip", [], function () {
		return '<%\n\nvar i;\nvar slot, slotId, slotStatusCssClass;\nvar paramsModel = WardrobeCopyCraftParamsModel;\n\nvar copyCraftPercent;\nvar maxBoostCount;\nvar timeToFinish;\n\nvar rarity = Application.params.wardrobeItemRarity;\n\n%>\n\n<div class="wardrobe-create__container">\n    <div class="b-onboarding__text">\n        <div class="b-onboarding__text-i">Здесь ты можешь создать вещи первого уровня для улучшения имеющихся у тебя вещей.</div>\n    </div>\n    <ul class="wardrobe-create__container-list" id="wardrobeCreateCtrls">\n        \n        <% for(i = 0; i < slots.length; i += 1) { %>\n        <%\n        slot = slots[i];\n        slotId = slot.userItemSlotId;\n        timeToFinish = (slot.makingFinishTime - moment().format(\'X\'));\n        slotStatusCssClass = (slot.state == \'copy_making\' && timeToFinish > 0)? \n            \'wardrobe-item_creating\' : \n            (slot.state == \'copy_has_made\' || (slot.state == \'copy_making\' && timeToFinish <= 0))? \n                \'wardrobe-item_marked\' : \'\';\n        %>\n        <li data-id="<%=slotId%>" class="wardrobe-create__container-item <%=(slot.state == \'empty\')? \'slotIsEpty\' : \'\' %>">\n            <div class="wardrobe-create__container-ctrl"> <!-- wardrobe-create__container-ctrl_drop-zone -->\n                <% if (slot.state == \'empty\') { %>\n                <img class="wardrobe-create__container-ctrl-icon" \n                    src="<%=Application.params.staticUrl%>images/app/wardrobe/item-create<%=(slot.status == \'paid\')? \'-bought-slot\' : \'\'%>.png" \n                    alt="">\n                <div class="wardrobe-item wardrobe-item_selected wardrobe-item_canBeCreated" style="display: none;">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="" alt=""/>\n                    </div>\n                </div>\n                <div data-index="<%=i%>" class="wardrobe-create__container-clear clearSlotCtrl">\n                    <div class="delete-ctrl"></div>\n                </div>\n                <% } else { %>\n                <div class="wardrobe-item wardrobe-item_<%=rarity[slot.clothesItem.category]%> wardrobe-item_selected <%=slotStatusCssClass%>">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" \n                            src="<%=Application.params.clothesUrl%><%=slot.clothesItem.itemId%>.png" \n                            alt=""/>\n                    </div>\n                    <% if (slot.state == \'copy_making\' && timeToFinish > 0) { %>\n                    <%\n                    copyCraftPercent = Math.floor(\n                        (moment().format(\'X\') - slot.makingStartTime) / \n                        (slot.makingFinishTime - slot.makingStartTime) * 100\n                    );\n                    %>\n                    <div class="wardrobe-item__progress">\n                        <canvas data-percent="<%=copyCraftPercent%>" class="wardrobe-item__progress-canvas copyCraftProgress" width="200" height="200"></canvas>\n                    </div>\n                    <% } %>\n                </div>\n                <% } %>\n            </div>\n        </li>\n        <% } %>\n\n        <% if (slots.length < settings.freeSlotsCount + settings.forBuySlotsCount && purchase) { %>\n        <li class="wardrobe-create__container-item slotForBuy">\n            <div class="wardrobe-create__container-ctrl wardrobe-create__container-ctrl_add"> </div>\n        </li>\n        <% } %>\n    </ul>\n</div>\n\n<% for(i = 0; i < slots.length; i += 1) { %>\n<% \nslot = slots[i];\nslotId = slot.userItemSlotId;\ntimeToFinish = (slot.makingFinishTime - moment().format(\'X\'));\n%>\n<div class="wardrobe-create__ctrl" <%= (i == this.currentSlotIndex)? \'style="display: block"\' : \'\' %>>\n    <% if (slot.state == \'empty\') { %>\n    <div class="wardrobe-create__ctrl-text">Помести вещь в ячейку, чтобы создать такую же вещь 1 уровня</div>\n    <div data-slot="<%=slotId%>" class="wardrobe-create__ctrl-btn b-btn b-btn_blue copyCraftStart" style="display: none;">\n        Создать <span class="createCost"></span>\n        <div class="b-icon b-icon_scrolls b-icon_small"></div>\n    </div>\n    <% } else if (slot.state == \'copy_making\' && timeToFinish > 0) { %>\n    <%\n    maxBoostCount = _.findWhere(paramsModel.get(\'data\'), {clothesCategory: slot.clothesItem.category}).boostParams.maxBoostCount;\n    %>\n    <div class="wardrobe-create__ctrl-time">\n        Осталось: \n        <span class="wardrobe-create__ctrl-time-data"><%=Application.methods.getDaysHoursMinutesFromMS((slot.makingFinishTime - moment().format(\'X\')) * 1000)%></span>\n    </div>\n        <% if (slot.currentBoostCount < maxBoostCount && Application.params.availableSocialRV) { %>\n    <div data-slot="<%=slotId%>" class="wardrobe-create__ctrl-btn b-btn b-btn_green <%=(GateController.checkClothesCopyCraftFinish(slot.clothesItem.itemId))? \'b-btn_disabled\' : \'copyCraftBoost\'%>">\n        Ускорить\n    </div>\n        <% } else { %>\n    <div data-slot="<%=slotId%>" class="wardrobe-create__ctrl-btn b-btn b-btn_green <%=(GateController.checkClothesCopyCraftFinish(slot.clothesItem.itemId))? \'b-btn_disabled\' : \'copyCraftFinish\'%>">\n        Ускорить\n        <span class="b-coin b-coin_wardrobe"><%=paramsModel.getInstantCreationCost(slot.clothesItem.category)%></span>\n    </div>\n        <% } %>\n    <% } else if (slot.state == \'copy_has_made\' || timeToFinish <= 0) { %>\n    <div data-slot="<%=slotId%>" class="wardrobe-create__ctrl-btn b-btn b-btn_blue copyCraftClearSlot">\n        Забрать\n    </div>\n    <% } %>\n</div>\n<% } %>\n<% if (slots.length < settings.freeSlotsCount + settings.forBuySlotsCount && purchase) { %>\n<div class="wardrobe-create__ctrl">\n    <div class="wardrobe-create__ctrl-text">Увеличь количество ячеек</div>\n</div>\n<% } %>';
	}),
	define(
		"widgets/wardrobe/copyCraftSlots",
		[
			"gate",
			"application",
			"widget",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/wardrobe/papers",
			"models/wardrobe/copyCraftParams",
			"models/wardrobe/copyCraftSlots",
			"text!widgets/wardrobe/copyCraftSlots.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = n.extend({
				template: _.template(h),
				el: "#WardrobeCopyCraftSlotsWidget",
				events: {
					"mouseup .slotForBuy": "buySlotHanderl",
					"click .clearSlotCtrl": "clearSlotCtrlHandler",
					"click .copyCraftStart": "copyCraftStartHandler",
					"click .copyCraftBoost": "copyCraftBoostHandler",
					"click .copyCraftFinish": "copyCraftFinishHandler",
					"click .copyCraftClearSlot": "copyCraftClearSlotHandler",
				},
				initialize: function (n) {
					var i = this;
					(this.model = c),
						(this.sliserIsBusy = !1),
						(this.currentSlotIndex = 0),
						(this.slotsContent = {}),
						(this.viewParam = {
							Application: t,
							GateController: r,
							WardrobeController: s,
							WardrobeCopyCraftParamsModel: l,
						}),
						this.listenTo(this.model, "change", function () {
							i.render();
						}),
						this.listenTo(e, "clothesCopyCraftStart", function () {
							i.render();
						}),
						this.listenTo(e, "orderSuccess", function () {
							(this.currentSlotIndex = 0), e.clothesCopyCraftGetUserSlots();
						});
				},
				afterRender: function () {
					var e = this,
						t = $("#wardrobeCreateCtrls"),
						n = $(".wardrobe-create__container-item").size();
					t.itemslide({
						start: e.currentSlotIndex,
						duration: 500,
						pan_threshold: 0.2,
					}),
						t.on("changeActiveIndex", function () {
							e.sliserIsBusy = !1;
							var n = t.getActiveIndex();
							$(".wardrobe-create__ctrl").hide().eq(n).show(), (e.currentSlotIndex = n);
						}),
						t.on("pan", function (t) {
							e.sliserIsBusy = !0;
						}),
						this.drawProgress(),
						this.fillStlotsAfterRender(),
						this.timerStart();
				},
				findExistingItem: function (e) {
					var t;
					return (t = s.getBagItems().get(e) || s.getActiveItems().get(e)), t;
				},
				fillSlotHandler: function (e) {
					var t,
						n = this.currentSlotIndex,
						r = this.model.getCreatingItems(),
						i = $(".wardrobe-create__container-item"),
						s = i.size(),
						o = s == 1 ? !0 : n != s - 1,
						u = i.eq(n);
					if (u.hasClass("slotIsEpty") && o && !_.findWhere(this.slotsContent, e)) {
						t = this.findExistingItem(e);
						if (r && r.indexOf(t.get("itemId")) != -1) return !1;
						this.fillSlot(n, t);
					}
				},
				fillSlot: function (e, n) {
					var r = n,
						i = r.get("id"),
						s = $(".wardrobe-create__container-item").eq(e),
						o = s.data("id"),
						u = s.find(".wardrobe-create__container-ctrl-icon"),
						a = s.find(".wardrobe-item"),
						f = a.find(".wardrobe-item__icon"),
						c = s.find(".wardrobe-create__container-clear"),
						h = $(".wardrobe-create__ctrl").eq(e),
						p = h.find(".wardrobe-create__ctrl-text"),
						d = h.find(".wardrobe-create__ctrl-btn"),
						v = h.find(".createCost");
					(this.slotsContent[o] = i),
						$("#" + i).addClass("wardrobe-items-list__item_selected"),
						s.removeClass("slotIsEpty"),
						a.addClass("wardrobe-item_" + t.params.wardrobeItemRarity[r.get("category")]),
						f.attr("src", t.params.clothesUrl + r.get("itemId") + ".png"),
						u.hide(),
						a.show(),
						c.show().data("id", i),
						p.hide(),
						d.show().data("id", i),
						v.text(l.getCreateCost(r.get("category")));
				},
				fillStlotsAfterRender: function () {
					var e = this,
						t,
						n,
						r,
						i,
						s;
					_.each(this.slotsContent, function (o, u) {
						console.log("val key: ", o, u),
							(n = u),
							(i = o),
							(s = e.findExistingItem(i)),
							(t = $(".wardrobe-create__container-item[data-id='" + n + "']")),
							(r = $(t).index(".wardrobe-create__container-item")),
							e.fillSlot(r, s);
					});
				},
				clearSlotCtrlHandler: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index"),
						r = t.data("id"),
						i = t.parents(".wardrobe-create__container-item").data("id"),
						s = $(".wardrobe-create__container-item").eq(n),
						o = s.find(".wardrobe-create__container-ctrl-icon"),
						u = s.find(".wardrobe-item"),
						a = $(".wardrobe-create__ctrl").eq(n),
						f = a.find(".wardrobe-create__ctrl-text"),
						l = a.find(".wardrobe-create__ctrl-btn");
					$("#" + r).removeClass("wardrobe-items-list__item_selected"),
						delete this.slotsContent[i],
						s.addClass("slotIsEpty"),
						o.show(),
						u.hide(),
						t.hide(),
						f.show(),
						l.hide();
				},
				copyCraftStartHandler: function (t) {
					var n = $(t.currentTarget),
						r = n.data("slot"),
						s = n.data("id");
					n.addClass("b-btn_disabled").removeClass("startCreation");
					var u = this.findExistingItem(s),
						a = f.get("balance"),
						c = l.getCreateCost(u.get("category"));
					a < c
						? (o.add({
								type: "wardrobe.paperLacks",
								params: {
									count: c - a,
								},
						  }),
						  n.removeClass("b-btn_disabled").addClass("startCreation"))
						: (delete this.slotsContent[r],
						  e.clothesCopyCraftStart(r, u.get("itemId")),
						  i.sendDesignEvent("Screen_actions:Creation:create"));
				},
				copyCraftBoostHandler: function (e) {
					var t = $(e.currentTarget).data("slot"),
						n = _.findWhere(this.model.get("slots"), {
							userItemSlotId: t,
						}).clothesItem,
						r = n.itemId,
						i = n.category,
						s = _.findWhere(l.get("data"), {
							clothesCategory: i,
						}),
						u = s.boostParams.reduceRvTime,
						a = s.instantCreationCosts.coins;
					o.add({
						type: "wardrobe.copyCraftBoost",
						params: {
							slotId: t,
							itemId: r,
							reduceRvTime: u,
							instantCreationCosts: a,
						},
					});
				},
				copyCraftFinishHandler: function (e) {
					var n = $(e.currentTarget),
						s = n.data("slot"),
						u = _.findWhere(this.model.get("slots"), {
							userItemSlotId: s,
						}).clothesItem,
						f = u.itemId,
						c = u.category,
						h = _.findWhere(l.get("data"), {
							clothesCategory: c,
						}),
						p = h.instantCreationCosts.coins,
						d = a.get("balance");
					d < p
						? purchase
							? o.add({
									type: "buyCoins",
							  })
							: o.add({
									type: "text",
									params: {
										header: "",
										text: "Недостаточно монет для ускорения.",
										list: null,
										cursiv: null,
									},
							  })
						: (r.clothesCopyCraftFinish(s, f, "coins"),
						  n.removeClass("copyCraftFinish").addClass("b-btn_disabled"),
						  i.sendDesignEvent("Screen_actions:Creation:claim"),
						  i.sendResourceEvent("coins", -p, "creation_speedup", "Consumed"),
						  i.sendDesignEvent("Items_leveling:Creation:" + t.params.wardrobeItemRarity[c]));
				},
				copyCraftClearSlotHandler: function (n) {
					var r = $(n.currentTarget).data("slot"),
						s = _.findWhere(this.model.get("slots"), {
							userItemSlotId: r,
						}).clothesItem,
						o = s.itemId,
						u = s.category;
					e.clothesCopyCraftClearSlot(r, o),
						i.sendDesignEvent("Items_leveling:Creation:" + t.params.wardrobeItemRarity[u]);
				},
				buySlotHanderl: function () {
					console.log("buySlotHanderl"),
						this.sliserIsBusy == 0 &&
							(o.add({
								type: "wardrobe.copyCraftBuySlot",
							}),
							i.sendDesignEvent("Screen_actions:Creation:buy_slot"));
				},
				drawProgress: function () {
					var e,
						t,
						n,
						r,
						i,
						s = $(".copyCraftProgress");
					s.each(function (s, o) {
						(e = $(o)),
							(r = e.data("percent") ? e.data("percent") : 0),
							(i = (2 * Math.PI * r) / 100);
						try {
							(t = e[0].width),
								(n = e[0].getContext("2d")),
								(n.fillStyle = "#544a70"),
								n.beginPath(),
								n.moveTo(t / 2, t / 2),
								n.arc(t / 2, t / 2, t / 2, i - Math.PI / 2, 2 * Math.PI - Math.PI / 2),
								n.closePath(),
								n.fill();
						} catch (u) {
							console.warn("task canvas error: ", u);
						}
					});
				},
				timerStart: function () {
					var e = this;
					clearInterval(this.timer);
					var t = $(".wardrobe-item_creating");
					t.length &&
						(this.timer = setInterval(function () {
							e.sliserIsBusy ? e.timerStart() : e.render();
						}, 1e4));
				},
			});
			return p;
		}
	),
	define("text!widgets/wardrobe/copyCraftBag.html!strip", [], function () {
		return '<%\nvar i;\nvar items = this.itemsList;\nvar itemsCount = items.length;\n\nvar rarity = Application.params.wardrobeItemRarity;\n\nvar itemModel;\nvar itemLevel;\nvar itemLevelSettings;\nvar itemMarkedClass;\nvar itemCopiesCount;\nvar itemNextLevelCopiesCount;\nvar itemCopiesRatio;\nvar itemHasMaxLevel;\nvar itemCanBeUpgraded;\n\n%>\n\n<div class="wardrobe-filter">\n    <div class="wardrobe-filter__title">Сумка</div>\n    <div class="wardrobe-filter__ctrl"> \n        <div class="wardrobe-filter__ctrl-text"></div>\n    </div>\n</div>\n<% if (itemsCount == 0) { %>\n<div class="wardrobe__bag-empty">\n    <div class="wardrobe__bag-empty-text">Нет вещей</div>\n</div>\n<% } else { %> \n\n<div class="wardrobe-items-list wardrobe-items-list_create">\n    <div class="wardrobe-items-list__content">\n        <% for (i = 0; i < itemsCount; i += 1) { %>\n        <%\n        itemModel = items[i];\n        itemLevel = itemModel.get(\'level\') || 1;\n        itemLevelSettings = itemModel.get(\'levelSettings\');\n        itemCopiesCount = itemModel.get(\'copiesCount\');\n        itemNextLevelCopiesCount = itemLevelSettings.nextLevelCopiesCount;\n        itemCopiesRatio = itemCopiesCount/itemNextLevelCopiesCount;\n        itemHasMaxLevel = WardrobeController.checkingItemForMaxLevel(itemModel);\n        itemCanBeUpgraded = WardrobeController.checkingItemForUpgradable(itemModel);\n        %>\n        <div data-itemid="<%=itemModel.get(\'itemId\')%>" class="wardrobe-items-list__item">\n            <div class="wardrobe-items-list__item-wrap">\n                <div id="<%=itemModel.get(\'id\')%>" class="wardrobe-item wardrobe-item_<%=rarity[itemModel.get(\'category\')]%> wardrobe-items-list__item-icon">\n                    <div class="wardrobe-item__wrap">\n                        <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=itemModel.get(\'itemId\')%>.png" alt="" />\n                        <div class="wardrobe-item__level">\n                            <%= (itemHasMaxLevel)? \'Макс.\' : itemLevel + \' ур.\'%>\n                        </div>\n                    </div>\n                </div>\n                <% if (itemHasMaxLevel) { %>\n                <div class="wardrobe-items-list__counter wardrobe-items-list__counter_text">\n                    <div class="wardrobe-items-list__counter-data">\n                        <span class="wardrobe-items-list__counter-data-label">1 ур.:</span> <%=itemCopiesCount%>\n                    </div>\n                </div>\n                <% } else { %>\n                <div class="wardrobe-items-list__counter \n                    <%=(itemCanBeUpgraded)? \'wardrobe-items-list__counter_upgradable\' : \'\'%> \n                    <%=(itemCopiesRatio >= 1)? \'wardrobe-items-list__counter_full\' : \'\'%> \n                    <%=(itemCopiesCount == 0)? \'wardrobe-items-list__counter_empty\' : \'\'%>">\n                    <div class="wardrobe-items-list__counter-progress" style="width: <%=(itemCopiesRatio >= 1)? \'100\' : Math.floor(itemCopiesRatio*100) %>%"></div>\n                    <div class="wardrobe-items-list__counter-data"><%=itemCopiesCount%>/<%=itemNextLevelCopiesCount%></div> \n                    \n                </div>\n                <% } %>\n            </div>\n        </div>\n        <% } %>\n        \n    </div>\n</div>\n\n<% } %>';
	}),
	define(
		"widgets/wardrobe/copyCraftBag",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/wardrobe/copyCraftSlots",
			"text!widgets/wardrobe/copyCraftBag.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = "_wardrobe-copyCraft-bag-sort",
				c = n.extend({
					template: _.template(f),
					el: "#wardrobeCopyCraftBagWidget",
					events: {
						"click .wardrobe-filter__ctrl": "filterHandler",
					},
					initialize: function (n) {
						var r = this,
							s = localStorage.getItem(u.get("id") + l);
						if (s)
							switch (s) {
								case "byRare":
									this.comparator = "comparatorForRare";
									break;
								case "byLevel":
									this.comparator = "comparatorForLevel";
							}
						else this.comparator = "comparatorForRare";
						this.prepareCollections(),
							(this.selectedItems = []),
							(this.viewParam = {
								Application: t,
								WardrobeController: i,
							}),
							this.listenTo(e, "clothesCopyCraftClearSlot", function () {
								e.clothesGetActiveItems();
							}),
							this.listenTo(e, "clothesGetActiveItems", function () {
								e.clothesGetBagItems();
							}),
							this.listenTo(e, "clothesGetBagItems", function () {
								this.prepareCollections(), r.render();
							});
					},
					afterRender: function () {
						this.setFilterText(), this.selectCreatingItems(), this.markItemsOnFilterChange();
					},
					prepareCollections: function () {
						var e = i.getBagItems(),
							t = i.getActiveItems();
						(this.itemsList = _.union(t.models, e.models)), this.sortCollection();
					},
					sortCollection: function () {
						this.itemsList = _.sortBy(this.itemsList, i[this.comparator]);
					},
					filterHandler: function () {
						this.saveItemsOnFilterChange();
						switch (this.comparator) {
							case "comparatorForRare":
								(this.comparator = "comparatorForLevel"),
									localStorage.setItem(u.get("id") + l, "byLevel"),
									(label = "по уровню");
								break;
							case "comparatorForLevel":
								(this.comparator = "comparatorForRare"),
									localStorage.setItem(u.get("id") + l, "byRare"),
									(label = "по редкости");
						}
						this.sortCollection(), this.render(), r.sendDesignEvent("Screen_actions:Items:sorting");
					},
					setFilterText: function () {
						var e = $(".wardrobe-filter__ctrl-text");
						switch (this.comparator) {
							case "comparatorForRare":
								e.text("по редкости");
								break;
							case "comparatorForLevel":
								e.text("по уровню");
						}
					},
					selectCreatingItems: function () {
						var e = a.getCreatingItems(),
							t,
							n;
						e &&
							((t = $(".wardrobe-items-list__item")),
							t.removeClass("wardrobe-items-list__item_selected"),
							t.each(function (t, r) {
								(n = $(r)),
									e.indexOf(n.data("itemid")) != -1 &&
										n.addClass("wardrobe-items-list__item_selected");
							}));
					},
					saveItemsOnFilterChange: function () {
						var e = this;
						(this.selectedItems = []),
							$(".wardrobe-items-list__item_selected").each(function (t, n) {
								console.log("el: ", n), e.selectedItems.push(n.id);
							}),
							console.log("this.selectedItems: ", this.selectedItems);
					},
					markItemsOnFilterChange: function () {
						this.selectedItems &&
							this.selectedItems.forEach(function (e) {
								$("#" + e).addClass("wardrobe-items-list__item_selected");
							});
					},
				});
			return c;
		}
	),
	define("text!screens/wardrobe/create.html!strip", [], function () {
		return '<%\n\n\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Создание</div>\n    <div id="wardrobePapersWidget" class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_wardrobe-create">\n    <div class="l-screen__main-content">\n        <div class="wardrobe wardrobe_create">\n            <div id="WardrobeCopyCraftSlotsWidget" class="wardrobe__create wardrobe-create">\n                \n            </div>\n            <div id="wardrobeCopyCraftBagWidget" class="wardrobe__bag">\n                \n            </div>\n        </div>\n\n    </div>\n    <!-- /.l-screen__main-content -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/wardrobe/create",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/onboarding",
			"models/appState",
			"models/user",
			"widgets/wardrobe/copyCraftSlots",
			"widgets/wardrobe/copyCraftBag",
			"widgets/wardrobe/papers",
			"text!screens/wardrobe/create.html!strip",
			"itemslide",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = n.extend({
				template: _.template(c),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						o.previousScreen();
					},
					"click .wardrobe-items-list__item-icon": "itemSelectHandler",
				},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
						User: u,
						WardrobeController: i,
					};
				},
				initializeWidgets: function () {
					(this.paperWidget = new l()),
						(this.slotWidget = new a()),
						(this.bagWidget = new f()),
						(this.widgets = [this.paperWidget, this.slotWidget, this.bagWidget]);
				},
				afterRenderWidgets: function () {
					this.initOnboarding();
				},
				afterRender: function () {},
				itemSelectHandler: function (e) {
					var t = $(e.currentTarget).attr("id");
					this.slotWidget.fillSlotHandler(t);
				},
				initOnboarding: function () {
					var e = s.get("wardrobeCopyCraftSlot"),
						t = s.get("wardrobeCopyCraftItem");
					e ? t || this.showCopyCraftItemOnboarding() : this.showCopyCraftSlotOnboarding();
				},
				showCopyCraftSlotOnboarding: function () {
					(this.currentOnboarding = "wardrobeCopyCraftSlot"),
						$("#cover").show(),
						$(".wardrobe-create__container").addClass(
							"wardrobe-create__container_onboarding b-onboarding b-onboarding_wardrobe-create-slot"
						),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
				},
				showCopyCraftItemOnboarding: function () {
					this.currentOnboarding = "wardrobeCopyCraftItem";
					var e = $("#wardrobeCopyCraftBagWidget"),
						t = null,
						n =
							"<div class='b-onboarding b-onboarding_wardrobe-create-item'><div class='b-onboarding__text'><div class='b-onboarding__text-i'>Помести вещь в круг, чтобы создать одну вещь первого уровня.</div></div></div>";
					$("#cover").show(),
						e.append(n).css({
							overflow: "visible",
						}),
						(t = $(".wardrobe-items-list").find(".wardrobe-items-list__item").eq(0)),
						t.addClass("b-onboarding b-onboarding_item"),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding").on("click", this.closeOnboarding.bind(this));
				},
				closeOnboarding: function () {
					$("#cover").off("click"),
						$(".b-onboarding").off("click", ".b-onboarding"),
						$("#cover").hide();
					switch (this.currentOnboarding) {
						case "wardrobeCopyCraftSlot":
							$(".wardrobe-create__container").removeClass(
								"wardrobe-create__container_onboarding b-onboarding b-onboarding_wardrobe-create-slot"
							),
								s.set("wardrobeCopyCraftSlot", !0),
								this.showCopyCraftItemOnboarding();
							break;
						case "wardrobeCopyCraftItem":
							$(".b-onboarding_item").removeClass("b-onboarding b-onboarding_item"),
								s.set("wardrobeCopyCraftItem", !0),
								$(".b-onboarding_wardrobe-create-item").remove(),
								$("#wardrobeCopyCraftBagWidget").css({
									overflow: "hidden",
								});
					}
				},
			});
			return h;
		}
	),
	define("text!widgets/wardrobe/shopBundles.html!strip", [], function () {
		return '<%\n\nvar i, j, bundle, bundleData, bundleRegularCostPurchase, bundlePurchaseId, bundleCost, bundleCurrency, bundleContentItem;\nvar rarity = Application.params.wardrobeItemRarity;\n\nvar shopItems = this.collection.models;\n\nvar bundleItem, bundleItemSetCategory, bundleItemSetName, bundleItemsSet, bundleItemsId, bundleItemsRender;\n\nvar isSet;\n\nvar baseItems = WardrobeController.getBaseItems();\n\n%>\n\n<%\nfor (i = 0; i < shopItems.length; i += 1) {\n    bundle = shopItems[i];\n    if (bundle.get(\'displayType\') == \'banner\' && bundle.get(\'isBought\') == false) {\n        bundleItemsSet = [];\n        bundleItemsId = {};\n        bundleItemsRender = {};\n        bundleData = bundle.get(\'data\');\n        bundleRegularCostPurchase = bundle.get(\'regularCost\').purchase;\n        bundlePurchaseId = (social == \'ya\')? bundleRegularCostPurchase.toLowerCase().replace(/\\./g,\'_\') : bundleRegularCostPurchase;\n        bundleCost = _.findWhere(ProductModel.get(\'clothes\'), {_id: bundlePurchaseId}).price;\n        bundleCurrency = Application.methods.declension(bundleCost, Application.params.currency[social]);\n        for (j = 0; j < bundleData.bundle.length; j += 1) { \n            if (bundleData.bundle[j].rewardType == \'clothesOnceConst\') {\n                bundleItemsId[bundleData.bundle[j].info.group] = bundleData.bundle[j].info.itemId;\n                bundleItemsRender[bundleData.bundle[j].info.group] = bundleData.bundle[j].info.render;\n            }\n        }\n%>\n<div data-id="<%=bundle.get(\'userShopItemId\')%>" class="wardrobe-shop__bundle" style="background-image:url(\'<%=bundleData.backgroundImage%>\')">\n    <div class="wardrobe-shop__bundle-name" style="<%=(bundleData.backgroundColor)? \'background-color: #\' + bundleData.backgroundColor + \';\' : \'\'%> <%=(bundleData.textColor)? \'color: #\' + bundleData.textColor + \';\' : \'\'%>"><%=bundleData.title%></div>\n    <div class="wardrobe-shop__bundle-label"><%=bundleData.discountTitle%></div>\n    <div class="wardrobe-shop__bundle-content">\n        <div class="wardrobe-shop__bundle-avatar">\n            <% if (_.size(bundleItemsId) == 4) { %>\n            <div class="custom-avatar wardrobe-shop__bundle-avatar-icon">\n                <img class="custom-avatar__item custom-avatar__item_aura" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'aura\']%>.png" alt="" />\n                <% if (baseItems.models.length < 3) { %>\n                <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%>bodys/body1.png" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%>mouth/mouth1.png" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%>eyes/eyes1.png" alt="" />\n                <% } else { %>\n                <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'body\').get(\'itemId\')%>.png" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'mouth\').get(\'itemId\')%>.png" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'eyes\').get(\'itemId\')%>.png" alt="" />\n                <% } %>\n                <img class="custom-avatar__item custom-avatar__item_hair" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'hair\']%>.png" style="z-index: <%=bundleItemsRender[\'hair\']%>;" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_head" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'hat\']%>.png" style="z-index: <%=bundleItemsRender[\'hat\']%>;" alt="" />\n                <img class="custom-avatar__item custom-avatar__item_subject" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'feature\']%>.png" style="z-index: <%=bundleItemsRender[\'feature\']%>;" alt="" />\n            </div>\n            <% } %>\n        </div>\n        <ul class="wardrobe-shop__bundle-list">\n            <% \n            for (j = 0; j < bundleData.bundle.length; j += 1) { \n                bundleContentItem = bundleData.bundle[j];\n                \n                if (bundleContentItem.rewardType == \'coinsOnceConst\') { %>\n                    <li class="wardrobe-shop__bundle-list-item">\n                        <%=bundleContentItem.count%>\n                        <%=Application.methods.declension(bundleContentItem.count, [\'монета\', \'монеты\', \'монет\'])%>\n                    </li>\n                <% }\n                \n                if (bundleContentItem.rewardType == \'fieldBoosterOnceConst\') { %>\n                    <li class="wardrobe-shop__bundle-list-item">\n                        <%=bundleContentItem.count%>\n                        <%=Application.methods.declension(bundleContentItem.count, [\'усиление\', \'усиления\', \'усилений\'])%>\n                        «<%=bundleContentItem.info.title%>»\n                    </li>\n                <% }\n                \n                if (bundleContentItem.rewardType == \'booksOnceConst\') { %>\n                    <li class="wardrobe-shop__bundle-list-item">\n                        <%=bundleContentItem.count%>\n                        <%=Application.methods.declension(bundleContentItem.count, Application.params.libraryElementDeclensionByType[bundleContentItem.type])%>\n                    </li>\n                <% }\n\n                if (bundleContentItem.rewardType == \'clothesPatternsOnceConst\') { %>\n                    <li class="wardrobe-shop__bundle-list-item">\n                        <%=bundleContentItem.count%>\n                        <%=Application.methods.declension(bundleContentItem.count, Application.params.wardrobePatternDeclensionByType[bundleContentItem.type])%>\n                    </li>\n                <% }\n\n                if (bundleContentItem.rewardType == \'clothesOnceConst\') {\n                    bundleItemSetCategory = bundleContentItem.info.setInfo.category;\n                    bundleItemSetName = bundleContentItem.info.setInfo.name;\n                    bundleItemsSet.push(bundleContentItem.info.setInfo.id);\n                }\n            }\n            %>\n            \n            <% \n            isSet = (bundleItemsSet.length == 4 && _.uniq(bundleItemsSet).length == 1);\n            if (isSet) { %>\n            <li class="wardrobe-shop__bundle-list-item"><%=Application.params.wardrobeSetRarityLabel[bundleItemSetCategory]%> набор “<%=bundleItemSetName%>”</li>\n            <% } %>\n        </ul>\n        <% if (bundleCost) { %>\n        <div data-id="<%=bundle.get(\'userShopItemId\')%>" class="wardrobe-shop__bundle-btn <%=(social == \'vk\')? \'wardrobe-shop__bundle-btn_currency\' : \'\'%>">\n            <%=bundleCost%>\n            <% if (social == \'vk\') { %>\n            <span class="wardrobe-shop__bundle-currency">\n            <%=bundleCurrency%>\n            </span>\n            <% } else { %>\n            <%=bundleCurrency%>\n            <% } %>\n        </div>\n        <% } %>\n    </div>\n</div>\n<%\n    }\n}\n%>';
	}),
	define(
		"widgets/wardrobe/shopBundles",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/product",
			"text!widgets/wardrobe/shopBundles.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				el: "#wardrobeShopBundles",
				events: {
					"click .wardrobe-shop__bundle": "viewBundle",
					"click .wardrobe-shop__bundle-btn": "buyBundle",
				},
				initialize: function (e) {
					var n = this;
					(this.collection = i.getShopItems()),
						this.listenTo(this.collection, "reset add", function () {
							n.render();
						}),
						(this.viewParam = {
							Application: t,
							WardrobeController: i,
							User: u,
							ProductModel: a,
						});
				},
				initializeWidgets: function () {},
				afterRenderWidgets: function () {},
				afterRender: function () {},
				buyBundle: function (t) {
					t.stopPropagation();
					var n = $(t.currentTarget),
						r = n.data("id"),
						o = i.getShopItems().get(r),
						f = o.get("userShopItemId"),
						l = o.get("regularCost").purchase,
						c = social == "ya" ? l.toLowerCase().replace(/\./g, "_") : l,
						h = _.findWhere(a.get("clothes"), {
							_id: c,
						});
					console.log("product: ", h),
						social == "beeline"
							? (console.log("purchase confirmation for Beeline"),
							  s.add({
									type: "confirmationPurchase",
									params: {
										product: h,
										productParams: {
											userShopItemId: f,
										},
									},
							  }))
							: e.buyProduct(u, h, {
									userShopItemId: f,
							  });
				},
				viewBundle: function (e) {
					var t = $(e.currentTarget),
						n = t.data("id");
					o.setScreen({
						screen: "wardrobe.shop.bundle",
						params: {
							id: n,
						},
					}),
						r.sendDesignEvent("Screen_actions:Items_shop:bandle_review");
				},
			});
			return l;
		}
	),
	define("text!widgets/wardrobe/shopSlots.html!strip", [], function () {
		return '<%\n\nvar i, j, k, item, itemIndex, itemIsBought, itemType, itemPurchaseId, itemTitle, \n    itemCost, itemRegularCostCoins, itemRegularCost, itemRegularCostPurchase, itemDiscountCost, itemDiscountExpire, itemCostCurrencyIsCoins;\nvar types = Application.params.wardrobeItemType;\nvar typeLabel = Application.params.wardrobeItemTypeLabel;\nvar rarity = Application.params.wardrobeItemRarity;\n\nvar shopItems = this.collection.models;\n\nvar box, boxSize, boxGroup;\n\n%>\n\n<%\nitemIndex = 0;\nfor (i = 0; i < shopItems.length; i += 1) {\n    item = shopItems[i];\n    if (item.get(\'displayType\') == \'slot\') {\n        itemRegularCostCoins = item.get(\'regularCost\').coins;\n        if (itemRegularCostCoins) {\n            itemRegularCost = itemRegularCostCoins;\n        } else {\n            itemRegularCostPurchase = item.get(\'regularCost\').purchase\n            itemPurchaseId = (social == \'ya\')? itemRegularCostPurchase.toLowerCase().replace(/\\./g,\'_\') : itemRegularCostPurchase;\n            itemRegularCost = _.findWhere(ProductModel.get(\'clothes\'), {_id: itemPurchaseId}).price\n        }\n        itemDiscountCost = (item.get(\'discount\').cost)? (item.get(\'discount\').cost.coins || item.get(\'discount\').cost.purchase) : 0;\n        itemCostCurrencyIsCoins = (itemRegularCostCoins)? true : false;\n        itemDiscountExpire = item.get(\'discount\').tsExpire - moment().format(\'X\');\n        itemCost = (itemDiscountExpire > 0)? itemDiscountCost : itemRegularCost;\n        itemType = item.get(\'type\');\n        itemIsBought = item.get(\'isBought\');\n%>\n<div data-id="<%=item.get(\'userShopItemId\')%>" data-index="<%=itemIndex++%>" class="wardrobe-shop__item <%=(itemIsBought)? \'wardrobe-shop__item_bought\' : \'\'%>">\n    <% if (itemDiscountExpire > 0 && itemDiscountCost && !itemIsBought) { %>\n    <div class="wardrobe-shop__item-time"><%=Application.methods.getFormattedTime(itemDiscountExpire * 1000)%></div>\n    <div class="wardrobe-shop__item-sale"><%=Math.floor(itemDiscountCost * 100 / itemRegularCost) - 100%>%</div>\n    <% } %>\n\n    <% if (itemType == \'clothesItem\') { %>\n    <% \n    itemTitle = WardrobeController.getItemTitle(item.get(\'data\').group, item.get(\'data\').category);\n    %>\n    <div class="wardrobe-item wardrobe-item_<%=rarity[item.get(\'data\').category]%> <%=(item.get(\'itemsCount\') > 1)? \'wardrobe-item_pack\' : \'\'%> wardrobe-item_shop wardrobe-shop__item-icon">\n        <div class="wardrobe-item__wrap">\n            <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=item.get(\'data\').itemId%>.png" alt="" />\n            <div class="wardrobe-item__level"> 1 ур.</div>\n            <div class="wardrobe-item__pack">\n                <div class="wardrobe-item__pack-shadow1"></div>\n                <div class="wardrobe-item__pack-shadow2"></div>\n            </div>\n        </div>\n    </div>\n    <div class="wardrobe-shop__item-data">\n        <div class="wardrobe-shop__item-name">\n            <div class="wardrobe-shop__item-name-text wardrobe-item-type wardrobe-item-type_<%=rarity[item.get(\'data\').category]%>"><%=itemTitle%></div>\n        </div>\n        <div class="wardrobe-shop__item-count"><%=item.get(\'itemsCount\')%> шт.</div>\n        \n    <% } %>\n\n    <% if (itemType == \'clothesPatterns\') { %>\n    <img class="wardrobe-shop__item-icon wardrobe-shop__item-icon_pattern" src="<%= Application.params.staticUrl %>images/app/wardrobe/pattern-<%=rarity[item.get(\'data\').category]%>.png" alt="">\n    <div class="wardrobe-shop__item-data">\n        <div class="wardrobe-shop__item-name">\n            <div class="wardrobe-shop__item-name-text wardrobe-item-type wardrobe-item-type_<%=rarity[item.get(\'data\').category]%>"><%=Application.params.wardrobePatternRarityLabel[item.get(\'data\').category]%> выкройка</div>\n        </div>\n        <div class="wardrobe-shop__item-count"><%=item.get(\'itemsCount\')%> шт.</div>\n        \n    <% } %>\n\n    <% if (itemType == \'box\') { %>\n    <%\n        box = item.get(\'data\').box;\n        boxSize = box.length;\n    %>\n    <img class="wardrobe-shop__item-icon" src="<%=(itemIsBought)? item.get(\'data\').imageOpen : item.get(\'data\').imageClosed %>" alt="">\n    <div class="wardrobe-shop__item-data">\n        <div class="wardrobe-shop__item-name">\n            <div class="wardrobe-shop__item-name-text wardrobe-item-type_<%=rarity[item.get(\'data\').type]%>">Ящик вещей</div>\n        </div>\n        <% if (boxSize) { %>\n        <div class="wardrobe-shop__item-content">\n            <% \n            for (j = 0; j < boxSize; j += 1) { \n                boxGroup = box[j];\n                for (k = 0; k < boxGroup.count; k += 1) { \n            %>\n            <div class="wardrobe-shop__item-content-icon wardrobe-shop__item-content-icon_<%=rarity[boxGroup.category]%>"></div>\n            <%  \n                } \n            } \n            %>\n        </div>\n        <% \n        } \n        %>\n    \n    <% } %>\n        <div class="wardrobe-shop__item-price">\n        <% if (itemCost) { %>\n            <span class="slotCost"><%=itemCost%></span>\n            <% if (itemCostCurrencyIsCoins) { %>\n            <span class="b-coin b-coin_shop"></span>\n            <%} else { %>\n                <%=Application.methods.declension(itemCost, Application.params.currency[social])%>\n            <% } %>\n        <% } else { %>\n            &nbsp;\n        <% } %>\n        </div>\n    </div>\n    <% if (itemIsBought) { %>\n    <div class="wardrobe-shop__item-bought">\n        <div class="wardrobe-shop__item-bought-text">куплено</div>\n    </div>\n    <% } %>\n    \n</div>\n<%\n    }\n}\n%>\n';
	}),
	define(
		"widgets/wardrobe/shopSlots",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"collections/simpleCollection",
			"models/product",
			"text!widgets/wardrobe/shopSlots.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#wardrobeShopSlots",
				events: {
					"click .wardrobe-shop__item": "showSlider",
				},
				initialize: function (e) {
					var n = this;
					(this.selectedItem = null),
						(this.collection = i.getShopItems()),
						this.listenTo(this.collection, "reset add", function () {
							n.timerStop(), n.render();
						}),
						(this.viewParam = {
							Application: t,
							WardrobeController: i,
							ProductModel: u,
						});
				},
				afterRender: function () {
					this.timerUpdate(), this.timerStart();
				},
				showSlider: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index"),
						r = new o(),
						i = this.collection.where({
							displayType: "slot",
						});
					r.set(i),
						s.add({
							type: "wardrobe.sliderShop",
							params: {
								data: r,
								startIndex: n,
								content: "shop",
							},
						});
				},
				timerStart: function () {
					this.timer = setInterval(this.timerUpdate.bind(this), 1e3);
				},
				timerStop: function () {
					clearInterval(this.timer);
				},
				timerUpdate: function () {
					var e = $(".wardrobe-shop__item-time"),
						n,
						r,
						i,
						s,
						o,
						u;
					if (e.length)
						for (n = 0; n < e.length; n += 1)
							(s = $(e[n])),
								(r = s.parents(".wardrobe-shop__item")),
								(i = r.data("id")),
								(u = this.collection.get(i)
									? this.collection.get(i).get("discount").tsExpire - moment().format("X")
									: 0),
								u > 0
									? s.text(t.methods.getFormattedTime(u * 1e3))
									: (console.log("remove slot timer"),
									  this.collection.get(i) &&
											((o =
												this.collection.get(i).get("regularCost").coins ||
												this.collection.get(i).get("regularCost").purchase),
											r.find(".slotCost").text(o)),
									  s.remove(),
									  r.find(".wardrobe-shop__item-sale").remove());
					else this.timerStop();
				},
			});
			return f;
		}
	),
	define("text!screens/wardrobe/shop.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n    <div class="b-screen-head__title">Магазин</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_wardrobe-shop" data-simplebar>\n  \n    <div class="l-screen__main-content">\n        <div class="wardrobe-shop">\n\n            <div id="wardrobeShopBundles"></div>            \n\n            <div id="wardrobeShopTimer" class="wardrobe-shop__timer">\n                <span class="wardrobe-shop__timer-label">До обновления </span>\n                <span class="wardrobe-shop__timer-data">\n                    <%=Application.methods.getFormattedTime(this.getTimerPeriod() * 1000)%>\n                </span>\n            </div>\n\n            <div id="wardrobeShopSlots" class="wardrobe-shop__list"></div>\n\n        </div>\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define("text!screens/wardrobe/shop_empty.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n    <div class="b-screen-head__title">Магазин</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_wardrobe-shop">\n    <div class="l-screen__main-content">\n        <div class="wardrobe-shop wardrobe-shop_empty">\n            <div class="wardrobe-shop__empty">\n                <div class="wardrobe-shop__empty-content">\n                    <img class="wardrobe-shop__empty-icon" src="<%=Application.params.staticUrl%>images/app/icons/wardrobe.png" alt="">\n                    <div class="wardrobe-shop__empty-heading">Новые вещи в магазине появятся уже скоро.</div>\n                    <div class="wardrobe-shop__empty-info">А пока не теряй времени, зарабатывай вещи в личных боях и клановых заданиях!</div>\n                </div>\n                <div class="wardrobe-shop__empty-btn">\n                    <div class="b-btn b-btn_blue emptyShopBtn">Играть</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"screens/wardrobe/shop",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/usedesk",
			"widgets/wardrobe/shopBundles",
			"widgets/wardrobe/shopSlots",
			"models/appState",
			"models/wardrobe/shop",
			"text!screens/wardrobe/shop.html!strip",
			"text!screens/wardrobe/shop_empty.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = n.extend({
				template: _.template(l),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						a.previousScreen();
					},
					"click .emptyShopBtn": function () {
						a.setScreen({
							screen: "index",
						});
					},
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (e) {
					var n = this;
					(this.timer = null),
						(this.currentTemplate = "default"),
						(this.model = f),
						this.listenTo(this.model, "change", function () {
							n.render();
						}),
						(this.viewParam = {
							Application: t,
						});
				},
				initializeWidgets: function () {
					(this.widgets = [new u()]), purchase && this.widgets.push(new o());
				},
				afterRenderWidgets: function () {},
				afterRender: function () {
					this.shopIsEmpty() && this.currentTemplate != "empty"
						? ((this.template = _.template(c)), (this.currentTemplate = "empty"), this.render())
						: (this.timerUpdate(), this.timerStart());
				},
				shopIsEmpty: function () {
					var e = i.getShopItems(),
						t = e.where({
							displayType: "banner",
						}),
						n = _.filter(t, function (e) {
							return e.attributes.isBought == 0;
						}),
						r = e.where({
							displayType: "slot",
						}),
						s = _.filter(r, function (e) {
							return e.attributes.isBought == 0;
						}),
						o = t.length == 0 || n.length == 0,
						u = r.length == 0 || s.length == 0;
					return o && u ? !0 : !1;
				},
				getTimerPeriod: function () {
					return this.model.get("tsExpire") - moment().format("X");
				},
				timerStart: function () {
					var e = this;
					this.timerStop(), (this.timer = setInterval(this.timerUpdate.bind(e), 1e3));
				},
				timerStop: function () {
					this.timer && clearInterval(this.timer);
				},
				timerUpdate: function () {
					this.getTimerPeriod() < 0
						? (this.timerStop(), e.clothesShopGetInfo())
						: $("#wardrobeShopTimer")
								.find(".wardrobe-shop__timer-data")
								.text(t.methods.getFormattedTime(this.getTimerPeriod() * 1e3));
				},
				showInfoPopup: function () {
					s.showInfoPopup("wardrobeShop");
				},
			});
			return h;
		}
	),
	define("text!screens/wardrobe/shopBundle.html!strip", [], function () {
		return '<%\n\nvar i, j;\n\nvar rarity = Application.params.wardrobeItemRarity;\nvar rarityLabel = Application.params.wardrobeSetRarityLabel;\nvar types = Application.params.wardrobeItemType;\n\nvar bundle = this.model;\nvar bundleData = bundle.get(\'data\');\nvar bundlePurchasetId = bundle.get(\'regularCost\').purchase;\nvar bundlePaymentId = (social == \'ya\')? bundlePurchasetId.toLowerCase().replace(/\\./g, \'_\') : bundlePurchasetId;\nvar bundleItemsId = [];\nvar bundleItemsRender = [];\nvar bundleContentItem;\nvar bundleProduct = _.findWhere(ProductModel.get(\'clothes\'), {_id: bundlePaymentId});\n\nvar baseItems = WardrobeController.getBaseItems();\n\nvar itemRewards;\nvar itemReward;\nvar itemRewardBoost;\nvar itemRewardWithLetters;\n\nfor (j = 0; j < bundleData.bundle.length; j += 1) { \n    if (bundleData.bundle[j].rewardType == \'clothesOnceConst\') {\n        bundleItemsId[bundleData.bundle[j].info.group] = bundleData.bundle[j].info.itemId;\n        bundleItemsRender[bundleData.bundle[j].info.group] = bundleData.bundle[j].info.render;\n    }\n}\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Специальное предложение</div>\n</div>\n<!-- /.b-screen-head -->\n\n\n<div class="l-screen__main l-screen__main_fixed l-screen__main_wardrobe">\n    <div class="l-screen__main-content">\n        <div class="wardrobe-shop-bundle">\n            <div class="wardrobe-shop-bundle__head"\n                style="background-image:url(\'<%=bundleData.backgroundImage%>\')">\n                <div class="wardrobe-shop-bundle__head-avatar">\n                    <div class="custom-avatar wardrobe-shop-bundle__head-avatar-icon">\n                        <% if (baseItems.models.length < 3) { %>\n                        <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%>bodys/body1.png" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%>mouth/mouth1.png" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%>eyes/eyes1.png" alt="" />\n                        <% } else { %>\n                        <img class="custom-avatar__item custom-avatar__item_body" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'body\').get(\'itemId\')%>.png" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_mouth" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'mouth\').get(\'itemId\')%>.png" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_eyes" src="<%=Application.params.customAvatarUrl%><%=baseItems.get(\'eyes\').get(\'itemId\')%>.png" alt="" />\n                        <% } %>\n                        <img class="custom-avatar__item custom-avatar__item_hair" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'hair\']%>.png" style="z-index: <%=bundleItemsRender[\'hair\']%>;" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_head" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'hat\']%>.png" style="z-index: <%=bundleItemsRender[\'hat\']%>;" alt="" />\n                        <img class="custom-avatar__item custom-avatar__item_subject" src="<%=Application.params.customAvatarUrl%><%=bundleItemsId[\'feature\']%>.png" style="z-index: <%=bundleItemsRender[\'feature\']%>;" alt="" />\n                    </div>\n                </div>\n                <div class="wardrobe-shop-bundle__head-content">\n                    <div class="wardrobe-shop-bundle__head-name" style="<%=(bundleData.textColor)? \'color: #\' + bundleData.textColor + \';\' : \'\'%>"><%=bundleData.title%></div>\n                    <div class="wardrobe-shop-bundle__head-label">Включает в себя:</div>\n                </div>\n            </div>\n            <div class="wardrobe-shop-bundle__items">\n            <% \n            for (i = 0; i < bundleData.bundle.length; i += 1) { \n                bundleContentItem = bundleData.bundle[i];\n                \n                if (bundleContentItem.rewardType == \'coinsOnceConst\') { %>\n                <div class="wardrobe-shop-bundle__item">\n                    <div class="wardrobe-shop-bundle__item-content">\n                        <img class="wardrobe-shop-bundle__item-img" src="<%= Application.params.staticUrl %>images/app/icons/coin_big.png" alt="">\n                    </div>\n                    <div class="wardrobe-shop-bundle__item-data"> \n                        <div class="wardrobe-shop-bundle__item-amount">\n                            <%=bundleContentItem.count%>\n                            <%=Application.methods.declension(bundleContentItem.count, [\'монета\', \'монеты\', \'монет\'])%>\n                        </div>\n                    </div>\n                </div>\n                <% }\n                \n                if (bundleContentItem.rewardType == \'fieldBoosterOnceConst\') { %>\n                <div class="wardrobe-shop-bundle__item">\n                    <div class="wardrobe-shop-bundle__item-content">\n                        <div class="field-booster field-booster_shop"> <img class="field-booster__icon" src="<%= bundleContentItem.info.imageActiveUrl %>" alt="">\n                            <div class="field-booster__count"><%=bundleContentItem.count%></div>\n                        </div>\n                    </div>\n                    <div class="wardrobe-shop-bundle__item-data"> \n                        <div class="wardrobe-shop-bundle__item-amount">«<%=bundleContentItem.info.title%>»</div>\n                    </div>\n                </div>\n                <% }\n                \n                if (bundleContentItem.rewardType == \'booksOnceConst\') { %>\n                <div class="wardrobe-shop-bundle__item">\n                    <div class="wardrobe-shop-bundle__item-content">\n                        <img class="wardrobe-shop-bundle__item-img" src="<%= Application.params.staticUrl %>images/app/icons/books_big.png" alt="">\n                    </div>\n                    <div class="wardrobe-shop-bundle__item-data"> \n                        <div class="wardrobe-shop-bundle__item-amount">\n                        <%=bundleContentItem.count%>\n                        <%=Application.methods.declension(bundleContentItem.count, Application.params.libraryElementDeclensionByType[bundleContentItem.type])%>\n                        </div>\n                    </div>\n                </div>\n                <% }\n\n                if (bundleContentItem.rewardType == \'clothesOnceConst\') { \n                    itemRewards = bundleContentItem.info.rewards;\n                %>\n                <div class="wardrobe-shop-bundle__item">\n                    <div class="wardrobe-shop-bundle__item-content">\n                        <div class="wardrobe-item wardrobe-item_<%=rarity[bundleContentItem.info.category]%> wardrobe-item_shop wardrobe-shop-bundle__item-icon">\n                            <div class="wardrobe-item__wrap">\n                                <img class="wardrobe-item__icon" src="<%=Application.params.clothesUrl%><%=bundleContentItem.info.itemId%>.png" alt=""/>\n                                <div class="wardrobe-item__level">1 ур.</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="wardrobe-shop-bundle__item-data"> \n                        <div class="wardrobe-shop-bundle__item-name wardrobe-item-type wardrobe-item-type_<%=rarity[bundleContentItem.info.category]%>">\n                            <%=WardrobeController.getItemTitle(bundleContentItem.info.group, bundleContentItem.info.category)%>\n                        </div>\n                        <% for (j = 0; j < itemRewards.length; j += 1) { \n                        itemReward = itemRewards[j];\n                        itemRewardWithLetters = itemReward.params.letters;\n                        itemRewardBoost = WardrobeController.formatRewardBoost(itemReward);\n                        %>\n                        <div class="wardrobe-boost wardrobe-boost_<%=WardrobeController.rewardTypes[itemReward.type]%> wardrobe-shop-bundle__item-boost">\n                            <span class="wardrobe-boost__value">\n                                <%=itemRewardBoost%>\n                            </span>\n                            <span class="wardrobe-boost__icon"></span>\n                            <span class="wardrobe-boost__text">\n                                <%=(itemRewardWithLetters)? itemReward.description.replace(\'%(letters)\', itemReward.params.letters) : itemReward.description%>\n                            </span>\n                        </div>\n                        <% } %>\n                    </div>\n                </div>\n                <% }\n                if (bundleContentItem.rewardType == \'clothesPatternsOnceConst\') { \n                %>\n                <div class="wardrobe-shop-bundle__item">\n                    <div class="wardrobe-shop-bundle__item-content">\n                        <img class="wardrobe-shop-bundle__item-img" src="<%= Application.params.staticUrl %>images/app/wardrobe/pattern-<%=Application.params.wardrobeItemRarity[bundleContentItem.type]%>.png" alt="">\n                    </div>\n                    <div class="wardrobe-shop-bundle__item-data"> \n                        <div class="wardrobe-shop-bundle__item-amount">\n                            <%=bundleContentItem.count%>\n                            <%=Application.methods.declension(bundleContentItem.count, Application.params.wardrobePatternDeclensionByType[bundleContentItem.type])%>\n                        </div>\n                    </div>\n                </div>\n                <% } %>\n            <% } %>\n            </div>\n        </div>\n    </div><!-- /.l-screen__main-content -->\n    <div class="l-screen__main-foot">\n        <% if (bundleProduct) { %>\n        <div class="b-screen-btns">\n            <div id="buyBundleButton" class="b-screen-btns__item b-btn b-btn_blue soundingButton">\n                <%= bundleProduct.price %>\n                <%=Application.methods.declension(bundleProduct.price, Application.params.currency[social])%>\n            </div>\n        </div>\n        <% } %>\n    </div><!-- /.l-screen__main-foot -->\n</div><!-- /.l-screen__main -->';
	}),
	define(
		"screens/wardrobe/shopBundle",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/product",
			"text!screens/wardrobe/shopBundle.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						o.previousScreen();
					},
					"click #buyBundleButton": "buyBundle",
				},
				initialize: function (e) {
					var n = this;
					(this.params = e),
						(this.model = i.getShopItems().get(this.params.id)),
						(this.viewParam = {
							Application: t,
							WardrobeController: i,
							ProductModel: a,
						});
				},
				initializeWidgets: function () {},
				afterRenderWidgets: function () {},
				afterRender: function () {},
				buyBundle: function () {
					var t = this.model.get("userShopItemId"),
						n = this.model.get("regularCost").purchase,
						r = social == "ya" ? n.toLowerCase().replace(/\./g, "_") : n,
						i = _.findWhere(a.get("clothes"), {
							_id: r,
						});
					console.log("product: ", i),
						social == "beeline"
							? (console.log("purchase confirmation for Beeline"),
							  s.add({
									type: "confirmationPurchase",
									params: {
										product: i,
										productParams: {
											userShopItemId: t,
										},
									},
							  }))
							: e.buyProduct(u, i, {
									userShopItemId: t,
							  }),
						o.previousScreen();
				},
			});
			return l;
		}
	),
	define("text!screens/profile/loader.html!strip", [], function () {
		return '<div id="screenLoader" class="l-screen-loader">\n    <div id="loader" class="b-loader">\n        <img class="b-loader-i" alt="" src="<%=Application.params.staticUrl%>images/app/loader.gif">\n    </div>\n</div>\n<!-- /.l-screen-loader -->';
	}),
	define("text!screens/profile/index.html!strip", [], function () {
		return '<%\n\nvar i;\n\nvar level = Application.methods.levelForUwins(user.uwins)\nvar levelName = Application.methods.levelNameByLevel(level);\n\nvar wardrobeItem;\nvar wardrobeItemLevel;\nvar wardrobeItemHasMaxLevel;\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">\n        <%=user.playerName%>\n    </div>\n    <% if (isSelfProfile) { %>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n    <% } else { %>\n    <div class="b-screen-head__ctrl">\n        <% if (ban.isReportAvailable) { %>\n        <div id="ReportAvailableButton" class="b-btn-complaint"></div>\n        <% } else { %>\n        <div id="ReportButton" class="b-btn-complaint"></div>\n        <% } %>\n    </div>\n    <% } %>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_fixed">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile">\n\n            <div class="profile__data">\n                <div class="profile-avatar">\n                    <div class="b-user b-user_profile">\n                        <% if (user.customAvatar && user.customAvatar.length > 0) { %>\n                        <div class="custom-avatar b-user__custom-avatar">\n                            <% for (i = 0; i < user.customAvatar.length; i += 1) { %>\n                            <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=user.customAvatar[i]%>.png" alt="" />\n                            <% } %>\n                        </div>\n                        <% } else { %>\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%=user.avatarUrl%>" alt="" />\n                        </div>\n                        <% } %>\n                        <img src="https://cdn.wordbyword.me/content/user/laurels/avatar-<%=Application.methods.levelForUwins(user.uwins)%>.png" class="b-user__rank">\n                        <div class="b-user__platform b-user__platform_<%= Application.params.netType[user.netType]%>"></div>\n                    </div>\n                </div>\n                \n                <div class="profile__data-i">\n\n                <% if (isSelfProfile) { %>\n                    <% if (User.checkProVersion()) { %>\n                    <div id="profileStatus" class="profile-status ">\n                        <div class="profile-status-i">\n                            <div class="profile-status__check"><%=statusMaxLength - user.status.length %></div>\n                            <input id="profileStatusInput" type="text" value="<%=(user.status.length > 0) ? user.status : this.statusPlaceholder %>" class="profile-status__text" autocomplete="off" />\n                        </div>\n                    </div>\n                    <% } else { %> \n                    <div id="profileStatusLock" class="profile-status profile-status_lock">\n                        <div class="profile-status-i">\n                            Изменить статус <i class="profile-status__lock"></i> \n                        </div>\n                    </div>\n                    <% } %>\n                <% } else { %>\n                    <% if (user.status) { %>\n                    <div class="profile-status">\n                        <div class="profile-status-i"><%=user.status%></div>\n                    </div>\n                    <% } %>\n\n                <% } %>\n\n                    <p class="profile-rank"><%=levelName%></p>\n                    <p class="profile-auth">\n                        <% if (user.isOnline) { %>\n                        <span class="profile-auth__status profile-auth__status_online"></span>\n                        в игре\n                        <% } else { %>\n                        <span class="profile-auth__status profile-auth__status_offline"></span>\n                        заходил в игру <%=moment(user.timeFromLastAuth * 1000).fromNow()%>\n                        <% } %>\n                    </p>\n                <% if (user.loc) { %>\n                    <p class="profile-place"><i class="profile-place__icon"></i><%=user.loc%></p>\n                <% } %>\n                    \n                </div>\n            </div>\n            <!-- /.profile__data -->\n\n            <% if (this.wardrobeItemsCollection) { %>\n            <% \n            var collection = this.wardrobeItemsCollection;\n            var models = collection.models\n            var types = Application.params.wardrobeItemType;\n            var rarity = Application.params.wardrobeItemRarity;\n            var index = 0;\n            \n            var isSet = WardrobeController.isFullSet(models);\n            %>\n            <div class="wardrobe-set wardrobe-set_profile <%=(isSet)? \'wardrobe-set_full wardrobe-set_\' + rarity[models[0].get(\'category\')] : \'\'%>">\n                <div class="wardrobe-set__list">\n                    <% for (i = 0; i < types.length; i += 1) { %>\n                    <%\n                    wardrobeItem = collection.findWhere({group: types[i]});\n                    %>\n                    <div class="wardrobe-set__item">\n                        <div class="wardrobe-set__item-wrap">\n                            <div class="wardrobe-set__shine">\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_1"></div>\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_2"></div>\n                                <div class="wardrobe-set__shine-polygon wardrobe-set__shine-polygon_3"></div>\n                            </div>\n                            <% if (wardrobeItem) { %>\n                            <%\n                                wardrobeItemLevel = wardrobeItem.get(\'level\');\n                                wardrobeItemHasMaxLevel = WardrobeController.checkingItemForMaxLevel(wardrobeItem);\n                            %>\n                            <div data-index="<%=index++%>" class="wardrobe-item wardrobe-item_profile wardrobe-item_ctrl wardrobe-set__icon wardrobe-item_<%=rarity[wardrobeItem.get(\'category\')]%> showSliderForSet">\n                                <div class="wardrobe-item__wrap">\n                                    <img class="wardrobe-item__icon" src="https://cdn.wordbyword.me/content/clothes/<%=wardrobeItem.get(\'itemId\')%>.png" alt="" />\n                                    <div class="wardrobe-item__level">\n                                        <%= (wardrobeItemHasMaxLevel)? \'Макс.\' : wardrobeItemLevel + \' ур.\'%>\n                                    </div>\n                                </div>\n                            </div>\n                            <% } else { %>\n                            <div class="wardrobe-item wardrobe-item_profile wardrobe-set__icon">\n                                <div class="wardrobe-item__wrap">\n                                    <img class="wardrobe-item__icon" src="<%= Application.params.staticUrl %>images/app/wardrobe/item-<%=types[i]%>.png" alt="" />\n                                </div>\n                            </div>\n                            <% } %>\n                            <% if (isSet && i == types.length - 1) { %>\n                            <div id="profileSetInfo" class="wardrobe-set__info"><span class="wardrobe-set__info-icon"></span></div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <% } %>\n                </div>\n            </div>\n\n            <% } %>\n\n            <div class="profile-sections">	\n                <div class="profile-sections-i">\n                    <div class="profile-section">\n                        <div id="profileRating" class="profile-section-i soundingButton">\n                            <div class="profile-section__icon">\n                                <img class="profile-section__icon-i" src="<%=Application.params.staticUrl%>images/app/profile/rating.png" alt="">\n                            </div>\n                            <div class="profile-section__title">Текущий рейтинг</div>\n                            <div class="profile-section__data"><%=new Intl.NumberFormat(\'ru-RU\').format(rating.rating)%></div>\n                        </div>\n                    </div>\n                    <div class="profile-section profile-section_games-win">\n                        <div id="profileGames" class="profile-section-i soundingButton">\n                            <div class="profile-section__icon">\n                                <div class="profile-section__icon-text"><%=(games.games)? Math.round(games.wins / games.games * 100) : 0 %>%</div>\n                                <canvas width="100" height="100" id="profile-game-stat" class="profile-section__icon-diagram"></canvas>\n                            </div>\n                            <div class="profile-section__title">Сыграно всего&nbsp;игр</div>\n                            <div class="profile-section__data"><%=new Intl.NumberFormat(\'ru-RU\').format(games.games)%></div>\n                        </div>\n                    </div>\n                    <div class="profile-section">\n                        <div id="profileClan" class="profile-section-i soundingButton">\n                            <% if (clan.currentClan) { %>\n                            <div class="profile-section__icon">\n                                <img class="profile-section__icon-i" src="<%=clan.currentClan.main.avatar%>" alt="">\n                            </div>\n                            <div class="profile-section__title"><%=clan.currentClan.main.name%></div>\n                            <div class="profile-section__data">&times;<%=clan.rate.rate%></div>\n                            <% } else { %>\n                            <div class="profile-section__icon">\n                                <img class="profile-section__icon-i" src="<%=Application.params.staticUrl%>images/app/profile/clan.png" alt="">\n                            </div>\n                            <div class="profile-section__title">Не в клане</div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <div class="profile-section">\n                        <div id="profileTourney" class="profile-section-i soundingButton">\n                            <div class="profile-section__icon">\n                                <img class="profile-section__icon-i" src="<%=Application.params.staticUrl%>images/app/profile/tourneys.png" alt="">\n                            </div>\n                            <div class="profile-section__title">Призы в турнирах</div>\n                            <div class="profile-section__data"><%= new Intl.NumberFormat(\'ru-RU\').format(tourney.bronzeCount + tourney.silverCount + tourney.goldCount) %></div>\n                        </div>\n                    </div>\n                    <div class="profile-section">\n                        <div id="profileLibrary" class="profile-section-i soundingButton">\n                            <div class="profile-section__icon">\n                                <img class="profile-section__icon-i" src="<%=Application.params.staticUrl%>images/app/profile/library.png" alt="">\n                            </div>\n                            <div class="profile-section__title">Уровень библиотеки</div>\n                            <div class="profile-section__data"><%=library.libraryData.level%></div>\n                        </div>\n                    </div>\n                    <div class="profile-section">\n                        <div id="profileAchievements" class="profile-section-i soundingButton">\n                            <div class="profile-section__icon">\n                                <% if (achievements.openedCount) { %>\n                                <img class="profile-section__icon-i" src="<%=achievements.image%>" alt="">\n                                <% } else { %>\n                                <img class="profile-section__icon-i" src="<%=Application.params.staticUrl%>images/app/menu/achievements.png" alt="">\n                                <% } %>\n                            </div>\n                            <div class="profile-section__title">Открыто достижений</div>\n                            <div class="profile-section__data"><%=achievements.openedCount%> <span class="profile-section__data-i">(<%=Math.round(achievements.openedCount / achievements.count * 100)%>%)</span></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.profile-sections -->\n\n        </div>\n        <!-- /.profile -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n    \n    <div class="l-screen__main-foot">\n    <% if (!isSelfProfile) { %>\n        <% if (ban.isUserBan) { %>\n        <div class="profile-blocked">\n            Игрок заблокирован за нарушение правил!\n        </div>\n        <!-- /.profile-blocked -->\n\n        <% } else { %>\n    \n        <div class="b-screen-btns">\n            <div id="chatWithUserButton" class="b-screen-btns__item b-btn b-btn_white soundingButton">Написать</div>\n            <div id="playWithUserButton" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Играть</div>\n        </div>\n        <% } %>\n    <% } else if (WardrobeController.isAvailable()) { %>\n        <div class="b-screen-btns">\n            <div id="wardrobeButton" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Перейти в гардероб</div>\n        </div>\n    <% } %>\n    </div>\n    <!-- /.l-screen__main-foot -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/profile/index",
		[
			"gate",
			"application",
			"widget",
			"controllers/analytic",
			"controllers/gameanalytics",
			"controllers/chat",
			"controllers/wardrobe",
			"controllers/usedesk",
			"collections/popups",
			"collections/stat",
			"collections/simpleCollection",
			"models/appState",
			"models/user",
			"models/gamePart",
			"text!screens/profile/loader.html!strip",
			"text!screens/profile/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v) {
			var m = n.extend({
				template: _.template(d),
				el: "#screenContainer",
				statusPlaceholder: "Изменить статус",
				STATUS_MAX_LENGTH: 30,
				events: {
					"click #profileStatusLock": function () {
						a.add({
							type: "proVersion",
							params: {
								reason: "status",
							},
						});
					},
					"focus #profileStatusInput": "focusStatusInput",
					"blur #profileStatusInput": "blurStatusInput",
					"keyup #profileStatusInput": function (e) {
						var t = this,
							n = $(e.currentTarget).val();
						this.checkStatusInputLength(),
							(e.key === "Enter" || e.keyCode === 13) && $(e.currentTarget).blur();
					},
					"click #backButton": function () {
						c.previousScreen();
					},
					"click #ReportAvailableButton": function () {
						a.add({
							type: "profileComplaint",
							params: {
								id: this.params.id,
							},
						});
					},
					"click #ReportButton": function () {
						a.add({
							type: "text",
							params: {
								header: "Жалоба принята",
								text: "Твоя жалоба на&nbsp;игрока уже на&nbsp;рассмотрении.",
								list: null,
								cursiv: "Нам&nbsp;понадобится некоторое время, чтобы&nbsp;тщательно всё проверить.",
							},
						});
					},
					"click #chatWithUserButton": "chatWithUser",
					"click #playWithUserButton": "playWithUser",
					"click #wardrobeButton": function () {
						c.setScreen({
							screen: "wardrobe.index",
						});
					},
					"click #profileRating": "showProfileRating",
					"click #profileGames": "showProfileGames",
					"click #profileClan": "showProfileClan",
					"click #profileTourney": "showProfileTourney",
					"click #profileLibrary": "showProfileLibrary",
					"click #profileAchievements": "showProfileAchievements",
					"click #profileSetInfo": "profileSetInfoHandler",
					"click .showSliderForSet": "showSlider",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (n) {
					var r = this,
						i;
					(this.params = n || this.params),
						(i = this.params.id == h.get("id") ? !0 : !1),
						(this.viewParam = {
							Application: t,
							User: h,
							WardrobeController: o,
							GamePartModel: p,
							isSelfProfile: i,
							statusMaxLength: this.STATUS_MAX_LENGTH,
						}),
						e.playerInfoGetGeneral(this.params.id, [
							"user",
							"ban",
							"clan",
							"rating",
							"games",
							"achievements",
							"library",
							"tourney",
							"clothes",
						]),
						this.listenTo(e, "playerInfoGetGeneral", function (e) {
							var n = e.games.games > 0 ? Math.round((e.games.wins / e.games.games) * 100) : 50;
							e.clothes.clothesItems &&
								e.clothes.clothesItems.length > 0 &&
								((r.wardrobeItemsCollection = new l()),
								(r.wardrobeItemsCollection.comparator = function (e) {
									return t.params.wardrobeItemType.indexOf(e.get("group"));
								}),
								r.wardrobeItemsCollection.set(
									_.filter(e.clothes.clothesItems, function (e) {
										return e.category != 0;
									})
								),
								console.log("profile wardrobe items collection: ", r.wardrobeItemsCollection)),
								(r.model = e),
								console.log("profile model: ", r.model),
								_.extend(r.viewParam, e),
								(r.template = _.template(v)),
								r.render(),
								r.canvasAnimation(n);
						}),
						this.listenToOnce(e, "userReportSend", function (e) {
							e.state == "success" &&
								(a.add({
									type: "text",
									params: {
										header: "Жалоба отправлена",
										text: "Твоя жалоба на игрока успешно отправлена.",
										list: null,
										cursiv: null,
									},
								}),
								(r.model.ban.isReportAvailable = !1),
								r.render());
						}),
						this.listenTo(e, "reloadSession", function (e) {
							e.hash == "pro" && (_.extend(r.viewParam, h), r.render());
						});
				},
				showProfileRating: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_rating"),
						e.playerInfoGetRating(this.params.id),
						this.listenToOnce(e, "playerInfoGetRating", function (e) {
							c.setScreen({
								screen: "profileRating",
								params: {
									data: e,
								},
							});
						});
				},
				showProfileGames: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_games"),
						e.playerInfoGetGames(this.params.id),
						this.listenToOnce(e, "playerInfoGetGames", function (e) {
							var e = _.extend(e, {
								id: this.params.id,
							});
							c.setScreen({
								screen: "profileGames",
								params: {
									data: e,
								},
							});
						});
				},
				showProfileClan: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_clan"),
						e.playerInfoGetClan(this.params.id),
						this.listenToOnce(e, "playerInfoGetClan", function (e) {
							var n = _.clone(t.model.user),
								e = _.extend(e, n);
							c.setScreen({
								screen: "profileClan",
								params: {
									model: new Backbone.Model(e),
								},
							});
						});
				},
				showProfileTourney: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_tourney"),
						e.playerInfoGetTourney(this.params.id),
						this.listenToOnce(e, "playerInfoGetTourney", function (e) {
							c.setScreen({
								screen: "profileTourney",
								params: {
									data: e,
								},
							});
						});
				},
				showProfileLibrary: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_library"),
						e.playerInfoGetLibrary(this.params.id),
						this.listenToOnce(e, "playerInfoGetLibrary", function (e) {
							c.setScreen({
								screen: "profileLibrary",
								params: {
									data: e,
								},
							});
						});
				},
				showProfileAchievements: function () {
					var t = this;
					i.sendDesignEvent("Screen_actions:Player_profile:tap_achievements"),
						e.playerInfoGetAchievement(this.params.id),
						this.listenToOnce(e, "playerInfoGetAchievement", function (e) {
							c.setScreen({
								screen: "profileAchievement",
								params: {
									data: e,
								},
							});
						});
				},
				playWithUser: function () {
					var e = "profile";
					this.checkGameAvailable() &&
						(r.event({
							category: "screen",
							action: "Профиль",
							label: "Играть",
						}),
						i.sendDesignEvent("Screen_actions:Player_profile:play"),
						c.setScreen({
							screen: "pvp.game",
							params: {
								opponent: this.model.user,
								method: e,
							},
						}));
				},
				chatWithUser: function () {
					i.sendDesignEvent("Screen_actions:Player_profile:chat"),
						c.setScreen({
							screen: "chat",
							params: {
								chatId: s.genChatId(this.params.id),
								opponent: _.clone(this.model.user),
							},
						});
				},
				checkGameAvailable: function () {
					var e = f.getByOpponentId(this.params.id);
					return e && e.get("currentGame").status.value == "opponentTurn" ? !1 : !0;
				},
				focusStatusInput: function () {
					var e = $("#profileStatusInput");
					e.val() == this.statusPlaceholder && e.val(""),
						$("#profileStatus").addClass("profile-status_active"),
						this.checkStatusInputLength();
				},
				blurStatusInput: function () {
					var t = $("#profileStatusInput");
					$("#profileStatus").removeClass("profile-status_active"),
						t.val().length == 0 ? t.val(this.statusPlaceholder) : e.setStatus(t.val());
				},
				checkStatusInputLength: function () {
					var e = $("#profileStatusInput"),
						t = e.val();
					t.length > this.STATUS_MAX_LENGTH && e.val(t.slice(0, this.STATUS_MAX_LENGTH));
					var n = this.STATUS_MAX_LENGTH - $("#profileStatusInput").val().length;
					return $(".profile-status__check").text(n), n;
				},
				canvasAnimation: function (e) {
					function c() {
						function e() {
							t.beginPath(),
								t.moveTo(o, o),
								t.lineTo(o, o * 2),
								(t.strokeStyle = "#11182b"),
								t.stroke();
						}

						function h() {
							t.beginPath(),
								t.moveTo(o, o),
								t.lineTo(o + o * Math.cos(u / 10 + r), o + o * Math.sin(u / 10 + r)),
								t.stroke();
						}

						function p(e, n) {
							t.beginPath(),
								t.arc(o, o, o - e, 0, Math.PI * 2, !1),
								(t.strokeStyle = n),
								t.stroke();
						}

						function d(e, n) {
							t.beginPath(), t.arc(o, o, o - e, r, u / 10 + r, !1), (t.strokeStyle = n), t.stroke();
						}
						(u = ((n / 100) * Math.PI * 2 * 10).toFixed(4)),
							t.clearRect(0, 0, i, s),
							(t.lineWidth = l),
							p(l * 2, "#e52f24"),
							p(l, "#fa4133"),
							d(l * 2, "#35a235"),
							d(l, "#4bb74b"),
							e(),
							h();
						if (n + a / 30 >= a) {
							cancelAnimationFrame(f);
							return;
						}
						(n += a / 30), (f = requestAnimationFrame(c));
					}

					function h(e) {
						(a = e), c();
					}
					var t = document.getElementById("profile-game-stat").getContext("2d"),
						n = 0,
						r = -4.72,
						i = t.canvas.width,
						s = t.canvas.height,
						o = i / 2,
						u,
						a,
						f,
						l = 8;
					h(e);
				},
				showSlider: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index"),
						r = this.viewParam.isSelfProfile ? "profileSelf" : "profile";
					a.add({
						type: "wardrobe.sliderList",
						params: {
							data: this.wardrobeItemsCollection,
							startIndex: n,
							content: r,
						},
					});
				},
				profileSetInfoHandler: function () {
					var e = {
						active: o.combineRewardsParams(this.model.clothes.activeRewards),
						passive: o.combineRewardsParams(this.model.clothes.passiveRewards),
					};
					a.add({
						type: "wardrobeSetInfo",
						params: {
							content: "profile",
							collection: this.wardrobeItemsCollection,
							rewards: e,
						},
					});
				},
				showInfoPopup: function () {
					u.showInfoPopup("profile");
				},
			});
			return m;
		}
	),
	define("text!screens/profile/rating.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Рейтинг</div>\n</div>\n<!-- /.b-screen-head -->\n\n<%\n\nvar isEmptyRatingStat = !_.compact(this.model.ratingStat).length;\n\nvar minRating = 0;\nvar maxRating = 0;\nvar averageRating = 0;\n\nif (!isEmptyRatingStat) {\n    minRating = _.min(this.model.ratingStat);\n    maxRating = _.max(this.model.ratingStat);\n    averageRating = (minRating + maxRating) / 2;\n}\n\n%>\n\n<div class="l-screen__main">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-rating">\n            <div class="profile-rating__progress">\n                <div class="profile-rating__progress-diagram <%=(isEmptyRatingStat)? \'profile-rating__progress-diagram_disabled\' : \'\'%>"> \n                    <% \n                    this.model.ratingStat.forEach(function(el){\n                    %>\n                    <div class="profile-rating__progress-column">\n                        <div class="profile-rating__progress-figure" style="height: <%=(isEmptyRatingStat)? Math.floor(Math.random() * Math.floor(100)) : Math.floor(el / averageRating * 100)%>%;"></div>\n                    </div>\n                    <%\n                    });\n                    %>\n                    <div class="profile-rating__progress-diagram-disabled-info">Появится через неделю</div>\n                </div>\n                <div class="profile-rating__progress-info">прогресс по очкам за последние 7 дней</div>\n            </div>\n            <!-- /.profile-rating__task -->\n\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Сезон</div>\n                        <div class="profile-info__list-data profile-info__list-data_link">\n                            <div id="seasonLink" class="profile-info__list-data-value"><%=season.name%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Текущий рейтинг</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.rating)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Место в рейтинге</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=(this.model.position)? this.model.position : \'Ниже 10 000\'%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                <% if (this.model.seasonHistory.length) { %>\n                    <div class="profile-info__title">Результаты 3 последних сезонов</div>\n                    <% for (i = 0; i < this.model.seasonHistory.length; i += 1) { %>\n                    <%\n                    var season = this.model.seasonHistory[i];\n                    %>\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label"><%=season.name%></div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=(season.rating)? new Intl.NumberFormat(\'ru-RU\').format(season.rating) : \'-\' %></div>\n                            <div class="profile-info__list-data-info"><%=(season.position)? new Intl.NumberFormat(\'ru-RU\').format(season.position) + \' место\' : \'\' %></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    <% } %>\n                <% } %>\n\n                </div>\n            </div>\n            <!-- /.profile-info -->\n\n        </div>\n        <!-- /.profile-rating -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/profile/rating",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/user",
			"models/appState",
			"controllers/analytic",
			"collections/popups",
			"text!screens/profile/rating.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #seasonLink": function () {
						s.setScreen({
							screen: "rating",
						});
					},
				},
				initialize: function (e) {
					var n = this;
					(this.model = e.data.rating),
						console.log("profileRating model: ", this.model),
						(this.viewParam = {
							Application: t,
							UserModel: i,
						});
				},
				afterRender: function () {
					this.figuresAnimate();
				},
				figuresAnimate: function () {
					var e,
						t,
						n = 0,
						r = 60,
						i,
						s = _.without(this.model.ratingStat, 0);
					if (s.length > 0) {
						i = $(".profile-rating__progress-figure");
						for (e = 0; e < i.length; e += 1)
							(t = i[e].offsetHeight),
								$(i[e])
									.delay(n)
									.css({
										height: 0,
									})
									.animate(
										{
											height: t,
										},
										200
									),
								(n += r);
					}
				},
			});
			return f;
		}
	),
	define("text!screens/profile/games.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title b-screen-head__title_profile">Индивидуальные игры</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-games">\n\n            <div class="profile-games__stats">\n                <canvas width="200" height="200" id="profile-games" class="profile-games__diagram"></canvas>\n                <div class="profile-games__stats-section profile-games__stats-section_win">\n                    <div class="profile-games__stats-title">Победы</div>\n                    <div class="profile-games__stats-data"><%=this.model.wins%> <span class="profile-games__stats-data-i">(<%=(this.model.games)? Math.round(this.model.wins / this.model.games * 100) : 0%>%)</span></div>\n                </div>\n                <div class="profile-games__stats-section profile-games__stats-section_loss">\n                    <div class="profile-games__stats-title">Поражения</div>\n                    <div class="profile-games__stats-data"><%=this.model.defeats%> <span class="profile-games__stats-data-i">(<%=(this.model.games)? Math.round(this.model.defeats / this.model.games * 100) : 0%>%)</span></div>\n                </div>\n            </div>\n\n\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Всего игр</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.games)%></div>\n                            <div class="profile-info__list-data-info"><%=this.model.draws%> <%=Application.methods.declension(this.model.draws, [\'ничья\', \'ничьи\', \'ничьих\'])%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <% if (statModel) { %>\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Игры с тобой</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=statModel.get(\'stat\')[id] + statModel.get(\'stat\')[UserModel.get(\'id\')]%></div>\n                            <div class="profile-info__list-data-info"><%=statModel.get(\'stat\')[UserModel.get(\'id\')]%> <%=Application.methods.declension(statModel.get(\'stat\')[UserModel.get(\'id\')], [\'победа\', \'победы\', \'побед\'])%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    <% } %>\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Очков за раунд</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.maxScores)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Слов за раунд</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=this.model.maxWords%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Победная серия</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.currentWiningStreak)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Длинное слово</div>\n                        <div class="profile-info__list-data">\n                            <% if (this.model.longestWord) { %>\n                            <div class="profile-info__list-data-value"><%=this.model.longestWord.usedWord%></div>\n                            <div class="profile-info__list-data-info"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.longestWord.usedWordScore)%> очк.</div>\n                            <% } else { %>\n                            <div class="profile-info__list-data-value">не найдено</div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Лучшее слово</div>\n                        <div class="profile-info__list-data">\n                            <% if (this.model.longestWord) { %>\n                            <div class="profile-info__list-data-value"><%=this.model.mostValuebelWord.usedWord%></div>\n                            <div class="profile-info__list-data-info"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.mostValuebelWord.usedWordScore)%> очк.</div>\n                            <% } else { %>\n                            <div class="profile-info__list-data-value">не найдено</div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Навозил пальцем</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=this.model.distance.toFixed(2)%> м.</div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                </div>\n            </div>\n            <!-- /.profile-info -->\n\n        </div>\n        <!-- /.profile-rating -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/profile/games",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"collections/stat",
			"models/user",
			"models/appState",
			"controllers/analytic",
			"text!screens/profile/games.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						o.previousScreen();
					},
				},
				initialize: function (e) {
					var n = this,
						r = !1;
					(this.model = e.data.games), console.log("profile games model: ", this.model);
					var o = e.data.id;
					s.get("id") != o && (r = i.getByOpponentId(o)),
						(this.viewParam = {
							Application: t,
							UserModel: s,
							statModel: r,
							id: o,
						});
				},
				afterRender: function () {
					var e =
						this.model.games > 0 ? Math.round((this.model.wins / this.model.games) * 100) : 50;
					this.canvasAnimation(e);
				},
				canvasAnimation: function (e) {
					function c() {
						function e() {
							t.beginPath(),
								t.moveTo(o, o),
								t.lineTo(o, o * 2),
								(t.lineWidth = 10),
								(t.strokeStyle = "#2b3043"),
								t.stroke();
						}

						function h() {
							t.beginPath(),
								t.moveTo(o, o),
								t.lineTo(o + o * Math.cos(u / 10 + r), o + o * Math.sin(u / 10 + r)),
								t.stroke();
						}

						function p(e, n) {
							t.beginPath(),
								t.arc(o, o, o - e, 0, Math.PI * 2, !1),
								(t.strokeStyle = n),
								t.stroke();
						}

						function d(e, n) {
							t.beginPath(), t.arc(o, o, o - e, r, u / 10 + r, !1), (t.strokeStyle = n), t.stroke();
						}
						(u = ((n / 100) * Math.PI * 2 * 10).toFixed(4)),
							t.clearRect(0, 0, i, s),
							(t.lineWidth = l),
							p(l * 2, "#e52f24"),
							p(l, "#fa4133"),
							d(l * 2, "#35a235"),
							d(l, "#4bb74b"),
							e(),
							h();
						if (n + a / 30 >= a) {
							cancelAnimationFrame(f);
							return;
						}
						(n += a / 30), (f = requestAnimationFrame(c));
					}

					function h(e) {
						(a = e), c();
					}
					var t = document.getElementById("profile-games").getContext("2d"),
						n = 0,
						r = -4.72,
						i = t.canvas.width,
						s = t.canvas.height,
						o = i / 2,
						u,
						a,
						f,
						l = 18;
					h(e);
				},
			});
			return f;
		}
	),
	define("text!screens/profile/clan.html!strip", [], function () {
		return '		\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <!-- <div id=\'returnToProfile\' class="b-btn-back b-btn-back_help"></div> -->\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Клан</div>\n</div>\n<!-- /.b-screen-head -->\n\n<%\n\nvar isEmptyScoresStat = !_.compact(clan.scoresStat).length;\n\n//test data: clan.scoresStat = [12343, 234323, 153413, 45343, 32342, 90342, 70340];\n\nif (_.isEmpty(clan.scoresStat)) {\n    clan.scoresStat = _.range(0, 7, 0);\n}\n\nvar maxScoresStat = _.max(clan.scoresStat);\n\nfunction formatScroresStat(scores) {\n    if (scores > 1000000) {\n        return Math.floor(scores/1000000 * 10) / 10 + \'kk\';\n    } else if (scores > 1000) {\n        return Math.floor(scores/1000) + \'k\';\n    } else {\n        return \'\';\n    }\n}\n%>\n\n<div class="l-screen__main <%= (!_.isEmpty(permissions) && UserModel.get(\'id\') != this.model.get(\'id\'))? \'l-screen__main_fixed\' : \'\' %>">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-clan">\n            <div class="profile-clan__task">\n                <div class="profile-clan__task-diagram <%=(isEmptyScoresStat)? \'profile-clan__task-diagram_disabled\' : \'\'%>"> \n                    <% \n                    clan.scoresStat.forEach(function(el){\n                    %>\n                    <div class="profile-clan__task-column">\n                        <div class="profile-clan__task-points"><%=formatScroresStat(el)%></div>\n                        <div class="profile-clan__task-figure" style="height: <%=(isEmptyScoresStat)? Math.floor(Math.random() * Math.floor(100)) : Math.floor(el / maxScoresStat * 100)%>%;"></div>\n                    </div>\n                    <%\n                    });\n                    %>\n                    <div class="profile-clan__task-diagram-disabled-info">Появятся после выполнения первого</div>\n                </div>\n                <div class="profile-clan__task-info">Набранные очки в 7 последних КЗ</div>\n            </div>\n            <!-- /.profile-clan__task -->\n\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Клан</div>\n                        <% if (clan.currentClan) { %>\n                            <% if (GamePartModel.get(\'clan\').isAvailable) { %>\n                        <div class="profile-info__list-data profile-info__list-data_link">\n                            <div id="clanView" class="profile-info__list-data-value"><%=clan.currentClan.main.name%></div>\n                            <div class="profile-info__list-data-info"><%=clan.currentClan.main.level%> уровень</div>\n                        </div>\n                            <% } else { %>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=clan.currentClan.main.name%></div>\n                            <div class="profile-info__list-data-info"><%=clan.currentClan.main.level%> уровень</div>\n                        </div>\n                            <% } %>\n                        <% } else { %>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value">Не в клане</div>\n                        </div>\n                        <% } %>\n                    </div>\n                    <!-- /.profile-clan__list-item -->\n\n                    <% if (clan.previousClan) { %>\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Предыдущий клан</div>\n                        <div class="profile-info__list-data">\n                            <% if (GamePartModel.get(\'clan\').isAvailable) { %>\n                            <div id="clanPreviosView" class="profile-info__list-data-value"><%=clan.previousClan.main.name%></div>\n                            <% } else { %>\n                            <div class="profile-info__list-data-value"><%=clan.previousClan.main.name%></div>\n                            <% } %>\n                            <div class="profile-info__list-data-info"><%=clan.previousClan.main.level%> уровень</div>\n                        </div>\n                    </div>\n                    <!-- /.profile-clan__list-item -->\n                    <% } %>\n                    \n                    <% if (clan.currentClan) { %>\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Звание</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=Application.params.clanRoles[clan.role]%></div>\n                            <div class="profile-info__list-data-info">в клане <%=moment().diff(moment(clan.tsClanJoin * 1000), \'days\')%> <%=Application.methods.declension(moment().diff(moment(clan.tsClanJoin * 1000), \'days\'),[\'день\',\'дня\',\'дней\'])%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-clan__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Очки в текущем КЗ</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(clan.scores)%></div>\n                            <div class="profile-info__list-data-info"><%=clan.battleRoundCount%> <%=Application.methods.declension(clan.battleRoundCount,[\'попытка\',\'попытки\',\'попыток\'])%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-clan__list-item -->\n                    <% } %>\n                    \n                    \n                    <div class="profile-clan__rate">\n                        <div class="profile-clan__rate-label">\n                            Множитель\n                        </div>\n                        <div class="profile-clan__rate-data">\n                            <div class="profile-clan__rate-value"><%=clan.rate.rate%></div>\n                            <div class="profile-clan__multiplier profile-clan__multiplier_rating">\n                                <span class="profile-clan__multiplier-value"><%=new Intl.NumberFormat(\'ru-RU\').format(clan.rate.rateRating)%></span>\n                                <img class="profile-clan__multiplier-icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="">\n                            </div>\n                            <div class="profile-clan__multiplier profile-clan__multiplier_level">\n                                <span class="profile-clan__multiplier-value"><%=Application.methods.levelForUwins(uwins)%> ур.</span>\n                            </div>\n                            <div class="profile-clan__multiplier profile-clan__multiplier_clothes">\n                                <span class="profile-clan__multiplier-value">&times;<%=(+clan.rate.clothesRate).toFixed(2)%></span>\n                                <img class="profile-clan__multiplier-icon" src="<%=Application.params.staticUrl%>images/app/icons/clothes.png" alt="">\n                            </div>\n                            <div class="profile-clan__multiplier profile-clan__multiplier_library">\n                                <span class="profile-clan__multiplier-value">&times;<%=(+clan.rate.libraryRate).toFixed(2)%></span>\n                                <img class="profile-clan__multiplier-icon" src="<%=Application.params.staticUrl%>images/app/icons/books.png" alt="">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /.profile-clan__rate -->\n                </div>\n            </div>\n            <!-- /.profile-clan__list -->\n\n        </div>\n        <!-- /.profile-clan -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n\n    <% if (!_.isEmpty(permissions)) { %>\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n\n            <% \n            var user = UserModel.get(\'id\');\n            var userRole = _.findWhere(ClanModel.get(\'clanData\').members, {id: user}).role;\n            var member = this.model.get(\'id\');\n            var memberRole = _.findWhere(ClanModel.get(\'clanData\').members, {id: member}).role;\n            %>\n\n            <% if (userRole == 3 && memberRole == 5 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="upgradeRole" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <% } %>\n\n            <% if (userRole == 3 && memberRole == 1 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="upgradeRole" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <div id="downgradeRole" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Понизить</div>\n            <% } %>\n\n            <% if (userRole == 3 && memberRole == 2 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="upgradeRole" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <div id="downgradeRole" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Понизить</div>\n            <% } %>\n\n            <% if (userRole == 3 && memberRole == 4 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="clanTransfer" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <div id="downgradeRole" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Понизить</div>\n            <% } %>\n\n            <% if (userRole == 3 && permissions.hasExcludeMemberPermission) { %>\n            <div id="excludeMember" class="b-screen-btns__item b-btn b-btn_white soundingButton">Исключить</div>\n            <% } %>\n\n\n            <% if (userRole == 4 && memberRole == 2 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="downgradeRole" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Понизить</div>\n            <% } %>\n            <% if (userRole == 4 && memberRole == 5 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="upgradeRole" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <% } %>\n            <% if (userRole == 4 && memberRole == 1 && permissions.hasChangeMemberRolePermission) { %>\n            <div id="upgradeRole" class="b-screen-btns__item b-btn b-btn_green soundingButton">Повысить</div>\n            <div id="downgradeRole" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Понизить</div>\n            <% } %>\n            <% if (userRole == 4 && (memberRole == 2 || memberRole == 1 || memberRole == 5) && permissions.hasExcludeMemberPermission) { %>\n            <div id="excludeMember" class="b-screen-btns__item b-btn b-btn_white soundingButton">Исключить</div>\n            <% } %>\n\n\n            <% if (userRole == 2 && (memberRole == 1 || memberRole == 5) && permissions.hasExcludeMemberPermission) { %>\n            <div id="excludeMember" class="b-screen-btns__item b-btn b-btn_white soundingButton">Исключить</div>\n            <% } %>\n\n        </div>\n    </div>\n    <!-- /.l-screen__main-foot -->\n    <% } %>\n\n</div>\n<!-- /.l-screen__main -->\n\n<!-- /.l-screen -->\n\n';
	}),
	define(
		"screens/profile/clan",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/user",
			"models/clan/main",
			"models/gamePart",
			"models/appState",
			"controllers/analytic",
			"collections/popups",
			"text!screens/profile/clan.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = n.extend({
				template: _.template(l),
				el: "#screenContainer",
				events: {
					"click #clanView": "clanView",
					"click #clanPreviosView": "clanPreviosView",
					"click #upgradeRole": "upgradeRole",
					"click #downgradeRole": "downgradeRole",
					"click #excludeMember": "excludeMember",
					"click #clanTransfer": "clanTransfer",
					"click #backButton": function () {
						u.previousScreen();
					},
				},
				initialize: function (n) {
					var r = this,
						u,
						a,
						f = s.get("clanData");
					(this.model = n.model),
						console.log("profileClan model: ", this.model),
						this.listenTo(e, "clanSetUserRole", function () {
							e.playerInfoGetClan(r.model.get("id"));
						}),
						this.listenTo(e, "clanExcludeMember", function () {
							(this.viewParam.permissions = {}), e.playerInfoGetClan(r.model.get("id"));
						}),
						this.listenTo(e, "userClanInfo", function (t) {
							t.reason == "clan.exclude" &&
								!t.clanData.members &&
								((this.viewParam.permissions = {}), e.playerInfoGetClan(r.model.get("id")));
						}),
						this.listenTo(e, "playerInfoGetClan", function (e) {
							(r.model.attributes.clan = e.clan), r.render();
						}),
						!_.isEmpty(s.get("clanData")) &&
							_.findWhere(f.members, {
								id: this.model.get("id"),
							}) &&
							this.model.get("id") != i.get("id") &&
							((u = _.findWhere(f.members, {
								id: i.id,
							})),
							(a = _.findWhere(s.get("userClanPermissionInfo"), {
								role: u.role,
							}).permissions)),
						(this.viewParam = {
							Application: t,
							UserModel: i,
							ClanModel: s,
							GamePartModel: o,
							permissions: a || {},
						});
				},
				afterRender: function () {
					this.figuresAnimate();
				},
				clanView: function () {
					var e = this.model.get("clan").currentClan.main.clanId,
						t = s.get("clanData");
					_.isEmpty(t)
						? u.setScreen({
								screen: "clanView",
								params: {
									id: e,
								},
						  })
						: e == t.main.clanId
						? u.setScreen({
								screen: "clan",
						  })
						: u.setScreen({
								screen: "clanView",
								params: {
									id: e,
								},
						  });
				},
				clanPreviosView: function () {
					u.setScreen({
						screen: "clanView",
						params: {
							id: this.model.get("clan").previousClan.main.clanId,
						},
					});
				},
				upgradeRole: function () {
					var t,
						n = this.model.get("id"),
						i = _.findWhere(s.get("clanData").members, {
							id: n,
						}).role;
					switch (i) {
						case 5:
							t = 1;
							break;
						case 1:
							t = 2;
							break;
						case 2:
							t = 4;
					}
					e.clanSetUserRole(n, t), r.sendDesignEvent("Profile_clan_popup:Action:promote");
				},
				downgradeRole: function () {
					var t,
						n = this.model.get("id"),
						i = _.findWhere(s.get("clanData").members, {
							id: n,
						}).role;
					switch (i) {
						case 4:
							t = 2;
							break;
						case 2:
							t = 1;
							break;
						case 1:
							t = 5;
					}
					e.clanSetUserRole(n, t), r.sendDesignEvent("Profile_clan_popup:Action:demote");
				},
				excludeMember: function () {
					var e = this.model.get("id");
					f.add({
						type: "profileClan",
						params: {
							type: "excludeMember",
							member: e,
						},
					});
				},
				clanTransfer: function () {
					var e = this.model.get("id"),
						t = this.model.get("playerName");
					f.add({
						type: "profileClan",
						params: {
							type: "clanTransfer",
							member: e,
							memberName: t,
						},
					});
				},
				figuresAnimate: function () {
					var e,
						t,
						n = 0,
						r = 60,
						i;
					if (this.model.get("clan").currentClan) {
						var s = _.without(this.model.get("clan").scoresStat, 0);
						if (s.length > 0) {
							i = $(".profile-clan__task-figure");
							for (e = 0; e < i.length; e += 1)
								(t = i[e].offsetHeight),
									t &&
										($(i[e])
											.delay(n)
											.css({
												height: 0,
											})
											.animate(
												{
													height: t,
												},
												200
											),
										(n += r));
						}
					}
				},
			});
			return c;
		}
	),
	define("text!screens/profile/tourney.html!strip", [], function () {
		return '<%\nvar mimIconSize = 16;\nvar maxIconSize = 55;\nvar topCount = bronzeCount + silverCount + goldCount;\nvar maxCount = Math.max(bronzeCount, silverCount, goldCount);\nvar bronzeIconSize = Math.floor(bronzeCount / maxCount * 100);\nvar silverIconSize = Math.floor(silverCount / maxCount * 100);\nvar goldIconSize = Math.floor(goldCount / maxCount * 100);\n\nfunction randomIconSize() {\n    return Math.floor(Math.random() * (100 - mimIconSize) + mimIconSize);\n}\n%>\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Турниры</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-tourneys <%=(!topCount)? \'profile-tourneys_disabled\' : \'\' %>">\n            <div class="profile-tourneys__results">\n                <div class="profile-tourneys__results-group ">\n                    <div class="profile-tourneys__results-item profile-tourneys__results-item_top100">\n                        <div class="profile-tourneys__results-label">Топ-100</div>\n                        <div class="profile-tourneys__results-icon" style="height: <%=(!topCount)? randomIconSize() : bronzeIconSize %>%">\n                            <img src="<%=Application.params.staticUrl%>images/app/profile/tourneys/top100.png" class="profile-tourneys__results-img" alt="" />\n                        </div>\n                    </div>\n                    <div class="profile-tourneys__results-item profile-tourneys__results-item_top10">\n                        <div class="profile-tourneys__results-label">Топ 10</div>\n                        <div class="profile-tourneys__results-icon" style="height: <%=(!topCount)? randomIconSize() : silverIconSize %>%">\n                            <img src="<%=Application.params.staticUrl%>images/app/profile/tourneys/top10.png" class="profile-tourneys__results-img" alt="" />\n                        </div>\n                    </div>\n                    <div class="profile-tourneys__results-item profile-tourneys__results-item_top1">\n                        <div class="profile-tourneys__results-label">Топ 1</div>\n                        <div class="profile-tourneys__results-icon" style="height: <%=(!topCount)? randomIconSize() : goldIconSize %>%">\n                            <img src="<%=Application.params.staticUrl%>images/app/profile/tourneys/top1.png" class="profile-tourneys__results-img" alt="" />\n                        </div>\n                    </div>\n                    <div class="profile-tourneys__results-disabled-info">Появится после попадания в Топ</div>\n                </div>\n                <div class="profile-tourneys__results-info">соотношение призовых мест</div>\n            </div>\n            <!-- /.profile-clan__task -->\n\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Всего турниров</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(count)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Платные</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(paidCount)%></div>\n                            <% if (count) { %>\n                            <div class="profile-info__list-data-info"><%=(paidCount/count*100).toFixed(1)%> %</div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Попадания в Топы</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(topCount)%></div>\n                            <% if (count) { %>\n                            <div class="profile-info__list-data-info"><%=(topCount/count*100).toFixed(1)%> %</div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                </div>\n            </div>\n            <!-- /.profile-info -->\n\n\n        </div>\n        <!-- /.profile-clan -->\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/profile/tourney",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/user",
			"models/appState",
			"controllers/analytic",
			"collections/popups",
			"text!screens/profile/tourney.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #seasonLink": function () {
						s.setScreen({
							screen: "rating",
						});
					},
				},
				initialize: function (e) {
					var n = this;
					(this.model = e.data.tourney),
						console.log("profileTourney model: ", this.model),
						(this.viewParam = {
							Application: t,
							UserModel: i,
						});
				},
				afterRender: function () {
					this.figuresAnimate();
				},
				figuresAnimate: function () {
					var e,
						t,
						n = 0,
						r = 60,
						i = $(".profile-tourneys__results-icon");
					for (e = 0; e < i.length; e += 1)
						(t = i[e].offsetHeight),
							$(i[e])
								.delay(n)
								.css({
									height: 0,
								})
								.animate(
									{
										height: t,
									},
									200
								),
							(n += r);
				},
			});
			return f;
		}
	),
	define("text!screens/profile/library.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Библиотека</div>\n</div>\n<!-- /.b-screen-head -->\n\n\n\n<div class="l-screen__main l-screen__main_library">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-library">\n\n            <div class="library-show library-show_profile library-show_with-nav">\n\n                <div id="libraryRack" class="library-show__content"> \n\n                    <div id="libraryRackScroll" class="library-show__scroll"> \n                \n                    <%\n                    var i;\n                    var minBookWisdom = LibraryModel.getItemWisdomByAlias(\'magazine-1\');\n                    var shelfHeight = 66;\n                    var sectionsFilled = 0;\n                    var sectionsEmpty = 0;\n                    var shelf = this.model.libraryData.bookshelf;\n                    var shelfWisdom = 0;\n                \n                    if (shelf.length > 0) {\n                    %>\n                    <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf library-shelf_filled">\n                        <div class="library-shelf__content">\n                            <div class="library-shelf__top"></div>\n                            <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                            <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                            <div class="library-shelf__list">\n                                <div class="library-shelf__list-content">\n                        \n                        <%\n                        for (i = 0; i < shelf.length; i += 1) { \n                            var bookWisdom = LibraryModel.getItemWisdomByAlias(shelf[i]);\n                            if (sectionWidth - shelfWisdom >= bookWisdom) {\n                                shelfWisdom += bookWisdom;\n                            %>\n                                    <img style="width: <%=bookWisdom - 1%>px" class="library-shelf__item" src="https://cdn.wordbyword.me/content/library/books/<%=shelf[i]%>.png" alt="">\n                            <%\n                            }\n                            else {\n                                sectionsFilled += 1;\n                                shelfWisdom = 0;\n                            %>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf library-shelf_filled">\n                        <div class="library-shelf__content">\n                            <div class="library-shelf__top"></div>\n                            <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                            <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                            <div class="library-shelf__list">\n                                <div class="library-shelf__list-content">\n                                    <img style="width: <%=bookWisdom - 1%>px" class="library-shelf__item" src="https://cdn.wordbyword.me/content/library/books/<%=shelf[i]%>.png" alt="">\n                            <%\n                            }\n                        }\n                        \n                        %>\n                                        \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <%\n                    sectionsFilled += 1;\n                    }\n                \n                    %>\n                \n                    <%\n                    sectionsEmpty = sectionsCount - sectionsFilled;\n                    if (sectionsEmpty > 0) {\n                        for (i = 0; i < sectionsEmpty; i += 1) { \n                        %>\n                        <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf">\n                            <div class="library-shelf__content">\n                                <div class="library-shelf__top"></div>\n                                <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                                <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                                <div class="library-shelf__list">\n                                    <div class="library-shelf__list-content">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <%\n                        }\n                    }\n                    %>\n                \n                    </div>\n                    <!-- /.library-show__scroll -->\n                </div>\n\n                \n                <div id="libraryShowNav" class="library-show__nav">\n                    <div id="libraryShowNavBack" class="library-show__nav-ctrl">\n                        <div class="library-show__nav-back"></div>\n                    </div>\n                    <div id="libraryShowNavForward" class="library-show__nav-ctrl">\n                        <div class="library-show__nav-forward"></div>\n                    </div>\n                </div>\n                <!-- /.library-show__nav -->\n                \n            </div>\n            <!-- /.library-show -->\n\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Уровень</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=this.model.libraryData.level%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Мудрость</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(this.model.libraryData.wisdom)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Коэффициент библиотеки</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=(+this.model.rateInfo.libraryRate).toFixed(2)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <%\n                        var typeNumber;\n                        var bookCountByType = [];\n                        var booksCountTotal = 0;\n                        var booksStatCountType;\n                        for (typeNumber = 1; typeNumber <= 4; typeNumber += 1) {\n                            booksStatCountType = _.findWhere(this.model.booksStat, {type: typeNumber});\n                            bookCountByType[typeNumber-1] = booksStatCountType? booksStatCountType.count : 0;\n                            booksCountTotal += bookCountByType[typeNumber-1];\n                        }\n                    %>\n                    \n                    <div class="profile-info__list-item">\n                        <div class="profile-info__list-label">Всего прочитано</div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=new Intl.NumberFormat(\'ru-RU\').format(booksCountTotal)%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n\n                    <div class="profile-library-list">\n                        <div class="profile-library-list__item profile-library-list__item_magazine">\n                            <div class="profile-library-list__icon">\n                                <img class="profile-library-list__icon-img" src="<%=Application.params.staticUrl%>images/app/profile/books/magazine.png" alt="">\n                            </div>\n                            <span class="profile-library-list__label">Журнал</span>\n                            <span class="profile-library-list__count"><%=new Intl.NumberFormat(\'ru-RU\').format(bookCountByType[0])%></span>\n                        </div>\n                        <div class="profile-library-list__item profile-library-list__item_book">\n                            <div class="profile-library-list__icon">\n                                <img class="profile-library-list__icon-img" src="<%=Application.params.staticUrl%>images/app/profile/books/book.png" alt="">\n                            </div>\n                            <span class="profile-library-list__label">Книга</span>\n                            <span class="profile-library-list__count"><%=new Intl.NumberFormat(\'ru-RU\').format(bookCountByType[1])%></span>\n                        </div>\n                        <div class="profile-library-list__item profile-library-list__item_big-book">\n                            <div class="profile-library-list__icon">\n                                <img class="profile-library-list__icon-img" src="<%=Application.params.staticUrl%>images/app/profile/books/big-book.png" alt="">\n                            </div>\n                            <span class="profile-library-list__label">Трактат</span>\n                            <span class="profile-library-list__count"><%=new Intl.NumberFormat(\'ru-RU\').format(bookCountByType[2])%></span>\n                        </div>\n                        <div class="profile-library-list__item profile-library-list__item_encyclopedia">\n                            <div class="profile-library-list__icon">\n                                <img class="profile-library-list__icon-img" src="<%=Application.params.staticUrl%>images/app/profile/books/encyclopedia.png" alt="">\n                            </div>\n                            <span class="profile-library-list__label">Энциклопедия</span>\n                            <span class="profile-library-list__count"><%=new Intl.NumberFormat(\'ru-RU\').format(bookCountByType[3])%></span>\n                        </div>\n                    </div>\n                    <!-- /.profile-library-list -->\n\n                </div>\n            </div>\n            <!-- /.profile-info -->\n\n        </div>\n        <!-- /.profile-library -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->\n\n        ';
	}),
	define(
		"screens/profile/library",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/library",
			"models/appState",
			"controllers/analytic",
			"text!screens/profile/library.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = n.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #libraryShowNavForward": "scrollRackForward",
					"click #libraryShowNavBack": "scrollRackBack",
				},
				SECTION_W_MIN: 90,
				SECTION_W_MAX: 181,
				initialize: function (e) {
					(this.model = e.data.library),
						console.log("profile library model: ", this.model),
						(this.viewParam = {
							Application: t,
							LibraryModel: i,
							sectionsCount: this.getSectionsCount(),
							sectionWidth: this.getSectionWidth(),
						});
				},
				afterRender: function () {
					var e = $("#libraryRackScroll"),
						t = $("#libraryShowNav"),
						n = $(".profile-library").width(),
						r = this.viewParam.sectionWidth + 36,
						i = this.viewParam.sectionsCount;
					if (r * i < n) t.hide(), $(".library-show").removeClass("library-show_with-nav");
					else {
						e.css({
							width: r * i + "px",
						});
						var s = (n - r) / 2 - 18;
						e.css({
							left: s + "px",
						}),
							this.displayNav();
					}
					this.bookStatAnimate();
				},
				getSectionWidth: function () {
					var e = this.model.libraryData.wisdomTarget;
					return e >= this.SECTION_W_MAX ? this.SECTION_W_MAX : Math.max(this.SECTION_W_MIN, e);
				},
				getSectionsCount: function () {
					var e,
						t = this.model.libraryData.wisdom;
					return t >= this.SECTION_W_MAX ? (e = Math.ceil(t / this.SECTION_W_MAX)) : (e = 1), e;
				},
				scrollRackForward: function () {
					var e = this,
						t = $("#libraryRackScroll"),
						n = this.viewParam.sectionWidth + 36,
						r = parseInt(t.css("left"));
					t.animate(
						{
							left: r - n + 18 + "px",
						},
						100,
						function () {
							e.displayNav();
						}
					);
				},
				scrollRackBack: function () {
					var e = this,
						t = $("#libraryRackScroll"),
						n = this.viewParam.sectionWidth + 36,
						r = parseInt(t.css("left"));
					t.animate(
						{
							left: r + n - 18 + "px",
						},
						100,
						function () {
							e.displayNav();
						}
					);
				},
				displayNav: function () {
					var e = $(".profile-library").width(),
						t = this.viewParam.sectionWidth + 36,
						n = this.viewParam.sectionsCount,
						r = $("#libraryShowNav"),
						i = $("#libraryRackScroll"),
						s = parseInt(i.css("left")),
						o = (e - t) / 2 - 18;
					r.removeClass("library-show__nav_b library-show__nav_f"),
						$(".library-show__nav-ctrl").show(),
						e > s + t * n + o &&
							(r.addClass("library-show__nav_b"), $("#libraryShowNavForward").hide()),
						s > 0 && (r.addClass("library-show__nav_f"), $("#libraryShowNavBack").hide());
				},
				bookStatAnimate: function () {
					var e,
						t,
						n = 0,
						r = 100,
						i = $(".profile-library-list__icon-img");
					for (e = 0; e < i.length; e += 1)
						(t = i[e].offsetHeight),
							$(i[e])
								.delay(n)
								.css({
									height: 0,
								})
								.animate(
									{
										height: t,
									},
									200
								),
							(n += r);
				},
			});
			return a;
		}
	),
	define("text!screens/profile/achievement.html!strip", [], function () {
		return '<%\n\n\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back soundingButton"></div>\n    </div>\n    <div class="b-screen-head__title">Достижения</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main">\n\n    <div class="l-screen__main-content">\n\n        <div class="profile-achievements">\n\n            <div class="profile-achievements__stats">\n                <canvas width="200" height="200" id="profile-achievements" class="profile-achievements__diagram"></canvas>\n                <div class="profile-achievements__stats-icon"></div>\n                <div class="profile-achievements__stats-section profile-achievements__stats-section_opened">\n                    <div class="profile-achievements__stats-title">Открыто</div>\n                    <div class="profile-achievements__stats-data"><%=this.model.openedCount%> <span class="profile-achievements__stats-data-i">(<%=this.model.openedPercent%>%)</span></div>\n                </div>\n                <div class="profile-games__stats-section profile-achievements__stats-section_closed">\n                    <div class="profile-achievements__stats-title">Закрыто</div>\n                    <div class="profile-achievements__stats-data"><%=this.model.closedCount%> <span class="profile-achievements__stats-data-i">(<%=this.model.closedPercent%>%)</span></div>\n                </div>\n            </div>\n\n            <% if (this.model.openedCount > 0) { %>\n            <div class="profile-info">\n                <div class="profile-info__list">\n                    <% for(var i = 0; i < this.model.openedCount; i += 1) { %>\n\n                    <%\n                    var achieve = this.model.achievements[i];\n                    %>\n                    <div class="profile-info__list-item profile-info__list-item_achievement">\n                        <div class="profile-info__list-icon">\n                            <img class="profile-info__list-icon-i" src="<%=achieve.imageUrl%>" alt="">\n                        </div>\n                        <div class="profile-info__achievement">\n                            <span class="profile-info__achievement-name"><%=achieve.name%></span>\n                            <span class="profile-info__achievement-desc"><%=achieve.desc%></span>\n                        </div>\n                        <div class="profile-info__list-data">\n                            <div class="profile-info__list-data-value"><%=moment(achieve.unlockTime * 1000).format(\'DD.MM.YY\')%></div>\n                        </div>\n                    </div>\n                    <!-- /.profile-info__list-item -->\n                    <% } %>\n                </div>\n            </div>\n            <!-- /.profile-info -->\n\n            <% } else { %>\n            <div class="profile-info-empty">\n                <div class="profile-info-empty__text">Список откроется после получения первого</div>\n            </div>\n            <!-- /.profile-info-empty -->\n            <% } %>\n\n        </div>\n        <!-- /.profile-rating -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/profile/achievement",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/appState",
			"controllers/analytic",
			"text!screens/profile/achievement.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = n.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						i.previousScreen();
					},
				},
				initialize: function (e) {
					var n = this,
						r = e.data.achievements,
						i = r.opened,
						s = r.count,
						o = r.opened.length,
						u = s - o,
						a = Math.round((o / s) * 100),
						f = Math.round((u / s) * 100);
					(this.model = {
						totalCount: s,
						achievements: i,
						openedCount: o,
						openedPercent: a,
						closedCount: u,
						closedPercent: f,
					}),
						console.log("profile achievements model: ", this.model),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {
					var e = this.model.openedCount > 0 ? this.model.openedCount : 0;
					this.canvasAnimation(e);
				},
				canvasAnimation: function (e) {
					function c() {
						function e() {
							t.beginPath(),
								t.moveTo(o, o),
								t.lineTo(o, o * 2),
								(t.lineWidth = 10),
								(t.strokeStyle = "#2b3043"),
								t.stroke();
						}

						function h(e, n) {
							t.beginPath(),
								t.arc(o, o, o - e, 0, Math.PI * 2, !1),
								(t.strokeStyle = n),
								t.stroke();
						}

						function p(e, n) {
							t.beginPath(), t.arc(o, o, o - e, r, u / 10 + r, !1), (t.strokeStyle = n), t.stroke();
						}
						(u = ((n / 100) * Math.PI * 2 * 10).toFixed(4)),
							t.clearRect(0, 0, i, s),
							(t.lineWidth = l),
							h(l, "#4d4d4d"),
							p(l, "#f08f33"),
							e();
						if (n + a / 30 >= a) {
							cancelAnimationFrame(f);
							return;
						}
						(n += a / 30), (f = requestAnimationFrame(c));
					}

					function h(e) {
						(a = e), c();
					}
					var t = document.getElementById("profile-achievements").getContext("2d"),
						n = 0,
						r = -4.72,
						i = t.canvas.width,
						s = t.canvas.height,
						o = i / 2,
						u,
						a,
						f,
						l = 8;
					h(e);
				},
			});
			return u;
		}
	),
	define("text!screens/dailyReward.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back b-btn-back_help"></div>\n    </div>\n    <div class="b-screen-head__title">Ежедневный бонус</div>\n</div>\n<!-- /.b-screen-head -->\n\n\n<div class="b-screen-content">\n    <div class="b-daily-reward">\n        <div class="b-daily-reward-i">\n            <div class="b-daily-reward-h">\n        \n                <div class="b-daily-reward__intro">\n\n                    <div class="b-daily-reward__intro-i">\n                        <div class="b-daily-reward__intro__title">\n                            Получай подарки каждый день!\n                        </div>\n                        <div class="b-daily-reward__intro__text">\n                            Если пропустишь день, календарь начнется заново.\n                        </div>\n                    </div>\n\n                </div>\n                <!-- /.b-daily-reward__intro -->\n\n                \n                <div class="b-daily-reward__list">\n                    <% for (var i=0; i<4; i++) { %>\n                    <div class="b-daily-reward__list__item">\n                        <div class="b-daily-reward__list__item-i">\n                            <div class="b-daily-reward__list__item__index"><%= DailyRewardModel.get(\'dailyBonusInfo\')[i].position %></div>\n                            <img class="b-daily-reward__list__item__icon" src="<%= DailyRewardModel.get(\'dailyBonusInfo\')[i].image %>" alt="" />\n                            <div class="b-daily-reward__list__item__count">\n                                <span class="b-daily-reward__list__item__count__data"><%= DailyRewardModel.get(\'dailyBonusInfo\')[i].reward[0].count %></span> \n                                <img class="b-daily-reward__list__item__count__icon" src="<%= Application.params.staticUrl %>images/app/daily-reward/coin.png" alt="">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /.b-daily-reward__list__item -->\n                    <% } %>\n\n                    <div class="b-daily-reward__list__info g-hidden">\n                        <div class="b-daily-reward__list__info-i">\n                            <div class="b-daily-reward__list__info__text">Начинай с <span class="b-daily-reward__list__info__text__day">5-го дня</span>, <br> когда пройдешь все дни.</div>\n                        </div>\n                    </div>\n                    <!-- /.b-daily-reward__list__info -->\n                </div>\n                <!-- /.b-daily-reward__list -->\n                \n\n                <div class="b-daily-reward__list">\n                    <% for (var i=4; i<8; i++) { %>\n                    <div class="b-daily-reward__list__item">\n                        <div class="b-daily-reward__list__item-i">\n                            <div class="b-daily-reward__list__item__index"><%= DailyRewardModel.get(\'dailyBonusInfo\')[i].position %></div>\n                            <img class="b-daily-reward__list__item__icon" src="<%= DailyRewardModel.get(\'dailyBonusInfo\')[i].image %>" alt="" />\n                            <div class="b-daily-reward__list__item__count">\n                                <span class="b-daily-reward__list__item__count__data"><%= DailyRewardModel.get(\'dailyBonusInfo\')[i].reward[0].count %></span> \n                                <img class="b-daily-reward__list__item__count__icon" src="<%= Application.params.staticUrl %>images/app/daily-reward/coin.png" alt="">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /.b-daily-reward__list__item -->\n                    <% } %>\n                </div>\n                <!-- /.b-daily-reward__list -->\n\n                <div class="b-daily-reward__time">\n                    <span class="b-daily-reward__time__label">Следующий бонус: </span>\n                    <span class="b-daily-reward__time__data"><%= time %></span>\n                </div>\n                <!-- /.b-daily-reward__time -->\n\n                <div id="getRewardButton" class="b-daily-reward__ctrl b-daily-reward__ctrl_disabled">\n                    <div class="b-btn b-btn_blue">Забрать награду</div>\n                </div>\n                <!-- /.b-daily-reward__ctrl -->\n\n            </div>\n        </div>\n    </div>\n    <!-- /.b-daily-reward -->\n</div>\n<!-- /.b-screen-content -->\n';
	}),
	define(
		"screens/dailyReward",
		[
			"application",
			"widget",
			"controllers/dailyReward",
			"controllers/gameanalytics",
			"models/dailyReward",
			"models/appState",
			"controllers/analytic",
			"text!screens/dailyReward.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #getRewardButton": "getReward",
					"click #backButton": function () {
						s.setScreen({
							screen: "index",
						});
					},
				},
				initialize: function () {
					o.pageview("Ежедневный бонус");
					var t = this;
					(this.viewParam = {
						Application: e,
						DailyRewardModel: i,
						time: n.nextBonusTime(),
					}),
						this.listenTo(i, "change", function () {
							t.render();
						});
				},
				afterRender: function () {
					var e = $(".b-daily-reward__list__item"),
						t = n.isReward(),
						r = n.getCurrentPosition();
					$("#getRewardButton").addClass("b-daily-reward__ctrl_disabled"),
						e
							.removeClass("b-daily-reward__list__item_current")
							.removeClass("b-daily-reward__list__item_taken"),
						t || $("#getRewardButton").removeClass("b-daily-reward__ctrl_disabled"),
						e.eq(r).addClass("b-daily-reward__list__item_current");
					for (var i = 0; i < r; i++) e.eq(i).addClass("b-daily-reward__list__item_taken");
					r >= 4 && $(".b-daily-reward__list__info").removeClass("g-hidden");
				},
				getReward: function () {
					var e = n.isReward();
					e ||
						(n.getReward(),
						$("#getRewardButton").addClass("b-daily-reward__ctrl_disabled"),
						r.sendDesignEvent(
							"Screen_actions:Daily_bonus:claim_" +
								i.get("dailyBonusInfo")[n.getCurrentPosition()].reward[0].count
						),
						r.sendDesignEvent("earn_virtual_currency:Reason:daily_bonus"));
				},
			});
			return a;
		}
	),
	define("text!screens/dailyWord/view.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n	<% if (this.type == \'current\') { %>\n	<div class="b-screen-head__nav">\n		<div class="b-btn-menu soundingButton" id="menuButton"></div>\n	</div>\n	<div class="b-screen-head__title">Слово дня</div>\n	<% } else { %>\n	<div class="b-screen-head__nav">\n		<div id="backButton" class="b-btn-back"></div>\n	</div>\n	<div class="b-screen-head__title">Добавленное слово</div>\n	<% } %>\n	<div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n	<div class="b-screen-head__ctrl"></div>\n</div><!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_fixed">\n	<div class="l-screen__main-content">\n		<% if (!_.isEmpty(this.model)) { %>\n		<div class="daily-word">\n			<div class="daily-word__item">\n				<div class="daily-word__item-term"><%=word%></div>\n				<div class="daily-word__item-ctrl">\n					<div data-id="<%=id%>" id="dailyWordLikeButton" class="daily-word-like <%=(isLiked)? \'daily-word-like_active\' : \'\'%>">\n						<div class="daily-word-like__icon"></div>\n					</div>\n				</div>\n			</div>\n			<div class="daily-word__part-of-speech"><%=partOfPeach%></div>\n			<div class="daily-word__definition"><%=description%></div>\n			<div class="daily-word__use-case"><%=example%></div>\n            <% if (this.model[\'submitter\']) { %>\n            <%\n            var level = Application.methods.levelForUwins(submitter.uwins);\n            var levelName = Application.methods.levelNameByLevel(level);\n            var selfProfile = submitter.id == UserModel.get(\'id\');\n            %>\n			<div class="daily-word__user <%=(selfProfile)? \'daily-word__user_self\' : \'\'%>">\n                <% if (selfProfile) { %>\n				<div class="daily-word__user-title">Предложено тобой:</div>\n                <% } else { %>\n                <div class="daily-word__user-title">Предложено игроком:</div>\n                <% } %>\n				<div class="daily-word__user-content">\n					<div class="daily-word__user-avatar">\n						<div id="submitterButton" data-id="<%=submitter.id%>" class="b-user">\n                            <% if (submitter.customAvatar && submitter.customAvatar.length > 0) { %>\n                                <div class="custom-avatar b-user__custom-avatar">\n                                    <% for (j = 0; j < submitter.customAvatar.length; j += 1) { %>\n                                    <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=submitter.customAvatar[j]%>.png" alt="" />\n                                    <% } %>\n                                </div>\n                            <% } else { %>\n							<div class="b-user__pic">\n                                <img class="b-user__pic-i" src="<%=submitter.avatarUrl%>" />\n							</div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level %>.png" class="b-user__rank" />\n						</div>\n					</div>\n					<div class="daily-word__user-data">\n						<div class="daily-word__user-name"><%= submitter.playerName %></div>\n						<div class="daily-word__user-level"><%= levelName %></div>\n					</div>\n				</div>\n			</div>\n            <% } %>\n		</div>\n		<% } %>\n	</div>\n	<div class="l-screen__main-foot">\n		<div class="b-screen-btns">\n			<% if (this.type == \'current\') { %>\n			<div id="dailyWordDictionaryButton" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Мой словарь</div>\n			<% } %>\n		</div>\n	</div>\n</div>';
	}),
	define(
		"screens/dailyWord/view",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/dailyWord",
			"controllers/usedesk",
			"models/dailyWord",
			"models/user",
			"models/appState",
			"text!screens/dailyWord/view.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #backButton": function () {
						i.goToDictionaryScreen();
					},
					"click #dailyWordDictionaryButton": function () {
						i.goToDictionaryScreen();
					},
					"click #dailyWordLikeButton": "likeButtonHandler",
					"click #submitterButton": "openProfile",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (e) {
					var n = this;
					console.log("params: ", e),
						(this.type = e.type),
						(this.model = this.type == "current" ? o.toJSON() : e.model),
						(this.viewParam = {
							Application: t,
							UserModel: u,
						});
				},
				afterRender: function () {},
				likeButtonHandler: function () {
					var t = $("#dailyWordLikeButton"),
						n = t.hasClass("daily-word-like_active"),
						r = t.data("id");
					n ? e.dailyWordUserDislike(r) : e.dailyWordUserLike(r),
						t.toggleClass("daily-word-like_active"),
						o.get("id") == r &&
							(o.set({
								isLiked: !n,
							}),
							console.log("DailyWordModel: ", o));
				},
				openProfile: function (e) {
					var t = $(e.currentTarget).data("id");
					a.setScreen({
						screen: "userInfo",
						params: {
							id: t,
						},
					});
				},
				showInfoPopup: function () {
					s.showInfoPopup("dailyWord");
				},
			});
			return l;
		}
	),
	define("text!screens/dailyWord/dictionary.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Мой словарь</div>\n    <div class="b-screen-head__ctrl"></div>\n</div><!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_daily-word">\n    <div class="l-screen__main-content">\n        <div class="daily-word-dictionary">\n            <div class="daily-word-dictionary__counter">\n                <span class="daily-word-dictionary__counter-label">Всего добавлено слов: </span>\n                <span class="daily-word-dictionary__counter-data"><%=data.count%></span>\n            </div>\n            <% if (data.count > 0) { %>\n            <div class="daily-word-dictionary__list">\n                <div class="daily-word-dictionary__list-title">НЕДАВНО ДОБАВЛЕННЫЕ</div>\n                <div class="daily-word-dictionary__list-content">\n                    <div id="dailyWordDictionaryList" class="daily-word-dictionary__list-wrapper">\n                        <% data.dictionary.forEach(function(word, index) { %>\n                        <div data-id="<%=word.id%>" class="daily-word-dictionary__item <%=(index % 2 == 0)? \'daily-word-dictionary__item_odd\' : \'daily-word-dictionary__item_even\'%>">\n                            <div class="daily-word-dictionary__like">\n                                <div class="daily-word-like daily-word-like_active">\n                                    <div class="daily-word-like__count"><%=word.countLikes%></div>\n                                    <div class="daily-word-like__icon"></div>\n                                </div>\n                            </div>\n                            <div class="daily-word-dictionary__term"><%=word.word%></div>\n                            <div class="daily-word-dictionary__definition"><%=word.description%></div>\n                        </div>\n                        <% }); %>\n                    </div>\n                    <% if (data.count > data.dictionary.length) { %>\n                        <div id="dailyWordDictionaryMoreButton" class="daily-word-dictionary__list-ctrl">Ещё</div>\n                    <% } %>\n                </div>\n            </div>\n            <% } else { %>\n            <div class="daily-word-dictionary__empty"> \n                <div class="daily-word-dictionary__empty-text">Добавляй Слово дня в словарь, чтобы не потерять его.</div>\n            </div>\n            <% } %>\n\n        </div>\n    </div>\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n            <div id="dailyWordOfferButton" class="b-screen-btns__item b-btn b-btn_blue soundingButton">Предложить слово</div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"screens/dailyWord/dictionary",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/dailyWord",
			"models/appState",
			"text!screens/dailyWord/dictionary.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = n.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						s.setScreen({
							screen: "dailyWord.view",
							params: {
								type: "current",
								model: null,
							},
						});
					},
					"click #dailyWordDictionaryMoreButton": "loadMore",
					"click #dailyWordOfferButton": function () {
						i.goToOfferScreen();
					},
					"click .daily-word-dictionary__item": "viewWord",
				},
				initialize: function (e) {
					(this.params = e || this.params),
						(this.limit = 10),
						(this.offset = 10),
						(this.viewParam = {
							Application: t,
							data: e.data,
						});
				},
				afterRender: function () {},
				loadMore: function () {
					var t = this,
						n = $("#dailyWordDictionaryList"),
						r = $("#dailyWordDictionaryMoreButton"),
						i = $(document.createDocumentFragment()),
						s;
					e.dailyWordGetUserDictionary(this.offset),
						(this.offset += this.limit),
						this.params.data.count < this.offset && r.hide(),
						this.listenToOnce(e, "dailyWordGetUserDictionary", function (e) {
							e.dictionary.forEach(function (e, n) {
								(s = $(
									'<div data-id="' +
										e.id +
										'" class="daily-word-dictionary__item ' +
										(n % 2 == 0
											? "daily-word-dictionary__item_odd"
											: "daily-word-dictionary__item_even") +
										'">' +
										'<div class="daily-word-dictionary__like">' +
										'<div class="daily-word-like daily-word-like_active">' +
										'<div class="daily-word-like__count">' +
										e.countLikes +
										"</div>" +
										'<div class="daily-word-like__icon"></div>' +
										"</div>" +
										"</div>" +
										'<div class="daily-word-dictionary__term">' +
										e.word +
										"</div>" +
										'<div class="daily-word-dictionary__definition">' +
										e.description +
										"</div>" +
										"</div>"
								)),
									i.append(s),
									t.params.data.dictionary.push(e);
							}),
								n.append(i);
						});
				},
				viewWord: function (e) {
					var t = $(e.currentTarget).data("id"),
						n = _.findWhere(this.params.data.dictionary, {
							id: t,
						});
					console.log("word: ", n),
						s.setScreen({
							screen: "dailyWord.view",
							params: {
								type: "dictionary",
								model: n,
							},
						});
				},
			});
			return u;
		}
	),
	define("text!screens/dailyWord/offer.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Предложить слово</div>\n    <div class="b-screen-head__ctrl"></div>\n</div><!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_fixed">\n    <div class="l-screen__main-content">\n        <div class="daily-word">\n            <div class="daily-word__form">\n                <div class="daily-word__form-field">\n                    <div class="daily-word__form-label">Слово</div>\n                    <div class="daily-word__form-ctrl">\n                        <input id="offerWordInput" class="daily-word__form-input" maxlength="30" type="text" autocomplete="off">\n                    </div>\n                    <div id="offerWordInputError" class="daily-word__form-error">Некорректное слово</div>\n                </div>\n                <div class="daily-word__form-field">\n                    <div class="daily-word__form-label">Определение</div>\n                    <div class="daily-word__form-ctrl">\n                        <textarea id="offerWordTextarea" class="daily-word__form-textarea" maxlength="300" autocomplete="off"></textarea>\n                    </div>\n                    <div id="offerWordTextareaError" class="daily-word__form-error">Некорректное определение</div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n            <div id="offerWordButton" class="b-screen-btns__item b-btn b-btn_blue b-btn_disabled soundingButton">Отправить</div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"screens/dailyWord/offer",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/dailyWord",
			"models/appState",
			"text!screens/dailyWord/offer.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = n.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						i.goToDictionaryScreen();
					},
					"click #offerWordButton": "offerWord",
					"keydown #offerWordInput": "checkKeydown",
					"keyup #offerWordInput": "checkKeyup",
					"keydown #offerWordTextarea": "checkKeydown",
					"keyup #offerWordTextarea": "checkKeyup",
				},
				initialize: function (e) {
					(this.params = e || this.params),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {},
				offerWord: function () {
					var t = $("#offerWordInput").val(),
						n = $("#offerWordTextarea").val();
					if (t.length < 2) return $("#offerWordInputError").show(), !1;
					if (n.length == 0) return $("#offerWordTextareaError").show(), !1;
					e.dailyWordUserSend(t, n),
						this.listenToOnce(e, "dailyWordUserSend", function () {
							i.goToDictionaryScreen();
						});
				},
				checkKeydown: function (e) {
					var t = $(e.currentTarget)[0].id,
						n;
					t == "offerWordInput" && (n = this.checkWord(e));
					if (n == "failed") return !1;
					var r = $("#offerWordButton");
					$("#offerWordInput").val().length == 0 && $("#offerWordTextarea").val().length == 0
						? r.addClass("b-btn_disabled")
						: r.removeClass("b-btn_disabled"),
						$("#offerWordInputError").hide(),
						$("#offerWordTextareaError").hide();
				},
				checkKeyup: function (e) {
					e.preventDefault();
				},
				checkWord: function (e) {
					if (
						!e.key.match(/^[а-яА-Я]$/g) &&
						e.key != "Backspace" &&
						e.key != "Delete" &&
						e.key != "Tab" &&
						e.key != "ArrowRight" &&
						e.key != "ArrowLeft"
					)
						return e.preventDefault(), "fail";
				},
			});
			return u;
		}
	),
	define("text!screens/settings/index.html!strip", [], function () {
		return '<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n		<div class="b-btn-menu soundingButton" id="menuButton"></div>\n	</div>\n	<div class="b-screen-head__title">Настройки</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="settings">\n	<div class="settings__content">\n\n		<div class="settings__list settings__user">\n			<div class="settings__user-avatar">\n				<div class="b-user b-user_settings">\n					<%\n					var i;\n					var userCustomAvatar = UserModel.get(\'customAvatar\');\n					%>\n					<% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n					<div class="custom-avatar b-user__custom-avatar">\n						<% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n						<img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=userCustomAvatar[i]%>.png" alt="" />\n						<% } %>\n					</div>\n					<% } else { %>\n					<div class="b-user__pic">\n						<img class="b-user__pic-i" src="<%=UserModel.get(\'avatarUrl\')%>" alt="" />\n					</div>\n					<% } %>\n					<img class="b-user__rank" src="<%= Application.params.laurelsUrl%>avatar-<%=Application.methods.levelForUwins(UserModel.get(\'uwins\'))%>.png" alt="" />\n				</div>\n			</div>\n			<div class="settings__user-name"><%=UserModel.get(\'playerName\')%></div>\n			<% if (this.changeNameData.availableCount > 0) { %>\n			<div id="changeNameCtrl" class="settings__user-ctrl">Изменить</div>\n			<% } %>\n		</div>\n\n		<div class="settings__list">\n			<div class="settings__title settings__title_orange">\n				<div class="settings__title-text">Настройки игры</div>\n			</div>\n			<div class="settings__item" id="sound">Звук\n				<div class="settings__item-ctrl">\n					<div id="soundCtrl" class="toggle <%= (Application.params.sound) ? \'\' : \'toggle_off\' %>"></div>\n				</div>\n			</div>\n			<div class="settings__item" id="notificationBlock">Уведомления\n				<div class="settings__item-ctrl">\n					<div id="notificationBlockCtrl" class="toggle <%= (Application.params.notificationBlock) ? \'\' : \'toggle_off\' %>"></div>\n				</div>\n			</div>\n			<% if (scheme == \'test\') { %>\n			<div class="settings__item" id="sound">Укороченный раунд\n				<div class="settings__item-ctrl">\n					<div id="testRoundCtrl" class="toggle <%= (Application.params.testRound) ? \'\' : \'toggle_off\' %>"></div>\n				</div>\n			</div>\n			<% } %>\n		</div>\n\n		<div class="settings__list">\n			<div class="settings__title settings__title_blue">\n				<div class="settings__title-text">Сообщения</div>\n			</div>\n			<div id="blocked" class="settings__item settings__item_link soundingButton">Заблокированные</div>\n		</div>\n\n	</div>\n</div>\n';
	}),
	define(
		"screens/settings/index",
		[
			"application",
			"widget",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"text!screens/settings/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #blocked": function () {
						n.sendDesignEvent("Screen_actions:Settings:blocked_messages"),
							i.setScreen({
								screen: "blockedOpponentsList",
							});
					},
					"click #soundCtrl": "toggleSound",
					"click #notificationBlockCtrl": "toggleNotificationBlock",
					"click #testRoundCtrl": "toggleTestRound",
					"click #changeNameCtrl": "changeNameHandler",
				},
				initialize: function () {
					var t = this;
					s.pageview("Настройки"),
						(this.viewParam = {
							Application: e,
							UserModel: o,
						}),
						this.setChangeNameParams(),
						(this.model = o),
						this.listenTo(o, "change", function () {
							t.setChangeNameParams(), t.render();
						});
				},
				afterRender: function () {},
				toggleSound: function (t) {
					(e.params.sound = !e.params.sound),
						e.params.sound && $.ionSound.play("coins"),
						localStorage.setItem(
							"sound",
							JSON.stringify({
								enabled: e.params.sound,
							})
						),
						$(t.currentTarget).toggleClass("toggle_off");
				},
				toggleNotificationBlock: function (t) {
					(e.params.notificationBlock = !e.params.notificationBlock),
						localStorage.setItem(
							"notificationBlock",
							JSON.stringify({
								enabled: e.params.notificationBlock,
							})
						),
						$(t.currentTarget).toggleClass("toggle_off");
				},
				toggleTestRound: function (t) {
					(e.params.testRound = !e.params.testRound),
						localStorage.setItem(
							"testRound",
							JSON.stringify({
								enabled: e.params.testRound,
							})
						),
						$(t.currentTarget).toggleClass("toggle_off");
				},
				changeNameHandler: function () {
					r.add({
						type: "changeName",
						params: {
							template: "form",
							data: this.changeNameData,
						},
					});
				},
				setChangeNameParams: function () {
					var e = o.get("userCommonProperties"),
						t = e.changeNameDynamicPriceSettings,
						n = e.changeNameSettings,
						r = t ? !0 : !1,
						i = r ? t.minLength : 0,
						s = r ? t.maxLength : n.maxLength,
						u = o.get("changeName") || 0,
						a = r ? t.costs.length - u : n.maxValue - u,
						f = r ? t.costs[u] : n.cost;
					this.changeNameData = {
						dynamicPrice: r,
						cost: f,
						availableCount: a,
						minLength: i,
						maxLength: s,
					};
				},
			});
			return a;
		}
	),
	define("screens/help/_utils", ["params", "collections/popups"], function (e, t) {
		var n = {
			showDoc: function (n) {
				var r = social == "fb" ? "en" : "ru",
					i = e.docs[n][r].url,
					s = e.docs[n][r].title;
				$("#contentLoader").fadeIn(300),
					$.ajax({
						url: i,
						type: "GET",
					}).done(function (e) {
						$("#contentLoader").fadeOut(300),
							t.add({
								type: "static",
								params: {
									template: "blank",
									title: s,
									content: e,
								},
							});
					});
			},
		};
		return n;
	}),
	define("text!screens/help/index.html!strip", [], function () {
		return '<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n		<div class="b-btn-menu soundingButton" id="menuButton"></div>\n	</div>\n	<div class="b-screen-head__title">Помощь</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="settings">\n	<div class="settings__content">\n\n		<div id="info" class="settings__list">\n			<div class="settings__title settings__title_dark-blue">\n				<div class="settings__title-text">Информация</div>\n			</div>\n			<div id="showUsedeskKB" class="settings__item settings__item_link soundingButton">База знаний</div>\n			<div id="howto" class="settings__item settings__item_link soundingButton">Как играть?</div>\n            <div id="privacyPolicy" class="settings__item settings__item_link soundingButton">Политика конфиденциальности</div>\n            <div id="termsOfUse" class="settings__item settings__item_link soundingButton">Пользовательское соглашение</div>\n		</div>\n		\n		<div class="settings__btns">\n			<div id="feedback" class="b-btn b-btn_white soundingButton">Написать в поддержку</div>\n		</div>\n\n		<div id="copyUserId" class="settings__id" data-clipboard-text="<%=UserModel.get(\'id\')%>">\n			<div class="settings__id-text">\n				<span class="settings__id-label">ID:</span>\n				<span class="settings__id-data"><%=UserModel.get(\'id\')%></span>\n			</div>\n			<div class="settings__id-info">Нажми, чтобы скопировать</div>\n			<div class="settings__id-alert">\n				<span class="settings__id-alert-text">Идентификатор пользователя скопирован</span>\n			</div>\n		</div>\n\n	</div>\n</div>\n';
	}),
	define(
		"screens/help/index",
		[
			"application",
			"widget",
			"clipboard",
			"screens/help/_utils",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"text!screens/help/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = t.extend({
				template: _.template(f),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #howto": function () {
						i.sendDesignEvent("Screen_actions:Help:how_to_play"),
							o.setScreen({
								screen: "howToPlay",
							});
					},
					"click #feedback": function () {
						i.sendDesignEvent("Screen_actions:Help:message_to_support"),
							o.setScreen({
								screen: "feedback",
							});
					},
					"click #showUsedeskKB": "showUsedeskKB",
					"click #copyUserId": "copyUserId",
					"click #privacyPolicy": "showPolicy",
					"click #termsOfUse": "showTerms",
				},
				initialize: function () {
					var t = this;
					u.pageview("Помощь"),
						(this.viewParam = {
							Application: e,
							UserModel: a,
						}),
						(this.clipboard = null);
				},
				afterRender: function () {},
				showUsedeskKB: function () {
					s.getKnowledgeBase(),
						s.on("getKnowledgeBase", function (e) {
							o.setScreen({
								screen: "usedesk.KB",
								params: {
									data: e[0],
								},
							});
						});
				},
				copyUserId: function () {
					var e = this;
					this.clipboard && this.clipboard.destroy(),
						(this.clipboard = new n("#copyUserId")),
						this.clipboard.on("success", function (t) {
							$(".settings__id-alert").fadeIn().delay(800).fadeOut(), e.clipboard.destroy();
						});
				},
				showPolicy: function () {
					r.showDoc("policy");
				},
				showTerms: function () {
					r.showDoc("terms");
				},
			});
			return l;
		}
	),
	define("widgets/help/sprite", [], function () {
		var e = function (e) {
			_.extend(this, e);
		};
		return (
			(e.prototype.draw = function (e) {
				var e = _.extend(
						{
							x: this.x,
							y: this.y,
							frame: this.frame,
						},
						e || {}
					),
					t = e.floor ? Math.floor(e.x) : e.x,
					n = e.floor ? Math.floor(e.y) : e.y;
				this.context.drawImage(
					this.resource,
					e.frame * this.width,
					0,
					this.width,
					this.height,
					t,
					n,
					this.width,
					this.height
				);
			}),
			e
		);
	}),
	define("widgets/help/mouse", ["widgets/help/sprite", "application"], function (e, t) {
		var n = function (n) {
			_.extend(this, n),
				(this.isMove = !0),
				(this.stopTime = !1),
				(this.firstRowY = 50),
				(this.secondRowY = 210),
				(this.waitTime = 600),
				(this.currentWaitTime = 0),
				(this.default = {
					x: n.x,
					y: n.y,
				}),
				(this.pause = [171, 258, 337]),
				(this.mouse = new e({
					context: this.ctx,
					resource: Resources.get(t.params.staticUrl + "images/app/sprites/mouse.png"),
					width: 54,
					height: 89,
				})),
				(this.draw = function () {
					this.mouse.draw();
				}),
				(this.isPauseCoord = function () {
					var e = !1;
					if (this.y == this.secondRowY)
						for (var t = 0; t < this.pause.length; t++) {
							var n = this.pause[t];
							this.x > n - this.acceleration / 2 && this.x < n + this.acceleration / 2 && (e = !0);
						}
					return e;
				}),
				(this.update = n.update
					? n.update
					: function () {
							var e = 0;
							this.isPauseCoord() &&
								((this.currentWaitTime = this.stopTime ? Date.now() - this.stopTime : 0),
								this.stopTime && this.currentWaitTime > this.waitTime
									? ((this.stopTime = !1), (this.currentWaitTime = 0), (this.isMove = !0))
									: (this.stopTime || (this.stopTime = Date.now()), (this.isMove = !1))),
								this.isMove && (this.x = this.x + this.acceleration),
								this.x > 350 &&
									this.y == this.firstRowY &&
									((this.x = this.default.x), (this.y = this.secondRowY)),
								this.x > 380 && this.y == this.secondRowY && this.restart();
							switch (!0) {
								case this.x > 110 && this.x < 320 && this.y == this.firstRowY:
								case this.isPauseCoord():
									e = 1;
							}
							(this.mouse.x = this.x), (this.mouse.y = this.y), (this.mouse.frame = e);
					  }),
				(this.restart = function () {
					(this.mouse.frame = 1),
						(this.x = this.mouse.x = this.default.x),
						(this.y = this.mouse.y = this.default.y);
				});
		};
		return n;
	}),
	define(
		"widgets/help/howToAnimation",
		["canvasWidget", "params", "application", "widgets/help/sprite", "widgets/help/mouse"],
		function (e, t, n, r, i) {
			var s = e.extend({
					stop: !1,
					afterInitialize: function (e) {
						(this.canvas = e.canvas),
							(this.ctx = this.canvas[0].getContext("2d")),
							(this.ctx.fillStyle = "#115fb4");
						var n = new i({
								ctx: this.ctx,
								x: 90,
								y: 50,
								acceleration: 1.2,
							}),
							r = new a({
								ctx: this.ctx,
								update: function () {
									n.isMove == 0 && n.x < 317 && n.x > 130 && n.y == n.secondRowY
										? (this.visible = !0)
										: n.isMove == 0 &&
										  n.currentWaitTime > 250 &&
										  n.x > 317 &&
										  n.y == n.secondRowY &&
										  (this.visible = !1);
								},
							});
						this.entities = [
							r,
							new u({
								ctx: this.ctx,
								x: 182,
								y: 8 + t.cell.y / 2 - 7,
								update: function () {
									n.x < 320 && n.x > 217 && n.y == n.firstRowY
										? (this.visible = !0)
										: n.x > 320 && n.y == n.firstRowY && (this.visible = !1);
								},
							}),
							new u({
								ctx: this.ctx,
								x: 182,
								y: 168 + t.cell.y / 2 - 7,
								update: function () {
									n.isMove == 0 && n.x < 317 && n.x > 217 && n.y == n.secondRowY
										? (this.visible = !0)
										: n.isMove == 0 &&
										  n.currentWaitTime > 250 &&
										  n.x > 317 &&
										  n.y == n.secondRowY &&
										  (this.visible = !1);
								},
							}),
							new o({
								ctx: this.ctx,
								x: 130,
								y: 8,
								letter: "Д",
								update: function () {
									n.x < 320 && n.x > 130 && n.y == n.firstRowY
										? this.focus()
										: n.x > 320 && n.y == n.firstRowY && this.unfocus();
								},
							}),
							new o({
								ctx: this.ctx,
								x: 217,
								y: 8,
								letter: "А",
								update: function () {
									n.x < 320 && n.x > 217 && n.y == n.firstRowY
										? this.focus()
										: n.x > 320 && n.y == n.firstRowY && this.unfocus();
								},
							}),
							new o({
								ctx: this.ctx,
								x: 130,
								y: 168,
								letter: "О",
								update: function () {
									n.isMove == 0 && n.x < 317 && n.x > 130 && n.y == n.secondRowY
										? this.focus()
										: n.isMove == 0 &&
										  n.currentWaitTime > 250 &&
										  n.x > 317 &&
										  n.y == n.secondRowY &&
										  this.unfocus();
								},
							}),
							new o({
								ctx: this.ctx,
								x: 217,
								y: 168,
								letter: "Н",
								update: function () {
									n.isMove == 0 && n.x < 317 && n.x > 217 && n.y == n.secondRowY
										? this.focus()
										: n.isMove == 0 &&
										  n.currentWaitTime > 250 &&
										  n.x > 317 &&
										  n.y == n.secondRowY &&
										  this.unfocus();
								},
							}),
							n,
						];
					},
					update: function () {
						for (var e = 0; e < this.entities.length; e++) this.entities[e].update();
						return $("#howToAnimation").length == 0 && (this.stop = !0), this;
					},
					draw: function () {
						this.ctx.clearRect(0, 0, this.canvas[0].width, this.canvas[0].height);
						for (var e = 0; e < this.entities.length; e++) this.entities[e].draw();
						return this;
					},
					endRender: function () {
						this.trigger("complete");
					},
				}),
				o = function (e) {
					(this.sizeX = t.cell.x),
						(this.sizeY = t.cell.y),
						_.extend(this, e),
						(this.focus = function () {
							(this.background.frame = 1),
								(this.letterSprite.resource = Resources.get(
									n.params.staticUrl + "images/app/sprites/textWhite.png"
								));
						}),
						(this.unfocus = function () {
							(this.background.frame = 0),
								(this.letterSprite.resource = Resources.get(
									n.params.staticUrl + "images/app/sprites/textBlack.png"
								));
						}),
						(this.background = new r({
							x: this.x,
							y: this.y,
							frame: 0,
							context: this.ctx,
							resource: Resources.get(n.params.staticUrl + "images/app/sprites/cells.png"),
							width: this.sizeX,
							height: this.sizeY,
						})),
						(this.letterSprite = new r({
							x: this.x,
							y: this.y,
							context: this.ctx,
							resource: Resources.get(n.params.staticUrl + "images/app/sprites/textBlack.png"),
							width: this.sizeX,
							height: this.sizeY,
						})),
						(this.draw = function () {
							this.background.draw();
							var e = this.letter.charCodeAt(0) - 1040;
							this.letterSprite.draw({
								frame: e,
							});
						}),
						(this.update = e.update || function () {});
				},
				u = function (e) {
					_.extend(this, e),
						(this.width = 50),
						(this.height = 14),
						(this.visible = !1),
						(this.draw = function () {
							this.visible && this.ctx.fillRect(this.x, this.y, this.width, this.height);
						}),
						(this.update = e.update || function () {});
				},
				a = function (e) {
					_.extend(this, e),
						(this.visible = !1),
						(this.x1 = 75),
						(this.x2 = 317),
						(this.y = 190),
						(this.draw = function () {
							this.visible == 1 &&
								(this.ctx.drawImage(
									Resources.get(n.params.staticUrl + "images/app/howto/btn-word-cancel.png"),
									this.x1,
									this.y
								),
								this.ctx.drawImage(
									Resources.get(n.params.staticUrl + "images/app/howto/btn-word-confirm.png"),
									this.x2,
									this.y
								));
						}),
						(this.update = e.update || function () {});
				};
			return s;
		}
	),
	define("text!screens/help/howToPlay.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back b-btn-back_help"></div>\n    </div>\n    <div class="b-screen-head__title">Как играть?</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-howto">\n\n    <div class="step-1 b-howto__pic">\n        <img src="<%= Application.params.staticUrl %>images/app/howto/1.png" alt="" class="nextStep b-howto__pic-i">\n    </div>\n\n    <div class="step-2 b-howto__pic" style="display: none">\n        <img src="<%= Application.params.staticUrl %>images/app/howto/3.png" alt="" class="nextStep b-howto__pic-i">\n    </div>\n\n    <div class="step-3 b-howto__pic" style="display: none">\n        <img src="<%= Application.params.staticUrl %>images/app/howto/4.png" alt="" class="nextStep b-howto__pic-i">\n    </div>\n    <div class="step-4 b-howto__pic" style="display: none">\n        <img src="<%= Application.params.staticUrl %>images/app/howto/5.png" alt="" class="nextStep b-howto__pic-i">\n    </div>\n    <div class="step-5 b-howto__pic" style="display: none">\n        <img src="<%= Application.params.staticUrl %>images/app/howto/6.png" alt="" class="nextStep b-howto__pic-i">\n    </div>\n    <% if(platform == \'desktop\') { %>\n    <div class="step-6 b-howto__pic" style="display: none">\n        <div class="b-howto__canvas nextStep">\n            <div class="b-howto__canvas-i">\n                <canvas width="434" height="316" id="howToAnimation"></canvas>\n            </div>\n            <div class="b-howto__canvas__label b-howto__canvas__label_swipe">Свайп</div>\n            <div class="b-howto__canvas__label b-howto__canvas__label_click">Клик</div>\n        </div>\n    </div>\n    <% } %>\n        \n    <div class="b-howto__pager">\n        <span class="soundingButton b-howto__pager__item b-howto__pager__item_current pager pager-1" data-page=\'1\'></span>\n        <span class="soundingButton b-howto__pager__item pager pager-2" data-page=\'2\'></span>\n        <span class="soundingButton b-howto__pager__item pager pager-3" data-page=\'3\'></span>\n        <span class="soundingButton b-howto__pager__item pager pager-4" data-page=\'4\'></span>\n        <span class="soundingButton b-howto__pager__item pager pager-5" data-page=\'5\'></span>\n        <% if(platform == \'desktop\') { %>\n            <span class="soundingButton b-howto__pager__item pager pager-6" data-page=\'6\'></span>\n        <% } %>\n    </div>\n\n    <div class="step-1 b-howto__description">\n        Слово за слово — увлекательная игра, где&nbsp;ты&nbsp;можешь вызвать своих друзей на&nbsp;поединок. Цель\n        игры — найти как можно больше слов за&nbsp;2&nbsp;минуты.\n    </div>\n\n    <div class="step-2 b-howto__description" style="display: none">\n        Можно двигаться во&nbsp;всех направлениях до&nbsp;тех пор, пока буквы слова соединены друг с&nbsp;другом и&nbsp;линия\n        непрерывна.\n    </div>\n\n    <div class="step-3 b-howto__description" style="display: none">\n        <p class="b-howto__description__title">Результат игры</p>\n            Игра состоит из трех раундов. Каждый раунд длится две минуты. Выигрывает игрок, набравший больше очков.\n    </div>\n    <div class="step-4 b-howto__description" style="display: none">\n        <p class="b-howto__description__title">Полезные фишки</p>\n        Некоторые буквы на поле дадут вам бонусные очки. Они выделены специальными символами.\n    </div>\n\n    <div class="step-5 b-howto__description" style="display: none">\n        <p class="b-howto__description__title">Монеты</p>\n        Зарабатывай монеты и&nbsp;получай плюшки в&nbsp;игре. Это просто: обыгрывай соперников, получай достижения и&nbsp;приглашай\n        друзей.\n    </div>        \n    <% if(platform == \'desktop\') { %>\n    <div class="step-6 b-howto__description" style="display: none">\n        Выделяйте буквы «свайпом» или «кликом». Чтобы принять слово при «свайпе» просто отпустите ЛКМ, при\n        использованиее «клика» нажмите кнопку <img style="vertical-align: middle; width: 20px;" src="<%= Application.params.staticUrl %>images/app/howto/btn-word-confirm.png" alt=""> или используйте ЛКМ, ПКМ.\n    </div>\n    <% } %>\n</div>\n';
	}),
	define(
		"screens/help/howToPlay",
		[
			"widget",
			"application",
			"models/appState",
			"controllers/analytic",
			"widgets/help/howToAnimation",
			"text!screens/help/howToPlay.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#screenContainer",
				events: {
					"click .nextStep": "nextStep",
					"click .pager": "nextStep",
					"click #backButton": function () {
						n.setScreen({
							screen: "help",
						});
					},
				},
				step: 1,
				maxStep: platform == "desktop" ? 6 : 5,
				initialize: function () {
					r.pageview("Как играть"),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {
					platform == "desktop" &&
						(this.howToAnimation = new i({
							canvas: $("#howToAnimation"),
						}));
				},
				nextStep: function (e) {
					$(".step-" + this.step).hide();
					var t = $(e.currentTarget).data("page");
					t === undefined ? ++this.step > this.maxStep && (this.step = 1) : (this.step = t),
						$(".step-" + this.step).show(),
						$(".pager").removeClass("b-howto__pager__item_current"),
						$(".pager-" + this.step).addClass("b-howto__pager__item_current");
				},
			});
			return o;
		}
	),
	define("text!screens/help/feedback.html!strip", [], function () {
		return '\n<div id="consoleButton" style="position: absolute; right: 0; bottom: 0; width: 42px; height: 42px;"></div>\n\n\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="backButton soundingButton b-btn-back b-btn-back_help"></div>\n    </div>\n    <div class="b-screen-head__title">Написать в поддержку</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-feedback">\n    <form id=\'feedbackForm\' class="b-feedback-i">\n\n        <div class="b-feedback__field">\n            <label class="b-feedback__field__label">Твоя электронная почта</label>\n            <div class="b-feedback__field__input">\n                <input id="feedbackMail" class="b-feedback__field__input-i feedback-text-ctrl feedback-text-ctrl_default" type="text"\n                    data-default="Пример: example@example.com"\n                    data-error="Пожалуйста, введи корректный e-mail"\n                    value="Пример: example@example.com" name="email">\n            </div>\n            <p class="b-feedback__field__info">Укажи e-mail, чтобы мы могли ответить тебе</p>\n        </div>\n\n        <div class="b-feedback__field">\n            <label class="b-feedback__field__label">Тема письма</label>\n            <div class="b-feedback__select">\n                <div id="feedbackTheme" class="b-feedback__select__data b-feedback__select__data_default" data-default="Выбери тему" data-error="Выбери тему">Выбери тему</div>\n                <div class="b-feedback__select__list">\n                    <div class="b-feedback__select__list__item">Покупки</div>\n                    <div class="b-feedback__select__list__item">Технические ошибки</div>\n                    <div class="b-feedback__select__list__item">Вопросы по игре</div>\n                    <div class="b-feedback__select__list__item">Проблемы с рекламой</div>\n                    <div class="b-feedback__select__list__item">Отзывы и предложения</div>\n                    <div class="b-feedback__select__list__item">Другое</div>\n                </div>\n            </div>\n        </div>\n\n        <div class="b-feedback__field">\n            <label class="b-feedback__field__label">Сообщение</label>\n\n            <div class="b-feedback__field__text">\n                <textarea id="feedbackText" class="b-feedback__field__text-i feedback-text-ctrl feedback-text-ctrl_default"\n                        data-default="Опиши здесь свою проблему, оставь отзыв или предложение"\n                        data-error="Поле не может быть пустым"\n                        name="text">Опиши здесь свою проблему, оставь отзыв или предложение\n                </textarea>\n            </div>\n        </div>\n\n        <div class="b-feedback__field">\n            <div class="b-feedback__check">\n                <label id="feedbackPolicyLabel" class="b-feedback__check__label">\n                    <input class="b-feedback__check__ctrl" type="checkbox" name="" id="feedbackPolicyCheck">\n                    Я ознакомлен с <a id="feedbackPolicyText" href="#">Политикой конфиденциальности</a>\n                </label>\n            </div>\n        </div>\n        \n        <div id=\'sendButton\' class="b-btn b-btn_blue g-disabled">Отправить</div>\n    </form>\n</div>\n';
	}),
	define(
		"screens/help/feedback",
		[
			"widget",
			"gate",
			"screens/help/_utils",
			"models/appState",
			"controllers/analytic",
			"models/user",
			"collections/popups",
			"text!screens/help/feedback.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						r.setScreen({
							screen: "help",
						});
					},
					"click #sendButton": "sendFeedback",
					"focus .feedback-text-ctrl": function (e) {
						var t = $(e.currentTarget);
						t.removeClass("feedback-text-ctrl_default").removeClass("feedback-text-ctrl_error"),
							t.hasClass("actual") || t.val("");
					},
					"blur .feedback-text-ctrl": function (e) {
						var t = $(e.currentTarget);
						t.val().length == 0 && t.val(t.data("default")).addClass("feedback-text-ctrl_default");
					},
					"keydown .b-feedback__field__input": function (e) {
						e.which == 13 && e.preventDefault();
					},
					"keyup .feedback-text-ctrl": function (e) {
						var t = $(e.currentTarget);
						t.val().length == 0 ? t.removeClass("actual") : t.addClass("actual");
					},
					"click .b-feedback__select__data": function (e) {
						var t = $(e.currentTarget);
						$(".b-feedback__select__list").toggle(),
							t.text() == t.data("error") &&
								t
									.text(t.data("default"))
									.removeClass("b-feedback__select__data_error")
									.addClass("b-feedback__select__data_default");
					},
					"click .b-feedback__select__list__item": function (e) {
						var t = $(e.currentTarget);
						$(".b-feedback__select__data")
							.text(t.text())
							.removeClass("b-feedback__select__data_default"),
							$(".b-feedback__select__list").hide();
					},
					"click #feedbackPolicyCheck": "setSendButtonState",
					"click #feedbackPolicyText": "showPolicy",
				},
				afterRender: function () {},
				validate: function (e) {
					var t = /^[\w\.\d-_]+@[\w\.\d-_]+\.\w{2,7}$/i,
						n = {
							isValid: !0,
							errors: [],
						};
					t.test(e.email) || ((n.isValid = !1), n.errors.push("email"));
					if (
						$.trim(e.text).length == 0 ||
						$.trim(e.text) == $("#feedbackText").data("default") ||
						$.trim(e.text) == $("#feedbackText").data("error")
					)
						(n.isValid = !1), n.errors.push("text");
					return (
						console.log("data.theme: ", e.theme),
						console.log("theme def text: ", $("#feedbackTheme").data("default")),
						e.theme == $("#feedbackTheme").data("default") &&
							((n.isValid = !1), n.errors.push("theme")),
						n
					);
				},
				sendFeedback: function (e) {
					if (this.sendBlocked || $("#sendButton").hasClass("g-disabled")) return;
					(this.sendBlocked = !0), $("#sendButton").addClass("g-disabled");
					var n = {
							id: s.get("id"),
							email: $("#feedbackMail").val(),
							text: $("#feedbackText").val(),
							theme: $("#feedbackTheme").text(),
							dev: _.pick(navigator, "userAgent", "cookieEnabled"),
						},
						i = this.validate(n),
						u = this;
					console.warn("feedback.validateResult", i);
					if (i.isValid)
						this.listenToOnce(t, "sendFeedback", function (e) {
							console.warn("feedback.response", e, e.state);
							if (e.state !== "error")
								o.add({
									type: "text",
									params: {
										header: "Отправлено",
										text: "Твое сообщение успешно отправлено",
										list: null,
										cursiv: null,
									},
								}),
									r.setScreen({
										screen: "help",
									});
							else {
								(this.sendBlocked = !1), this.setSendButtonState();
								switch (e.reason) {
									case "text.empty":
									case "text.wrong":
										u.showTextError();
										break;
									case "email.empty":
									case "email.wrong":
										u.showEmailError();
										break;
									case "theme.empty":
										u.showThemeError();
								}
							}
						}),
							t.sendFeedback(n);
					else {
						(this.sendBlocked = !1), this.setSendButtonState();
						for (var a = 0; a < i.errors.length; a++) {
							var f = i.errors[a],
								l = "show" + f[0].toUpperCase() + f.slice(1) + "Error";
							this[l]();
						}
					}
				},
				showEmailError: function () {
					$("#feedbackMail").val($("#feedbackMail").data("error")),
						$("#feedbackMail").removeClass("actual"),
						$("#feedbackMail").addClass("feedback-text-ctrl_error");
				},
				showTextError: function () {
					$("#feedbackText").val($("#feedbackText").data("error")),
						$("#feedbackText").removeClass("actual"),
						$("#feedbackText").addClass("feedback-text-ctrl_error");
				},
				showThemeError: function () {
					$("#feedbackTheme").addClass("b-feedback__select__data_error");
				},
				showPolicy: function () {
					n.showDoc("policy");
				},
				setSendButtonState: function () {
					var e = $("#feedbackPolicyCheck").is(":checked");
					e ? $("#sendButton").removeClass("g-disabled") : $("#sendButton").addClass("g-disabled");
				},
			});
			return a;
		}
	),
	define("text!screens/help/usedeskKB.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">База знаний</div>\n    <div class="b-screen-head__ctrl"></div>\n</div><!-- /.b-screen-head -->\n<div class="l-screen__main">\n    <div class="l-screen__main-content usedesk-content">\n        <div id="usedeskCollectionContent" class="usedesk-content__page usedesk-content__page_collection">\n            <% _.each(this.params.data.categories, function(category, index) { %>\n            <div class="usedesk-content__category">\n                <a data-id="<%= category.id %>" class="usedesk-content__category-link showCategory">\n                    <%= category.title %>\n                </a>\n            </div>\n            <% }); %>\n        </div>\n        <div id="usedeskCategoryContent" class="usedesk-content__page usedesk-content__page_category"></div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"screens/help/usedeskKB",
		[
			"gate",
			"application",
			"widget",
			"controllers/usedesk",
			"models/appState",
			"widgets/usedesk/category",
			"text!screens/help/usedeskKB.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = n.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": "backButtonHandler",
					"click .showCategory": "showCategory",
				},
				initialize: function (e) {
					(this.params = e),
						console.log("UsedeskKBScreen params: ", this.params),
						(this.isKBDisplayed = !0),
						(this.currentCategoryId = null),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {},
				displayKB: function () {
					(this.isKBDisplayed = !0),
						$("#usedeskCollectionContent").show(),
						$("#usedeskCategoryContent").hide();
				},
				displayCategory: function () {
					(this.isKBDisplayed = !1),
						$("#usedeskCollectionContent").hide(),
						$("#usedeskCategoryContent").show(),
						social == "ya" && $(".usedesk-content__article a").contents().unwrap();
				},
				showCategory: function (e) {
					var t = this,
						n = $(e.currentTarget).data("id"),
						i;
					this.currentCategoryId == n
						? this.displayCategory()
						: (r.getCategoryById(n),
						  r.once("getCategoryById", function (e) {
								e.articles &&
									e.articles.length > 0 &&
									((i = new s({
										model: e,
									}).returnableRender()),
									$("#usedeskCategoryContent").html("").append(i),
									(t.currentCategoryId = n),
									t.displayCategory());
						  }));
				},
				backButtonHandler: function () {
					this.isKBDisplayed
						? i.setScreen({
								screen: "help",
						  })
						: this.displayKB();
				},
			});
			return u;
		}
	),
	define("text!widgets/chat/element.html!strip", [], function () {
		return '<div class="chatItem chat-item <%= (unread)? \'chat-item_unread\' : \'\' %> soundingButton">\n    <div class="chat-item__avatar">\n        <div class="b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" src="<%= avatarUrl%>" alt="">\n            </div>\n            <% } %>\n        </div>\n    </div>\n    <div class="chat-item__content">\n        <p class="chat-item__user"><%= playerName %></p>\n        <% if (blocked) { %>\n        <p class="chat-item__status">заблокирован</p>\n        <% } else { %>\n        <p class="chat-item__text"><%= lastMessage %></p>\n        <% } %>\n    </div>\n    <div class="chat-item__ctrl">\n        <% if (!blocked) { %>\n        <div class="blockOp chat-item__block"></div>\n        <% } %>\n        <div class="deleteChat chat-item__delete"></div>\n    </div>\n</div>';
	}),
	define(
		"widgets/chat/element",
		[
			"widget",
			"models/appState",
			"collections/popups",
			"controllers/chat",
			"text!widgets/chat/element.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				events: {
					"click .deleteChat": "deleteChat",
					"click .blockOp": "blockOp",
					"click .chatItem": "openChat",
				},
				tagName: "div",
				initialize: function (e) {},
				openChat: function () {
					t.setScreen({
						screen: "chat",
						params: {
							chatId: this.model.chatId,
						},
					});
				},
				deleteChat: function (e) {
					e.stopPropagation(),
						r.deleteChat(this.model.chatId),
						setTimeout(function () {
							t.setScreen({
								screen: "chatList",
							});
						}, 1);
				},
				blockOp: function (e) {
					e.stopImmediatePropagation(),
						console.warn(this),
						n.add({
							type: "blockOp",
							params: {
								model: this.model,
							},
						});
				},
			});
			return s;
		}
	),
	define("text!screens/chat/list.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n	<div class="b-screen-head__nav">\n		<div class="b-btn-menu soundingButton" id="menuButton"></div>\n	</div>\n	<div class="b-screen-head__title">Сообщения</div>\n	<div class="b-screen-head__ctrl">\n		<div class="newChat b-btn-new-message soundingButton"></div>\n	</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="chat">\n	<div class="chat__list">\n		<div class="chatList chat__list-content"></div>\n	</div>\n	<!-- /.chat__list -->\n\n	<div class="chat__empty" style="display: none">\n		<div class="chat__empty-text">У Вас нет сообщений</div>\n	</div>\n\n</div>';
	}),
	define(
		"screens/chat/list",
		[
			"application",
			"gate",
			"widget",
			"models/appState",
			"controllers/chat",
			"controllers/analytic",
			"widgets/chat/element",
			"text!screens/chat/list.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = n.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click .newChat": function () {
						r.setScreen({
							screen: "chatFinder",
						});
					},
				},
				initialize: function () {
					s.pageview("Сообщения"),
						i.resetCounter(),
						this.listenTo(t, "chatMessage", function () {
							this.render();
						});
				},
				afterRender: function () {
					var t = $(".chatList"),
						n = i.getChats();
					if (n === null || n.length == 0) $(".chat__list").hide(), $(".chat__empty").show();
					else {
						var r = [];
						for (var s = 0, u = n.length; s < u; s++) {
							var a = i.getChat(n[s]);
							a && r.push(a);
						}
						r = _.sortBy(r, function (e) {
							return -e.messages[e.messages.length - 1].time;
						});
						var f = i.getBlokedOps();
						for (var l = 0, c = r.length; l < c; l++) {
							var a = r[l],
								h = moment(a.messages[a.messages.length - 1].time * 1e3);
							h.add(e.params.chats.deleteChatAfter);
							if (h.isBefore(moment())) {
								i.deleteChat(i.genChatId(a.recipient.id));
								var p = i.getChats();
								if (p === null || p.length == 0) $(".chat__list").hide(), $(".chat__empty").show();
							} else
								t.append(
									new o({
										model: {
											id: a.recipient.id,
											avatarUrl: a.recipient.avatarUrl,
											customAvatar: a.recipient.customAvatar,
											playerName: a.recipient.playerName,
											lastMessage: a.messages[a.messages.length - 1].message,
											chatId: i.genChatId(a.recipient.id),
											blocked: f.hasOwnProperty(a.recipient.id),
											unread: a.hasOwnProperty("unread") ? a.unread : !1,
										},
									}).returnableRender()
								);
						}
					}
				},
			});
			return a;
		}
	),
	define("text!widgets/chat/message.html!strip", [], function () {
		return '<div class="chat-message chat-message_<%= (this.model.me)? \'outgoing\' : \'income\' %>">\n    <div class="chat-message__time"><%=moment(time*1000).format(\'HH:mm\')%></div>\n    <div class="chat-message__content">\n        <div class="chat-message__text"><%=message%></div>\n    </div>\n</div>';
	}),
	define(
		"widgets/chat/message",
		["widget", "text!widgets/chat/message.html!strip"],
		function (e, t) {
			var n = e.extend({
				template: _.template(t),
				tagName: "div",
				initialize: function (e) {},
			});
			return n;
		}
	),
	define("text!screens/chat/messages.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div class="backToChatList b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title"><%=recipient.playerName%></div>\n    <div class="b-screen-head__user soundingButton">\n        <div class="playWithUser b-user">\n            <% if (recipient.customAvatar && recipient.customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < recipient.customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=recipient.customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" src="<%=recipient.avatarUrl%>" alt="" />\n            </div>\n            <% } %>\n        </div>\n    </div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="chat">\n\n    <div class="chatContent chat__content">\n\n    </div>\n    <!-- /.chat__content -->\n\n    <div class="chat__form">\n        <form action="#" class="chat__form-content" id="messageForm">\n            <input id="messageText" name="" class="chat__input" placeholder="Написать соообщение" type="text" autocomplete="off" autofocus>\n            <input id="sendMessage" value="" class="chat__submit" type="submit">\n        </form>\n    </div>\n    <!-- /.chat__form -->\n\n</div>\n';
	}),
	define(
		"screens/chat/messages",
		[
			"widget",
			"gate",
			"application",
			"models/appState",
			"controllers/chat",
			"models/chat/message",
			"controllers/analytic",
			"widgets/chat/message",
			"text!screens/chat/messages.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click .backToChatList": function () {
						r.previousScreen();
					},
					"click .playWithUser": "playWithUser",
					"submit #messageForm": "sendMessage",
				},
				chatId: null,
				chat: null,
				receiverId: null,
				initialize: function (e) {
					var t = this;
					o.pageview("Чат"),
						(this.chatId = e.chatId),
						(this.receiverId = e.chatId.split("_")[2]),
						(this.model = (function () {
							var n = i.getChat(t.chatId);
							return (
								n === null
									? (n = {
											recipient: e.opponent,
											messages: [],
									  })
									: n.unread === !0 && ((n.unread = !1), i.updateChat(t.chatId, n)),
								n
							);
						})()),
						(i.currentChat = this.chatId),
						this.model.messages.length == 0 && (i.chats[this.chatId] = new s()),
						this.listenTo(i.chats[this.chatId], "change", function (e) {
							t.appendMessage(e), t.scrollToBottom();
							var n = i.getChat(t.chatId);
							(n.unread = !1), i.updateChat(t.chatId, n);
						});
				},
				afterRender: function () {
					var e = this,
						t = $(".chatContent");
					t.data("chatId", this.chatId);
					if (this.model.messages.length > 0) {
						var n = 0;
						for (var r = 0; r < this.model.messages.length; r++) {
							var i = this.model.messages[r],
								s = new Date(i.time * 1e3).getDate();
							s !== n &&
								(t.append(
									'<div class="chat__date">' + moment(i.time * 1e3).format("D MMMM YYYY") + "</div>"
								),
								(n = s)),
								this.appendMessage(i);
						}
						setTimeout(function () {
							e.scrollToBottom(0);
						}, 1);
					}
					platform == "desktop" &&
						setTimeout(function () {
							$("#messageText").focus();
						}, 0);
				},
				playWithUser: function () {
					r.setScreen({
						screen: "userInfo",
						params: {
							id: this.model.recipient.id,
						},
					});
				},
				appendMessage: function (e) {
					var t = $(".chatContent");
					t.data("chatId") == this.chatId &&
						t.append(
							new u({
								model: e,
							}).returnableRender()
						);
				},
				scrollToBottom: function (e) {
					e = e === undefined ? 1500 : e;
					var t = $(".chatContent");
					t.animate(
						{
							scrollTop: t[0].scrollHeight,
						},
						e
					);
				},
				sendMessage: function (e) {
					e.preventDefault();
					var r = $("#messageText"),
						s = r.val();
					console.warn("chat.sendMessage messageText", s, s.length);
					if (s.length > 0) {
						r.val("");
						var o = {
							time: new Date().getTime() / 1e3,
							message: s,
							me: !0,
						};
						this.appendMessage(o),
							this.scrollToBottom(),
							console.warn("chat.checkModel", this.model.messages.length);
						if (this.model.messages.length == 0)
							i.createChat(
								this.chatId,
								{
									sender: this.model.recipient,
									time: new Date().getTime() / 1e3,
									message: s,
								},
								!0
							),
								(this.model = i.getChat(this.chatId));
						else {
							var u = i.getChat(this.chatId);
							u.messages.push(o),
								console.warn("chat.messages", u.messages),
								i.updateChat(this.chatId, u);
						}
						n.methods.play("message_out"), t.sendChatMessage(this.receiverId, s);
					}
				},
			});
			return f;
		}
	),
	define("text!widgets/chat/finderElement.html!strip", [], function () {
		return '<div class="chatFinderElement chat-item">\n    <div class="chat-item__avatar">\n        <div class="b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%= customAvatar[i] %>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" src="<%= avatarUrl %>" alt="">\n            </div>\n            <% } %>\n            <img src="<%= Application.params.laurelsUrl%>avatar-<%= level.value %>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="chat-item__content">\n        <p class="chat-item__user"><%= playerName %></p>\n    </div>\n</div>\n<!-- /.chat-item -->';
	}),
	define(
		"widgets/chat/finderElement",
		[
			"widget",
			"application",
			"models/appState",
			"controllers/chat",
			"text!widgets/chat/finderElement.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				events: {
					"click .chatFinderElement": "openChat",
				},
				tagName: "div",
				initialize: function (e) {
					this.viewParam = {
						Application: t,
					};
				},
				openChat: function () {
					n.setScreen({
						screen: "chat",
						params: {
							chatId: r.genChatId(this.model.id || this.model.get("id")),
							opponent:
								this.model.attributes === undefined ? this.model : _.clone(this.model.attributes),
						},
					});
				},
			});
			return s;
		}
	),
	define("text!screens/chat/finder.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n            <div class="backToChatList b-btn-back b-btn-back_chat"></div>\n    </div>\n    <div class="b-screen-head__title">Сообщения</div>\n    <div class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="chat chat_search">\n\n    <div class="chat-search">\n        <div class="chat-search__content">\n            <form id="findBuddyForm" class="chat-search__form" action="#">\n                <input id="nameToFind" class="chat-search__input" type="text" autocomplete="off">\n                <input value="Найти" class="chat-search__submit" type="submit">\n            </form>\n        </div>\n    </div>\n    <!-- /.chat-search -->\n\n    <div class="chat__list">\n        <div class="chatFinderContainer chat__list-content">\n\n        </div>\n    </div>\n    <!-- /.chat__list -->\n\n</div>\n<!-- /.chat chat_search -->\n\n';
	}),
	define(
		"screens/chat/finder",
		[
			"application",
			"gate",
			"widget",
			"models/appState",
			"controllers/analytic",
			"collections/stat",
			"collections/simpleCollection",
			"models/opponent",
			"widgets/chat/finderElement",
			"text!screens/chat/finder.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				el: "#screenContainer",
				events: {
					"click .backToChatList": function () {
						r.previousScreen();
					},
					"submit #findBuddyForm": "find",
				},
				initialize: function () {
					var e = this;
					i.pageview("Выберите игрока"),
						(this.collection = new o([], {
							model: u,
						})),
						this.collection.on("reset", this.renderResult, this),
						this.listenTo(t, "findUsersByName", function (t) {
							e.collection.reset(t.users);
						});
				},
				afterRender: function () {
					var e = $(".chatFinderContainer");
					s.each(function (t) {
						e.append(
							new a({
								model: t.get("opponent"),
							}).returnableRender()
						);
					});
				},
				renderResult: function () {
					var e = $(".chatFinderContainer");
					e.html(""),
						this.collection.each(function (t) {
							e.append(
								new a({
									model: t,
								}).returnableRender()
							);
						});
				},
				find: function (n) {
					n.preventDefault(),
						$(".chatFinderContainer").html(
							'<div class="b-loader"><img class="b-loader-i" alt="" src="' +
								e.params.staticUrl +
								'images/app/loader.gif"></div>'
						),
						t.findUsersByName($("#nameToFind").val());
				},
			});
			return l;
		}
	),
	define("text!widgets/chat/blockedOpponent.html!strip", [], function () {
		return '<div class="chat-item chat-item_bl">\n    <div class="chat-item__avatar">\n        <div class="b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="<%=Application.params.customAvatarUrl%><%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n            	<img class="b-user__pic-i" src="<%=avatarUrl%>" alt="">\n            </div>\n            <% } %>\n        </div>\n    </div>\n    <div class="chat-item__content">\n        <p class="chat-item__user"><%=playerName%></p>\n    </div>\n    <div class="chat-item__ctrl">\n        <div class="unblockOp chat-item__delete"></div>\n    </div>\n</div>\n<!-- /.chat-item -->';
	}),
	define(
		"widgets/chat/blockedOpponent",
		[
			"application",
			"widget",
			"models/appState",
			"controllers/chat",
			"text!widgets/chat/blockedOpponent.html!strip",
		],
		function (e, t, n, r, i) {
			var s = t.extend({
				template: _.template(i),
				tagName: "div",
				events: {
					"click .unblockOp": "unblockOp",
				},
				initialize: function (t) {
					(this.opId = t.id),
						(this.viewParam = {
							Application: e,
						});
				},
				unblockOp: function () {
					r.unblockOp(this.opId),
						n.setScreen({
							screen: "blockedOpponentsList",
						});
				},
			});
			return s;
		}
	),
	define("text!screens/chat/blockedOpponentsList.html!strip", [], function () {
		return '<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Заблокированные</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="chat">\n\n    <div class="chat__list">\n\n        <div class="blockedOpElem chat__list-content"></div>\n\n    </div>\n    <!-- /.b-chat__list -->\n\n    <div class="chat__empty" style="display: none">\n            <div class="chat__empty-text">Нет заблокированных пользователей</div>\n    </div>\n\n</div>\n';
	}),
	define(
		"screens/chat/blockedOpponentsList",
		[
			"widget",
			"controllers/chat",
			"models/appState",
			"controllers/analytic",
			"widgets/chat/blockedOpponent",
			"text!screens/chat/blockedOpponentsList.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						n.previousScreen();
					},
				},
				initialize: function () {
					r.pageview("Заблокированные");
				},
				afterRender: function () {
					var e = t.getBlokedOps();
					if (Object.getOwnPropertyNames(e).length > 0) {
						var n = $(".blockedOpElem");
						for (var r in e) {
							if (!e.hasOwnProperty(r)) continue;
							n.append(
								new i({
									model: e[r],
									id: r,
								}).returnableRender()
							);
						}
					} else $(".chat__list").hide(), $(".chat__empty").show();
				},
			});
			return o;
		}
	),
	define("text!widgets/tourneys/item.html!strip", [], function () {
		return '<div class="tourneys-list__item">\n    <div class="tourneys-list__title"><%= manage.name %></div>\n    <div class="tourney <% if (manage.costs.coins == 0)print(\'tourney_free\') %>">\n        <% var counter = 1;\n        for (var key in manage.reward) {\n            if (counter < Object.keys(manage.reward).length) {\n                print(this.reward(manage.reward[key], counter));\n            }\n            counter++;\n        } %>\n    </div>\n    <!-- /.b-tournament -->\n\n    <div class="tourneys-list__content">\n        <div id=\'showTourneyTopButton\' class="soundingButton tourneys-list__leaders">\n            <span class="tourneys-list__leaders-ctrl">Лидеры</span>\n        </div>\n        <!-- <div class="b-tournament-list__item__time">Всего участников: <%= manage.playersCount %></div> -->\n        <div class="tourneys-list__time">До окончания: <%= this.getEndTime(manage.startTime) %></div>\n        <div class="tourneys-list__cheats">Использование подсказки:\n            <%= manage.tip ? \'<span class="tourneys-list__cheats-allow">разрешено</span>\' : \'<span class="tourneys-list__cheats-prohibit">запрещено</span>\' %>\n        </div>\n        <div class="tourneys-list__price">Стоимость участия:\n            <% if (manage.costs.coins > 0) {\n                print(manage.costs.coins, \' \');\n                print(this.methods.declension(manage.costs.coins, [\'монета\', \'монеты\', \'монет\']));\n            } else {\n                print(\'БЕСПЛАТНО\');\n            }\n            %>\n        </div>\n    </div>\n\n    <%= this.getButton() %>\n\n</div>';
	}),
	define("text!widgets/tourneys/result.html!strip", [], function () {
		return '<div class="tourneys-result">\n\n    <div class="tourneys-result__fund">\n\n        <div class="tourneys-result__fund-title">Призовой фонд</div>\n\n        <div class="tourney tourney_result">\n            \n            <% var counter = 1;\n            for (var key in manage.reward) {\n                if (counter < Object.keys(manage.reward).length) {\n                    print(this.reward(manage.reward[key], counter));\n                }\n                counter++;\n            } %>\n            \n        </div>\n        <!-- /.b-tournament -->\n    </div>\n    <!-- /.b-tournament-result__fund -->\n\n    <%=this.getResultInfo()%>\n\n</div>\n<!-- /.b-tournament-result -->\n\n';
	}),
	define("text!widgets/tourneys/history.html!strip", [], function () {
		return '<div id=\'showResultButton\' class="tourneys-history__item" >\n    <div class="tourneys-history__icon">\n        <img class="tourneys-history__icon-img" src="<%=Application.params.staticUrl%>images/app/tournament.png" alt="">\n    </div>\n    <div class="tourneys-history__item-i">\n        <div class="tourneys-history__date">\n            Дата окончания <%= this.moment(manage.finishTime, \'X\').format(\'DD.MM.YYYY\') %></div>\n        <div class="tourneys-history__name"><%= manage.name %></div>\n        <div class="tourneys-history__place">\n            Ты занял \n            <span class="tourneys-history__place-group"><%= game.rank %>-е место</span>\n        </div>\n        <!-- <div class="tourneys-history__scores">Счет 1546 очков</div> -->\n        <% var currentReward = this.getCurrentReward(); %>\n        <% if (currentReward){ %>\n        <div class="tourneys-history__prize">\n            Приз\n            <% if (currentReward.coins > 0) { %>\n            <%= currentReward.coins %>\n            <span class="tourneys-history__prize-coin"></span>\n            <% } %>\n            <% if (currentReward.rating > 0 && currentReward.coins > 0) { %>\n            и&nbsp;\n            <% } %>\n            <% if (currentReward.rating > 0) { %>\n            <%= currentReward.rating %>\n            <span class="tourneys-history__prize-rate"></span>\n            <% } %>\n        </div>\n        <% } %>\n\n        <!-- <div class="tourneys-history__achieves">\n            <span class="tourneys-history__achieves-label">Открытые достижения:</span>\n            <span class="tourneys-history__achieves-list">\n                <a href="#" class="tourneys-history__achieves-item">\n                    <img src="/images/app/achieves/84/adept.png" alt="" class="tourneys-history__achieves-icon" />\n                </a>\n                <a href="#" class="tourneys-history__achieves-item">\n                    <img src="/images/app/achieves/84/shorty.png" alt="" class="tourneys-history__achieves-icon" />\n                </a>\n                <a href="#" class="tourneys-history__achieves-item">\n                    <img src="/images/app/achieves/84/lostFear.png" alt="" class="tourneys-history__achieves-icon" />\n                </a>\n            </span>\n        </div> -->\n    </div>\n</div>';
	}),
	define("text!widgets/tourneys/resultInfoPlace.html!strip", [], function () {
		return '<% var currentReward = this.getCurrentReward(); %>\n<div class="tourneys-result__data">\n    <div class="tourneys-result__data-content">\n        <div class="tourneys-result__data-icon">\n            <% if(currentReward.style && currentReward.style <= 3){ %>\n            <img class="tourneys-result__data-icon-img" alt=""\n                src="/images/app/tourneys/result-group<%= currentReward.style %>.png">\n            <% } %>\n        </div>\n        <div class="tourneys-result__data-text">\n            <div class="tourneys-result__data-title">Турнир завершен!</div>\n            <!-- <div class="tourneys-result__data-points">Ты набрал 1328 очков</div> -->\n            <div class="tourneys-result__data-place">Ты занял\n                <span class="tourneys-result__data-place-number tourneys-result__data-place-number_group<%= currentReward.style %>">\n                    <%= game.rank %>-е место</span>,\n                набрав <%= game.scores %> <%= this.methods.declension(game.scores, [\'очко\', \'очка\', \'очков\']) %>\n            </div>\n            <% if(currentReward){ %>\n            <div class="tourneys-result__data-prize">\n                Выигрыш составил\n                <% if (currentReward.coins > 0) { %>\n                <%= currentReward.coins %>\n                <span class="tourneys-result__data-prize-coin"></span>\n                <%= this.methods.declension(currentReward.coins, [\'монета\', \'монеты\', \'монет\']) %>\n                <% } %>\n                <% if (currentReward.rating > 0 && currentReward.coins > 0) { %>\n                и&nbsp;\n                <% } %>\n                <% if (currentReward.rating > 0) { %>\n                <%= currentReward.rating %>\n                <span class="tourneys-result__data-prize-rate"></span>\n                <%= this.methods.declension(currentReward.rating, [\'очко\', \'очка\', \'очков\']) %> рейтинга\n                <% } %>\n            </div>\n            <% } %>\n\n        </div>\n    </div>\n    <div id=\'shareButton\' class="b-btn b-btn_green b-btn_share"><span class="b-btn-i">Поделиться</span></div>\n</div>';
	}),
	define("text!widgets/tourneys/resultInfoWaitForEnd.html!strip", [], function () {
		return '\n<div class="tourneys-result__data">\n    <div class="tourneys-result__data-content">\n        <div class="tourneys-result__data-text">\n            <div class="tourneys-result__data-title">Турнир сыгран!</div>\n\n            <div class="tourneys-result__data-points">Ты набрал\n                <%= top.top.results[this.User.get(\'id\')].scores %>\n                <%= this.methods.declension(top.top.results[this.User.get(\'id\')].scores, [\'очко\', \'очка\', \'очков\']) %>\n            </div>\n            <div class="tourneys-result__data-place">Текущее место:\n                <span class="tourneys-result__data-place-number">\n                    <%= top.top.results[this.User.get(\'id\')].position %>\n                </span>\n            </div>\n            <div class="tourneys-result__data-info">\n                Результаты турнира будут известны после его окончания. <br>\n                Мы пришлем об этом уведомление.\n            </div>\n            <div class="tourneys-result__data-time">\n                Дата окончания:\n                <%= this.getEndTime() %>\n            </div>\n\n        </div>\n    </div>\n</div>';
	}),
	define("text!widgets/tourneys/reward.html!strip", [], function () {
		return '<div class="tourney__data">\n    <div class="tourney__group tourney__group_<%= style %>"><%= header %></div>\n    <div class="tourney__prize">\n        <% if(coins > 0){ %>\n        <div class="tourney__prize-item">\n            <div class="tourney__prize-value"><%= coins %></div>\n            <div class="tourney__prize-icon">\n                <span class="tourney__coins-icon"></span>\n            </div>\n        </div>\n        <% } %>\n\n        <% if(rating > 0){ %>\n        <div class="tourney__prize-item">\n            <div class="tourney__prize-value"><%= rating %></div>\n            <div class="tourney__prize-icon">\n                <span class="tourney__rate-icon"></span>\n            </div>\n        </div>\n        <% } %>\n        \n        <div class="tourney__prize-rule">набери больше \n            <%= scoresToBeat %>&nbsp;<%= methods.declension(scoresToBeat, [\'очко\', \'очка\', \'очков\']) %>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"widgets/tourneys/tourney",
		[
			"widget",
			"application",
			"methods",
			"moment",
			"gate",
			"controllers/analytic",
			"models/appState",
			"models/user",
			"collections/popups",
			"text!widgets/tourneys/item.html!strip",
			"text!widgets/tourneys/result.html!strip",
			"text!widgets/tourneys/history.html!strip",
			"text!widgets/tourneys/resultInfoPlace.html!strip",
			"text!widgets/tourneys/resultInfoWaitForEnd.html!strip",
			"text!widgets/tourneys/reward.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = e.extend({
				methods: n,
				moment: r,
				User: u,
				templates: {
					item: f,
					result: l,
					history: c,
				},
				tagName: "div",
				events: {
					"click #shareButton": function () {
						i.wallPost.tourneyResult(this.model);
					},
					"click #playButton": function () {
						o.setScreen({
							screen: "tourney.game",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #showResultButton": function () {
						o.setScreen({
							screen: "tourney.result",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #showTourneyTopButton": function () {
						o.setScreen({
							screen: "tourney.top",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #roundResultButton": function () {
						var e = this.model.get("tourneyId"),
							t = this.model.get("game").rounds[this.model.get("endedRounds") - 1].id;
						o.setScreen({
							screen: "tourney.roundResult",
							params: {
								tourneyId: e,
								roundId: t,
							},
						});
					},
				},
				initialize: function (e) {
					(this.paramType = e.template),
						(this.viewParam = {
							Application: t,
						}),
						(this.template = _.template(this.templates[e.template]));
				},
				getEndTime: function () {
					var e = "",
						t = 60,
						n = t * 60,
						r = n * 24,
						i = this.model.get("manage").finishTime - Date.now() / 1e3,
						s = Math.floor(i / r),
						o = Math.floor((i - s * r) / n),
						u = Math.floor((i - s * r - o * n) / t);
					return s > 0 && (e += s + "д "), o > 0 && (e += o + "ч "), u > 0 && (e += u + "м "), e;
				},
				reward: function (e, t) {
					return (
						(e.header = t == 1 ? "1-е место" : "топ " + e.startPosition),
						(e.style = t),
						(e.methods = n),
						_.template(d, e)
					);
				},
				maxFromBoth: function (e, t) {
					return e > t ? e : t;
				},
				getResultInfo: function () {
					var e;
					return (
						this.model.get("status") == "completed" ? (e = p) : (e = h),
						(this.tmp = _.template(e)),
						this.tmp(this.model.toJSON())
					);
				},
				getButton: function () {
					var e,
						t,
						n,
						r = this.model.get("manage").costs.coins;
					this.paramType == "item"
						? (n = r == 0 ? "b-btn b-btn_green" : "b-btn b-btn_blue")
						: (n = "b-btn b-btn_blue");
					switch (this.model.get("status")) {
						case "available":
							(e = "Участвовать"), (t = "playButton");
							break;
						case "joined":
							(e = "Играть " + (this.model.get("endedRounds") + 1) + "-й раунд"),
								(t = "playButton");
							break;
						case "ended":
						case "completed":
						default:
							(e = "Смотреть результаты"), (t = "showResultButton");
					}
					return '<div id="' + t + '" class="' + n + '">' + e + "</div>";
				},
				getCurrentReward: function () {
					var e = this.model.get("manage").reward,
						t = 0;
					for (var n in e) {
						t++;
						if (!("ownReward" in this.model.get("game"))) return !1;
						if (e[n].startPosition == this.model.get("game").ownReward.startPosition) {
							var r = _.extend(e[n], {
								style: t,
							});
							return r;
						}
					}
				},
			});
			return v;
		}
	),
	define("text!screens/tourneys/index.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Турниры</div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div class="l-screen__main l-screen__main_fixed l-screen__main_tourneys">\n\n    <div id=\'tourneysContainer\' class="l-screen__main-content" data-simplebar>\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n            <div id=\'historyButton\' class="b-screen-btns__item b-btn b-btn_white">История</div>\n        </div>\n    </div>\n    <!-- /.l-screen__main-foot -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define("text!screens/tourneys/index-list.html!strip", [], function () {
		return '<!-- <div class="l-screen__main-content"> -->\n					\n    <div class="tourneys-list">\n\n        <div id="overallTourneysList" class="tourneys-list__section">\n                        \n            <div class="tourneys-list__heading tourneys-list__heading_blue">Для всех уровней</div>\n\n            <div id="overallTourneysListContainer"></div>\n\n        </div>\n\n        <div id="levelTourneysList" class="tourneys-list__section">\n            \n            <div class="tourneys-list__heading tourneys-list__heading_orange">\n                Для твоего уровня \n                <div class="tourneys-list__heading-info">\n                    (доступно для <span id="interval"></span>)\n                </div>\n            </div>\n\n            <div id="levelTourneysListContainer"></div>\n\n        </div>\n\n    </div>\n\n<!-- </div> -->';
	}),
	define("text!screens/tourneys/index-empty.html!strip", [], function () {
		return '<div class="tourneys-empty">\n    <div class="tourneys-empty__text">\n        Нет текущих турниров\n    </div>\n</div>\n<!-- /.tourneys-empty -->';
	}),
	define(
		"screens/tourneys/index",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"params",
			"methods",
			"controllers/usedesk",
			"collections/currentTourneys",
			"widgets/tourneys/tourney",
			"text!screens/tourneys/index.html!strip",
			"text!screens/tourneys/index-list.html!strip",
			"text!screens/tourneys/index-empty.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = e.extend({
				template: _.template(f),
				listTemplate: _.template(l),
				emptyTemplate: _.template(c),
				el: "#screenContainer",
				events: {
					"click #historyButton": function () {
						n.setScreen("tourney.history");
					},
					"click #backButton": function () {
						n.setScreen("index");
					},
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function () {
					(this.collection = u), this.listenTo(this.collection, "change", this.render);
				},
				beforeRender: function () {
					this.tourneysFragment = this.getTourneysFragment();
				},
				afterRender: function () {
					$("#tourneysContainer").html(this.tourneysFragment);
				},
				getTourneysFragment: function () {
					var e,
						t = {
							overall: 0,
							level: 0,
						},
						n;
					if (this.collection.length > 0) {
						(e = $(this.listTemplate())),
							this.collection.each(function (r) {
								var i = new a({
										model: r,
										template: "item",
									}),
									s;
								r.getViewParams("uwins")
									? ((s = e.find("#levelTourneysListContainer")),
									  t.level++,
									  (n = r.getViewParams("uwins")))
									: (t.overall++, (s = e.find("#overallTourneysListContainer"))),
									s.append(i.returnableRender());
							}),
							t.overall == 0 && e.find("#overallTourneysList").hide();
						if (t.level == 0) e.find("#levelTourneysList").hide();
						else {
							var r = n.min ? s.levelForUwins(n.min) : 1,
								o = n.max ? s.levelForUwins(n.max) : i.MAX_LEVEL,
								u = r !== o ? r + " - " + o + " уровней" : r + " уровня";
							e.find("#interval").html(u);
						}
					} else e = this.emptyTemplate();
					return e;
				},
				showInfoPopup: function () {
					o.showInfoPopup("tourneys");
				},
			});
			return h;
		}
	),
	define("text!screens/tourneys/disabled.html!strip", [], function () {
		return '		\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Турниры</div>\n    <div class="b-screen-head__ctrl">\n        <div id=\'rulesButton\' class="b-screen-head__ctrl-btn">Правила</div>\n    </div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div class="l-screen__main l-screen__main_fixed l-screen__main_tourneys">\n\n    <div class="l-screen__main-content">\n        <div class="tourneys-empty">\n            <div class="tourneys-empty__text">\n                <%= exceptionText %>\n            </div>\n        </div>\n        <!-- /.tourneys-empty -->\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n        <div class="b-screen-btns">\n            <div id="tourneysDisabledPlayBtn" class="b-screen-btns__item b-btn b-btn_blue">Найти противника</div>\n        </div>\n    </div>\n    <!-- /.l-screen__main-foot -->\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/tourneys/disabled",
		[
			"widget",
			"gate",
			"application",
			"controllers/usedesk",
			"models/appState",
			"text!screens/tourneys/disabled.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #backButton": function () {
						i.previousScreen();
					},
					"click #rulesButton": "rulesButtonHandler",
					"click #tourneysDisabledPlayBtn": function () {
						i.setScreen({
							screen: "index",
						});
					},
				},
				initialize: function () {
					var e = this;
					(this.viewParam = {
						Application: n,
						exceptionText: "",
					}),
						t.getTourneys({
							type: 1,
						});
				},
				afterRender: function () {
					var e = this;
					this.listenTo(t, "getTourneys", function (t) {
						t.exception.reason && ((e.viewParam.exceptionText = t.exception.message), e.render());
					});
				},
				rulesButtonHandler: function () {
					r.showInfoPopup("tourneys");
				},
			});
			return o;
		}
	),
	define("text!screens/tourneys/game.html!strip", [], function () {
		return '    \n<div id="gameSplash" class="l-game-i"></div>\n\n<div class="b-game l-game">\n\n    <div class="l-game__top">\n\n        <div class="b-game__head">\n            <div class="b-game__head-i">\n                <div class="b-game__head__points">\n                    <i class="b-game__head__points__icon"></i>\n                    <div class="b-game__head__points__label">Очки</div>\n                    <div id="score" class="b-game__head__points-i"></div>\n                </div>\n                <div class="b-game__head__words">\n                    <div class="b-game__head__words__label">Слова</div>\n                    <div class="b-game__head__words-i">\n                        <span id="foundWordsCount" class="b-game__head__words__count">0</span>\n                        /\n                        <span id="fieldWordsCount" class="b-game__head__words__total"></span>\n                    </div>\n                </div>\n                <div class="b-game__head__time">\n                    <i class="b-game__head__time__icon"></i>\n                    <div class="b-game__head__time__label">Время</div>\n                    <div id="timer" class="b-game__head__time-i"></div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-game__head -->\n\n        <div class="b-game__word">\n            <div id=\'scoreFlag\' class="b-game__word__points" style="display: none">\n                <div id=\'wordScorePreText\' class="b-game__word__points__label">Супер!</div>\n                <div id="wordScore" class="b-game__word__points-i"></div>\n            </div>\n            <span id=\'word\' class="b-game__word-i"></span>\n            <span id=\'wordHint\' class="b-game__word__hint" style="display: none;">\n                <span class="b-game__word__hint__letters">\n                    <span id="wordHintLetters" class="b-game__word__hint__letters-i"></span><span id="wordHintLettersHL" class="b-game__word__hint__letters__hl"></span>\n                </span>\n            </span>\n            <% if(platform == \'desktop\') { %>\n                <div id=\'confirmWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_confirm" style="display: none;"></div>\n                <div id=\'dropWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_cancel" style="display: none;"></div>\n            <% } %>\n        </div>\n        <!-- /.b-game__word -->\n    \n    </div>\n    <!-- /.l-game__top -->\n\n    <div class="b-game__area l-game__area">\n        <div class="l-game__field">\n            <div id=\'canvasContainer\' class="b-game__canvas">\n                <canvas id="arrows" style="z-index:1; position:absolute;"></canvas>\n                <canvas id="background" style="z-index:2; position:absolute;"></canvas>\n                <canvas id="cells" style="z-index:3; position:absolute;"></canvas>\n            </div>\n            <div id="startContainer" class="b-game__start">\n                <img id="startImage" class="b-game__start-img" src="<%= Application.params.staticUrl %>images/app/game-area-start.png" alt="" />\n            </div>\n        </div>\n        <!-- /.l-game__field -->\n        <div class="l-game__ctrls">\n            <div class="b-game__btn">\n                <div id="showTipButton" class="tip b-btn-cheat b-btn-cheat_disabled" style="display: none;">\n                    <span id="freeTip" class="b-icon b-icon_free-tip"></span>Подсказка\n                    <span id="coinTip" class="b-coin"><%=Application.params.services.getATip%></span>\n                </div>\n                <div id="tipCoolDown" class="tip b-btn-cheat b-btn-cheat_timer" style="display: none">\n                    Подсказка\n                    <span id=\'tipCoolDownTimer\' class="b-timer">15</span>\n                </div>\n                <div id="tipFairPlay" class="b-btn-cheat b-btn-cheat_fair-play" style="display: none">\n                    Честная игра\n                    <span class="b-icon b-icon_fair-play b-icon_btn"></span>\n                </div>\n            </div>\n        </div>\n        <!-- /.l-game__ctrls -->\n\n    </div>\n    <!-- /.b-game__area -->\n\n</div>\n<!-- /.b-game .l-game -->';
	}),
	define(
		"screens/tourneys/game",
		[
			"widget",
			"gate",
			"application",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/achievement",
			"controllers/gameCheat",
			"collections/popups",
			"models/user",
			"models/appState",
			"models/game/abstract",
			"widgets/fields/abstract",
			"text!screens/tourneys/game.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = e.extend({
				el: "#screenContainer",
				template: _.template(h),
				events: {
					"click #showTipButton": "showTip",
				},
				initialize: function (e) {
					(this.viewParam = {
						Application: n,
					}),
						console.warn("tourney.initialize params", e),
						(this.params = e),
						(this.tourneyModel = e.tourney),
						(this.fieldIndex = 0),
						(this.reloadScheme = this.tourneyModel.get("endedRounds") == 0 ? !0 : !1),
						this.listenTo(t, "tourneyGetRound", this.onTourneyGetRound);
				},
				onTourneyGetRound: function (e) {
					var n = this;
					(this.gameData = e),
						t.storage.set(
							"lastPlayedTourneyRound",
							JSON.stringify({
								roundId: this.roundId,
								tourneyId: this.tourneyModel.get("tourneyId"),
							})
						),
						(this.gameModel = new l(this.gameData.fields[this.fieldIndex])),
						(this.roundDuration = this.gameData.duration),
						(this.fieldsCount = this.gameData.fields.length),
						t.boosterGetInfo(),
						this.listenTo(t, "boosterGetInfo", function (e) {
							this.tipCostRate = 1;
							var t = e.boosterInfo;
							for (var n = 0; n < t.length; n += 1)
								t[n].type == "tipCost" && (this.tipCostRate = t[n].params.rate);
							this.createField(),
								(this.defaultTipCost = 25),
								(this.tipCostIndex = this.gameModel.getResult().tipCount + 1),
								(this.tipFreeIndex = 1),
								this.updateTipButtonCost(),
								this.setTipButtonType();
						});
				},
				afterRender: function () {
					function e() {
						var e = $(".l-game__field"),
							t = e.width(),
							n = e.height(),
							r = t <= n ? t : n,
							i = 410,
							s = i;
						return r < i && (s = r), s;
					}
					$(".l-screen").addClass("l-screen_game"), $("#gameSplash").remove();
					var t = e();
					this.fieldSize = t;
					var n = 2,
						r = 0.08;
					$("#canvasContainer").css({
						width: t,
						height: t,
					}),
						$("#canvasContainer canvas")
							.attr({
								width: t * n,
								height: t * n,
							})
							.css({
								width: t,
								height: t,
							}),
						$(".b-game__btn").css("width", t - t * r),
						this.reloadScheme ? this.reloadTourney() : this.getTourneyRoundInfo();
				},
				reloadTourney: function () {
					this.listenTo(t, "joinTourney", function () {
						this.listenToOnce(this.tourneyModel, "change", function () {
							this.getTourneyRoundInfo();
						}),
							t.getTourneys({
								tourneysId: [this.tourneyModel.get("tourneyId")],
							});
					}),
						t.joinTourney(this.tourneyModel.get("tourneyId"), "coins");
				},
				getTourneyRoundInfo: function () {
					console.group("check the round"),
						console.warn("tourney model", this.tourneyModel),
						console.warn("endedRounds", this.tourneyModel.get("endedRounds")),
						console.warn(
							"id",
							this.tourneyModel.get("game").rounds[this.tourneyModel.get("endedRounds")].id
						),
						console.groupEnd(),
						(this.roundId =
							this.tourneyModel.get("game").rounds[this.tourneyModel.get("endedRounds")].id),
						t.tourneyGetRound(this.tourneyModel.get("tourneyId"), this.roundId);
				},
				createField: function () {
					var e = this,
						t = [],
						n = this.gameData.fields;
					n.forEach(function (e) {
						t = _.union(t, e.words);
					});
					var r = this.roundDuration / this.fieldsCount;
					(this.field = new c({
						model: this.gameModel,
						screen: this,
						roundTime: this.roundDuration,
						fieldSize: this.fieldSize,
					})),
						(this.CheatController = new o("tourney", this.roundId, this.field)),
						this.CheatController.prepareWordsByLetterNumber(),
						$("#showTipButton").show(),
						$("#fieldWordsCount").text(t.length),
						$(".b-game__head__words").fadeIn(),
						this.listenToOnce(this.field, "backgroundComplete", function () {
							this.setTipButtonType(), (this.timer = setInterval(e.updateField.bind(e), r * 1e3));
						});
				},
				updateField: function () {
					var e = this;
					++this.fieldIndex;
					if (this.fieldIndex == this.fieldsCount) return clearInterval(this.timer), !1;
					this.fieldIndex == 1 && this.CheatController.checkSortingLongWords(),
						(this.field.heldCells = []),
						(this.field.tipCells = []),
						this.field.rotateAnimation(),
						(this.gameModel.data = this.gameModel.sortData(this.gameData.fields[this.fieldIndex])),
						this.gameModel.setGameData(this.gameModel.data),
						this.field.createCellArray(),
						this.CheatController.prepareWordsByLetterNumber();
				},
				checkClientAchievements: function () {
					s.onRoundComplete(this.gameModel);
				},
				save: function () {
					this.gameModel.isUpdated = !1;
					var e = this.gameModel.getResult();
					(e.notExistsWords = []),
						t.storage.set(
							"lastPlayedTourneyRound",
							JSON.stringify({
								roundId: this.roundId,
								tourneyId: this.tourneyModel.get("tourneyId"),
								result: e,
							})
						),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				sendResult: function () {
					var e = this.roundId,
						n = this.tourneyModel.get("tourneyId");
					this.checkClientAchievements(this.gameModel),
						r.checkUsedTips(),
						this.CheatController.sendInfo(),
						t.storage.set("lastPlayedTourneyRound", ""),
						this.listenTo(t, "tourneyRoundResult", function (t) {
							t.id == e &&
								($(".l-screen").removeClass("l-screen_game"),
								f.setScreen({
									screen: "tourney.roundResult",
									params: {
										tourneyId: n,
										roundId: e,
									},
								}));
						}),
						t.tourneyRoundResult(e, n, this.gameModel.getResult(), []);
				},
				showTip: function () {
					console.log("showTip");
					if (!this.field.isBackgroundComplete || !this.tourneyModel.get("manage").tip) return !1;
					var e = a.get("freeTips"),
						t = this.getCurrentTipCost();
					e > 0
						? (this.field.showTip(),
						  this.useTip(this.tipFreeIndex, "freeTips"),
						  ++this.tipFreeIndex,
						  (e -= 1),
						  a.set({
								freeTips: e,
						  }),
						  this.setTipButtonType())
						: a.get("balance") >= t
						? (this.field.showTip(),
						  this.updateBalance(t),
						  this.useTip(this.tipCostIndex, "coins"),
						  ++this.tipCostIndex,
						  this.updateTipButtonCost())
						: purchase &&
						  u.add({
								type: "buyCoins",
						  }),
						i.sendDesignEvent("Screen_actions:tourney:hint");
				},
				useTip: function (e, t) {
					r.useTip({
						place: "tourney",
						id: this.roundId,
						indexes: [e],
						usageType: t,
					}),
						i.sendResourceEvent("coins", -this.getCurrentTipCost(), "hint", "Consumed"),
						i.sendDesignEvent("spend_virtual_currency:Reason:tip_tourney");
				},
				getCurrentTipCost: function () {
					return Math.floor(this.defaultTipCost * this.tipCostRate) * this.tipCostIndex;
				},
				updateBalance: function (e) {
					var t = a.get("balance");
					(t -= e),
						a.set({
							balance: t,
						});
				},
				updateTipButtonCost: function () {
					$("#showTipButton .b-coin").text(this.getCurrentTipCost());
				},
				setTipButtonType: function () {
					var e = a.get("freeTips");
					e > 0
						? ($("#freeTip").show().text(e), $("#coinTip").hide())
						: ($("#freeTip").hide(), $("#coinTip").show()),
						((a.get("balance") < this.getCurrentTipCost() && !purchase) ||
							!this.tourneyModel.get("manage").tip) &&
							$("#showTipButton").addClass("b-btn-cheat_disabled");
				},
				checkScreenCondition: function (e) {
					var t = e.tourney;
					if (
						t.get("status") == "available" &&
						a.get("balance") < e.tourney.get("manage").costs.coins
					) {
						if (purchase)
							f.setScreen({
								screen: "tourney.balance",
								params: {
									tourney: e.tourney,
								},
							});
						else {
							var r = e.tourney.get("manage").costs.coins - a.get("balance");
							u.add({
								type: "text",
								params: {
									header: "",
									text:
										"Для участия в турнире необходиме ещё " +
										r +
										" " +
										n.methods.declension(r, ["монета", "монеты", "монет"]),
									list: null,
									cursiv: null,
								},
							});
						}
						return !1;
					}
					return !0;
				},
				renderPopup: function (e) {
					$("#popup").html(""),
						$("#cover").hide(),
						(e.type == "buyCoins" || e.type == "confirmationPurchase") &&
							e &&
							($("#cover").show(), e.render());
				},
				showProVersionPopup: function (e) {
					u.add({
						type: "proVersion",
						params: {
							reason: "unratedCountGames",
							type: e,
						},
					});
				},
			});
			return p;
		}
	),
	define("text!screens/tourneys/roundResult.html!strip", [], function () {
		return '<!--\n<div class="b-result b-result_tournament">\n    <div class="b-result__head">\n\n        <div class="b-result__head-i">\n            <div class="b-result__head__points">Вы набрали <span\n                        class="b-result__head__points-i"><%= this.currentRoundResult.scores %></span> очков,\n            </div>\n            <div class="b-result__head__words">угадав <span\n                        class="b-result__head__words-i"><%= this.currentRoundResult.usedWords.length %></span>\n                <%= this.methods.declension(this.currentRoundResult.usedWords.length, [\'слово\', \'слова\', \'слов\']) %>.\n            </div>\n        </div>\n\n    </div>\n     /.b-result__head -->\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n    </div>\n    <div class="b-screen-head__title"></div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div class="l-screen__main l-screen__main_tourneys l-screen__main_tourney-result">\n\n    <div class="l-screen__main-content">\n        \n        <div class="b-result b-result_tourneys">\n\n\n            <div class="l-result">\n                <div class="b-result__round">\n\n                    <%\n                    for (var i = 1; i <= game.rounds.length; i++) { %>\n                    <div data-round=\'<%= i %>\' class="changeRoundButton b-result__round__item <%\n                        if (i - 1 == this.currentRound)\n                            print(\'b-result__round__item_current\');\n                        else if (i > endedRounds)\n                            print(\'b-result__round__item_disabled\'); %>">\n                        <div class="b-result__round__item-i">\n                            <img class="b-result__round__item__icon" src="<%= Application.params.staticUrl %>images/app/result/round-<%= i %>.png" alt="" />\n                        </div>\n                        <p class="b-result__round__item__label">раунд</p>\n                    </div>\n                    <!-- /.b-result__round__item -->\n                    <% } %>\n                </div>\n                <!-- /.b-result__round -->\n\n                <div class="l-result-i">\n\n                    <div class="b-result__tourney">\n                        <div class="b-result__tourney__points">Ты набрал <span class="b-result__tourney__points-i"><%= this.currentRoundResult.scores %></span> <%= this.methods.declension(this.currentRoundResult.scores, [\'очко\', \'очка\', \'очков\']) %>,</div> \n                        <div class="b-result__tourney__words">угадав <span class="b-result__tourney__words-i"><%= this.currentRoundResult.usedWords.length %></span> <%= this.methods.declension(this.currentRoundResult.usedWords.length, [\'слово\', \'слова\', \'слов\']) %>.</div>\n                    </div>\n\n                    <div class="b-result__words">\n                        <div class="b-result__words__tabs">\n                            <div class="b-result__words__tabs-i">\n                                <div class="b-result__words__tabs__item b-result__words__tabs__item_act">\n                                    <div class="b-result__words__tabs__item-i">Найденные слова</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="b-result__words__list">\n                            <div class="b-result__words__list-i">\n                                <%\n                                var sorted = _.sortBy(this.currentRoundResult.usedWords,\n                                        function (elem) {\n                                            return -elem.usedWordScore;\n                                        });\n\n                                for (var i = 0; i < sorted.length; i++) { %>\n                                <div class="b-result__words__list__item">\n                                    <div class="b-result__words__list__item__points b-result__words__list__item__points_you">\n                                        <%= sorted[i].usedWordScore %>\n                                    </div>\n                                    <div class="b-result__words__list__item__points b-result__words__list__item__points_rival">—</div>\n                                    <div class="b-result__words__list__item-i">\n                                        <span class="b-result__words__list__item__data">\n                                            <%= sorted[i].usedWord %>\n                                        </span>\n                                    </div>\n                                </div>\n                                <% } %>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /.b-result__words -->\n\n                    <!-- \n                    <div class="b-result__btn b-result__btn_game">\n                        <%= this.getButton() %>\n                    </div>\n\n                    <div class="b-result__ctrl b-result__ctrl_alt">\n                        <div class="b-result__ctrl__text">или</div>\n                        <span id=\'chooseAnotherTourneyButton\' class="soundingButton b-result__ctrl-i">выбрать другой турнир</span>\n                    </div>\n                     -->\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n\n        <%= this.getButton() %>\n                    \n        <div class="b-screen-btm-ctrl">\n            <div class="b-screen-btm-ctrl__text">или</div>\n            <span id=\'chooseAnotherTourneyButton\' class="soundingButton b-screen-btm-ctrl__link">выбрать другой турнир</span>\n        </div>\n\n    </div>\n    <!-- /.l-screen__main-foot -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/tourneys/roundResult",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"methods",
			"collections/currentTourneys",
			"collections/popups",
			"models/user",
			"text!screens/tourneys/roundResult.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				template: _.template(a),
				el: "#screenContainer",
				methods: i,
				events: {
					"click .changeRoundButton": function (e) {
						console.group("click .changeRoundButton"),
							console.warn(
								'$(event.currentTarget).data("round")',
								$(e.currentTarget).data("round")
							),
							console.warn("this.currentRound", this.currentRound),
							console.warn(' this.model.get("endedRounds")', this.model.get("endedRounds")),
							console.groupEnd();
						var t = $(e.currentTarget).data("round");
						t !== this.currentRound + 1 &&
							t <= this.model.get("endedRounds") &&
							(this.getCurrentRoundResult($(e.currentTarget).data("round")), this.render());
					},
					"click #playNextRoundButton": function (e) {
						n.setScreen({
							screen: "tourney.game",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #showResultButton": function () {
						n.setScreen({
							screen: "tourney.result",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #chooseAnotherTourneyButton": function () {
						n.setScreen("tourney.index");
					},
				},
				initialize: function (e) {
					(this.viewParam = {
						Application: t,
					}),
						(this.collection = s),
						(this.model = s.getByTourneyId(e.tourneyId)),
						console.warn("roundResult model", this.model),
						this.getCurrentRoundResult(),
						this.listenTo(this.model, "change", this.render);
				},
				getCurrentRoundResult: function (e) {
					var t = _.isUndefined(e) ? this.model.get("endedRounds") - 1 : e - 1;
					console.group("getCurrentRoundResult"),
						console.warn("round", t),
						console.warn('this.model.get("game")', this.model.get("game")),
						console.warn('this.model.get("game").rounds[round]', this.model.get("game").rounds[t]),
						console.warn(
							'this.model.get("game").rounds[round].results',
							this.model.get("game").rounds[t].results
						),
						console.warn('User.get("id")', u.get("id")),
						console.groupEnd(),
						t >= 0 &&
							((this.currentRound = t),
							(this.currentRoundResult = this.model.get("game").rounds[t].results[u.get("id")]));
				},
				getButton: function () {
					var e, t;
					return (
						console.warn(
							"getButton",
							this.model.get("status"),
							$.inArray(this.model.get("status"), ["available", "joined"])
						),
						$.inArray(this.model.get("status"), ["available", "joined"]) > 0
							? ((e = "Играть " + (this.model.get("endedRounds") + 1) + "-й раунд"),
							  (t = "playNextRoundButton"))
							: ((e = "Смотреть результаты"), (t = "showResultButton")),
						'<div id="' + t + '" class="b-btn b-btn_blue">' + e + "</div>"
					);
				},
			});
			return f;
		}
	),
	define("text!screens/tourneys/result.html!strip", [], function () {
		return '<!-- \n<div id=\'chooseAnotherTourneyButton\' class="b-btn-start-screen">Турниры</div>\n\n<div class="b-page-title"><%= manage.name %></div>\n\n<div id="tourneyContainer"></div>\n<div class="b-tournament-ctrl">\n    <div id=\'historyButton\' class="soundingButton b-tournament-ctrl__item">История</div>\n    <div id=\'topButton\' class="soundingButton b-tournament-ctrl__item">Лидеры</div>\n</div>\n-->\n			\n			\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title"><%= manage.name %></div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div class="l-screen__main l-screen__main_tourneys l-screen__main_tourney-result">\n\n    <div id="tourneyContainer" class="l-screen__main-content">\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n    <div class="l-screen__main-foot">\n\n        <div class="b-screen-btns b-screen-btns_tourneys-result">\n            <div id=\'historyButton\' class="b-screen-btns__item b-btn b-btn_violet">История</div>\n            <div id=\'topButton\' class="b-screen-btns__item b-btn b-btn_violet">Лидеры</div>\n        </div>\n                    \n        <div class="b-screen-btm-ctrl">\n            <div class="b-screen-btm-ctrl__text">или</div>\n            <span id=\'chooseAnotherTourneyButton\' class="b-screen-btm-ctrl__link">выбрать другой турнир</span>\n        </div>\n\n    </div>\n    <!-- /.l-screen__main-foot -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/tourneys/result",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"collections/currentTourneys",
			"widgets/tourneys/tourney",
			"text!screens/tourneys/result.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #chooseAnotherTourneyButton": function () {
						n.setScreen("tourney.index");
					},
					"click #historyButton": function () {
						n.setScreen("tourney.history");
					},
					"click #topButton": function () {
						n.setScreen({
							screen: "tourney.top",
							params: {
								tourney: this.model,
							},
						});
					},
					"click #backButton": function () {
						n.previousScreen();
					},
				},
				initialize: function (e) {
					(this.model = e.tourney),
						(this.tourney = new s({
							model: this.model,
							template: "result",
						}));
				},
				afterRender: function () {
					var e = this.tourney.returnableRender();
					$("#tourneyContainer").html(e);
				},
			});
			return u;
		}
	),
	define("text!screens/tourneys/history.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id=\'backButton\' class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">История</div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div class="l-screen__main l-screen__main_tourneys">\n\n    <div class="l-screen__main-content">\n\n        <div id=\'historyContainer\' class="tourneys-history">\n            <div class="tourneys-history__intro">История отображается за последние 14 дней</div>\n            \n            <div id=\'historyListContainer\' class="tourneys-history__list">\n\n                <div id="loader" class="b-loader">\n                    <img src="<%=Application.params.staticUrl%>images/app/loader.gif" alt="" class="b-loader-i" />\n                </div>\n                <!-- /.b-loader -->\n                \n            </div>\n            \n        </div>\n        <!-- /.tourneys-history -->\n\n        <div id=\'emptyHistoryContainer\' class="tourneys-empty" style="display: none;">\n            <div class="tourneys-empty__text">\n                Ты не участвовал в турнирах последние 14 дней\n            </div>\n        </div>\n        <!-- /.tourneys-empty -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n';
	}),
	define(
		"screens/tourneys/history",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"params",
			"collections/tourneys",
			"widgets/tourneys/tourney",
			"text!screens/tourneys/history.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						n.previousScreen();
					},
				},
				initialize: function () {
					var e = this;
					(this.viewParam = {
						Application: t,
					}),
						(this.collection = new s()),
						(this.collection.comparator = function (e) {
							return -e.get("manage").finishTime;
						}),
						this.collection.on("setByTourneyId", function () {
							(e.fragment = e.prepareTourneysFragment()),
								e.render(),
								$("#loader").hide(),
								e.collection.length <= 0 &&
									($("#historyContainer").hide(), $("#emptyHistoryContainer").show());
						}),
						this.listenTo(r, "getTourneys", function (e) {
							this.collection.setByTourneyId(_.values(e.tourneys));
						}),
						r.getTourneys({
							type: i.tourneysTypes.history,
						});
				},
				beforeRender: function () {
					this.fragment = this.prepareTourneysFragment();
				},
				prepareTourneysFragment: function () {
					var e = document.createDocumentFragment();
					return (
						this.collection.each(function (t) {
							var n = new o({
								model: t,
								template: "history",
							});
							e.appendChild($(n.returnableRender())[0]);
						}),
						e
					);
				},
				afterRender: function () {
					console.log("history render"), $("#historyListContainer")[0].appendChild(this.fragment);
				},
			});
			return a;
		}
	),
	define("text!widgets/tourneys/top.html!strip", [], function () {
		return '<div class="l-screen__main-content">\n\n    <div class="user-list user-list_tourneys">\n        <div class="user-list__head"><%= this.tourney.get(\'manage\').name %></div>\n        <div id=\'topListContainer\'></div>\n    </div>\n    <!-- user-list [tourneys] -->\n\n</div>\n<!-- /.l-screen__main-content -->\n\n<% if(this.tourney.get(\'endedRounds\') >= 3){ %>\n<div class="l-screen__main-foot">\n\n    <div class="user-list user-list_fixed">\n        <div class="user-list__item">\n            <div class="user-list__avatar">\n                <div class="b-user">\n                    <div class="b-user__pic">\n                        <img class="b-user__pic-i" src="<%= this.User.get(\'avatarUrl\') %>" alt="" />\n                    </div>\n                    <img src="<%= Application.params.laurelsUrl%>avatar-<%= this.User.get(\'level\').value %>.png" class="b-user__rank">\n                </div>\n            </div>\n            <div class="user-list__data">\n                <div class="user-list__data-name">Ты</div>\n                <div class="user-list__data-points"><%= this.tourney.get(\'game\').scores %> <%= this.methods.declension(this.tourney.get(\'game\').scores, [\'очко\', \'очка\', \'очков\']) %></div>\n                <p class="user-list__data-place"><%= this.tourney.get(\'game\').rank %> место</p>\n            </div>\n            <div class="user-list__ctrls">\n            </div>\n        </div>\n        <!-- /.user-list__item -->\n    </div>\n    <!-- user-list [fixed] -->\n\n</div>\n<!-- /.l-screen__main-foot -->\n<% } %>';
	}),
	define(
		"widgets/tourneys/top",
		[
			"widget",
			"application",
			"methods",
			"models/appState",
			"models/user",
			"models/opponent",
			"widgets/opponent/index",
			"text!widgets/tourneys/top.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				el: "#topContainer",
				events: {},
				User: i,
				methods: n,
				template: _.template(u),
				initialize: function (e) {
					console.warn("params", e),
						(this.viewParam = {
							Application: t,
						}),
						(this.list = e.top),
						(this.tourney = e.tourney);
				},
				beforeRender: function () {
					console.log("beforeRender"), (this.fragment = this.prepareTopFragment());
				},
				prepareTopFragment: function () {
					var e = $("<div></div>");
					for (var t in this.list) {
						var n = this.list[t],
							r = new o({
								model: new s(n),
								template: "opponentWithTourneyPosition",
							});
						e.append(r.returnableRender());
					}
					return e;
				},
				afterRender: function () {
					console.warn("afterRender", this.fragment), $("#topListContainer").html(this.fragment);
				},
			});
			return a;
		}
	),
	define("text!screens/tourneys/top.html!strip", [], function () {
		return '<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Лидеры</div>\n</div>\n<!-- /.b-screen-head -->\n    \n<div id=\'topContainer\' class="l-screen__main l-screen__main_tourneys l-screen__main_tourney-leaders">\n    <div class="l-screen__main-content">\n        <div class="tourneys-empty">\n            <div class="tourneys-empty__text">\n                Нет завершивших турнир игроков\n            </div>\n        </div>\n        <!-- /.tourneys-empty -->\n    </div>\n</div>\n<!-- /.l-screen__main -->\n\n    ';
	}),
	define(
		"screens/tourneys/top",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"collections/currentTourneys",
			"widgets/tourneys/top",
			"text!screens/tourneys/top.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						n.previousScreen();
					},
				},
				initialize: function (e) {
					this.model = e.tourney;
				},
				prepareTop: function () {
					var e = this.model.get("top").top,
						t = {};
					for (var n in e.results) t[e.results[n].position] = _.extend(e.players[n], e.results[n]);
					if (Object.keys(t).length > 0) {
						var r = new s({
							top: t,
							tourney: this.model,
						});
						r.render();
					}
				},
				afterRender: function () {
					this.prepareTop();
				},
			});
			return u;
		}
	),
	define("text!screens/tourneys/balance.html!strip", [], function () {
		return '<%\nvar balanceCount = UserModel.get(\'balance\');\n%>\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Способы оплаты</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_tourney-balance">\n\n    <div class="l-screen__main-content">\n\n        <div class="balance balance_page balance_tourney">\n    \n            <div class="balance__head">\n                <div class="balance__head-data">\n                    <div class="balance__head-label balance__head-label_title">Баланс</div>\n                    <div class="balance__head-count" style="font-size: <%= balanceCount > 9999? \'18px\' : \'22px\' %>"><%= balanceCount %></div>\n                    <div class="balance__head-label balance__head-label_units">монет</div>\n                </div>\n            </div>\n\n            <div class="balance__info">\n                Необходимо еще \n                <span class="balance__info-count"><%= this.notEnough %></span>\n                <%= Application.methods.declension(this.notEnough, [\'монета\', \'монеты\', \'монет\']) %> \n                для&nbsp;участия в турнире - «<%= this.tourneyModel.get(\'manage\').name %>».\n            </div>\n            \n            <div class="balance__content">\n                <div class="balance__title"> \n                    <div class="balance__title-text">Докупить</div>\n                </div>\n            \n                <div class="products-list products-list_single" id=\'productContainer\'></div>\n                <!-- /.products-list -->\n\n                <div class="balance__alt">\n                    <span class="balance__alt-text">или</span>\n                    <span class="soundingButton balance__alt-ctrl" id="chooseAnotherPaymentButton">выбрать другой способ</span>\n                </div>\n            </div>\n\n            <div class="balance__free-coins">\n            <% if (Application.params.availableSocialRV) { %>\n                <div class="balance__free-coins-btn b-btn b-btn_violet soundingButton" id="freeCoinsBtn"> \n                    <div class="icon icon_free-coins"></div>\n                    Монеты бесплатно\n                </div>\n            <% } %>\n            </div>\n            \n        </div>\n        <!-- /.balance -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define("text!screens/tourneys/balance_full.html!strip", [], function () {
		return '<%\nvar balanceCount = UserModel.get(\'balance\');\n%>\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Другие способы</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_tourney-balance">\n\n    <div class="l-screen__main-content">\n        <div class="balance balance_page balance_tourney">\n            <div class="balance__head" id="balanceContainer">\n                <div class="balance__head-data">\n                    <div class="balance__head-label balance__head-label_title">Баланс</div>\n                    <div class="balance__head-count" id="balanceCount" style="font-size: <%= balanceCount > 9999? \'18px\' : \'22px\' %>"><%= balanceCount %></div>\n                    <div class="balance__head-label balance__head-label_units">монет</div>\n                </div>\n            </div>\n\n            <div class="balance__content">\n                <div class="balance__title"> \n                    <div class="balance__title-text">Купить пакет</div>\n                    <div class="balance__bonus" id="balanceBonus" style="display: none;"> \n                        <div class="balance__bonus-title">+100% за первую покупку!</div>\n                    </div>\n                </div>\n            \n                <div class="products-list" id=\'allProductsContainer\'></div>\n                <!-- /.products__list -->\n            </div>\n\n            <div class="balance__free-coins">\n            <% if (Application.params.availableSocialRV) { %>\n                <div class="balance__free-coins-btn b-btn b-btn_violet soundingButton" id="freeCoinsBtn"> \n                    <div class="icon icon_free-coins"></div>\n                    Монеты бесплатно\n                </div>\n            <% } %>\n            </div>\n            \n        </div>\n        <!-- /.balance -->\n\n    </div>\n    <!-- /.l-screen__main-content -->\n\n</div>\n<!-- /.l-screen__main -->';
	}),
	define(
		"screens/tourneys/balance",
		[
			"widget",
			"application",
			"models/appState",
			"gate",
			"params",
			"methods",
			"models/product",
			"models/user",
			"widgets/balance/product",
			"text!screens/tourneys/balance.html!strip",
			"text!screens/tourneys/balance_full.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = e.extend({
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						n.setScreen("tourney.index");
					},
					"click #chooseAnotherPaymentButton": function () {
						n.setScreen({
							screen: "tourney.balance",
							params: {
								template: "full",
							},
						});
					},
					"click #freeCoinsBtn": function () {
						GameAnalytics.sendDesignEvent("Screen_actions:Balance:free_coins"),
							n.setScreen({
								screen: "freeCoins",
							});
					},
				},
				initialize: function (e) {
					var n = this;
					(this.params = e),
						this.listenTo(o, "productsUpdated", function () {
							n.render();
						}),
						e.tourney &&
							((this.tourneyModel = e.tourney),
							(this.notEnough = this.tourneyModel.get("manage").costs.coins - u.get("balance"))),
						(this.template = e.template == "full" ? _.template(l) : _.template(f)),
						(this.viewParam = {
							Application: t,
							UserModel: u,
						});
				},
				afterRender: function () {
					this.params.template == "full" ? this.getAllProducts() : this.getProduct();
				},
				getProduct: function () {
					var e = o.get("products");
					e = _.sortBy(e, function (e) {
						return e.number;
					});
					for (var t = 0; t < e.length; t++) {
						var n = e[t];
						if (e[t].number > this.notEnough) break;
					}
					var r = new a({
						model: n,
					});
					$("#productContainer").html(r.returnableRender());
				},
				getAllProducts: function () {
					var e = o.get("products");
					$("#allProductsContainer").html("");
					if (!_.isEmpty(e))
						for (var t = 0; t < e.length; t++) {
							var n = new a({
								model: e[t],
							});
							$("#allProductsContainer").append(n.returnableRender());
						}
					_.find(e, function (e) {
						return e.numberFirstPurchase > 0;
					}) && $("#balanceBonus").show();
				},
			});
			return c;
		}
	),
	define("models/season/reward", ["backbone"], function (e) {
		var t = e.Model.extend({
			set: function (t, n) {
				if (!$.isEmptyObject(t)) {
					var r = {
							coins: t.coins != undefined ? t.coins : 0,
						},
						i = 0,
						s = 0;
					t.position != undefined &&
						(t.position.from != undefined && (i = t.position.from),
						t.position.to != undefined && (s = t.position.to)),
						(r.positionFrom = i),
						(r.positionTo = s),
						e.Model.prototype.set.apply(this, [r, n]);
				}
			},
		});
		return t;
	}),
	define(
		"collections/seasonRewards",
		["backbone", "gate", "models/season/reward"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: n,
				comparator: function (e) {
					return e.get("positionFrom");
				},
			});
			return r;
		}
	),
	define(
		"collections/topPlayers",
		["backbone", "models/opponent", "models/user"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: t,
				lastPosition: 0,
				selfPlayer: null,
				comparator: function (e) {
					return e.get("position");
				},
				init: function (e, t) {
					var r = this,
						i = t == undefined ? 0 : t;
					$.each(e, function (e, t) {
						var s = t.position != undefined ? parseInt(t.position) : 0,
							o = t.user;
						(o.rating = t.rating != undefined ? t.rating : 1e3),
							(o.position = s),
							o.id == n.get("id")
								? ((r.selfPlayer = o),
								  s == i + 1 && (r.add(o), s > r.lastPosition && (r.lastPosition = o.position)))
								: (r.add(o), s > r.lastPosition && (r.lastPosition = o.position)),
							(i = s);
					});
				},
			});
			return r;
		}
	),
	define(
		"models/season/main",
		["backbone", "collections/seasonRewards", "collections/topPlayers"],
		function (e, t, n) {
			var r = e.Model.extend({
				STATE_COMING: 0,
				STATE_ACTIVE: 1,
				STATE_ENDED: 2,
				SHORT_USERS_LIST_COUNT: 3,
				DEFAULT_IMG: "https://cdn.wordbyword.me/content/season/default.png",
				idAttribute: "alias",
				topFriendsUpdated: !1,
				set: function (e, t) {
					this.updateModel(e, t);
				},
				updateModel: function (r, i) {
					if (!$.isEmptyObject(r)) {
						var s = {
								alias: r.alias != undefined ? r.alias : "",
								name: r.name != undefined ? r.name : "",
								state: r.state != undefined ? r.state : this.STATE_ENDED,
								timeStart: r.time_start != undefined ? r.time_start : 0,
								timeEnd: r.time_end != undefined ? r.time_end : 0,
								img: r.img != undefined ? r.img : "",
								desc: r.desc != undefined ? r.desc : "",
								playersCount: r.players_count != undefined ? r.players_count : 0,
							},
							o = new t();
						r.rewards != undefined && o.reset(r.rewards), (s.rewards = o);
						var u = this.get("topUsers") == undefined ? new n() : this.get("topUsers"),
							a = new n();
						r.top != undefined &&
							(a.init(r.top, u.lastPosition),
							a.lastPosition > u.lastPosition &&
								(u.add(_.clone(a.models)),
								(u.lastPosition = a.lastPosition),
								(u.selfPlayer = a.selfPlayer))),
							(s.topUsers = u),
							(s.addTopUsers = a);
						var f = new n(),
							l = u.length < this.SHORT_USERS_LIST_COUNT ? u.length : this.SHORT_USERS_LIST_COUNT;
						for (var c = 0; c < l; c++) f.add(u.at(c));
						s.topUsersShort = f;
						var h = this.topUsers == undefined ? new n() : this.topFriends;
						r.topFriends != undefined &&
							r.topFriends != null &&
							(h.reset([]), h.init(r.topFriends), (this.topFriendsUpdated = !0)),
							(s.topFriends = h),
							e.Model.prototype.set.apply(this, [s, i]);
					}
				},
				getImg: function () {
					return this.get("img") != null && this.get("img") != ""
						? this.get("img")
						: this.DEFAULT_IMG;
				},
				isActive: function () {
					return this.get("state") == this.STATE_ACTIVE;
				},
				getTimeEndFormatted: function () {
					var e = new Date(this.get("timeEnd") * 1e3),
						t = e.getDate();
					t <= 0 && (t = 1), t < 10 && (t = "0" + t);
					var n = e.getMonth() + 1;
					n < 10 && (n = "0" + n);
					var r = e.getFullYear() % 100;
					return t + "." + n + "." + r;
				},
				getTimeEndDiff: function () {
					var e = require("application");
					return this.get("timeEnd") - e.methods.getCurrentTimestamp();
				},
				getEstimatedDays: function () {
					var e = Math.floor(this.getTimeEndDiff() / 60 / 60 / 24);
					return e < 0 && (e = -e), e;
				},
				getEstimatedHours: function () {
					var e = Math.floor(
						(this.getTimeEndDiff() - this.getEstimatedDays() * 24 * 60 * 60) / 60 / 60
					);
					return e < 0 && (e = -e), e;
				},
				getEstimatedMins: function () {
					var e = Math.floor(
						(this.getTimeEndDiff() -
							this.getEstimatedDays() * 24 * 60 * 60 -
							this.getEstimatedHours() * 60 * 60) /
							60
					);
					return e < 0 && (e = -e), e;
				},
			});
			return r;
		}
	),
	define(
		"collections/seasonHistory",
		["backbone", "gate", "models/season/main"],
		function (e, t, n) {
			var r = e.Collection.extend({
				model: n,
				comparator: function (e) {
					return -e.get("timeEnd");
				},
				getLastSeason: function () {
					var e = null;
					return this.length > 0 && (e = this.at(0)), e;
				},
				getSeasonByAlias: function (e) {
					var t = null;
					for (var n = 0, r = this.length; n < r; n++)
						if (this.at(n).get("alias") == e) {
							t = this.at(n);
							break;
						}
					return t;
				},
			});
			return r;
		}
	),
	define(
		"controllers/seasons",
		["gate", "status", "models/season/main", "collections/seasonHistory"],
		function (e, t, n, r) {
			function i() {
				this.reset();
			}
			return (
				(i.prototype.EVENT_CURRENT_TOP_USERS = "currentTopUsers"),
				(i.prototype.EVENT_CURRENT_TOP_FRIENDS = "currentTopFriends"),
				(i.prototype.EVENT_HISTORY_TOP_USERS = "historyTopUsers"),
				(i.prototype.EVENT_HISTORY_ALL = "historyAll"),
				(i.prototype.init = function () {
					this.reset(), this.setListeners(), this.getSeason(), this.getSeasonHistory();
				}),
				(i.prototype.reset = function () {
					(this.currentSeason = null),
						(this.history = null),
						this.stopListening(e, "seasonGet"),
						this.stopListening(e, "seasonHistory");
				}),
				(i.prototype.setListeners = function () {
					var t = this;
					t.listenTo(e, "seasonGet", function (e) {
						if (e.state == "success") {
							var r = new n(e.season);
							if (r.isActive())
								t.currentSeason == null
									? (t.currentSeason = r)
									: t.currentSeason.updateModel(e.season),
									r.topFriendsUpdated
										? t.trigger(t.EVENT_CURRENT_TOP_FRIENDS, r)
										: t.trigger(t.EVENT_CURRENT_TOP_USERS, r);
							else {
								var i = t.history.getSeasonByAlias(r.get("alias"));
								i != undefined && i != null
									? t.history.getSeasonByAlias(r.get("alias")).updateModel(e.season)
									: t.history.add(r),
									t.trigger(t.EVENT_HISTORY_TOP_USERS, r);
							}
						}
					}),
						this.listenTo(e, "seasonHistory", function (e) {
							if (e.state == "success") {
								t.history = new r();
								for (var i = 0, s = e.history.length; i < s; i++)
									t.history.add(new n(e.history[i]));
								t.trigger(t.EVENT_HISTORY_ALL);
							}
						});
				}),
				(i.prototype.getSeason = function (t, n, r) {
					e.seasonGet(t, n, r);
				}),
				(i.prototype.getSeasonHistory = function () {
					e.seasonHistory();
				}),
				_.extend(i.prototype, Backbone.Events),
				new i()
			);
		}
	),
	define("text!widgets/seasons/currentCommonSeasonCurrent.html!strip", [], function () {
		return '<div class="b-season__icon"><img src="<% if (typeof(season) != \'undefined\') { %><%=season.getImg()%><% } %>" alt="" class="b-season__icon-i" /></div>\n<div class="b-season-i">\n    <div class="b-season__name"><% if (typeof(season) != \'undefined\') { %><%=season.get(\'name\')%><% } %></div>\n    <% if (typeof(season) != \'undefined\' && season.get(\'rewards\').length) { var rewards = season.get(\'rewards\'); %>\n    <div class="b-season__prize">\n        <div class="b-season__prize__label">награда за призовые места:</div>\n        <% for (i = 0, k = rewards.length; i < k; i++) { %>\n        <div class="b-season__prize__item">\n            <div class="b-season__prize__item__label">ТОП-<%=rewards.at(i).get(\'positionTo\')%>:</div>\n            <div class="b-season__prize__item__count"><%=rewards.at(i).get(\'coins\')%><span class="b-season__prize__item__count-i"></span></div>\n        </div>\n        <% } %>\n    </div>\n    <% } %>\n    <div class="b-season__time">\n        <% if (typeof(season) != \'undefined\') { %>\n        <div class="b-season__time__label">до конца сезона:</div>\n        <div class="b-season__time-i">\n            <% if (season.getEstimatedDays() > 0) { %><%=season.getEstimatedDays()%>д <% } %>\n            <% if (season.getEstimatedHours() > 0) { %><%=season.getEstimatedHours()%>ч <% } %>\n            <% if (season.getEstimatedMins() > 0) { %><%=season.getEstimatedMins()%>м <% } %>\n        </div>\n        <% } %>\n    </div>\n</div>';
	}),
	define(
		"widgets/seasons/currentCommonSeasonCurrent",
		[
			"widget",
			"application",
			"controllers/seasons",
			"text!widgets/seasons/currentCommonSeasonCurrent.html!strip",
		],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				el: "#seasonCurrentCommonSeasonCurrent",
				events: {},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				afterRender: function () {
					var e = this;
					n.currentSeason != null
						? e.show(n.currentSeason)
						: e.listenTo(n, n.EVENT_CURRENT_TOP_USERS, function (t) {
								e.show(n.currentSeason);
						  });
				},
				show: function (e) {
					(this.viewParam = {
						season: e,
					}),
						this.selfRender();
				},
			});
			return i;
		}
	),
	define("text!widgets/seasons/currentCommonSeasonLastEndedItem.html!strip", [], function () {
		return '<div class="b-season__last__list__item">\n    <div class="b-season__last__list__item__user"><%=position%>. <%=playerName%></div>\n    <div class="b-season__last__list__item__points"><%=new Intl.NumberFormat(\'ru-RU\').format(rating)%></div>\n</div>';
	}),
	define(
		"widgets/seasons/currentCommonSeasonLastEndedItem",
		["widget", "text!widgets/seasons/currentCommonSeasonLastEndedItem.html!strip"],
		function (e, t) {
			var n = e.extend({
				template: _.template(t),
				events: {},
				afterRender: function () {},
			});
			return n;
		}
	),
	define("text!widgets/seasons/currentCommonSeasonLastEnded.html!strip", [], function () {
		return '<div class="b-season__last-i">\n    <div class="b-season__last__title">ТОП-3 прошлого сезона</div>\n    <div id="seasonCurrentCommonLastEndedDetail" class="b-season__last__btn">Подробнее</div>\n</div>\n\n<div id="seasonCurrentCommonLastEndedTop" class="b-season__last__list"></div>';
	}),
	define(
		"widgets/seasons/currentCommonSeasonLastEnded",
		[
			"widget",
			"controllers/seasons",
			"controllers/gameanalytics",
			"models/appState",
			"widgets/seasons/currentCommonSeasonLastEndedItem",
			"text!widgets/seasons/currentCommonSeasonLastEnded.html!strip",
		],
		function (e, t, n, r, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#seasonCurrentCommonSeasonLastEnded",
				events: {
					"click #seasonCurrentCommonLastEndedDetail": "seasonDetail",
				},
				afterRender: function () {
					var e = this;
					t.history != null
						? e.show()
						: e.listenTo(t, t.EVENT_HISTORY_ALL, function () {
								e.show();
						  });
				},
				show: function () {
					var e = t.history.getLastSeason();
					if (e != null) {
						var n = $("#seasonCurrentCommonLastEndedTop");
						n.html("");
						for (i = 0, k = e.get("topUsersShort").length; i < k; i++)
							console.debug(e.get("topUsersShort").at(i)),
								n.append(
									new s({
										model: e.get("topUsersShort").at(i),
									}).returnableRender()
								);
					}
				},
				seasonDetail: function () {
					var e = t.history.getLastSeason();
					e != null &&
						(n.sendDesignEvent("Screen_actions:Rating:last_season"),
						r.setScreen({
							screen: "season",
							params: {
								model: e,
							},
						}));
				},
			});
			return u;
		}
	),
	define("text!widgets/seasons/currentCommonTopItem.html!strip", [], function () {
		return '<%\nvar i;\nvar customAvatar = this.model.get(\'customAvatar\');\n%>\n\n<div class="b-rating__list__item">\n    <%\n    var positionClass = 0;\n    if (position <= 10) {\n        if (position <= 3)\n            positionClass = position;\n        else\n            positionClass = 10;\n    }\n    if (positionClass > 0) { %>\n    <div class="b-rating__list__item__label b-rating__list__item__label_top<%=positionClass%>"><%=position%></div>\n    <% } %>\n\n    <div class="showProfile b-rating__list__item__avatar">\n        <div class="b-user">\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" src="<%= avatarUrl %>" alt="">\n            </div>\n            <% } %>\n            <img src="<%= this.params.laurelsUrl%>avatar-<%= level.value %>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="b-rating__list__item-i">\n        <p class="showProfile b-rating__list__item__user"><%=playerName%></p>\n        <p class="b-rating__list__item__global-points"><%=new Intl.NumberFormat(\'ru-RU\').format(rating)%> <%= this.methods.declension(rating, [\'очко\', \'очка\', \'очков\']) %></p>\n        <% var placeClass = (position <= 3) ? position : 0; %>\n        <p class="b-rating__list__item__place b-rating__list__item__place<% if (placeClass > 0) { %>_<%=placeClass%><% } %>"><%=position%> место</p>\n\n    </div>\n    <div class="b-rating__list__item__ctrls">\n        <% if (id != this.user.get(\'id\')) { %>\n        <% if (this.stat.inCollection({opponent: this.model.toJSON()})) { %>\n        <div class="showStat b-rating__list__item__ctrls__btn b-rating__list__item__ctrls__btn_stats"></div>\n        <% } %>\n        <div class="playWithOpponent b-rating__list__item__ctrls__btn b-rating__list__item__ctrls__btn_play"></div>\n        <% } %>\n    </div>\n</div>';
	}),
	define(
		"widgets/seasons/currentCommonTopItem",
		[
			"application",
			"gate",
			"widget",
			"controllers/seasons",
			"collections/popups",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"collections/stat",
			"text!widgets/seasons/currentCommonTopItem.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				template: _.template(f),
				tagName: "div",
				events: {
					"click .showProfile": "showProfile",
					"click .showStat": "showStat",
					"click .playWithOpponent": "playWithOpponent",
				},
				params: e.params,
				methods: e.methods,
				user: u,
				stat: a,
				isNoticeBlocked: !1,
				showProfile: function () {
					s.sendDesignEvent("Screen_actions:Rating:opponent_profile"),
						o.setScreen({
							screen: "userInfo",
							params: {
								id: this.model.get("id"),
							},
						});
				},
				showStat: function () {
					o.setScreen({
						screen: "pvp.result",
						params: {
							opponent: this.model,
						},
					});
				},
				playWithOpponent: function () {
					var e = {
						opponent: this.model.toJSON(),
						method: "season",
					};
					this.checkGameAvailable(e) &&
						(s.sendDesignEvent("Screen_actions:Rating:rating_play"),
						o.setScreen({
							screen: "pvp.game",
							params: e,
						}));
				},
				checkGameAvailable: function (e) {
					var t = a.inCollection(e);
					return t && t.get("currentGame").status.value == "opponentTurn"
						? (this.sendPushToOpponent(e), !1)
						: !0;
				},
				sendPushToOpponent: function (n) {
					if (!this.isNoticeBlocked) {
						this.isNoticeBlocked = !0;
						var r =
							e.methods.getCookie("rm" + n.opponent.id) !== ""
								? e.methods.getCookie("rm" + n.opponent.id)
								: 0;
						console.warn(moment().format("x") > parseInt(r), moment().format("x"), parseInt(r)),
							moment().format("x") > parseInt(r)
								? (this.listenToOnce(t, "sendReminder", function () {
										i.add({
											type: "text",
											params: {
												header: "Напоминание отправлено! ",
												text: "Игроку придет повторное приглашение в игру.",
												cursiv: "Следующим напоминанием Вы можете воспользоваться через 24 часа.",
											},
										}),
											e.methods.setCookie(
												"rm" + n.opponent.id,
												moment().add(1, "day").format("x"),
												"30"
											),
											(this.isNoticeBlocked = !1);
								  }),
								  t.sendReminder(u, n.opponent.id))
								: i.add({
										type: "text",
										params: {
											header: "Ошибка",
											text: "Вы сможете отправить напоминание снова через 24 часа.",
										},
								  });
					}
				},
			});
			return l;
		}
	),
	define("text!widgets/seasons/currentCommonTop.html!strip", [], function () {
		return '<div id="seasonCurrentCommonTopItems"></div>\n\n<div id="seasonCurrentCommonTopMore" style="display:none;" class="b-rating__list__more">\n    <span class="b-rating__list__more-i">Еще</span>\n</div>\n\n<div id="seasonCurrentCommonTopLoading" style="display:none;" class="b-rating__list__more">\n    <span class="b-rating__list__more__load">Загрузка...</span>\n</div>';
	}),
	define(
		"widgets/seasons/currentCommonTop",
		[
			"widget",
			"controllers/seasons",
			"widgets/seasons/currentCommonTopItem",
			"text!widgets/seasons/currentCommonTop.html!strip",
		],
		function (e, t, n, r) {
			var s = e.extend({
				template: _.template(r),
				el: "#seasonCurrentCommonTop",
				events: {
					"click #seasonCurrentCommonTopMore": "more",
				},
				afterRender: function () {
					this.setupViews(), this.checkShow();
				},
				setupViews: function () {
					(this.topItems = $("#seasonCurrentCommonTopItems")),
						(this.topMore = $("#seasonCurrentCommonTopMore")),
						(this.topLoading = $("#seasonCurrentCommonTopLoading"));
				},
				checkShow: function () {
					var e = this;
					t.currentSeason != null
						? e.renderTop(t.currentSeason)
						: e.listenTo(t, t.EVENT_CURRENT_TOP_USERS, function (n) {
								e.renderTop(t.currentSeason);
						  });
				},
				renderTop: function (e) {
					for (i = 0, k = e.get("addTopUsers").length; i < k; i++)
						this.topItems.append(
							new n({
								model: e.get("addTopUsers").at(i),
							}).returnableRender()
						);
					e.get("topUsers").length < e.get("playersCount")
						? this.topMore.show()
						: this.topMore.hide(),
						this.topLoading.hide();
				},
				more: function () {
					t.currentSeason != null &&
						(this.topMore.hide(),
						this.topLoading.show(),
						t.getSeason(t.currentSeason.get("topUsers").length));
				},
			});
			return s;
		}
	),
	define("text!widgets/seasons/currentCommon.html!strip", [], function () {
		return '<div id="seasonCurrentCommonLoader" class="b-loader">\n    <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n</div>\n\n<div id="seasonCurrentCommonSeasonCurrent" style="display:none;" class="b-season"></div>\n\n<div id="seasonCurrentCommonSeasonLastEnded" style="display:none;" class="b-season__last"></div>\n\n<div id="seasonCurrentCommonTop" style="display:none;"></div>';
	}),
	define(
		"widgets/seasons/currentCommon",
		[
			"widget",
			"application",
			"widgets/seasons/currentCommonSeasonCurrent",
			"widgets/seasons/currentCommonSeasonLastEnded",
			"widgets/seasons/currentCommonTop",
			"controllers/seasons",
			"text!widgets/seasons/currentCommon.html!strip",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#seasonCurrentCommon",
				events: {},
				initializeWidgets: function () {
					this.widgets = [new n(), new r(), new i()];
				},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				afterRender: function () {
					this.setupViews();
				},
				afterRenderWidgets: function () {
					this.checkLoader();
				},
				setupViews: function () {
					(this.viewLoader = $("#seasonCurrentCommonLoader")),
						(this.viewSeasonCurrentDetail = $("#seasonCurrentCommonSeasonCurrent")),
						(this.viewSeasonLastEnded = $("#seasonCurrentCommonSeasonLastEnded")),
						(this.viewSeasonCurrentTop = $("#seasonCurrentCommonTop"));
				},
				checkLoader: function () {
					var e = this;
					s.currentSeason != null
						? (e.hideLoader(), e.showCurrentSeason())
						: e.listenTo(s, s.EVENT_CURRENT_TOP_USERS, function (t) {
								e.hideLoader(), e.showCurrentSeason();
						  });
				},
				hideLoader: function () {
					this.viewLoader.hide();
				},
				showCurrentSeason: function () {
					this.viewSeasonCurrentDetail.show(), this.viewSeasonCurrentTop.show();
					var e = this;
					s.history != null
						? e.showLastEndedSeason()
						: e.listenTo(s, s.EVENT_HISTORY_ALL, function () {
								e.showLastEndedSeason();
						  });
				},
				showLastEndedSeason: function () {
					s.history.getLastSeason() != null && this.viewSeasonLastEnded.show();
				},
			});
			return u;
		}
	),
	define(
		"widgets/seasons/currentFriendsTopItem",
		["widgets/seasons/currentCommonTopItem"],
		function (e) {
			var t = e.extend({});
			return t;
		}
	),
	define("text!widgets/seasons/currentFriendsTop.html!strip", [], function () {
		return '<div id="seasonCurrentFriendsTopItems"></div>';
	}),
	define(
		"widgets/seasons/currentFriendsTop",
		[
			"widget",
			"controllers/seasons",
			"widgets/seasons/currentFriendsTopItem",
			"text!widgets/seasons/currentFriendsTop.html!strip",
		],
		function (e, t, n, r) {
			var s = e.extend({
				template: _.template(r),
				el: "#seasonCurrentFriendsTop",
				events: {},
				afterRender: function () {
					this.setupViews(), this.checkShow();
				},
				setupViews: function () {
					this.topItems = $("#seasonCurrentFriendsTopItems");
				},
				checkShow: function () {
					var e = this;
					t.currentSeason != null && t.currentSeason.topFriendsUpdated
						? e.renderTop(t.currentSeason)
						: e.listenTo(t, t.EVENT_CURRENT_TOP_FRIENDS, function (n) {
								e.renderTop(t.currentSeason);
						  });
				},
				renderTop: function (e) {
					this.topItems.html("");
					for (i = 0, k = e.get("topFriends").length; i < k; i++)
						this.topItems.append(
							new n({
								model: e.get("topFriends").at(i),
							}).returnableRender()
						);
				},
			});
			return s;
		}
	),
	define("text!widgets/seasons/currentFriends.html!strip", [], function () {
		return '<div id="seasonCurrentFriendsLoader" class="b-loader">\n    <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n</div>\n\n<div id="seasonCurrentFriendsTop" style="display:none;"></div>';
	}),
	define(
		"widgets/seasons/currentFriends",
		[
			"widget",
			"application",
			"controllers/seasons",
			"widgets/seasons/currentFriendsTop",
			"text!widgets/seasons/currentFriends.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				el: "#seasonCurrentFriends",
				events: {},
				initialize: function () {
					this.viewParam = {
						Application: t,
					};
				},
				initializeWidgets: function () {
					this.widgets = [new r()];
				},
				afterRender: function () {
					this.setupViews();
				},
				afterRenderWidgets: function () {
					this.checkLoader();
				},
				setupViews: function () {
					(this.viewLoader = $("#seasonCurrentFriendsLoader")),
						(this.viewTop = $("#seasonCurrentFriendsTop"));
				},
				checkLoader: function () {
					var e = this;
					n.currentSeason != null && n.currentSeason.topFriendsUpdated
						? (e.hideLoader(), e.showTop())
						: e.listenTo(n, n.EVENT_CURRENT_TOP_FRIENDS, function (t) {
								e.hideLoader(), e.showTop();
						  });
				},
				hideLoader: function () {
					this.viewLoader.hide();
				},
				showTop: function () {
					this.viewTop.show();
				},
			});
			return s;
		}
	),
	define("text!widgets/seasons/current.html!strip", [], function () {
		return '<div class="b-rating__filter">\n    <div class="b-rating__filter-i">\n        <div id="seasonFilterCommon" class="b-rating__filter__item b-rating__filter__item_common b-rating__filter__item_current">Общий</div>\n        <div id="seasonFilterFriends" class="b-rating__filter__item b-rating__filter__item_friends">Друзья</div>\n    </div>\n</div>\n\n<div id="seasonCurrentCommon" style="display: none;" class="b-rating__list b-rating__list_season"></div>\n<div id="seasonCurrentFriends" style="display: none;" class="b-rating__list b-rating__list_season"></div>\n';
	}),
	define(
		"widgets/seasons/current",
		[
			"widget",
			"controllers/gameanalytics",
			"widgets/seasons/currentCommon",
			"widgets/seasons/currentFriends",
			"controllers/seasons",
			"collections/friends",
			"models/user",
			"text!widgets/seasons/current.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#seasonCurrent",
				events: {
					"click #seasonFilterCommon": function () {
						if (this.activeFilter == this.viewFilterCommon) return;
						(this.activeFilter = this.viewFilterCommon),
							this.viewFilterCommon.hasClass(this.activeFilterClassName) ||
								this.viewFilterCommon.addClass(this.activeFilterClassName),
							this.viewFilterFriends.removeClass(this.activeFilterClassName),
							this.hideViews(),
							this.viewContentCommon.show(),
							this.selfRating.setActiveTab(this.selfRating.ACTIVE_TAB_USERS),
							this.selfRating.checkShow();
					},
					"click #seasonFilterFriends": function () {
						if (this.activeFilter == this.viewFilterFriends) return;
						(this.activeFilter = this.viewFilterFriends),
							this.viewFilterFriends.hasClass(this.activeFilterClassName) ||
								this.viewFilterFriends.addClass(this.activeFilterClassName),
							this.viewFilterCommon.removeClass(this.activeFilterClassName),
							this.hideViews(),
							this.viewContentFriends.show(),
							this.selfRating.setActiveTab(this.selfRating.ACTIVE_TAB_FRIENDS),
							this.selfRating.checkShow(),
							this.requestFriends(),
							t.sendDesignEvent("Screen_actions:Rating:season_friends");
					},
				},
				initialized: !1,
				initialize: function (e) {
					this.selfRating = e.selfRating;
				},
				initializeWidgets: function () {
					this.widgets = [new n(), new r()];
				},
				afterRender: function () {
					this.setupViews();
				},
				afterRenderWidgets: function () {
					this.setDefaultFilter();
				},
				setupViews: function () {
					(this.viewFilterCommon = $("#seasonFilterCommon")),
						(this.viewFilterFriends = $("#seasonFilterFriends")),
						(this.viewContentCommon = $("#seasonCurrentCommon")),
						(this.viewContentFriends = $("#seasonCurrentFriends")),
						(this.activeFilterClassName = "b-rating__filter__item_current");
				},
				setDefaultFilter: function () {
					this.viewFilterCommon.trigger("click");
				},
				hideViews: function () {
					this.viewContentCommon.hide(), this.viewContentFriends.hide();
				},
				requestFriends: function () {
					if (!this.initialized) {
						this.initialized = !0;
						var e = [];
						s.each(function (t) {
							e.push(t.get("socialId"));
						}),
							e.push(o.get("socialId")),
							i.getSeason(0, null, e, "friends");
					}
				},
			});
			return a;
		}
	),
	define("text!widgets/seasons/hallHistoryDetailUserItem.html!strip", [], function () {
		return '<%\nvar i;\nvar customAvatar = this.model.get(\'customAvatar\');\n%>\n\n<div class="b-rating__list__item b-rating__list__item_top">\n    <%\n    var positionClass = 0;\n    if (position <= 10) {\n        if (position <= 3)\n            positionClass = position;\n        else\n            positionClass = 10;\n    }\n    %>\n    <div class="b-rating__list__item__place b-rating__list__item__place_top<% if (position != undefined && positionClass > 0) { %><%=positionClass%><% } %>"><% if (position != undefined) { %><%=position%><% } %></div>\n    <div class="showProfile b-rating__list__item__avatar">\n        <div class="b-user b-user_rating">\n\n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" src="<%= avatarUrl %>" alt="">\n            </div>\n            <% } %>\n            <img src="<%= this.params.laurelsUrl%>avatar-<%= level.value %>.png" class="b-user__rank" />\n        </div>\n    </div>\n    <div class="b-rating__list__item-i">\n        <div class="showProfile b-rating__list__item__user"><% if (playerName != undefined) { %><%=playerName%><% } %></div>\n        <div class="b-rating__list__item__points"><% if (rating != undefined) { %><%=new Intl.NumberFormat(\'ru-RU\').format(rating)%><% } %></div>\n\n    </div>\n    <div class="b-rating__list__item__ctrls">\n        <div class="playWithOpponent b-rating__list__item__ctrls__btn b-rating__list__item__ctrls__btn_play"></div>\n    </div>\n</div>';
	}),
	define(
		"widgets/seasons/hallHistoryDetailUserItem",
		[
			"application",
			"gate",
			"widget",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/user",
			"collections/stat",
			"text!widgets/seasons/hallHistoryDetailUserItem.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				tagName: "div",
				events: {
					"click .showProfile": "showProfile",
					"click .playWithOpponent": "playWithOpponent",
				},
				params: e.params,
				isNoticeBlocked: !1,
				showProfile: function () {
					r.sendDesignEvent("Screen_actions:Rating:opponent_profile"),
						s.setScreen({
							screen: "userInfo",
							params: {
								id: this.model.get("id"),
							},
						});
				},
				playWithOpponent: function () {
					var e = {
						opponent: this.model.toJSON(),
						method: "season",
					};
					this.checkGameAvailable(e) &&
						(r.sendDesignEvent("Screen_actions:Rating:rating_play"),
						s.setScreen({
							screen: "pvp.game",
							params: e,
						}));
				},
				checkGameAvailable: function (e) {
					var t = u.inCollection(e);
					return t && t.get("currentGame").status.value == "opponentTurn"
						? (this.sendPushToOpponent(e), !1)
						: !0;
				},
				sendPushToOpponent: function (n) {
					if (!this.isNoticeBlocked) {
						this.isNoticeBlocked = !0;
						var r =
							e.methods.getCookie("rm" + n.opponent.id) !== ""
								? e.methods.getCookie("rm" + n.opponent.id)
								: 0;
						console.warn(moment().format("x") > parseInt(r), moment().format("x"), parseInt(r)),
							moment().format("x") > parseInt(r)
								? (this.listenToOnce(t, "sendReminder", function () {
										i.add({
											type: "text",
											params: {
												header: "Напоминание отправлено! ",
												text: "Игроку придет повторное приглашение в игру.",
												cursiv: "Следующим напоминанием Вы можете воспользоваться через 24 часа.",
											},
										}),
											e.methods.setCookie(
												"rm" + n.opponent.id,
												moment().add(1, "day").format("x"),
												"30"
											),
											(this.isNoticeBlocked = !1);
								  }),
								  t.sendReminder(o, n.opponent.id))
								: i.add({
										type: "text",
										params: {
											header: "Ошибка",
											text: "Вы сможете отправить напоминание снова через 24 часа.",
										},
								  });
					}
				},
			});
			return f;
		}
	),
	define("text!widgets/seasons/hallHistoryDetailItem.html!strip", [], function () {
		return '<div class="b-rating__list-i">\n\n    <div class="b-season b-season_top">\n        <div class="b-season__icon"><img src="<% if (this.model != undefined) { %><%=this.model.getImg()%><% } %>" alt="" class="b-season__icon-i" /></div>\n        <div class="b-season-i">\n            <div class="b-season__name"><% if (name != undefined) { %><%=name%><% } %></div>\n            <div class="b-season__time">\n                <div class="b-season__time__label">дата завершения:</div>\n                <div class="b-season__time-i"><%if (timeEnd != undefined) { %><%=this.model.getTimeEndFormatted()%><% } %></div>\n            </div>\n            <div class="b-season__players">\n                <div class="b-season__players__label">участников:</div>\n                <div class="b-season__players-i"><% if (playersCount != undefined) { %><%=playersCount%><% } %></div>\n            </div>\n        </div>\n    </div>\n\n    <div id="seasonHallHistoryDetailUsers"></div>\n\n    <div class="seasonDetail b-rating__list__more"><span class="b-rating__list__more-i">Все результаты</span></div>\n</div>';
	}),
	define(
		"widgets/seasons/hallHistoryDetailItem",
		[
			"widget",
			"controllers/gameanalytics",
			"models/appState",
			"widgets/seasons/hallHistoryDetailUserItem",
			"text!widgets/seasons/hallHistoryDetailItem.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				tagName: "div",
				events: {
					"click .seasonDetail": "seasonDetail",
				},
				afterReturnableRender: function (e) {
					var t = $(e).find("#seasonHallHistoryDetailUsers");
					t.html("");
					var n = this.model.get("topUsersShort");
					if (n != undefined && n != null)
						for (var i = 0, s = n.length; i < s; i++)
							t.append(
								new r({
									model: n.at(i),
								}).returnableRender()
							);
					return e;
				},
				seasonDetail: function () {
					t.sendDesignEvent("Screen_actions:Rating:hall_of_fame_all"),
						n.setScreen({
							screen: "season",
							params: {
								model: this.model,
							},
						});
				},
			});
			return s;
		}
	),
	define("text!widgets/seasons/hallHistoryItem.html!strip", [], function () {
		return '<div class="b-rating__list-i">\n    <div class="b-season b-season_top b-season_closed">\n        <div class="seasonDetail b-season__ctrl">\n            <div class="b-season__ctrl-i"></div>\n        </div>\n        <div class="b-season__icon"><img src="<% if (this.model != undefined) { %><%=this.model.getImg()%><% } %>" alt="" class="b-season__icon-i" /></div>\n        <div class="b-season-i">\n            <div class="b-season__name"><% if (name != undefined) { %><%=name%><% } %></div>\n            <div class="b-season__time">\n                <div class="b-season__time__label">дата завершения:</div>\n                <div class="b-season__time-i"><%if (timeEnd != undefined) { %><%=this.model.getTimeEndFormatted()%><% } %></div>\n            </div>\n            <div class="b-season__players">\n                <div class="b-season__players__label">участников:</div>\n                <div class="b-season__players-i"><% if (playersCount != undefined) { %><%=playersCount%><% } %></div>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"widgets/seasons/hallHistoryItem",
		["widget", "models/appState", "text!widgets/seasons/hallHistoryItem.html!strip"],
		function (e, t, n) {
			var r = e.extend({
				template: _.template(n),
				tagName: "div",
				events: {
					"click .seasonDetail": "seasonDetail",
				},
				seasonDetail: function () {
					t.setScreen({
						screen: "season",
						params: {
							model: this.model,
						},
					});
				},
			});
			return r;
		}
	),
	define("text!widgets/seasons/hallHistory.html!strip", [], function () {
		return '<div id="seasonHallHistoryItems" class="b-rating__list b-rating__list_top"></div>';
	}),
	define(
		"widgets/seasons/hallHistory",
		[
			"widget",
			"widgets/seasons/hallHistoryDetailItem",
			"widgets/seasons/hallHistoryItem",
			"controllers/seasons",
			"text!widgets/seasons/hallHistory.html!strip",
		],
		function (e, t, n, r, i) {
			var s = e.extend({
				template: _.template(i),
				el: "#seasonHallHistory",
				events: {},
				afterRender: function () {
					var e = this;
					r.history != null
						? e.show(r.history)
						: e.listenTo(r, r.EVENT_HISTORY_ALL, function () {
								e.show(r.history);
						  });
				},
				detailCount: 2,
				show: function (e) {
					var r = $("#seasonHallHistoryItems");
					r.html("");
					for (var i = 0, s = e.length; i < s; i++)
						i < this.detailCount
							? r.append(
									new t({
										model: e.at(i),
									}).returnableRender()
							  )
							: r.append(
									new n({
										model: e.at(i),
									}).returnableRender()
							  );
				},
			});
			return s;
		}
	),
	define("text!widgets/seasons/hallEmpty.html!strip", [], function () {
		return '<div class="b-rating__empty">\n    <div class="b-rating__empty__icon"><img src="<%= Application.params.staticUrl %>images/app/seasons/icon.png" alt="" class="b-rating__empty__icon-i" /></div>\n    <% if (typeof(season) != \'undefined\') { %>\n    <div class="b-rating__empty-i">\n        Результаты сезона «<%=season.get(\'name\')%>» <br />\n        будут доступны через <br />\n        <% if (season.getEstimatedDays() > 0) { %><%=season.getEstimatedDays()%>д <% } %>\n        <% if (season.getEstimatedHours() > 0) { %><%=season.getEstimatedHours()%>ч <% } %>\n        <% if (season.getEstimatedMins() > 0) { %><%=season.getEstimatedMins()%>м <% } %>\n    </div>\n    <% } %>\n</div>';
	}),
	define(
		"widgets/seasons/hallEmpty",
		["widget", "application", "controllers/seasons", "text!widgets/seasons/hallEmpty.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				el: "#seasonHallEmpty",
				events: {},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
					};
				},
				afterRender: function () {
					var e = this;
					n.currentSeason != null
						? e.show(n.currentSeason)
						: e.listenTo(n, n.EVENT_CURRENT_TOP_USERS, function (t) {
								e.show(n.currentSeason);
						  });
				},
				show: function (e) {
					(this.viewParam = {
						season: e,
						Application: t,
					}),
						this.selfRender();
				},
			});
			return i;
		}
	),
	define("text!widgets/seasons/hall.html!strip", [], function () {
		return '<div id="seasonHallLoader" class="b-loader">\n    <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n</div>\n\n<div id="seasonHallHistory" style="display:none;"></div>\n<div id="seasonHallEmpty" style="display:none;"></div>';
	}),
	define(
		"widgets/seasons/hall",
		[
			"widget",
			"application",
			"widgets/seasons/hallHistory",
			"widgets/seasons/hallEmpty",
			"controllers/seasons",
			"text!widgets/seasons/hall.html!strip",
		],
		function (e, t, n, r, i, s) {
			var o = e.extend({
				template: _.template(s),
				el: "#seasonHall",
				events: {},
				initialize: function (e) {
					this.viewParam = {
						Application: t,
					};
				},
				initializeWidgets: function () {
					this.widgets = [new n(), new r()];
				},
				afterRender: function () {
					this.setupViews();
				},
				afterRenderWidgets: function () {
					this.checkLoader();
				},
				setupViews: function () {
					(this.viewLoader = $("#seasonHallLoader")),
						(this.viewHistory = $("#seasonHallHistory")),
						(this.viewEmpty = $("#seasonHallEmpty"));
				},
				checkLoader: function () {
					var e = this;
					i.currentSeason != null && i.history != null
						? e.showHall()
						: (e.listenTo(i, i.EVENT_CURRENT_TOP_USERS, function (t) {
								e.showHall();
						  }),
						  e.listenTo(i, i.EVENT_HISTORY_ALL, function () {
								e.showHall();
						  }));
				},
				hideLoader: function () {
					this.viewLoader.hide();
				},
				showHall: function () {
					i.currentSeason != null &&
						i.history != null &&
						(this.hideLoader(),
						i.history.length > 0 ? this.viewHistory.show() : this.viewEmpty.show());
				},
			});
			return o;
		}
	),
	define("text!widgets/seasons/selfRating.html!strip", [], function () {
		return '<div id="seasonSelfRatingContent" style="display:none;" class="b-rating__list__item">\n    <% if (typeof(selfPlayer) !== \'undefined\' && selfPlayer != null) { %>\n    <div class="b-rating__list__item__avatar">\n        <div class="b-user">\n        <% if (typeof(user) !== \'undefined\') { %>\n        <%\n            var i;\n            var customAvatar = user.get(\'customAvatar\');\n        %>    \n            <% if (customAvatar && customAvatar.length > 0) { %>\n            <div class="custom-avatar b-user__custom-avatar">\n                <% for (i = 0; i < customAvatar.length; i += 1) { %>\n                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=customAvatar[i]%>.png" alt="" />\n                <% } %>\n            </div>\n            <% } else { %>\n            <div class="b-user__pic">\n                <img class="b-user__pic-i" src="<% if (typeof(user) !== \'undefined\') { %><%= user.get(\'avatarUrl\')%><% } %>" alt="">\n            </div>\n            <% } %>\n        <% } %>\n            <% if (typeof(user) !== \'undefined\') { %>\n            <img src="<%= this.params.laurelsUrl%>avatar-<%=user.get(\'level\').value%>.png" class="b-user__rank" />\n            <% } %>\n        </div>\n    </div>\n    <div class="b-rating__list__item-i">\n        <p class="b-rating__list__item__user">Вы</p>\n        <p class="b-rating__list__item__place"><%=new Intl.NumberFormat(\'ru-RU\').format(selfPlayer.position)%> место из <% if (typeof(playersCount) != \'undefined\') { %><%=new Intl.NumberFormat(\'ru-RU\').format(playersCount)%><% } %></p>\n        <p class="b-rating__list__item__global-points"><%=new Intl.NumberFormat(\'ru-RU\').format(selfPlayer.rating)%> <%= this.methods.declension(selfPlayer.rating, [\'очко\', \'очка\', \'очков\']) %></p>\n    </div>\n    <% } %>\n</div>';
	}),
	define(
		"widgets/seasons/selfRating",
		[
			"application",
			"widget",
			"controllers/seasons",
			"models/user",
			"text!widgets/seasons/selfRating.html!strip",
		],
		function (e, t, n, r, i) {
			var s = t.extend({
				template: _.template(i),
				el: "#seasonSelfRating",
				events: {},
				afterRender: function () {
					this.setupViews();
				},
				params: e.params,
				methods: e.methods,
				ACTIVE_TAB_USERS: "active_tab_users",
				ACTIVE_TAB_FRIENDS: "active_tab_friends",
				ACTIVE_TAB_DEFAULT: this.ACTIVE_TAB_USERS,
				activeTab: this.ACTIVE_TAB_DEFAULT,
				endedSeason: null,
				setupViews: function () {
					this.viewContentSelfRating = $("#seasonSelfRatingContent");
				},
				checkShow: function () {
					var e = this;
					e.activeTab == e.ACTIVE_TAB_USERS
						? n.currentSeason != null
							? e.show(
									r,
									n.currentSeason.get("topUsers").selfPlayer,
									n.currentSeason.get("playersCount")
							  )
							: (e.hide(),
							  e.listenTo(n, n.EVENT_CURRENT_TOP_USERS, function (t) {
									e.activeTab == e.ACTIVE_TAB_USERS &&
										e.show(
											r,
											n.currentSeason.get("topUsers").selfPlayer,
											n.currentSeason.get("playersCount")
										);
							  }))
						: e.activeTab == e.ACTIVE_TAB_FRIENDS
						? n.currentSeason != null && n.currentSeason.topFriendsUpdated
							? e.show(
									r,
									n.currentSeason.get("topFriends").selfPlayer,
									n.currentSeason.get("topFriends").length
							  )
							: (e.hide(),
							  e.listenTo(n, n.EVENT_CURRENT_TOP_FRIENDS, function (t) {
									e.activeTab == e.ACTIVE_TAB_FRIENDS &&
										e.show(
											r,
											n.currentSeason.get("topFriends").selfPlayer,
											n.currentSeason.get("topFriends").length
										);
							  }))
						: this.endedSeason != null &&
						  e.show(
								r,
								this.endedSeason.get("topUsers").selfPlayer,
								this.endedSeason.get("playersCount")
						  );
				},
				show: function (t, n, r) {
					(this.viewParam = {
						Application: e,
						user: t,
						selfPlayer: n,
						playersCount: r,
					}),
						this.render(),
						this.viewContentSelfRating.show();
				},
				hide: function () {
					this.viewContentSelfRating.hide();
				},
				setActiveTab: function (e) {
					var t = this;
					switch (e) {
						case t.ACTIVE_TAB_USERS:
						case t.ACTIVE_TAB_FRIENDS:
							t.activeTab = e;
							break;
						default:
							t.activetab = t.ACTIVE_TAB_DEFAULT;
					}
				},
				setEndedSeason: function (e) {
					this.endedSeason = e;
				},
			});
			return s;
		}
	),
	define("text!screens/rating.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div class="b-btn-menu soundingButton" id="menuButton"></div>\n    </div>\n    <div class="b-screen-head__title">Рейтинг игроков</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-rating">\n\n    <!-- Табы -->\n    <div class="b-rating__tabs">\n        <div class="b-rating__tabs-i">\n            <div id="seasonTabCurrent" class="b-rating__tabs__item b-rating__tabs__item_season b-rating__tabs__item_current">Текущий сезон</div>\n            <div id="seasonTabHall" class="b-rating__tabs__item b-rating__tabs__item_top">Зал славы</div>\n        </div>\n    </div>\n    <!-- /.b-rating__tabs -->\n\n    <!-- Текущий сезон -->\n    <div id="seasonCurrent" class="b-rating__container" style="display: none;"></div>\n\n    <!--  Зал славы -->\n    <div id="seasonHall" class="b-rating__container" style="display: none;"></div>\n\n    <!-- Плашка своего рейтинга внизу -->\n    <div id="seasonSelfRating" style="display: none;" class="b-rating__list b-rating__list_place"></div>\n</div>\n';
	}),
	define(
		"screens/rating",
		[
			"widget",
			"models/appState",
			"controllers/analytic",
			"widgets/seasons/current",
			"widgets/seasons/hall",
			"widgets/seasons/hallEmpty",
			"widgets/seasons/selfRating",
			"controllers/seasons",
			"text!screens/rating.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = e.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click #seasonTabCurrent": function () {
						if (this.activeTab == this.viewTabCurrent) return;
						(this.activeTab = this.viewTabCurrent),
							$(this.viewTabCurrent).hasClass(this.activeTabClassName) ||
								$(this.viewTabCurrent).addClass(this.activeTabClassName),
							this.viewTabHall.removeClass(this.activeTabClassName),
							this.hideViews(),
							this.viewContentCurrent.show(),
							this.viewContentSelfRating.show();
					},
					"click #seasonTabHall": function () {
						if (this.activeTab == this.viewTabHall) return;
						(this.activeTab = this.viewTabHall),
							this.viewTabHall.hasClass(this.activeTabClassName) ||
								this.viewTabHall.addClass(this.activeTabClassName),
							this.viewTabCurrent.removeClass(this.activeTabClassName),
							this.hideViews(),
							this.viewContentHall.show();
					},
					"click #menuButton": function () {
						$(".tss-label").click();
					},
				},
				initialized: !1,
				initialize: function (e) {
					var t = this;
					n.pageview("Рейтинг игроков"), this.initialized || ((this.initialized = !0), u.init());
				},
				initializeWidgets: function () {
					var e = new o();
					this.widgets = [
						e,
						new r({
							selfRating: e,
						}),
						new i(),
						new s(),
					];
				},
				afterRender: function () {
					this.setupViews();
				},
				afterRenderWidgets: function () {
					this.setDefaultTab();
				},
				setupViews: function () {
					(this.viewTabCurrent = $("#seasonTabCurrent")),
						(this.viewTabHall = $("#seasonTabHall")),
						(this.viewContentCurrent = $("#seasonCurrent")),
						(this.viewContentHall = $("#seasonHall")),
						(this.viewContentSelfRating = $("#seasonSelfRating")),
						(this.activeTabClassName = "b-rating__tabs__item_current");
				},
				setDefaultTab: function () {
					this.viewTabCurrent.trigger("click");
				},
				hideViews: function () {
					this.viewContentCurrent.hide(),
						this.viewContentHall.hide(),
						this.viewContentSelfRating.hide();
				},
			});
			return f;
		}
	),
	define(
		"widgets/seasons/seasonTopItem",
		[
			"application",
			"gate",
			"widget",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/user",
			"collections/stat",
			"text!widgets/seasons/hallHistoryDetailUserItem.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = n.extend({
				template: _.template(a),
				tagName: "div",
				events: {
					"click .showProfile": "showProfile",
					"click .playWithOpponent": "playWithOpponent",
				},
				params: e.params,
				isNoticeBlocked: !1,
				showProfile: function () {
					r.sendDesignEvent("Screen_actions:Rating:opponent_profile"),
						s.setScreen({
							screen: "userInfo",
							params: {
								id: this.model.get("id"),
							},
						});
				},
				playWithOpponent: function () {
					var e = {
						opponent: this.model.toJSON(),
						method: "season",
					};
					this.checkGameAvailable(e) &&
						(r.sendDesignEvent("Screen_actions:Rating:rating_play"),
						s.setScreen({
							screen: "pvp.game",
							params: e,
						}));
				},
				checkGameAvailable: function (e) {
					var t = u.inCollection(e);
					return t && t.get("currentGame").status.value == "opponentTurn"
						? (this.sendPushToOpponent(e), !1)
						: !0;
				},
				sendPushToOpponent: function (n) {
					if (!this.isNoticeBlocked) {
						this.isNoticeBlocked = !0;
						var r =
							e.methods.getCookie("rm" + n.opponent.id) !== ""
								? e.methods.getCookie("rm" + n.opponent.id)
								: 0;
						console.warn(moment().format("x") > parseInt(r), moment().format("x"), parseInt(r)),
							moment().format("x") > parseInt(r)
								? (this.listenToOnce(t, "sendReminder", function () {
										i.add({
											type: "text",
											params: {
												header: "Напоминание отправлено! ",
												text: "Игроку придет повторное приглашение в игру.",
												cursiv: "Следующим напоминанием Вы можете воспользоваться через 24 часа.",
											},
										}),
											e.methods.setCookie(
												"rm" + n.opponent.id,
												moment().add(1, "day").format("x"),
												"30"
											),
											(this.isNoticeBlocked = !1);
								  }),
								  t.sendReminder(o, n.opponent.id))
								: i.add({
										type: "text",
										params: {
											header: "Ошибка",
											text: "Вы сможете отправить напоминание снова через 24 часа.",
										},
								  });
					}
				},
			});
			return f;
		}
	),
	define("text!screens/season.html!strip", [], function () {
		return '\n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back b-btn-back_rating"></div>\n    </div>\n    <div class="b-screen-head__title"><%=name%></div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-rating">\n    <div class="b-rating__list">\n\n        <div id="seasonTopItems"></div>\n\n        <div id="seasonTopMore" style="display:none;" class="b-rating__list__more">\n            <span href="#" class="b-rating__list__more-i">Еще</span>\n        </div>\n\n        <div id="seasonTopLoading" style="display:none;" class="b-rating__list__more">\n            <span class="b-rating__list__more__load">Загрузка...</span>\n        </div>\n    </div>\n\n    <div id="seasonSelfRating" class="b-rating__list b-rating__list_place"></div>\n</div>\n';
	}),
	define(
		"screens/season",
		[
			"widget",
			"controllers/seasons",
			"models/appState",
			"widgets/seasons/selfRating",
			"widgets/seasons/seasonTopItem",
			"text!screens/season.html!strip",
		],
		function (e, t, n, r, s, o) {
			var u = e.extend({
				template: _.template(o),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						n.previousScreen();
					},
					"click #seasonTopMore": "more",
				},
				initialize: function (e) {
					var t = this;
					e != undefined && e.model != undefined && (this.model = e.model);
				},
				initializeWidgets: function () {
					(this.selfRating = new r()),
						this.selfRating.setActiveTab(null),
						this.selfRating.setEndedSeason(this.model),
						(this.widgets = [this.selfRating]);
				},
				afterRender: function () {
					this.setupViews(), this.renderTop();
					var e = this;
					e.listenTo(t, t.EVENT_HISTORY_TOP_USERS, function (t) {
						e.renderTop();
					});
				},
				afterRenderWidgets: function () {
					this.selfRating.checkShow();
				},
				setupViews: function () {
					(this.topItems = $("#seasonTopItems")),
						(this.topMore = $("#seasonTopMore")),
						(this.topLoading = $("#seasonTopLoading"));
				},
				renderTop: function () {
					var e = t.history.getSeasonByAlias(this.model.get("alias"));
					for (i = 0, k = e.get("addTopUsers").length; i < k; i++)
						this.topItems.append(
							new s({
								model: e.get("addTopUsers").at(i),
							}).returnableRender()
						);
					e.get("topUsers").length < e.get("playersCount")
						? this.topMore.show()
						: this.topMore.hide(),
						this.topLoading.hide();
				},
				more: function () {
					this.topMore.hide(), this.topLoading.show();
					var e = t.history.getSeasonByAlias(this.model.get("alias"));
					t.getSeason(e.get("topUsers").length, e.get("alias"));
				},
			});
			return u;
		}
	),
	define("text!widgets/library/rack.html!strip", [], function () {
		return '<div id="libraryRack" class="library-show__content"> \n\n    <div id="libraryRackScroll" class="library-show__scroll"> \n\n    <%\n    var i;\n    var minBookWisdom = LibraryModel.getItemWisdomByAlias(\'magazine-1\');\n    var shelfHeight = 66;\n    var sectionsFilled = 0;\n    var sectionsEmpty = 0;\n    var shelf = LibraryModel.get(\'bookshelf\');\n    var shelfWisdom = 0;\n    var isMaxLevel = LibraryModel.get(\'level\') == Application.params.LIBRARY_MAX_LEVEL;\n\n    if (isMaxLevel) { %>\n        <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf">\n            <div class="library-shelf__content">\n                <div class="library-shelf__top"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                <div class="library-shelf__list">\n                    <div class="library-shelf__list-content">\n                    </div>\n                </div>\n            </div>\n        </div>\n    <% } else { \n        \n        if (shelf.length > 0) {\n        %>\n        <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf library-shelf_filled">\n            <div class="library-shelf__content">\n                <div class="library-shelf__top"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                <div class="library-shelf__list">\n                    <div class="library-shelf__list-content">\n            \n            <%\n            for (i = 0; i < shelf.length; i += 1) { \n                var bookWisdom = LibraryModel.getItemWisdomByAlias(shelf[i]);\n                if (sectionWidth - shelfWisdom >= bookWisdom) {\n                    shelfWisdom += bookWisdom;\n                %>\n                        <img style="width: <%=bookWisdom - 1%>px" class="library-shelf__item" src="https://cdn.wordbyword.me/content/library/books/<%=shelf[i]%>.png" alt="">\n                <%\n                }\n                else {\n                    sectionsFilled += 1;\n                    shelfWisdom = 0;\n                %>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf library-shelf_filled">\n            <div class="library-shelf__content">\n                <div class="library-shelf__top"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                <div class="library-shelf__list">\n                    <div class="library-shelf__list-content">\n                        <img style="width: <%=bookWisdom - 1%>px" class="library-shelf__item" src="https://cdn.wordbyword.me/content/library/books/<%=shelf[i]%>.png" alt="">\n                <%\n                }\n            }\n            \n            %>\n                            \n                    </div>\n                </div>\n            </div>\n        </div>\n        <%\n        sectionsFilled += 1;\n        }\n\n        %>\n\n        <%\n        sectionsEmpty = sectionsCount - sectionsFilled;\n        if (sectionsEmpty > 0) {\n            for (i = 0; i < sectionsEmpty; i += 1) { \n            %>\n            <div style="width: <%=sectionWidth + minBookWisdom * 12%>px; height: <%=shelfHeight%>px;" class="library-shelf">\n                <div class="library-shelf__content">\n                    <div class="library-shelf__top"></div>\n                    <div class="library-shelf__pillar library-shelf__pillar_left"></div>\n                    <div class="library-shelf__pillar library-shelf__pillar_right"></div>\n                    <div class="library-shelf__list">\n                        <div class="library-shelf__list-content">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <%\n            }\n        }\n    }\n    %>\n\n    </div>\n    <!-- /.library-show__scroll -->\n</div>\n\n<div id="libraryShowNav" class="library-show__nav">\n    <div id="libraryShowNavBack" class="library-show__nav-ctrl">\n        <div class="library-show__nav-back"></div>\n    </div>\n    <div id="libraryShowNavForward" class="library-show__nav-ctrl">\n        <div class="library-show__nav-forward"></div>\n    </div>\n</div>\n<!-- /.library-show__nav -->';
	}),
	define(
		"widgets/library/rack",
		["widget", "application", "models/library", "text!widgets/library/rack.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				el: "#libraryRackContainer",
				template: _.template(r),
				events: {
					"click #libraryShowNavForward": "scrollRackForward",
					"click #libraryShowNavBack": "scrollRackBack",
				},
				SECTION_W_MIN: 90,
				SECTION_W_MAX: 181,
				initialize: function (e) {
					var r = this;
					(this.model = n),
						(this.viewParam = {
							Application: t,
							LibraryModel: n,
							sectionsCount: this.getSectionsCount(),
							sectionWidth: this.getSectionWidth(),
						});
				},
				afterRender: function () {
					var e = this.model.get("level") == t.params.LIBRARY_MAX_LEVEL,
						n = $("#libraryRackScroll"),
						r = $("#libraryShowNav"),
						i = $(".library").width(),
						s = 18,
						o = this.viewParam.sectionWidth + s,
						u = e ? 1 : this.viewParam.sectionsCount;
					if (i > o * u) r.hide();
					else {
						var a = $(".library-shelf_filled").length;
						n.css({
							width: o * u + "px",
						});
						var f = (i - o + s) / 2 - s;
						a > 1
							? n.css({
									left: -((a - 1) * o) + f + "px",
							  })
							: n.css({
									left: f + "px",
							  }),
							this.displayNav();
					}
				},
				getSectionWidth: function () {
					var e = n.get("wisdomTarget");
					return e >= this.SECTION_W_MAX ? this.SECTION_W_MAX : Math.max(this.SECTION_W_MIN, e);
				},
				getSectionsCount: function () {
					var e,
						t = n.get("wisdomTarget"),
						r = this.getSectionWidth();
					t >= this.SECTION_W_MAX ? (e = Math.ceil(t / this.SECTION_W_MAX)) : (e = 1);
					var i = 0,
						s = 0,
						o = 0,
						u = n.get("bookshelf");
					for (o = 0; o < u.length; o += 1) {
						var a = !1,
							f = n.getItemWisdomByAlias(u[o]);
						if (o < u.length - 1) {
							var l = n.getItemWisdomByAlias(u[o + 1]);
							i + f + l >= r && (a = !0);
						} else a = !0;
						a ? ((i = 0), (s += 1)) : (i += f), (o += 1);
					}
					return s > e ? s : e;
				},
				scrollRackForward: function () {
					var e = this,
						t = $("#libraryRackScroll"),
						n = 18,
						r = this.viewParam.sectionWidth + 2 * n,
						i = parseInt(t.css("left"));
					t.animate(
						{
							left: i - r + n + "px",
						},
						100,
						function () {
							e.displayNav();
						}
					);
				},
				scrollRackBack: function () {
					var e = this,
						t = $("#libraryRackScroll"),
						n = 18,
						r = this.viewParam.sectionWidth + 2 * n,
						i = parseInt(t.css("left"));
					t.animate(
						{
							left: i + r - n + "px",
						},
						100,
						function () {
							e.displayNav();
						}
					);
				},
				displayNav: function () {
					var e = $(".library").width(),
						t = 18,
						n = this.viewParam.sectionWidth + t,
						r = this.viewParam.sectionsCount,
						i = $("#libraryShowNav"),
						s = $("#libraryRackScroll"),
						o = parseInt(s.css("left")),
						u = (e - n) / 2 + t;
					i.removeClass("library-show__nav_b"),
						i.removeClass("library-show__nav_f"),
						$(".library-show__nav-ctrl").show(),
						e > o + n * (r - 1) + u &&
							(i.addClass("library-show__nav_b"), $("#libraryShowNavForward").hide()),
						o > 0 && (i.addClass("library-show__nav_f"), $("#libraryShowNavBack").hide());
				},
			});
			return i;
		}
	),
	define("text!screens/library.html!strip", [], function () {
		return '\n<%\nvar isMaxLevel = this.model.get(\'level\') == Application.params.LIBRARY_MAX_LEVEL;\nvar isDissectionAvailable = WardrobeController.isAvailable();\nvar commonInfoTextAction = (isDissectionAvailable)? \'начать чтение или разобрать на свитки\' : \'начать чтение\';\n%>\n\n<div class="library">\n    <div class="library__head">\n        <div class="library__ctrls">\n            <!-- <div id="backButton" class="b-btn-back library__ctrls-back"></div> -->\n            <div id="menuButton" class="b-btn-menu soundingButton library__ctrls-menu"></div>\n            <div id="showInfoPopup" class="library__ctrls-info soundingButton"> \n                <div class="btn-info"></div>\n            </div>\n        </div>\n        <div class="library__head-content">\n            <div class="library__head-title">Библиотека</div>\n            <div class="library__head-level"><%=level%> уровень</div>                            \n        </div>\n    </div>\n\n    <div class="library__content">\n    \n        <div class="library__level-info">\n            <% if (isMaxLevel) { %>\n            Максимальный уровень\n            <% } else { %>\n            <span><%=rewardDescription%></span>\n            <% } %>\n        </div>\n    \n        <div id="libraryRackContainer" class="library-show">\n\n        </div>\n        <!-- /.library-show -->\n        \n        <% if (!isMaxLevel) { %>\n        <div class="library__status"><span class="library__status-text"><%=wisdom%></span>/<%=wisdomTarget%> мудрости набрано</div>\n        <% } %>\n\n        <%\n            var model = this.model;\n            var libraryState = this.model.getState();\n\n            var itemInfo, itemInProgress, readyItems, readyItemsCount, bookWisdom, disassembleReward;\n        %>\n\n        <div class="library-books">\n            <div class="library-books__info">\n                <%\n                for (var i = 1; i <= 4; i +=1 ) {\n                    itemInfo = model.getItemInProgress(i);\n                    readyItems = model.getReadyItemsListByType(i);\n                %>\n                <div class="library-books__info-text"<%=(i==1)? \' style="display: block"\' : \'\'%>>\n                    <%\n                    if (readyItems.length > 0) { %>\n                    Перетащи <span class="library-text-color-type<%=i%>"><%=model.BOOK_NAMES_FOR_INFO[i]%></span> в слот для чтения<%=(isDissectionAvailable)? \' или разбора\' : \'\'%>. \n                    По&nbsp;окончании ты&nbsp;получишь \n                    <span class="g-text-nowrap">\n                        <span class="librayr-books__info-value">+<%=readyItems[0].bookWisdom%></span> \n                        <img class="library-books__info-icon" src="<%= Application.params.staticUrl %>images/app/library/icon-wisdom.png"/>\n                    </span>\n                    <% if (isDissectionAvailable) { %>\n                    или\n                    <span class="g-text-nowrap">\n                        <span class="librayr-books__info-value">+<%=_.findWhere(readyItems[0].disassembleReward, {rewardType : \'papersOnceConst\'}).count%></span> \n                        <img class="library-books__info-icon" src="<%= Application.params.staticUrl %>images/app/library/icon-papers.png"/>\n                    </span> \n                        <% } %>\n                    <% } else { %>\n                    Найди еще <span class="library-text-color-hl"><%=(itemInfo.progress.words - itemInfo.progress.count)%> <%=Application.methods.declension((itemInfo.progress.words - itemInfo.progress.count),[\'слово\',\'слова\',\'слов\'])%></span> длиной <span class="library-text-color-hl"><%=itemInfo.progress.letters%> <%=Application.methods.declension(itemInfo.progress.letters,[\'буква\',\'буквы\',\'букв\'])%></span> и получи <span class="library-text-color-type<%=i%>"><%=model.BOOK_NAMES_FOR_INFO[i]%></span>\n                    <% } %>\n                </div>\n                <% } %>\n            </div>\n            <div class="library-books__content">\n            <%\n            \n            for (var i = 1; i <= 4; i +=1 ) {\n                itemInProgress = model.getItemInProgress(i);\n                console.log(\'itemInProgress: \', itemInProgress);\n                readyItems = model.getReadyItemsListByType(i);\n                readyItemsCount  = model.getReadyItemsCountByType(i);\n                console.log(\'readyItemsCount: \', readyItemsCount);\n                bookWisdom = (readyItemsCount)? readyItems[0].bookWisdom : itemInProgress.bookWisdom;\n                disassembleReward = _.findWhere((readyItemsCount)? readyItems[0].disassembleReward : itemInProgress.disassembleReward, {rewardType : \'papersOnceConst\'}).count;\n            %>\n                <div class="library-books__item <%=(readyItemsCount)? \'\' : \'library-books__item_lock\'%> <%=(i==1)? \'library-books__item_info\' : \'\'%>">\n                <% if (readyItemsCount > 1) { %>\n                    <div class="library-books__item-icon">\n                        <img class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=readyItems[1].alias%>_closed.png" alt="">\n                        <img data-id="<%=readyItems[0].id%>" class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=readyItems[0].alias%>_closed.png" alt="" draggable="false">\n                    </div>\n                    <div class="library-books__item-count"><%=(readyItemsCount > 1)? \'&times;\' + readyItemsCount  : \'&nbsp;\'%></div>\n                <% } else if (readyItemsCount == 1) { %>\n                    <div class="library-books__item-icon">\n                    <% if (itemInProgress) { %>\n                        <img class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=itemInProgress.alias%>_closed.png" alt="">\n                    <% } else { %>\n                        <img class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=model.getItemAliasByType(readyItems[0].type)%>-<%=Math.floor(Math.random() * 4) + 1 %>_closed.png" alt="">\n                    <% } %>\n                        <img data-id="<%=readyItems[0].id%>" class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=readyItems[0].alias%>_closed.png" alt="" draggable="false">\n                    </div>\n                    <div class="library-books__item-count"><%=(readyItemsCount > 1)? \'&times;\' + readyItemsCount  : \'&nbsp;\'%></div>\n                <% } else if (readyItems.length == 0) { %>\n                    <div class="library-books__item-icon">\n                        <img data-id="<%=itemInProgress.id%>" class="library-books__item-img" src="https://cdn.wordbyword.me/content/library/books/<%=itemInProgress.alias%>_closed.png" alt="">\n                    </div>\n                        <% if (itemInProgress.progress) { %>\n                    <div class="library-books__item-progress" style="border-color: <%=itemInProgress.progressColor%>;">\n                        <div class="library-books__item-progress-value" style="width: <%=Math.floor(itemInProgress.progress.count * 100 / itemInProgress.tasks.words)%>%;"></div>\n                    </div>\n                        <% } %>\n                <% } %>\n                    \n                    <div class="library-books__item-data">\n                        <div class="library-books__item-data-row">\n                            <div class="library-books__item-data-value">+<%=bookWisdom%></div>\n                            <div class="library-books__item-data-icon">\n                                <img class="library-books__item-data-img" src="<%= Application.params.staticUrl %>images/app/library/icon-wisdom.png"/>\n                            </div>\n                        </div>\n                        <% if (isDissectionAvailable) { %>\n                        <div class="library-books__item-data-row">\n                            <div class="library-books__item-data-value">+<%=disassembleReward%></div>\n                            <div class="library-books__item-data-icon">\n                                <img class="library-books__item-data-img" src="<%= Application.params.staticUrl %>images/app/library/icon-papers.png"/>\n                            </div>\n                        </div>\n                        <% } %>\n                    </div>\n                </div>\n            <% } %>\n            </div>\n        </div>\n        <!-- /.library-books -->\n\n\n        <% if (!libraryState.reading && !libraryState.disassembling) { %>\n        <div class="library-ctrl">\n            <div class="library-ctrl__list">\n                <% if (isDissectionAvailable) { %>\n                <div class="library-ctrl__item">\n                    <div class="library-ctrl__drop library-ctrl__drop_disassembling">\n                        <div class="library-ctrl__drop-zone" id="disassemblingDropZone"></div>\n                    </div>\n                </div>\n                <div class="library-ctrl__condition">или</div>\n                <div class="library-ctrl__item">\n                    <div class="library-ctrl__drop library-ctrl__drop_reading">\n                        <div class="library-ctrl__drop-zone" id="readingDropZone"></div>\n                    </div>\n                </div>\n                <% } else { %>\n                <div class="library-ctrl__item">\n                    <div class="library-ctrl__drop library-ctrl__drop_reading library-ctrl__drop_single">\n                        <div class="library-ctrl__drop-zone" id="readingDropZone"></div>\n                    </div>\n                </div>\n                <% } %>\n            </div>\n            <div class="library-ctrl__info library-ctrl__info_common">\n                <div class="library-ctrl__info-text" style="display: block">Перетащи <span class="library-text-color-type1">Журнал </span>в круг, <br/>чтобы <%=commonInfoTextAction%></div>\n                <div class="library-ctrl__info-text">Перетащи <span class="library-text-color-type2">Книгу </span>в круг, <br/>чтобы <%=commonInfoTextAction%></div>\n                <div class="library-ctrl__info-text">Перетащи <span class="library-text-color-type3">Трактат </span>в круг, <br/>чтобы <%=commonInfoTextAction%></div>\n                <div class="library-ctrl__info-text">Перетащи <span class="library-text-color-type4">Энциклопедию </span>в круг, <br/>чтобы <%=commonInfoTextAction%></div>\n            </div>\n        </div>\n        <% } else { %>\n        <div class="library-ctrl">\n            <div class="library-ctrl__list">\n                <%\n                var disassemblingItem = model.getDisassemblingItem();\n                console.log(\'disassemblingItem: \', disassemblingItem);\n                %>\n                <% if (!libraryState.disassembling && isDissectionAvailable) { %>\n                <div class="library-ctrl__item">\n                    <div class="library-ctrl__drop library-ctrl__drop_disassembling">\n                        <div class="library-ctrl__drop-zone" id="disassemblingDropZone"></div>\n                        <div class="library-ctrl__drop-info">\n                            <div class="library-ctrl__drop-info-text" style="display: block">Перетащи <span class="library-text-color-type1">Журнал </span>в круг, <br/>чтобы разобрать на свитки</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type2">Книгу </span>в круг, <br/>чтобы разобрать на свитки</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type3">Трактат </span>в круг, <br/>чтобы разобрать на свитки</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type4">Энциклопедию </span>в круг, <br/>чтобы разобрать на свитки</div>\n                        </div>\n                    </div>\n                </div>\n                <% } else if (libraryState.disassembling == \'process\') { %>\n                <div class="library-ctrl__item library-action library-action_disassembling">\n                    <div class="library-action__icon">\n                        <img class="library-action__img" src="https://cdn.wordbyword.me/content/library/books/<%=disassemblingItem.alias%>_disassemble.png" alt=""/>\n                    </div>\n                    <div class="library-action__info">\n                        <div class="library-action__status">\n                            <span class="library-action__status-label">Разбираем </span>\n                            <span class="library-text-color-type<%=disassemblingItem.type%>"><%=model.BOOK_NAMES[disassemblingItem.type]%></span>\n                        </div>\n                        <div class="library-action__time">\n                            <span class="library-action__time-label">осталось </span>\n                            <span id="bookDisassemblingTime" class="library-action__time-data"></span>\n                        </div>\n                    </div>\n                    <% \n                    var finishDisassembleButtonIsAvailable = !GateController.checkLibraryBookDisassembleFinish(disassemblingItem.id);\n                    %>\n                    <% if (Application.params.availableSocialRV && disassemblingItem.disassembleRvEnabled) { %>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id=\'<%=disassemblingItem.id%>\' id="bookDisassembleRVButton" class="library-action__ctrl-btn b-btn b-btn_green">Ускорить</div>\n                    </div>\n                    <% } else { %>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id=\'<%=disassemblingItem.id%>\' id="<%=(finishDisassembleButtonIsAvailable)? \'bookDisassembleButton\' : \'\'%>" class="library-action__ctrl-btn b-btn b-btn_blue">\n                            Не ждать \n                            <div class="library-action__ctrl-coins"><span class="b-coin b-coin_btn"><%=disassemblingItem.disassembleCoins%></span></div>\n                        </div>\n                    </div>\n                    <% } %>\n                </div>\n                <% } else if (libraryState.disassembling == \'finish\') { %>\n                <div class="library-ctrl__item library-action library-action_disassembling">\n                    <div class="library-action__icon">\n                        <img class="library-action__img" src="https://cdn.wordbyword.me/content/library/books/<%=disassemblingItem.alias%>_disassemble.png" alt=""/>\n                    </div>\n                    <div class="library-action__info">\n                        <div class="library-action__status">\n                            <span class="library-text-color-type<%=disassemblingItem.type%>"><%=model.BOOK_NAMES[disassemblingItem.type]%> </span>\n                            <%=model.DISASSEMBLING_FINISH_LABEL[disassemblingItem.type]%>,\n                            <% \n                            var disassemblePapersCount = _.findWhere(disassemblingItem.disassembleReward, {rewardType: \'papersOnceConst\'}).count;\n                            %>\n                            <br/>получено \n                            <span class="library-action__status-data">\n                                <%=disassemblePapersCount%> <%=Application.methods.declension(disassemblePapersCount, [\'свиток\',\'свитка\',\'свитков\'])%>.\n                            </span>\n                        </div>\n                    </div>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id="<%=disassemblingItem.id%>" id="bookDisassembleFinishButton" class="library-action__ctrl-btn b-btn b-btn_blue">Забрать</div>\n                    </div>\n                </div>\n                <% } %>\n\n\n                <% if (!libraryState.reading) { %>\n                <div class="library-ctrl__item">\n                    <div class="library-ctrl__drop library-ctrl__drop_reading">\n                        <div class="library-ctrl__drop-zone" id="readingDropZone"></div>\n                        <div class="library-ctrl__drop-info">\n                            <div class="library-ctrl__drop-info-text" style="display: block">Перетащи <span class="library-text-color-type1">Журнал </span>в круг, <br/>чтобы начать чтение</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type2">Книгу </span>в круг, <br/>чтобы начать чтение</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type3">Трактат </span>в круг, <br/>чтобы начать чтение</div>\n                            <div class="library-ctrl__drop-info-text">Перетащи <span class="library-text-color-type4">Энциклопедию </span>в круг, <br/>чтобы начать чтение</div>\n                        </div>\n                    </div>\n                </div>\n                <% } %>\n                <%\n                var readingItem = model.getReadingItem();\n                %>\n                <% if (libraryState.reading == \'maxLevel\') { %>\n                <div class="library-ctrl__item library-action library-action_max <%=(isDissectionAvailable)? \'\' : \'library-action_single\'%>">\n                    <div class="library-action__icon"><img class="library-action__img" src="<%= Application.params.staticUrl %>images/app/library/icon.png" alt=""/></div>\n                    <div class="library-action__level-max">\n                      <div class="library-action__level-max-text">Скоро станут доступны новые уровни библиотеки.</div>\n                    </div>\n                </div>\n                <% } else if (libraryState.reading == \'completeLevel\') { %>\n                <div class="library-ctrl__item library-action library-action_level <%=(isDissectionAvailable)? \'\' : \'library-action_single\'%>">\n                    <div class="library-action__icon"><img class="library-action__img" src="<%= Application.params.staticUrl %>images/app/library/icon.png" alt=""/></div>\n                    <div class="library-action__info">\n                        <div class="library-action__level-complete">\n                            <div class="library-action__level-complete-title">Ты завершил уровень!</div>\n                            <div class="library-action__level-complete-info">Забери награду и переходи к следующему.</div>\n                        </div>\n                    </div>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div id="levelUpButton" class="library-action__ctrl-btn b-btn b-btn_blue">Забрать</div>\n                    </div>\n                </div>\n                <% } else if (libraryState.reading == \'finish\') { %>\n                <div class="library-ctrl__item library-action library-action_reading <%=(isDissectionAvailable)? \'\' : \'library-action_single\'%>">\n                    <div class="library-action__icon">\n                        <img class="library-action__img" src="https://cdn.wordbyword.me/content/library/books/<%=readingItem.alias%>_open.png" alt=""/>\n                    </div>\n                    <div class="library-action__info">\n                        <div class="library-action__status">\n                            <span class="library-text-color-type<%=readingItem.type%>">\n                                <%=model.BOOK_NAMES[readingItem.type]%>\n                            </span> \n                            <%=model.READING_FINISH_LABEL[readingItem.type]%>, \n                            <br/>набрано \n                            <span class="library-action__status-data"><%=readingItem.bookWisdom%> мудрости.</span>\n                        </div>\n                    </div>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id="<%=readingItem.id%>" id="bookReadFinishButton" class="library-action__ctrl-btn b-btn b-btn_blue">Убрать на полку</div>\n                    </div>\n                </div>\n                <% } else if (libraryState.reading == \'process\') { %>\n                <div class="library-ctrl__item library-action library-action_reading <%=(isDissectionAvailable)? \'\' : \'library-action_single\'%>">\n                    <div class="library-action__icon"><img class="library-action__img" src="https://cdn.wordbyword.me/content/library/books/<%=readingItem.alias%>_open.png" alt=""/></div>\n                    <div class="library-action__info">\n                        <div class="library-action__status">\n                            <span class="library-action__status-label">Читаем</span> \n                            <span class="library-text-color-type<%=readingItem.type%>"><%=model.BOOK_NAMES_FOR_INFO[readingItem.type]%></span>\n                        </div>\n                        <div class="library-action__time">\n                            <span class="library-action__time-label">осталось </span>\n                            <span id="bookReadingTime" class="library-action__time-data"></span>\n                        </div>\n                    </div>\n                    <% \n                    var finishReadButtonIsAvailable = !GateController.checkLibraryBookReadFinish(readingItem.id);\n                    %>\n                    <% if (Application.params.availableSocialRV && readingItem.rvEnabled) { %>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id=\'<%=readingItem.id%>\' id="bookReadRVButton" class="library-action__ctrl-btn b-btn b-btn_green">Ускорить</div>\n                    </div>\n                    <% } else { %>\n                    <div class="library-ctrl__btns library-action__ctrl">\n                        <div data-id=\'<%=readingItem.id%>\' id="<%=(finishReadButtonIsAvailable)? \'bookReadButton\' : \'\'%>" class="library-action__ctrl-btn b-btn b-btn_blue">\n                            Не ждать \n                            <div class="library-action__ctrl-coins"><span class="b-coin b-coin_btn"><%=readingItem.readCoins%></span></div>\n                        </div>\n                    </div>\n                    <% } %>\n                </div>\n                \n                <% } %>\n\n            </div>\n        </div>\n\n        <% } %>\n    \n    </div>\n    \n</div>\n<!-- /.library -->';
	}),
	define(
		"screens/library",
		[
			"gate",
			"application",
			"widget",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/library",
			"models/user",
			"widgets/library/rack",
			"text!screens/library.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = n.extend({
				template: _.template(h),
				el: "#screenContainer",
				events: {
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"click #backButton": function () {
						a.previousScreen();
					},
					"click .library-books__item": function (e) {
						this.showInfo(e.currentTarget);
					},
					"click #bookReadButton": "bookReadHandler",
					"click #bookReadRVButton": "bookReadRVHandler",
					"click #bookReadFinishButton": "bookReadFinishHandler",
					"click #bookDisassembleButton": "bookDisassembleHandler",
					"click #bookDisassembleRVButton": "bookDisassembleRVHandler",
					"click #bookDisassembleFinishButton": "bookDisassemlbeFinishHandler",
					"click #levelUpButton": "levelUpHandler",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function () {
					(this.model = f),
						(this.drag = !1),
						(this.dragItem = null),
						(this.dragItemCount = ""),
						(this.dragItemCoords = {}),
						(this.dragItemShift = {}),
						(this.dragItemIcon = null),
						(this.dropZoneReading = null),
						(this.dropZoneReadingCoords = {}),
						(this.dropZoneReadingSize = 0),
						(this.dropZoneReadingCheck = !1),
						(this.dropZoneDisassembling = null),
						(this.dropZoneDisassemblingCoords = {}),
						(this.dropZoneDisassemblingSize = 0),
						(this.dropZoneDisassemblingCheck = !1),
						(this.viewParam = {
							Application: t,
							GateController: r,
							WardrobeController: s,
						}),
						this.listenTo(this.model, "change", this.render);
				},
				initializeWidgets: function () {
					this.widgets = [new c()];
				},
				afterRender: function () {
					var e = this;
					(this.state = this.model.getState()), console.log("library state: ", this.state);
					var t = this.state,
						n = s.isAvailable();
					this.timer && clearInterval(this.timer),
						(!t.reading || (!t.disassembling && n)) &&
							this.model.getReadyItemsCount() > 0 &&
							this.addDragEvents();
					if (t.reading == "process" || t.disassembling == "process")
						console.log("reading or disassembling"),
							this.printProcessTime(),
							(this.timer = setInterval(function () {
								e.printProcessTime();
							}, 1e4));
				},
				addDragEvents: function () {
					var e = $(".l-screen")[0];
					(this.touchStart = this.touchStart.bind(this)),
						(this.touchEnd = this.touchEnd.bind(this)),
						(this.touchMove = this.touchMove.bind(this)),
						(this.mouseMove = this.mouseMove.bind(this)),
						(this.mouseDown = this.mouseDown.bind(this)),
						(this.mouseUp = this.mouseUp.bind(this)),
						e.addEventListener("touchstart", this.touchStart, !1),
						e.addEventListener("touchmove", this.touchMove, !1),
						e.addEventListener("touchend", this.touchEnd, !1),
						e.addEventListener("mousemove", this.mouseMove, !1),
						e.addEventListener("mousedown", this.mouseDown, !1),
						e.addEventListener("mouseup", this.mouseUp, !1);
				},
				removeDragEvents: function () {
					var e = $(".l-screen")[0];
					e.removeEventListener("touchstart", this.touchStart),
						e.removeEventListener("touchend", this.touchEnd),
						e.removeEventListener("touchmove", this.touchMove),
						e.removeEventListener("mousemove", this.mouseMove),
						e.removeEventListener("mousedown", this.mouseDown),
						e.removeEventListener("mouseup", this.mouseUp);
				},
				touchStart: function (e) {
					if (this.drag) return !1;
					this.startDrag(e.touches[0]);
				},
				touchEnd: function (e) {
					this.endDrag();
				},
				touchMove: function (e) {
					this.drag && this.processDrag(e.touches[0]);
				},
				mouseDown: function (e) {
					if (this.drag) return !1;
					this.startDrag(e);
				},
				mouseUp: function (e) {
					this.endDrag();
				},
				mouseMove: function (e) {
					this.drag && this.processDrag(e);
				},
				startDrag: function (e) {
					var t,
						n,
						r = $(e.target).parents(".library-books__item");
					r.length &&
						!$(r[0]).hasClass("library-books__item_lock") &&
						((this.drag = !0),
						(this.dropZoneReading = $("#readingDropZone")),
						(this.dropZoneDisassembling = $("#disassemblingDropZone")),
						(this.dragItem = $(r[0])),
						(t = this.dragItem.find(".library-books__item-img")),
						(this.dragItemIcon = $(t[t.length - 1])),
						this.dragItem.css("zIndex", 10),
						(this.dragItemCoords = {
							x: this.dragItemIcon.offset().left,
							y: this.dragItemIcon.offset().top,
						}),
						(this.dragItemShift = {
							x: e.pageX - this.dragItemCoords.x,
							y: e.pageY - this.dragItemCoords.y,
						}),
						this.showInfo(this.dragItem),
						this.processDrag(e),
						(this.dragItemCount = this.dragItem.children(".library-books__item-count").html()),
						(n = parseInt(this.dragItemCount)),
						n > 1
							? this.dragItem.children(".library-books__item-count").html("&times;" + (n - 1))
							: this.dragItem.addClass("library-books__item_lock"));
				},
				processDrag: function (e) {
					var t = {},
						n = {};
					(t.x = e.pageX - this.dragItemShift.x),
						(t.y = e.pageY - this.dragItemShift.y),
						this.dragItemIcon.css("left", t.x - this.dragItemCoords.x + "px"),
						this.dragItemIcon.css("top", t.y - this.dragItemCoords.y + "px"),
						(n.width = this.dragItemIcon.width()),
						(n.height = this.dragItemIcon.height()),
						this.dropZoneReading.length &&
							((this.dropZoneReadingCoords.x =
								parseInt(this.dropZoneReading.offset().left) - this.dragItemShift.x),
							(this.dropZoneReadingCoords.y =
								parseInt(this.dropZoneReading.offset().top) - this.dragItemShift.y),
							(this.dropZoneReadingSize = this.dropZoneReading.width()),
							t.x - this.dragItemShift.x >= this.dropZoneReadingCoords.x - n.width &&
							t.x - this.dragItemShift.x <=
								this.dropZoneReadingCoords.x + this.dropZoneReadingSize &&
							t.y - this.dragItemShift.y >= this.dropZoneReadingCoords.y - n.height &&
							t.y - this.dragItemShift.y <= this.dropZoneReadingCoords.y + this.dropZoneReadingSize
								? ((this.dropZoneReadingCheck = !0),
								  this.dropZoneReading
										.parent()
										.addClass("library-ctrl__drop_reading-active")
										.removeClass("library-ctrl__drop_reading"))
								: ((this.dropZoneReadingCheck = !1),
								  this.dropZoneReading
										.parent()
										.addClass("library-ctrl__drop_reading")
										.removeClass("library-ctrl__drop_reading-active"))),
						this.dropZoneDisassembling.length &&
							((this.dropZoneDisassemblingCoords.x =
								parseInt(this.dropZoneDisassembling.offset().left) - this.dragItemShift.x),
							(this.dropZoneDisassemblingCoords.y =
								parseInt(this.dropZoneDisassembling.offset().top) - this.dragItemShift.y),
							(this.dropZoneDisassemblingSize = this.dropZoneDisassembling.width()),
							t.x - this.dragItemShift.x >= this.dropZoneDisassemblingCoords.x - n.width &&
							t.x - this.dragItemShift.x <=
								this.dropZoneDisassemblingCoords.x + this.dropZoneDisassemblingSize &&
							t.y - this.dragItemShift.y >= this.dropZoneDisassemblingCoords.y - n.height &&
							t.y - this.dragItemShift.y <=
								this.dropZoneDisassemblingCoords.y + this.dropZoneDisassemblingSize
								? ((this.dropZoneDisassemblingCheck = !0),
								  this.dropZoneDisassembling
										.parent()
										.addClass("library-ctrl__drop_disassembling-active")
										.removeClass("library-ctrl__drop_disassembling"))
								: ((this.dropZoneDisassemblingCheck = !1),
								  this.dropZoneDisassembling
										.parent()
										.addClass("library-ctrl__drop_disassembling")
										.removeClass("library-ctrl__drop_disassembling-active")));
				},
				endDrag: function () {
					var t = this;
					if (!this.drag) return !1;
					this.dropZoneReadingCheck
						? (!l.checkProVersion() && this.state.disassembling == "process"
								? (this.returnBookTolist(),
								  u.add({
										type: "proVersion",
										params: {
											reason: "library",
										},
								  }))
								: (this.dragItemIcon.fadeOut(),
								  this.removeDragEvents(),
								  e.libraryBookReadStart(this.dragItemIcon.data("id")),
								  i.sendDesignEvent("Screen_actions:library:read_start")),
						  (this.dropZoneReadingCheck = !1))
						: this.dropZoneDisassemblingCheck
						? (!l.checkProVersion() && this.state.reading == "process"
								? (this.returnBookTolist(),
								  u.add({
										type: "proVersion",
										params: {
											reason: "library",
										},
								  }))
								: (this.dragItemIcon.fadeOut(),
								  this.removeDragEvents(),
								  e.libraryBookDisassembleStart(this.dragItemIcon.data("id")),
								  i.sendDesignEvent("Screen_actions:library:disassemble_start")),
						  (this.dropZoneDisassemblingCheck = !1))
						: this.returnBookTolist(),
						(this.drag = !1);
				},
				returnBookTolist: function () {
					var e = this;
					this.dragItemIcon.animate(
						{
							left: 0,
							top: 0,
						},
						300,
						function () {
							e.dragItem.css("zIndex", "auto");
						}
					),
						this.dragItem.children(".library-books__item-count").html(this.dragItemCount),
						this.dragItem.removeClass("library-books__item_lock");
				},
				showInfo: function (e) {
					var t = this.state,
						e = $(e),
						n = $(".library-books__item").index(e);
					$(".library-books__item").removeClass("library-books__item_info"),
						e.addClass("library-books__item_info"),
						$(".library-books__info-text").hide(),
						$(".library-books__info-text").eq(n).show();
					if (!t.reading && !t.disassembling)
						$(".library-ctrl__info-text").hide(), $(".library-ctrl__info-text").eq(n).show();
					else if (!t.reading || !t.disassembling)
						$(".library-ctrl__drop-info-text").hide(),
							$(".library-ctrl__drop-info-text").eq(n).show();
				},
				showBuyCoinsPopup: function () {
					purchase
						? u.add({
								type: "buyCoins",
						  })
						: u.add({
								type: "text",
								params: {
									header: "",
									text: "Недостаточно монет для ускорения.",
									list: null,
									cursiv: null,
								},
						  });
				},
				bookReadHandler: function () {
					var e = $("#bookReadButton"),
						t = e.data("id"),
						n = f.getReadingItem(),
						s = n.readCoins;
					l.get("balance") >= s
						? (r.libraryBookReadFinish(t, "coins"),
						  e.attr("id", "").addClass("b-btn_disabled"),
						  this.timer && clearInterval(this.timer),
						  i.sendResourceEvent("coins", -s, "readBook", "Consumed"),
						  i.sendDesignEvent("Screen_actions:library:read_coins"))
						: this.showBuyCoinsPopup();
				},
				bookReadRVHandler: function () {
					var id = $("#bookReadRVButton").data("id");
					e.libraryBookRewardVideo(id);
				},
				bookReadFinishHandler: function () {
					var t = $("#bookReadFinishButton").data("id");
					e.libraryBookReadFinish(t, "time"),
						i.sendDesignEvent("Screen_actions:library:put_on_shelf");
				},
				bookDisassembleHandler: function () {
					var e = $("#bookDisassembleButton"),
						t = e.data("id"),
						n = f.getDisassemblingItem(),
						i = n.disassembleCoins;
					l.get("balance") >= i
						? (r.libraryBookDisassembleFinish(t, "coins"),
						  e.attr("id", "").addClass("b-btn_disabled"),
						  this.timer && clearInterval(this.timer))
						: this.showBuyCoinsPopup();
				},
				bookDisassembleRVHandler: function () {
					var e = $("#bookDisassembleRVButton").data("id"),
						t = f.getDisassemblingItem();
					u.add({
						type: "library.boost",
						params: {
							screen: this,
							type: "disassembling",
							id: e,
							reduceRvTime: t.disassembleRvSeconds,
							costs: t.disassembleCoins,
						},
					});
				},
				bookDisassemlbeFinishHandler: function () {
					var t = $("#bookDisassembleFinishButton").data("id");
					e.libraryBookDisassembleFinish(t, "time");
				},
				levelUpHandler: function () {
					e.libraryLevelUp(), i.sendDesignEvent("Screen_actions:library:level_up");
				},
				printProcessTime: function () {
					function e(e) {
						var t, n, r, i, s, o;
						return (
							(t = Math.floor(e / 60 / 60 / 24)),
							(n = Math.floor((e - t * 24 * 60 * 60) / 60 / 60)),
							(r = Math.floor((e - t * 24 * 60 * 60 - n * 60 * 60) / 60)),
							(i = t ? t + " д. " : ""),
							(s = n ? n + " ч. " : ""),
							(o = r ? r + " мин." : "меньше минуты"),
							(t || n) && r == 0 && (o = ""),
							i + s + o
						);
					}
					var n = this.model.getReadingItem(),
						r = this.model.getDisassemblingItem();
					if (!n && !r) return !1;
					var i = n ? n.ts.start + n.readTime - t.methods.getCurrentTimestamp() : 0,
						s = r ? r.ts.start + r.disassembleTime - t.methods.getCurrentTimestamp() : 0;
					i > 0 && $("#bookReadingTime").text(e(i)),
						s > 0 && $("#bookDisassemblingTime").text(e(s));
					if (
						(this.state.reading == "process" && i <= 0) ||
						(this.state.disassembling == "process" && s <= 0)
					)
						clearInterval(this.timer), this.render();
				},
				showInfoPopup: function () {
					o.showInfoPopup("library");
				},
			});
			return p;
		}
	),
	define(
		"widgets/clan/settings-btn",
		["widget", "controllers/gameanalytics", "models/appState", "models/user", "models/clan/main"],
		function (e, t, n, r, i) {
			var s = e.extend({
				el: "#clanSettings",
				events: {
					"click #clanSettingsBtn": "showSettings",
				},
				initialize: function () {
					(this.template = _.template(
						'<div id="clanSettingsBtn" class="b-clan-head__settings__icon"></div>'
					)),
						(this.viewParam = {});
				},
				showSettings: function () {
					var e = _.findWhere(i.get("clanData").members, {
							id: r.id,
						}),
						s = _.findWhere(i.get("userClanPermissionInfo"), {
							role: e.role,
						}).permissions;
					s.hasClanSettingsEditPermission
						? (t.sendDesignEvent("Screen_actions:Clan_my:settings"),
						  n.setScreen({
								screen: "clanSettings",
								params: {
									mode: "edit",
								},
						  }))
						: n.setScreen({
								screen: "clanSettings",
								params: {
									mode: "view",
								},
						  });
				},
			});
			return s;
		}
	),
	define("text!widgets/clan/head.html!strip", [], function () {
		return '<%\nvar user = _.findWhere(clanData.members, {id: UserModel.id});\nvar userPermissions = (!_.isEmpty(userClanPermissionInfo))? _.findWhere(userClanPermissionInfo, {role: user.role}).permissions : {};\n%>\n\n<div class="b-clan-head__nav">\n    <div id="backButton" class="b-btn-back"></div>\n</div>\n<div id="clanSettings" class="b-clan-head__settings soundingButton"></div>\n\n<div class="b-clan-scarf">\n    <div class="b-clan-scarf-i">\n        <div class="b-clan-scarf__icon">\n            <img class="b-clan-scarf__icon-i" src="<%=clanData.main.avatar%>" alt="">\n        </div>\n        <div class="b-clan-scarf__text">\n            <div class="b-clan-scarf__title">\n                <%=clanData.main.name%>\n            </div>\n            <div class="b-clan-scarf__slogan">\n                <%=clanData.main.message%>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /.b-clan-scarf -->\n\n<div class="b-clan-info">\n    <div class="b-clan-info__rate">\n        <div class="b-clan-info__label">Рейтинг</div>\n        <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.topPosition%></span></div>\n        <div id="clanTop" class="b-clan-info__ctrl soundingButton">Все кланы</div>\n    </div>\n    <div class="b-clan-info-i">\n        <% if (clanData.main.checkpoint) { %>\n        <div id="clanMilestone" class="b-clan-info__milestone soundingButton">\n            <img class="b-clan-info__milestone__icon" src="<%=Application.params.staticUrl%>images/app/clan/milestone.png" alt="">\n            <div class="b-clan-info__milestone__data">\n                <span class="b-clan-info__milestone__data-i"><%=clanData.main.level%></span> \n                / \n                <%=(clanData.main.level + clanData.main.checkpoint.progress.steps - clanData.main.checkpoint.progress.complete)%>\n            </div>\n        </div>\n        <% } else { %>\n            <img class="b-clan-info__flag" src="<%=Application.params.staticUrl%>images/app/icon-flag.png" alt="">\n        <% } %>\n    </div>\n    <div class="b-clan-info__list">\n        <div class="b-clan-info__label">Игроки</div>\n        <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.members.length%></span> / <%=clanData.main.maxMemberCount%></div>\n        <% if (clanRequestData.length > 0 && userPermissions.hasClanRequestControlPermission) { %>\n        <div id="clanRequests" class="b-clan-info__ctrl soundingButton">Заявки<span class="b-clan-info__ctrl__counter"><%=clanRequestData.length %></span></div>\n        <% } else { %>\n        <div id="clanMembers" class="b-clan-info__ctrl soundingButton">Перепись</div>\n        <% } %>\n    </div>\n</div>\n<!-- /.b-clan-info -->';
	}),
	define(
		"widgets/clan/head",
		[
			"gate",
			"widget",
			"application",
			"controllers/onboarding",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"models/clan/main",
			"collections/popups",
			"widgets/clan/settings-btn",
			"text!widgets/clan/head.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = t.extend({
				template: _.template(l),
				el: "#clanHead",
				events: {
					"click #clanMembers": "clanMembersHandler",
					"click #clanRequests": "clanRequestsHandler",
					"click #clanTop": "clanTopHandler",
					"click #clanMilestone": "showClanMilestoneInfo",
					"click #backButton": function () {
						s.previousScreen();
					},
				},
				initialize: function () {
					var e = this;
					(this.model = u),
						this.listenTo(u, "change", this.render),
						(this.viewParam = {
							Application: n,
							UserModel: o,
						});
				},
				afterRender: function () {},
				initializeWidgets: function () {
					this.widgets = [new f()];
				},
				showClanMilestoneInfo: function () {
					var e = this.model.get("clanData"),
						t = {
							level:
								e.main.level +
								e.main.checkpoint.progress.steps -
								e.main.checkpoint.progress.complete,
							reward: e.main.checkpoint.reward,
						};
					i.sendDesignEvent("Screen_actions:Clan_my:milestone"),
						a.add({
							type: "clanMilestone",
							params: {
								data: t,
							},
						});
				},
				clanTopHandler: function () {
					i.sendDesignEvent("Screen_actions:Clan_my:all_clans"),
						s.setScreen({
							screen: "clanTop",
						});
				},
				clanMembersHandler: function () {
					e.clanGetOwn(),
						this.listenToOnce(e, "clanGetOwn", function () {
							s.setScreen({
								screen: "clanUsersList",
								params: {
									type: "members",
								},
							}),
								i.sendDesignEvent("Screen_actions:Clan_my:list_members");
						});
				},
				clanRequestsHandler: function () {
					e.clanGetOwn(),
						this.listenToOnce(e, "clanGetOwn", function () {
							s.setScreen({
								screen: "clanUsersList",
								params: {
									type: "requests",
								},
							});
						});
				},
			});
			return c;
		}
	),
	define("text!widgets/clan/index-foot.html!strip", [], function () {
		return '<%\nvar msToFreeBattle = this.model.calcMsToFreeBattle();\nvar clanSafeIsOpening = (ClanSafeModel.get(\'status\') == \'opening\')? true : false;\n%>\n    <div class="b-clan-foot-i">\n        <div class="b-clan-battle-start">\n            <% if (clanData.task.state) { %>\n                <% if (clanSafeIsOpening) { %>\n            <div id="clanBattleBtn" class="b-btn b-btn_blue b-clan-battle-start__ctrl">\n                <span class="b-clan-battle-start__safe"></span>На взлом сейфа!\n            </div>\n                <% } else { %>\n            <div id="clanBattleBtn" class="b-btn b-btn_green b-clan-battle-start__ctrl">\n                Задание выполнено\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i"></div>\n                </div>\n            </div>\n                <% } %>\n            <p id="clanBattleStatus" class="b-clan-battle-start__status">\n                До нового задания \n                <span class="b-clan-battle-start__status__time">\n                <%=Application.methods.getHoursMinutesFromMS(moment(clanData.task.tsNextTask * 1000).diff(moment()))%>\n                </span>\n            </p>\n            <% } else { %>\n            <div id="clanBattleBtn" class="b-btn <%=(msToFreeBattle > 0)? \'b-btn_blue\' : \'b-btn_green\'%> b-clan-battle-start__ctrl">\n                <span class="b-clan-battle-start__progress">\n                    <canvas id="clanBattleProgress" class="b-clan-battle-start__progress-i" width="50" height="50"></canvas>\n                </span>\n                На словесную битву\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i"></div>\n                </div>\n                <!-- /.b-onboarding -->  \n            </div>\n            <p id="clanBattleStatus" class="b-clan-battle-start__status">\n                <% if (msToFreeBattle > 0) { %>\n                    До бесплатного боя \n                    <span class="b-clan-battle-start__status__time">\n                    <%=Application.methods.getHoursMinutesFromMS(msToFreeBattle)%>\n                    </span>\n                <% } else { %>\n                    &nbsp;\n                <% } %>\n            </p>\n            <% } %>\n                                          \n        </div>\n        <!-- /.b-clan-battle-start -->\n    </div>\n';
	}),
	define(
		"widgets/clan/index-foot",
		[
			"gate",
			"widget",
			"application",
			"controllers/onboarding",
			"controllers/gameanalytics",
			"controllers/popups",
			"models/appState",
			"models/user",
			"models/clan/main",
			"models/clan/safe/main",
			"text!widgets/clan/index-foot.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = t.extend({
				template: _.template(l),
				el: "#clanIndex",
				events: {
					"click #clanBattleBtn": "clanBattleBtnHandler",
				},
				initialize: function () {
					var e = this;
					(this.model = a),
						this.listenTo(a, "change", this.onChangeModel),
						this.listenTo(a, "changeTimer", this.onChangeTimer),
						(this.viewParam = {
							Application: n,
							ClanSafeModel: f,
						}),
						(this.timer = a.timerStart()),
						this.initOnboarding();
				},
				afterRender: function () {
					var e = r.get("clanMember");
					(_this = this), this.drawProgress(), e == 1 && this.showOnboarding(2);
				},
				drawProgress: function () {
					if (o.get("screen") != "clan") return;
					var e = this.model.get("clanData").task;
					if (!e.scores || e.state) $(".b-clan-battle-start__progress").hide();
					else {
						var t = (2 * Math.PI * e.scores) / e.maxScores;
						console.log("progress canvas el: ", this.$el.find("#clanBattleProgress")[0]);
						try {
							var n = this.$el.find("#clanBattleProgress")[0],
								r = n.width,
								i = n.getContext("2d");
							(i.fillStyle = "#4e4468"),
								i.beginPath(),
								i.moveTo(r / 2, r / 2),
								i.arc(r / 2, r / 2, r / 2, t - Math.PI / 2, -Math.PI / 2),
								i.closePath(),
								i.fill();
						} catch (s) {
							console.warn("task canvas error: ", s);
						}
					}
				},
				onChangeModel: function () {
					_.isEmpty(a.get("clanData")) || ((this.timer = a.timerStart()), this.render());
				},
				onChangeTimer: function () {
					this.render();
				},
				clanBattleBtnHandler: function (e) {
					var t = r.get("clanMember");
					if (t == 1) {
						if (
							$(e.target).hasClass("b-onboarding__text") ||
							$(e.target).hasClass("b-onboarding__text-i")
						)
							return !1;
						$("#cover").hide(), r.set("clanMember", 2);
					}
					i.sendDesignEvent("Screen_actions:Clan_my:clan_task"),
						o.setScreen({
							screen: "clanTask",
						});
				},
				initOnboarding: function () {
					(this.clanOnboardingStatus = r.get("clanMember")),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding-popup").on("click", this.closeOnboarding.bind(this)),
						this.clanOnboardingStatus || this.showOnboarding(1),
						this.clanOnboardingStatus == 1 && this.showOnboarding(2);
				},
				showOnboarding: function (e) {
					console.log("showOnboarding number:", e);
					switch (e) {
						case 1:
							$("#cover").show(),
								_.findWhere(a.get("clanData").members, {
									id: u.id,
								}).role == 3
									? $(".b-onboarding-popup_clan-leader").show()
									: $(".b-onboarding-popup_clan-member").show();
							break;
						case 2:
							var t = $("#clanBattleBtn");
							$("#cover").show(),
								t.addClass("b-onboarding b-onboarding_clan-index"),
								_.findWhere(a.get("clanData").members, {
									id: u.id,
								}).role == 3
									? t
											.find(".b-onboarding__text")
											.show()
											.children()
											.text(
												"Твоя задача — привести свой клан к победе и оставить позади другие кланы. Для этого нужно выполнять задания клана. Нажми кнопку."
											)
									: t
											.find(".b-onboarding__text")
											.show()
											.children()
											.text(
												"Для выполнения кланового задания, получай очки за найденные на поле слова. Чем больше попыток – тем больше твой вклад в общее дело!"
											);
					}
				},
				closeOnboarding: function () {
					console.log("closeOnboarding");
					var e = r.get("clanMember");
					console.log("clanOnboardingStatus: ", e),
						e ||
							($("#cover").hide(),
							$(".b-onboarding-popup_clan-leader").hide(),
							$(".b-onboarding-popup_clan-member").hide(),
							r.set("clanMember", 1),
							this.showOnboarding(2)),
						e == 1 &&
							($("#cover").hide(),
							$("#clanBattleBtn")
								.removeClass("b-onboarding b-onboarding_clan-index")
								.find(".b-onboarding__text")
								.hide(),
							r.set("clanMember", 2),
							s.changePopup());
				},
			});
			return c;
		}
	),
	define("models/clan/chat", ["backbone", "gate"], function (e, t) {
		var n = e.Model.extend({
			initialize: function () {
				var e = this;
				t.on("clanChatMessageInfo", function (t) {
					e.addMessages(t.messageInfo);
				});
			},
			setStorageKey: function (e) {
				this.storageKey = "clanChat_" + e;
			},
			getMessages: function () {
				var e = this;
				this.listenToOnce(t, "storage.get." + e.storageKey, function (t) {
					if (t.length > 0 && t != "[]") {
						var n,
							r = JSON.parse(t),
							i = r.length,
							s = r[0].id;
						for (n = i - 1; n > 0; n -= 1)
							if (r[n].id != "clanJoinWelcome") {
								s = r[n].id;
								break;
							}
						e.set({
							messages: r,
						}),
							e.loadLastMessages(s);
					} else e.loadAllMessages();
				}),
					t.storage.get(e.storageKey, !0);
			},
			loadAllMessages: function () {
				var e = this;
				t.clanChatGetNewMessages(),
					t.once("clanChatGetNewMessages", function (n) {
						e.set(n),
							t.storage.set(e.storageKey, JSON.stringify(n.messages), !0),
							e.trigger("getMessages");
					});
			},
			loadLastMessages: function (e) {
				var n = this;
				t.clanChatGetNewMessages(e),
					t.once("clanChatGetNewMessages", function (e) {
						e.messages.length > 0 && n.addMessages(e.messages), n.trigger("getMessages");
					});
			},
			addMessages: function (e) {
				var n = this,
					r = e,
					i = _.clone(this.attributes);
				_.isEmpty(i) || ((i.messages = i.messages.concat(r)), this.set(i), this.trigger("change")),
					this.listenToOnce(t, "storage.get." + n.storageKey, function (e) {
						if (e.length > 0) {
							var i = JSON.parse(e);
							(i = i.concat(r)), t.storage.set(n.storageKey, JSON.stringify(i), !0);
						}
					}),
					t.storage.get(n.storageKey, !0);
			},
			addWelcomeMessage: function (e) {
				var t = [];
				t.push(e), this.addMessages(t);
			},
		});
		return _.extend(n, e.Events), new n();
	}),
	define("text!widgets/clan/chat-list.html!strip", [], function () {
		return "<% \n\nvar message = null;\nvar messageTS = 0;\nvar messageDay = null;\nvar messageDate = null;\nvar dateTextForGroup = '';\nvar messages = ClanChatModel.get('messages');\nvar date = 0;\nvar today = moment().startOf('day');\nvar yesterday = moment().add(-1, 'days').startOf('day');\n\nvar actionsSentByUniverse = [\n        'clanJoinWelcome', \n        'levelUp', \n        'seasonPassBonus', \n        'clanSafeOpening', \n        'clanSafeBroken', \n        'clanSafeOpen'\n    ];\nvar notDisplayActions = [\n        'clan_group_grail_new',\n        'clan_group_grail_challenge_failed',\n        'clan_grail_lose_attack',\n        'clan_grail_win_attack',\n        'grail_new'\n    ];\n\nif (!_.isEmpty(messages)) {\n    messages.forEach(function(el) {\n        message = el;\n        messageTS = message.tsCreate * 1000;\n        messageDay = moment(messageTS).date();\n        messageDate = moment(messageTS);\n\n        if (messageDay !== date) {\n            if (messageDate < yesterday) {\n                dateTextForGroup = moment(messageTS).format('D MMMM YYYY');\n            } else if (messageDate >= yesterday && messageDate <= today) {\n                dateTextForGroup = 'Вчера';\n            } else if (messageDate > today) {\n                dateTextForGroup = 'Сегодня';\n            }\n            date = messageDay; %>\n            <div class=\"chat__date\"><%= dateTextForGroup %></div>\n        <% }\n        \n        switch (message.type) {\n            case 1: \n                %>\n                <div class=\"chat-message \n                    <%=(message.params.role == 3)? 'chat-message_clanLeader' : ''%> \n                    <%=(message.main)? 'chat-message_main' : ''%> \n                    <%=(UserModel.get('id') == message.params.id)? 'chat-message_outgoing' : 'chat-message_income'%>\n                \">\n                    <div class=\"chat-message__time\"><%=moment(messageTS).format('HH:mm')%></div>\n                    <div class=\"chat-message__content\">\n                        <div class=\"chat-message__text\"><%=message.text%></div>\n                        <div class=\"chat-message__sign\"><%=message.params.playerName%></div>\n                    </div>\n                </div>\n                <!-- /.chat-message -->\n                <%\n                break;\n\n            case 2: \n                if (actionsSentByUniverse.indexOf(message.params.action) != -1) {\n                    %>\n                    <div class=\"chat-message chat-message_universe\">\n                        <div class=\"chat-message__time\"><%=moment(messageTS).format('HH:mm')%></div>\n                        <div class=\"chat-message__content\">\n                            <div class=\"chat-message__text\"><%=message.text%></div>\n                            <div class=\"chat-message__sign\">Мироздание</div>\n                        </div>\n                    </div>\n                    <!-- /.chat-message -->\n                    <%\n                } else if (notDisplayActions.indexOf(message.params.action) == -1) {\n                    %>\n                    <div class=\"chat-message chat-message_system chat-message_<%=message.params.action%>\">\n                        <div class=\"chat-message__time\"><%=moment(messageTS).format('HH:mm')%></div>\n                        <div class=\"chat-message__content\">\n                            <%=message.text%>\n                        </div>\n                    </div>\n                    <!-- /.chat-message -->\n                    <%\n                }\n                break;\n        }\n    }); \n}    \n%>";
	}),
	define(
		"widgets/clan/chat-list",
		[
			"gate",
			"widget",
			"application",
			"models/appState",
			"models/user",
			"models/clan/main",
			"models/clan/chat",
			"text!widgets/clan/chat-list.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#clanChatList",
				events: {
					"click #clanChatSend": "sendMessage",
					"click #clanChatSendMain": "sendMainMessage",
				},
				initialize: function (e) {
					var t = this;
					(this.params = e),
						(this.model = s),
						this.listenTo(o, "change", function () {
							t.render();
						}),
						this.listenTo(o, "getMessages", function () {
							t.params.welcomeMessage &&
								s.get("clanData").main.welcomeMessage &&
								t.params.userId == i.get("id") &&
								t.addWelcomeMessage();
						}),
						(this.viewParam = {
							UserModel: i,
							ClanChatModel: o,
							Application: n,
						}),
						o.setStorageKey(
							i.get("id").toString() + "_" + s.get("clanData").main.clanId.toString()
						),
						o.getMessages();
				},
				afterRender: function () {
					this.scrollToBottom(0);
				},
				addWelcomeMessage: function () {
					var e = {
						cid: "",
						clanId: s.get("clanData").main.clanId,
						id: "clanJoinWelcome",
						main: !1,
						params: {
							action: "clanJoinWelcome",
						},
						text: s.get("clanData").main.welcomeMessage,
						tsCreate: n.methods.getCurrentTimestamp(),
						type: 2,
					};
					o.addWelcomeMessage(e);
				},
				scrollToBottom: function (e) {
					e = e === undefined ? 1500 : e;
					var t = $("#clanChatList");
					t.animate(
						{
							scrollTop: t[0].scrollHeight,
						},
						e
					);
				},
			});
			return a;
		}
	),
	define("text!widgets/clan/chat-form.html!strip", [], function () {
		return '<form action="#" class="chat__form-content">\n    <input id="clanChatText" name="" class="chat__input" type="text" autocomplete="off" maxlength="140" placeholder="Написать сообщение">\n    <input id="clanChatSend" value="" class="chat__submit" type="submit">\n</form>\n';
	}),
	define(
		"widgets/clan/chat-form",
		[
			"gate",
			"widget",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"models/clan/main",
			"collections/popups",
			"text!widgets/clan/chat-form.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = t.extend({
				template: _.template(a),
				el: "#clanChatForm",
				events: {
					"click #clanChatSend": "sendMessage",
				},
				initialize: function (e) {
					this.limitPerMinute = 5;
				},
				afterRender: function () {
					platform == "desktop" && $("#clanChatText").focus();
				},
				sendMessage: function (t) {
					t.preventDefault();
					var n = $("#clanChatText").val(),
						i = !1;
					n &&
						this.checkLimits() &&
						(r.sendDesignEvent("Screen_actions:Clan_my:chat_send"),
						e.clanChatSendMessage(n, i),
						$("#clanChatText").val(""));
				},
				checkLimits: function () {
					var e = s.get("id") + "_clanChatMessages",
						t = n.methods.getCurrentTimestamp(),
						r = JSON.parse(localStorage.getItem(e)) || [];
					return (
						console.log("messagesLS: ", r),
						_.isEmpty(r) || r.length < this.limitPerMinute
							? (r.push(t), localStorage.setItem(e, JSON.stringify(r)), !0)
							: r[0] + 60 < t
							? (r.shift(), r.push(t), localStorage.setItem(e, JSON.stringify(r)), !0)
							: (u.add({
									type: "clanChatInfo",
									params: {
										type: "limit",
									},
							  }),
							  !1)
					);
				},
			});
			return f;
		}
	),
	define("text!screens/clan/index.html!strip", [], function () {
		return '\n<div id="clanHead" class="b-clan-head">\n    \n</div>\n<!-- /.b-clan-head -->\n\n\n<div class="chat chat_clan">\n\n    <div id="clanChatList" class="chat__content"></div>\n    \n    <div id="clanChatForm" class="chat__form"></div>\n    <!-- /.chat__form -->\n</div>\n<!-- /.chat -->\n\n\n<div id="clanIndex" class="b-clan-foot">\n\n</div>\n<!-- /.b-clan-foot -->\n\n<div class="b-onboarding-popup b-onboarding-popup_clan-leader">\n    <div class="b-onboarding-popup__text">Рады приветствовать Главу нашего клана! <br> Давай разберемся, что тут к чему.</div>\n</div>\n<!-- /.b-onboarding -->\n\n<div class="b-onboarding-popup b-onboarding-popup_clan-member">\n    <div class="b-onboarding-popup__text">Поздравляем со вступлением в клан!</div>\n</div>\n<!-- /.b-onboarding -->\n\n';
	}),
	define(
		"screens/clan/index",
		[
			"widget",
			"application",
			"models/appState",
			"widgets/clan/head",
			"widgets/clan/index-foot",
			"widgets/clan/chat-list",
			"widgets/clan/chat-form",
			"text!screens/clan/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {},
				initialize: function (e) {
					this.params = e;
				},
				afterRender: function () {},
				initializeWidgets: function () {
					(this.clanChatListWidget = new s(this.params)),
						(this.widgets = [new r(), new i(), this.clanChatListWidget, new o()]);
				},
			});
			return a;
		}
	),
	define("text!screens/clan/settings-create.html!strip", [], function () {
		return '            \n<div class="b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Создать клан</div>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n        <div class="btn-info"></div>\n    </div>\n</div>\n<!-- /.b-screen-head -->\n\n\n<div class="b-clan-settings  b-clan-settings_create">\n\n    <div class="b-clan-settings__block">\n        <input id="clanName" type="text" class="b-clan-settings__text b-clan-settings__name" placeholder="Введи название клана" value="" maxlength="<%=Application.params.userCommonProperties.clanSettings.clanName.length.max%>" autocomplete="off" />\n        <input id="clanMessage" type="text" class="b-clan-settings__text b-clan-settings__message" placeholder="Введи ваш девиз" value="" maxlength="<%=Application.params.userCommonProperties.clanSettings.clanMessage.length.max%>" autocomplete="off" />\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__title">ГЕРБ КЛАНА</div>\n    <!-- /.b-clan-settings__title -->\n\n    <div id="showClanAvatarsList" class="b-clan-settings__block b-clan-settings__avatar">\n        <img id="clanAvatar" class="b-clan-settings__avatar-pic" src="<%=Application.params.userCommonProperties.clanSettings.clanIcons[0]%>" alt="">\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__title">РЕЙТИНГ ИГРОКА В СЕЗОНЕ</div>\n    <!-- /.b-clan-settings__title -->\n\n    <div id="clanMemberRating" class="b-clan-settings__block b-clan-settings__ctrl">\n        <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_dec"></div>\n        <div class="b-clan-settings__ctrl-data">\n            Без ограничений\n        </div>\n        <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_inc"></div>\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__title">УРОВЕНЬ ИГРОКА</div>\n    <!-- /.b-clan-settings__title -->\n\n    <div id="clanMemberLevel" class="b-clan-settings__block b-clan-settings__ctrl">\n        <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_dec"></div>\n        <div class="b-clan-settings__ctrl-data">\n            Без ограничений\n        </div>\n        <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_inc"></div>\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__title">ТИП КЛАНА</div>\n    <!-- /.b-clan-settings__title -->\n\n    <div id="clanPublic" class="b-clan-settings__block b-clan-settings__check">\n        <div class="b-clan-settings__check-option">Открытый</div> \n        <div class="b-clan-settings__check-ctrl"></div>\n        <div class="b-clan-settings__check-option">Закрытый</div>\n        <div class="b-clan-settings__check-text">Любой игрок может вступить в клан</div>\n        <div class="b-clan-settings__check-text">Игроки принимаются после одобрения</div>\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <!-- <div class="b-clan-settings__title">СООБЩЕНИЯ О ГРААЛЕ</div> -->\n    <!-- /.b-clan-settings__title -->\n\n    <!-- <div id="clanGrailNotification" class="b-clan-settings__block b-clan-settings__check">\n        <div class="b-clan-settings__check-option">Не получать</div> \n        <div class="b-clan-settings__check-ctrl"></div>\n        <div class="b-clan-settings__check-option">Получать</div>\n        <div class="b-clan-settings__check-text">Сообщения о чужих боях за Грааль в чат клана приходить не будут</div>\n        <div class="b-clan-settings__check-text">Сообщения обо всех боях за Грааль внутри группы будут приходить в чат</div>\n    </div> -->\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__title">СООБЩЕНИЯ ДЛЯ НОВИЧКА</div>\n    <!-- /.b-clan-settings__title -->\n\n    <div class="b-clan-settings__block b-clan-settings__welcome-message">\n        <div class="b-clan-settings__welcome-message-info">Вновь вступивший в клан игрок получит напутствие, которое отображено только ему в чате клана:</div>\n        <textarea id="clanWelcomeMessage" class="b-clan-settings__welcome-message-text" placeholder="Введите текст"  autocomplete="off"></textarea>\n    </div>\n    <!-- /.b-clan-settings__block -->\n\n    <div class="b-clan-settings__info">Лидер клана будет понижен в&nbsp;звании, ели&nbsp;он не&nbsp;заходил в&nbsp;игру более <%=moment.duration(Application.params.userCommonProperties.clanSettings.timeLeaderAutoChange, \'seconds\').asDays()%>&nbsp;дней.</div>\n    <!-- /.b-clan-settings__info -->\n\n    <div class="b-clan-settings__btn">\n        <div id="clanCreateBtn" class="b-btn b-btn_blue soundingButton">Создать <span class="b-clan-settings__create-cost"><%=Application.params.userCommonProperties.clanSettings.clanCreateCost%></span></div>\n    </div>\n    <!-- /.b-clan-settings__btn -->\n\n\n\n    <div id="clanAvatarsList" class="b-clan-settings__avatars g-hidden">\n        <div class="b-screen-head b-clan-settings__avatars-head">\n            <div class="b-screen-head__nav">\n                <div id="hideClanAvatarsList" class="b-btn-back"></div>\n            </div>\n            <div class="b-screen-head__title">Герб клана</div>\n        </div>\n        <!-- /.b-screen-head -->\n\n        <div class="b-clan-settings__avatars-list">\n            <div class="b-clan-settings__avatars-list-i">\n                <% Application.params.userCommonProperties.clanSettings.clanIcons.forEach(function(el) { %>\n                    <div class="b-clan-settings__avatars-item">\n                        <img class="b-clan-settings__avatars-pic" src="<%=el%>" alt="" />\n                    </div>\n                <% }); %>\n            </div>\n        </div>\n        <!-- /.b-clan-settings__avatars-list -->\n    </div>\n    <!-- /.b-clan-settings__avatars -->\n\n\n</div>\n<!-- /.b-clan-settings -->\n\n';
	}),
	define("text!screens/clan/settings-edit.html!strip", [], function () {
		return '\n    <div class="b-screen-head">\n        <div class="b-screen-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div class="b-screen-head__title">Настройки клана</div>\n        <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n            <div class="btn-info"></div>\n        </div>\n    </div>\n    <!-- /.b-screen-head -->\n    \n    \n    <div class="b-clan-settings  b-clan-settings_edit">\n\n        <div class="b-clan-settings__block">\n            <input id="clanName" type="text" class="b-clan-settings__text b-clan-settings__name" value="<%=clanData.main.name%>" disabled />\n            <input id="clanMessage" type="text" class="b-clan-settings__text b-clan-settings__message" placeholder="Введи ваш девиз" value="<%=clanData.main.message%>" maxlength="<%=Application.params.userCommonProperties.clanSettings.clanMessage.length.max%>" autocomplete="off" />\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">ГЕРБ КЛАНА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="showClanAvatarsList" class="b-clan-settings__block b-clan-settings__avatar">\n            <img id="clanAvatar" class="b-clan-settings__avatar-pic" src="<%=clanData.main.avatar%>" alt="">\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">РЕЙТИНГ ИГРОКА В СЕЗОНЕ</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanMemberRating" class="b-clan-settings__block b-clan-settings__ctrl">\n            <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_dec"></div>\n            <div class="b-clan-settings__ctrl-data">\n                <% if (clanData.main.params.minRating) { %>\n                <%=clanData.main.params.minRating%>\n                <% } else { %>\n                Без ограничений\n                <% } %>\n            </div>\n            <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_inc"></div>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">УРОВЕНЬ ИГРОКА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanMemberLevel" class="b-clan-settings__block b-clan-settings__ctrl">\n            <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_dec"></div>\n            <div class="b-clan-settings__ctrl-data">\n                <% if (clanData.main.params.minLevel == 1) { %>\n                    Без ограничений\n                <% } else { %>\n                    <%=clanData.main.params.minLevel%>\n                <% } %>\n            </div>\n            <div class="b-clan-settings__ctrl-btn b-clan-settings__ctrl-btn_inc"></div>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">ТИП КЛАНА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanPublic" class="b-clan-settings__block b-clan-settings__check <%=(clanData.main.public == false)? \'b-clan-settings__check_active\' : \'\'%>">\n            <div class="b-clan-settings__check-option">Открытый</div> \n            <div class="b-clan-settings__check-ctrl"></div>\n            <div class="b-clan-settings__check-option">Закрытый</div>\n            <div class="b-clan-settings__check-text">Любой игрок может вступить в клан</div>\n            <div class="b-clan-settings__check-text">Игроки принимаются после одобрения</div>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <!-- <div class="b-clan-settings__title">СООБЩЕНИЯ О ГРААЛЕ</div> -->\n        <!-- /.b-clan-settings__title -->\n\n        <!-- <div id="clanGrailNotification" class="b-clan-settings__block b-clan-settings__check <%=(clanData.main.grailNotificationEnabled)? \'b-clan-settings__check_active\' : \'\'%>">\n            <div class="b-clan-settings__check-option">Не получать</div> \n            <div class="b-clan-settings__check-ctrl"></div>\n            <div class="b-clan-settings__check-option">Получать</div>\n            <div class="b-clan-settings__check-text">Сообщения о чужих боях за Грааль в чат клана приходить не будут</div>\n            <div class="b-clan-settings__check-text">Сообщения обо всех боях за Грааль внутри группы будут приходить в чат</div>\n        </div> -->\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">СООБЩЕНИЯ ДЛЯ НОВИЧКА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div class="b-clan-settings__block b-clan-settings__welcome-message">\n            <div class="b-clan-settings__welcome-message-info">Вновь вcтупивший в клан игрок получит напутствие, которое отображено только ему в чате клана:</div>\n            <textarea id="clanWelcomeMessage" class="b-clan-settings__welcome-message-text" placeholder="Введите текст"  autocomplete="off"><%=clanData.main.welcomeMessage%></textarea>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <%\n        var user = _.findWhere(clanData.members, {id: UserModel.id});\n        if (user.role == 3) { %>\n        <div class="b-clan-settings__info">Лидер клана будет понижен в&nbsp;звании, ели&nbsp;он не&nbsp;заходил в&nbsp;игру более 30&nbsp;дней.</div>\n        <!-- /.b-clan-settings__info -->\n        <% } %>\n\n        <div class="b-clan-settings__btn">\n            <div id="clanUpdateBtn" class="b-btn b-btn_blue">Сохранить</div>\n        </div>\n        <!-- /.b-clan-settings__btn -->\n\n        <div class="b-clan-settings__tag clipboard" data-clipboard-text="<%=clanData.main.alias%>">Код клана: <%=clanData.main.alias%></div>\n        <!-- /.b-clan-settings__tag -->\n\n        <div class="b-clan-settings__clipboard-alert">\n            <div class="b-clan-settings__clipboard-alert__text">Код клана скопирован в буфер обмена</div>\n        </div>\n\n\n        <div id="clanAvatarsList" class="b-clan-settings__avatars g-hidden">\n            <div class="b-screen-head b-clan-settings__avatars-head">\n                <div class="b-screen-head__nav">\n                    <div id="hideClanAvatarsList" class="b-btn-back"></div>\n                </div>\n                <div class="b-screen-head__title">Герб клана</div>\n            </div>\n            <!-- /.b-screen-head -->\n\n            <div class="b-clan-settings__avatars-list">\n                <div class="b-clan-settings__avatars-list-i">\n                    <% Application.params.userCommonProperties.clanSettings.clanIcons.forEach(function(el) { %>\n                        <div class="b-clan-settings__avatars-item <%=(el == clanData.main.avatar)? \'b-clan-settings__avatars-item_active\' : \'\'%>">\n                            <img class="b-clan-settings__avatars-pic" src="<%=el%>" alt="" />\n                        </div>\n                    <% }); %>\n                </div>\n            </div>\n            <!-- /.b-clan-settings__avatars-list -->\n        </div>\n        <!-- /.b-clan-settings__avatars -->\n\n\n    </div>\n    <!-- /.b-clan-settings -->\n\n';
	}),
	define("text!screens/clan/settings-view.html!strip", [], function () {
		return '\n    <div class="b-screen-head">\n        <div class="b-screen-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div class="b-screen-head__title">Настройки клана</div>\n        <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n            <div class="btn-info"></div>\n        </div>\n    </div>\n    <!-- /.b-screen-head -->\n    \n    \n    <div class="b-clan-settings b-clan-settings_view">\n\n        <div class="b-clan-settings__block">\n            <input type="text" class="b-clan-settings__text b-clan-settings__name" disabled value="<%=clanData.main.name%>" />\n            <% if (clanData.main.message) { %>\n            <input type="text" class="b-clan-settings__text b-clan-settings__message" disabled value="<%=clanData.main.message%>" />\n            <% } %>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">ГЕРБ КЛАНА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div class="b-clan-settings__block b-clan-settings__avatar">\n            <img class="b-clan-settings__avatar-pic" src="<%=clanData.main.avatar%>" alt="">\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">РЕЙТИНГ ИГРОКА В СЕЗОНЕ</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanMemberRating" class="b-clan-settings__block">\n            <div class="b-clan-settings__block-data">\n                <% \n                if (clanData.main.params.minRating) { %>\n                <%=clanData.main.params.minRating%>\n                <% } else { %>\n                Без ограничений\n                <% } %>\n            </div>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">УРОВЕНЬ ИГРОКА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanMemberLevel" class="b-clan-settings__block">\n            <div class="b-clan-settings__block-data">\n                <% if (clanData.main.params.minLevel == 1) { %>\n                    Без ограничений\n                <% } else { %>\n                    <%=clanData.main.params.minLevel%>\n                <% } %>\n            </div>\n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <div class="b-clan-settings__title">ТИП КЛАНА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div id="clanPublic" class="b-clan-settings__block">\n            <div class="b-clan-settings__block-data">\n                <% if (clanData.main.public) { %>\n                Открытый\n                <% } else { %>\n                Закрытый\n                <% } %>\n            </div> \n        </div>\n        <!-- /.b-clan-settings__block -->\n\n        <!-- <div class="b-clan-settings__title">СООБЩЕНИЯ О ГРААЛЕ</div> -->\n        <!-- /.b-clan-settings__title -->\n\n        <!-- <div id="clanGrailNotification" class="b-clan-settings__block">\n            <div class="b-clan-settings__block-data">Не получать</div> \n        </div> -->\n        <!-- /.b-clan-settings__block -->\n\n        <% if (clanData.main.welcomeMessage) { %>\n        <div class="b-clan-settings__title">СООБЩЕНИЯ ДЛЯ НОВИЧКА</div>\n        <!-- /.b-clan-settings__title -->\n\n        <div class="b-clan-settings__block">\n            <div class="b-clan-settings__block-data"><%=clanData.main.welcomeMessage%></div> \n        </div>\n        <!-- /.b-clan-settings__block -->\n        <% } %>\n\n        <div class="b-clan-settings__info g-hidden">Лидер клана будет понижен в зании, ели он не заходил в игру более 30 дней.</div>\n        <!-- /.b-clan-settings__info -->\n\n        <div class="b-clan-settings__tag clipboard" data-clipboard-text="<%=clanData.main.alias%>">Код клана: <%=clanData.main.alias%></div>\n        <!-- /.b-clan-settings__tag -->\n\n        <div class="b-clan-settings__clipboard-alert">\n            <div class="b-clan-settings__clipboard-alert__text">Код клана скопирован в буфер обмена</div>\n        </div>\n\n    </div>\n    <!-- /.b-clan-settings -->\n\n';
	}),
	define(
		"screens/clan/settings",
		[
			"gate",
			"widget",
			"application",
			"methods",
			"clipboard",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/clan/main",
			"models/user",
			"controllers/analytic",
			"text!screens/clan/settings-create.html!strip",
			"text!screens/clan/settings-edit.html!strip",
			"text!screens/clan/settings-view.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = t.extend({
				el: "#screenContainer",
				templates: {
					create: h,
					edit: p,
					view: d,
				},
				events: {
					"click #showClanAvatarsList": "showClanAvatarsList",
					"click #hideClanAvatarsList": "hideClanAvatarsList",
					"click #clanUpdateBtn": "clanUpdate",
					"click #clanCreateBtn": "clanCreate",
					"click #backButton": function () {
						a.previousScreen();
					},
					"click .clipboard": "copyToClipboard",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (e) {
					(this.template = _.template(this.templates[e.mode])),
						(this.model = e.model ? e.model : f),
						console.log("settings screen model: ", this.model),
						(this.viewParam = {
							Application: n,
							methods: r,
							UserModel: l,
						}),
						(this.fieldsData = {}),
						(this.clipboard = null);
				},
				afterRender: function () {
					var e = this,
						t = $("#clanMemberLevel .b-clan-settings__ctrl-data"),
						r = $("#clanMemberRating .b-clan-settings__ctrl-data");
					(this.levelValue = $.trim(t.html()) == "Без ограничений" ? 1 : +t.html()),
						(this.ratingValue = $.trim(r.html()) == "Без ограничений" ? 0 : +r.html()),
						(this.userLevel = n.methods.levelForUwins(l.get("uwins"))),
						(this.userRating = l.get("rating")),
						$(".b-clan-settings__avatars-item").click(function () {
							$(".b-clan-settings__avatars-item").removeClass(
								"b-clan-settings__avatars-item_active"
							),
								$(this).addClass("b-clan-settings__avatars-item_active"),
								$("#clanAvatar").attr("src", $(this).find("img").attr("src"));
						}),
						$(".b-clan-settings__check-ctrl").click(function () {
							$(this)
								.parents(".b-clan-settings__check")
								.toggleClass("b-clan-settings__check_active");
						}),
						$("#clanMemberLevel .b-clan-settings__ctrl-btn_inc").click(function () {
							e.userLevel > e.levelValue && ((e.levelValue += 1), t.text(e.levelValue));
						}),
						$("#clanMemberLevel .b-clan-settings__ctrl-btn_dec").click(function () {
							if (e.levelValue == 1) return !1;
							e.levelValue == 2
								? ((e.levelValue = 1), t.text("Без ограничений"))
								: ((e.levelValue -= 1), t.text(e.levelValue));
						}),
						$("#clanMemberRating .b-clan-settings__ctrl-btn_inc").click(function () {
							e.userRating >= e.ratingValue + 100 &&
								((e.ratingValue += 100), r.text(e.ratingValue));
						}),
						$("#clanMemberRating .b-clan-settings__ctrl-btn_dec").click(function () {
							if (e.ratingValue == 0) return !1;
							e.ratingValue == 100
								? ((e.ratingValue = 0), r.text("Без ограничений"))
								: ((e.ratingValue -= 100), r.text(e.ratingValue));
						}),
						$(".b-clan-settings_create .b-clan-settings__avatars-item")
							.eq(0)
							.addClass("b-clan-settings__avatars-item_active");
				},
				showClanAvatarsList: function () {
					$("#clanAvatarsList").removeClass("g-hidden");
				},
				hideClanAvatarsList: function () {
					$("#clanAvatarsList").addClass("g-hidden");
				},
				validateFields: function () {
					var e = this.getFieldsData();
					return e.name.length < 3 || e.name.length > 18
						? (u.add({
								type: "clanCreateError",
								params: {
									type: "nameLength",
								},
						  }),
						  !1)
						: e.params.minLevel > this.userLevel
						? (u.add({
								type: "clanCreateError",
								params: {
									type: "minLevel",
								},
						  }),
						  !1)
						: e.params.minRating > this.userRating
						? (u.add({
								type: "clanCreateError",
								params: {
									type: "minRating",
								},
						  }),
						  !1)
						: e.name.match(/[^a-zа-яё0-9 -]+/i)
						? (u.add({
								type: "clanCreateError",
								params: {
									type: "textFormat",
								},
						  }),
						  !1)
						: !0;
				},
				getFieldsData: function () {
					var e = $("#clanName").val(),
						t = $("#clanMessage").val(),
						n = $("#clanWelcomeMessage").val();
					return {
						name: e || "",
						message: t || "",
						welcomeMessage: n || "",
						avatar: $("#clanAvatar").attr("src"),
						public: !$("#clanPublic").hasClass("b-clan-settings__check_active"),
						params: {
							minRating: this.ratingValue,
							minLevel: this.levelValue,
						},
						grailNotificationEnabled: !1,
					};
				},
				clanUpdate: function () {
					this.validateFields() &&
						(this.listenToOnce(e, "clanUpdate", function () {
							a.setScreen({
								screen: "clan",
							});
						}),
						e.clanUpdate(this.getFieldsData(), f.get("clanData").main.clanId),
						$("#clanUpdateBtn").addClass("g-disabled").attr("id", ""));
				},
				clanCreate: function () {
					l.get("balance") < n.params.userCommonProperties.clanSettings.clanCreateCost
						? purchase
							? u.add({
									type: "buyCoins",
							  })
							: u.add({
									type: "text",
									params: {
										header: "",
										text: "Недостаточно монет для создания клана.",
										list: null,
										cursiv: null,
									},
							  })
						: this.validateFields() &&
						  (e.playerInfoGetClan(l.get("id")),
						  this.listenTo(e, "playerInfoGetClan", function (t) {
								_.isNull(t.clan.previousClan) &&
									c.event({
										category: "user",
										action: "Clan_join",
									}),
									e.clanCreate(this.getFieldsData());
						  }),
						  this.listenToOnce(e, "clanCreate", function () {
								a.setScreen({
									screen: "clan",
								});
						  }),
						  $("#clanCreateBtn").addClass("g-disabled").attr("id", ""),
						  s.sendDesignEvent("Clan_entry:Reason:create_clan"));
				},
				copyToClipboard: function () {
					var e = this;
					this.clipboard && this.clipboard.destroy(),
						(this.clipboard = new i(".clipboard")),
						this.clipboard.on("success", function (t) {
							$(".b-clan-settings__clipboard-alert").fadeIn().delay(800).fadeOut(),
								e.clipboard.destroy();
						});
				},
				showInfoPopup: function () {
					o.showInfoPopup("clan");
				},
			});
			return v;
		}
	),
	define("text!widgets/clan/headScarf.html!strip", [], function () {
		return '<div class="b-clan-head__nav">\n    <div id="backButton" class="b-btn-back"></div>\n</div>\n<% if (this.infoCtrl) { %>\n    <div id="showInfoPopup" class="b-screen-head__info soundingButton">\n        <div class="btn-info"></div>\n    </div>\n<% } else { %>\n<div id="clanSettings" class="b-clan-head__settings soundingButton"></div>\n<% } %>\n<div class="b-clan-scarf">\n    <div class="b-clan-scarf-i">\n        <div class="b-clan-scarf__icon">\n            <img class="b-clan-scarf__icon-i" src="<%= clanData.main.avatar %>" alt="">\n        </div>\n        <div class="b-clan-scarf__text">\n            <div class="b-clan-scarf__title">\n                <%= clanData.main.name %>\n            </div>\n            <div class="b-clan-scarf__slogan">\n                <%= clanData.main.message %>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /.b-clan-scarf -->';
	}),
	define(
		"widgets/clan/headScarf",
		[
			"gate",
			"widget",
			"application",
			"controllers/usedesk",
			"models/appState",
			"models/clan/main",
			"widgets/clan/settings-btn",
			"text!widgets/clan/headScarf.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#clanHeadScarf",
				events: {
					"click #backButton": function () {
						i.previousScreen();
					},
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (e) {
					var t = this;
					(this.infoCtrl = e && e.infoCtrl ? e.infoCtrl : null),
						console.log("this.infoCtrl: ", this.infoCtrl),
						(this.model = s),
						this.listenTo(s, "change", this.render),
						(this.viewParam = {
							Application: n,
						});
				},
				afterRender: function () {},
				initializeWidgets: function () {
					this.infoCtrl || (this.widgets = [new o()]);
				},
				showInfoPopup: function () {
					r.showInfoPopup(this.infoCtrl);
				},
			});
			return a;
		}
	),
	define("text!widgets/clan/task.html!strip", [], function () {
		return '<%\nvar i;\nvar clanSafeSettings = Application.params.userCommonProperties.clanSafeSettings;\nvar clanSafeIsAvailable = clanSafeSettings.isAvailable;\nvar clanSafeStatus = ClanSafeModel.get(\'status\');\nvar clanSafeIsDisabled = (clanData.main.level < clanSafeSettings.levelFrom)? true : false;\nvar clanSafeIsCreate = clanSafeStatus == \'create\';\nvar clanSafeIsOpening = clanSafeStatus == \'opening\';\n\nvar clanSafeRewardAccept = ClanSafeUserActiveRewardModel.get(\'accept\');\n\n%>\n\n<div id="clanHeadScarf" class="b-clan-head">\n    \n</div>\n<!-- /.b-clan-head -->\n\n\n<div class="clan-task">\n            \n    <div class="clan-task__head">\n        <div class="clan-task__description clan-task-description">\n            <div class="clan-task-description__text">\n                Набрать \n                <%= new Intl.NumberFormat(\'ru-RU\').format(clanData.task.maxScores)%> \n                <%=Application.methods.declension(clanData.task.maxScores,[\'очко\',\'очка\',\'очков\'])%> на поле\n            </div>\n        </div>\n        <div class="clan-task__head-content">\n            <div class="clan-task-progress">\n                <div class="clan-task-progress__content">\n                    <% if (clanData.task.scores) { %>\n                    <div id="clanBattleProgressScale" class="clan-task-progress__scale" style="width: <%= Math.floor(clanData.task.scores * 100 / clanData.task.maxScores)%>%;"></div>\n                    <% } %>\n                    <div class="clan-task-progress__text">\n                        Осталось набрать \n                        <%= (clanData.task.scores <= clanData.task.maxScores)? new Intl.NumberFormat(\'ru-RU\').format(clanData.task.maxScores - clanData.task.scores) : 0 %>\n                    </div>\n                </div>\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i"></div>\n                </div>\n                <!-- /.b-onboarding -->\n            </div>\n            <div id="clanBattleTime" class="clan-task__time clan-task-time">\n                <% if (clanData.task.state && clanData.task.msToTask > 0) { %>\n                До следующего задания:\n                <span class="clan-task-time__data">\n                    <%=Application.methods.getHoursMinutesFromMS(clanData.task.msToTask)%>\n                </span>\n                <% } else { %>\n                До окончания:\n                <span class="clan-task-time__data">\n                    <%=Application.methods.getHoursMinutesFromMS(moment(clanData.task.tsFinish * 1000).diff(moment()))%>\n                </span>\n                <% } %>\n            </div>\n        </div>\n    </div>\n    <!-- /.clan-task__head -->\n\n    <% if (!_.isEmpty(clanData.task.taskTop)) { %>\n    <div class="clan-task__members">\n        <div class="clan-task__members-title">ИГРОКИ В ТЕКУЩЕМ ЗАДАНИИ</div>\n        \n        <div class="clan-task__members-list">\n        <%\n        var progress = clanData.task.taskTop;\n        var progressSorted = _.keys(progress).sort(function(a,b){return (progress[a].position-progress[b].position)});\n        var index = 0;\n        var selfIndex = 0;\n        var userID = Application.user.id;\n        progressSorted.forEach( function(el, i) { \n            var id = el;\n            var member = _.findWhere(clanData.members, {id: id});\n            member = (member == undefined)? {id: id, playerName: "Вышедший игрок"} : member ;\n            index = i + 1;\n            if (userID == id) {\n                selfIndex = i + 1;\n            }\n            %>\n            <div class="clan-task__member <%= (userID == id)? \'clan-task__member_self\' : \'\' %>">\n                <div class="clan-task__member-number"><%=index%></div>\n                <div data-member-id="<%=member.id%>" class="clan-task__member-name clan-task__member-name_click"><%=member.playerName%></div>\n                <div class="clan-task__member-reward">\n                <% \n                var rewards = clanData.task.rewards;\n                for (var j = 0; j < rewards.length; j += 1) {\n                    if (index >= rewards[j].position.from && index <= rewards[j].position.to) {\n                        rewards[j].userReward.forEach(function(reward) {\n                            switch(reward.rewardType) {\n                                case \'coinsOnceConst\': %>\n                                    <span class="clan-task-reward">\n                                        <%=\'+\' + reward.count %>\n                                        <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/coin.png" alt="">\n                                    </span>\n                                    <%  \n                                    break;\n                                case \'ratingOnceConst\': %>\n                                    <span class="clan-task-reward">\n                                        <%=\'+\' + reward.count %> \n                                        <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="">\n                                    </span>\n                                    <%\n                                    break;\n                            }\n                        });\n                        if (rewards[j].lootBox) { %>\n                            <span data-reward-index="<%=j%>" class="clan-task-reward lootBox">\n                                <img class="clan-task-reward__icon" src="<%=rewards[j].lootBox.image %>" alt="">\n                            </span>\n                        <%\n                        }\n                    }\n                } \n                %>\n                </div>\n                <div class="clan-task__member-points"><%= new Intl.NumberFormat(\'ru-RU\').format(progress[id].scores) %></div>\n            </div>\n            <!-- /.clan-task__member -->\n        <%\n        });\n        %>\n        </div>\n        <!-- /.clan-task__list -->\n\n        <div class="clan-task__member clan-task__member_self clan-task__member_fixed">\n            <%\n            selfIndex = (selfIndex)? selfIndex : \'\';\n            %>\n            <div class="clan-task__member-number"><%= selfIndex %></div>\n            <div class="clan-task__member-name">Ты</div>\n            <div class="clan-task__member-reward">\n                <% \n                var rewards = clanData.task.rewards;\n                for (var j = 0; j < rewards.length; j += 1) {\n                    if (selfIndex >= rewards[j].position.from && selfIndex <= rewards[j].position.to) {\n                        rewards[j].userReward.forEach(function(reward) {\n                            switch(reward.rewardType) {\n                                case \'coinsOnceConst\': %>\n                                    <span class="clan-task-reward">\n                                        <%=\'+\' + reward.count %>\n                                        <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/coin.png" alt="">\n                                    </span>\n                                    <%  \n                                    break;\n                                case \'ratingOnceConst\': %>\n                                    <span class="clan-task-reward">\n                                        <%=\'+\' + reward.count %> \n                                        <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="">\n                                    </span>\n                                    <%\n                                    break;\n                            }\n                        });\n                        if (rewards[j].lootBox) { %>\n                            <span data-reward-index="<%=j%>" class="clan-task-reward lootBox">\n                                <img class="clan-task-reward__icon" src="<%=rewards[j].lootBox.image %>" alt="">\n                            </span>\n                        <%\n                        }\n                    }\n                } \n                %>\n            </div>\n            <div class="clan-task__member-points"><%= (progress[userID])? new Intl.NumberFormat(\'ru-RU\').format(progress[userID].scores) : 0 %></div>\n        </div>\n        <!-- /.clan-task__member [fixed] -->\n    </div>\n    \n    <% } else { %>\n    <div class="clan-task__members">\n        <div class="clan-task__members-title">ИГРОКИ В ТЕКУЩЕМ ЗАДАНИИ</div>\n        <div class="clan-task__members-empty">\n            Стань первым в этом Клановом Задании\n        </div>\n    </div>\n    <% } %>\n\n\n    <% if (clanSafeIsAvailable) { %>\n        <div class="clan-task__foot clan-task-completion-info">\n            <div class="clan-task-completion-info__item">\n                <div class="b-onboarding__text"><div class="b-onboarding__text-i"></div></div>\n                <div class="clan-task-completion-info__icon \n                    clan-task-completion-info-icon \n                    <%= clanSafeIsDisabled? \'clan-task-completion-info-icon_safe-disabled\' : \'\'%>\n                    <%= clanSafeIsCreate? \'clan-task-completion-info-icon_safe-inactive\' : \'\'%>"></div>\n                <div class="clan-task-completion-info__content">\n                    <% if (clanSafeIsDisabled) { %>\n                    <div id="clanSafeDisabledInfo" class="clan-task-completion-info__title"> \n                        Клановый <br>сейф \n                        <div class="icon icon_info icon_info-safe"></div>\n                    </div>\n                    <div class="clan-task-completion-info__info">Доступен <br>после <%= clanSafeSettings.levelFrom %> ур.</div>\n                    <% } else { %>\n                        <% if (clanSafeRewardAccept === false) { %>\n                        <div class="clan-task-completion-info__btn clan-task-completion-info__btn_reward" id="clanSafeGetReward">Забрать<br>награду</div>\n                        <% } else { %>\n                            <% if (clanSafeIsCreate) { %>\n                            <% \n                            var clanSafeImplementationProgress = ClanSafeModel.get(\'implementationProgress\')[0];\n                            %>\n                        <div id="clanSafeCreateInfo" class="clan-task-completion-info__title"> \n                            Клановый <br>сейф \n                            <div class="icon icon_info icon_info-safe"></div>\n                        </div>\n                        <div class="clan-task-completion-info__label">Пройдено КЗ:</div> \n                        <div class="clan-task-completion-info__counter">\n                                <% if (clanSafeImplementationProgress.required > 3) { %>\n                            <div class="clan-task-completion-info__counter-value"><%=clanSafeImplementationProgress.current%></div><div class="clan-task-completion-info__counter-total">/<%=clanSafeImplementationProgress.required%></div>\n                                <% } else { %> \n                                    <% for (i = 0; i < clanSafeImplementationProgress.required; i += 1) { %>\n                            <div class="clan-task-completion-info__counter-item <%=(i < clanSafeImplementationProgress.current)? \'clan-task-completion-info__counter-item_active\' : \'\'%>"></div>\n                                    <% } %>\n                                <% } %>\n                        </div> \n                            <% } %>\n                            <% if (clanSafeIsOpening) { %>\n                        <div class="clan-task-completion-info__btn" id="clanSafe">Взломать сейф</div>\n                            <% } %>\n                        <% } %>\n                    <% } %>\n                </div>\n            </div>\n            <!-- /.clan-task-completion-info__item -->\n            <div class="clan-task-completion-info__item">\n                <div class="clan-task-completion-info__icon clan-task-completion-info-icon clan-task-completion-info-icon_battle"></div>\n                <div class="clan-task-completion-info__content">\n                    <%\n                    var reward = _.findWhere(clanData.members, {id: Application.user.id}).reward;\n                    %>\n                    <% if (reward.length > 0) { %>\n                    <div class="clan-task-completion-info__btn clan-task-completion-info__btn_reward" id="clanGetReward">Забрать<br>награду</div>\n                    <% } else { %>\n                    <div class="clan-task-completion-info__label">Клан получит</div>\n                    <div class="clan-task-completion-info__data"><%=clanData.task.level%> уровень</div>\n                    <div class="clan-task-completion-info__label">Ты получишь</div>\n                    <div class="clan-task-completion-info__data">награду</div>\n                    <% } %>\n                </div>\n            </div>\n            <!-- /.clan-task-completion-info__item -->\n        </div>\n\n    <% } else { %>\n    <div class="clan-task__foot">\n        <div class="clan-task-info">\n            <div class="clan-task-info__item">\n                <div class="clan-task-info__label">Клан получит</div>\n                <div class="clan-task-info__data"><%=clanData.task.level%> уровень</div>\n            </div>\n            \n            <img class="clan-task-info__icon" src="<%=Application.params.staticUrl%>images/app/clan/task-icon.png" alt="">\n\n            <%\n            var reward = _.findWhere(clanData.members, {id: Application.user.id}).reward;\n            %>\n            <% if (reward.length > 0) { %>\n            <div id="clanGetReward" class="clan-task-info__item">\n                <div class="clan-task-info__btn">получить награду</div>\n            </div>\n            <% } else { %>\n            <div class="clan-task-info__item">\n                <div class="clan-task-info__label">Ты получишь</div>\n                <div class="clan-task-info__data">Награду</div>\n            </div>\n            <% } %>\n        </div>\n        <!-- /.clan-task-info -->\n    </div>\n    <!-- /.clan-task__foot -->\n    <% } %>\n    \n</div>\n<!-- /.clan-task -->\n\n\n<div class="b-clan-foot">\n    <div class="b-clan-foot-i">\n        <div class="b-clan-battle-start">\n            <% if (clanData.task.state) { %>\n                <!-- <div id="clanBattleShare" class="b-btn b-btn_green b-clan-battle-start__ctrl">\n                    <span class="b-icon b-icon_share"></span>\n                    Поделиться\n                </div> -->\n                <div class="b-btn b-btn_green b-clan-battle-start__ctrl">\n                    Задание выполнено\n                </div>\n            <% } else { %>\n                <div id="clanBattleBtn" class="b-btn <%=(this.model.calcMsToFreeBattle())? \'b-btn_blue\' : \'b-btn_green\'%> b-clan-battle-start__ctrl">В бой</div>\n                <div class="b-onboarding__text">\n                    <div class="b-onboarding__text-i">Количество набранных тобой очков на поле умножается на коэффициент, \n                        равный произведению твоего уровня и рейтинга, деленного на 1000. \n                        Другими словами, чем выше рейтинг и уровень, тем больше пользы для клана ты можешь принести.</div>\n                </div>\n                <!-- /.b-onboarding -->\n            <% } %>\n        </div>\n        <!-- /.b-clan-battle-start -->\n    </div>\n</div>\n<!-- /.b-clan-foot -->\n\n\n<div class="b-onboarding-popup b-onboarding-popup_clan-task-result">\n    <div class="b-onboarding-popup__text">\n        За этот бой ты набрал \n        <span id="clanOnboardingScores"></span> \n        оч. для клана! Отличный результат! Продолжай в том же духе. \n        Бесплатная попытка доступна один раз в час.\n    </div>\n</div>\n<!-- /.b-onboarding -->\n\n<div class="b-onboarding-popup b-onboarding-popup_clan-task-time">\n    <div class="b-onboarding-popup__text"></div>\n</div>\n<!-- /.b-onboarding -->\n';
	}),
	define(
		"widgets/clan/task",
		[
			"gate",
			"widget",
			"application",
			"controllers/onboarding",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/gamePart",
			"models/user",
			"models/clan/main",
			"models/clan/safe/main",
			"models/clan/safe/userActiveReward",
			"widgets/clan/headScarf",
			"text!widgets/clan/task.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p) {
			var d = t.extend({
				template: _.template(p),
				el: "#screenContainer",
				events: {
					"click .clan-task__member-name_click": function (e) {
						var t = $(e.target).attr("data-member-id");
						i.sendDesignEvent("Screen_actions:Clan_task:opponent_profile"),
							o.setScreen({
								screen: "userInfo",
								params: {
									id: t,
								},
							});
					},
					"click #clanBattleBtn": "clanBattle",
					"click #clanGetReward": "clanGetReward",
					"click .lootBox": "lootBoxInfo",
					"click #clanSafeDisabledInfo": function () {
						s.add({
							type: "clanSafeDisabledInfo",
						});
					},
					"click #clanSafeCreateInfo": function () {
						s.add({
							type: "clanSafeCreateInfo",
						});
					},
					"click #clanSafe": function () {
						o.setScreen({
							screen: "clanSafe",
						});
					},
					"click #clanSafeGetReward": "clanSafeGetReward",
				},
				initializeWidgets: function () {
					this.widgets = [new h()];
				},
				initialize: function (t) {
					(this.params = t || {}),
						(this.model = f),
						this.listenTo(f, "change", this.onChangeModel),
						this.listenTo(f, "changeTimer", this.onChangeTimer),
						this.listenTo(e, "clanSafeUserActiveRewardInfo", function () {
							e.clanSafeGetInfo();
						}),
						this.listenTo(l, "change", this.render),
						(this.viewParam = {
							Application: n,
							ClanSafeModel: l,
							ClanSafeUserActiveRewardModel: c,
						}),
						this.setTaskId(),
						(this.timer = f.timerStart());
				},
				afterRender: function () {
					var e = this.params.result,
						t = n.params.userCommonProperties.clanSafeSettings.isAvailable;
					(this.clanOnboardingStatus = r.get("clanMember")),
						e &&
							(this.clanOnboardingStatus == 5
								? ($("#clanOnboardingScores").text(
										e.scores *
											_.findWhere(f.get("clanData").members, {
												id: a.get("id"),
											}).rate
								  ),
								  this.showOnboarding(6))
								: (s.add({
										type: "clanTaskResult",
										params: {
											scores: e.scores,
											counted: !0,
										},
								  }),
								  (this.params = {}))),
						this.clanOnboardingStatus == 2 && this.showOnboarding(3),
						this.clanOnboardingStatus == 3 && this.showOnboarding(3),
						this.clanOnboardingStatus == 4 && this.showOnboarding(5),
						this.clanOnboardingStatus == 6 && this.showOnboarding(7),
						this.clanOnboardingStatus == 7 && t && this.showOnboarding(8);
					if (this.clanOnboardingStatus < 7 || (this.clanOnboardingStatus == 7 && t))
						$("#cover").off("click"),
							$("#cover").on("click", this.closeOnboarding.bind(this)),
							$(".b-onboarding").off("click"),
							$(".b-onboarding").on("click", this.closeOnboarding.bind(this)),
							$(".b-onboarding-popup").off("click"),
							$(".b-onboarding-popup").on("click", this.closeOnboarding.bind(this));
				},
				onChangeModel: function () {
					_.isEmpty(f.get("clanData")) ||
						((this.timer = f.timerStart()), this.setTaskId(), this.render());
				},
				onChangeTimer: function () {
					this.render();
				},
				setTaskId: function () {
					this.taskId = this.model.get("clanData").task.taskId;
				},
				clanBattle: function () {
					var e = r.get("clanMember");
					e == 4 && (r.set("clanMember", 5), $("#cover").hide()),
						i.sendDesignEvent("Screen_actions:Clan_task:to_battle"),
						o.setScreen({
							screen: "clanBattle",
							params: {
								taskId: this.taskId,
							},
						});
				},
				clanGetReward: function () {
					var t = this,
						r,
						o,
						u = this.model.get("clanData"),
						a = _.findWhere(u.members, {
							id: n.user.id,
						}).reward;
					e.clanGetReward(a[0].taskId),
						i.sendDesignEvent("Screen_actions:Clan_task:claim"),
						a.checkpoint &&
							((r = u.main.checkpoint.reward),
							(o = _.findWhere(r, {
								rewardType: "coinsOnceConst",
							}).count),
							i.sendResourceEvent("coins", o, "clanMilestone", "Consumed")),
						this.listenToOnce(e, "clanGetReward", function (e) {
							console.log("clanGetReward data: ", e);
							var n = _.findWhere(e.reward, {
								rewardType: "coinsOnceConst",
							}).count;
							i.sendResourceEvent("coins", n, "clanTask", "Consumed"),
								i.sendDesignEvent("earn_virtual_currency:Reason:clan_reward"),
								s.add({
									type: "reward",
									params: {
										reward: e.reward,
										context: "clanTask",
									},
								}),
								t.model.trigger("change");
						});
				},
				clanSafeGetReward: function () {
					e.clanSafeGetReward(),
						this.listenToOnce(e, "clanSafeGetReward", function (e) {
							var t = _.isEmpty(e.userActiveReward) ? [] : e.userActiveReward.userReward;
							t.length > 0 &&
								s.add({
									type: "reward",
									params: {
										reward: t,
										context: "clanTask",
									},
								});
						});
				},
				lootBoxInfo: function (e) {
					var t = $(e.currentTarget).data("reward-index");
					i.sendDesignEvent("Screen_actions:Clan_task:loot_description");
					var n = this.model.get("clanData").task.rewards[t].lootBox;
					s.add({
						type: "clanRewardInfo",
						params: {
							lootBox: n,
						},
					});
				},
				showOnboarding: function (e) {
					var t = $(".clan-task-progress"),
						n = $(".b-clan-battle-start");
					$("#cover").show();
					switch (e) {
						case 3:
							t.addClass("b-onboarding b-onboarding_clan-task"),
								t
									.find(".b-onboarding__text")
									.show()
									.children()
									.text(
										"Здесь указано количество очков, которое в сумме должны набрать все члены клана."
									);
							break;
						case 4:
							t.addClass("b-onboarding b-onboarding_clan-task"),
								t
									.find(".b-onboarding__text")
									.show()
									.children()
									.text("По мере выполнения задания, эта цифра будет уменьшаться.");
							break;
						case 5:
							f.get("clanData").task.state
								? $("#cover").hide()
								: (n.addClass("b-onboarding b-onboarding_clan-battle"),
								  n.find(".b-onboarding__text").show());
							break;
						case 6:
							$(".b-onboarding-popup_clan-task-result").show();
							break;
						case 7:
							var r =
								"Помни, время выполнения задания ограничено! Если вы не успеете, результат текущего задания сбросится.";
							$(".b-onboarding-popup_clan-task-time").show(),
								_.findWhere(f.get("clanData").members, {
									id: a.id,
								}).role == 3
									? $(".b-onboarding-popup_clan-task-time")
											.children()
											.text(r + " Успехов, капитан!")
									: $(".b-onboarding-popup_clan-task-time").children().text(r);
							break;
						case 8:
							var i =
									"Взломай сейф с помощью кода! Как получить код? Узнай, нажав на иконку сейфа.",
								s = $(".clan-task-completion-info__item").eq(0);
							s.addClass("b-onboarding b-onboarding_clan-safe"),
								s.find(".b-onboarding__text-i").text(i);
					}
				},
				closeOnboarding: function () {
					var e = r.get("clanMember"),
						t = $(".clan-task-progress"),
						i = n.params.userCommonProperties.clanSafeSettings.isAvailable;
					e == 2 &&
						($("#cover").hide(),
						t.removeClass("b-onboarding b-onboarding_clan-task"),
						r.set("clanMember", 3),
						this.showOnboarding(4)),
						e == 3 &&
							($("#cover").hide(),
							t.removeClass("b-onboarding b-onboarding_clan-task"),
							t.find(".b-onboarding__text").hide(),
							r.set("clanMember", 4),
							this.showOnboarding(5)),
						e == 4 &&
							($("#cover").hide(),
							$(".b-clan-battle-start")
								.removeClass("b-onboarding b-onboarding_clan-battle")
								.find(".b-onboarding__text")
								.hide(),
							r.set("clanMember", 5)),
						e == 5 &&
							($("#cover").hide(),
							$(".b-onboarding-popup_clan-task-result").hide(),
							r.set("clanMember", 6),
							this.showOnboarding(7),
							(this.params = {})),
						e == 6 &&
							($("#cover").hide(),
							$(".b-onboarding-popup_clan-task-time").hide(),
							r.set("clanMember", 7),
							i && this.showOnboarding(8)),
						e == 7 &&
							($("#cover").hide(),
							$(".b-onboarding_clan-safe").removeClass("b-onboarding b-onboarding_clan-safe"),
							r.set("clanMember", 8));
				},
			});
			return d;
		}
	),
	define("text!screens/clan/task.html!strip", [], function () {
		return "";
	}),
	define(
		"screens/clan/task",
		["widget", "application", "widgets/clan/task", "text!screens/clan/task.html!strip"],
		function (e, t, n, r) {
			var i = e.extend({
				template: _.template(r),
				el: "#screenContainer",
				events: {},
				initialize: function (e) {
					(this.params = e),
						(this.viewParam = {
							Application: t,
						});
				},
				afterRender: function () {},
				initializeWidgets: function () {
					this.widgets = [new n(this.params)];
				},
			});
			return i;
		}
	),
	define("models/game/clan", ["application", "models/game/abstract"], function (e, t) {
		var n = function (e, n) {
			console.log("game data: ", e),
				t.apply(this, arguments),
				(this.data = e),
				(this.params = n),
				(this.fieldBoosterCounts = {}),
				(this.activeBoosters = []),
				(this.fieldIndexes = []);
			for (var r = 0; r < this.data.letters.length; r++) this.fieldIndexes.push(r);
			(this.fieldBonusIndexes = _.values(this.data.bonuses)),
				(this.usedBonusIndexes = []),
				(this.availableBonusIndexes = _.difference(this.fieldIndexes, this.fieldBonusIndexes)),
				(this.chase = this.params.chase),
				(this.addUsedWord = function (e, t, n) {
					var r = this.getWordBonuses(),
						i = {};
					(i.usedWord = e),
						(i.usedWordScore = t),
						(i.indexes = n),
						this.activeBoosters.length > 0 && (i.activeBoosters = _.compact(this.activeBoosters)),
						this.whisperWords.indexOf(e) != -1
							? (this.removeActiveBooster("whisper"), (i.isWhisper = !0))
							: this.tipExclude.indexOf(e) != -1 && (i.isTip = !0),
						r && (i.activeBonuses = r),
						this.foundWordsResults.push(i);
				}),
				(this.getResult = function () {
					return (
						console.log("getResult from model"),
						{
							usedWords: this.foundWordsResults,
							scores: this.resultScores,
						}
					);
				});
			var i = this.countScore.bind(this);
			this.countScore = function () {
				var e,
					t = null,
					n = 1,
					r = this.params.clanWordScoreRates,
					s = i(),
					o = this.word,
					u = o.length;
				if (r && r.length > 0) {
					for (e = 0; e < r.length; e += 1)
						if (r[e].params.letters == u) {
							t = r[e];
							break;
						}
					t && (n = t.value);
				}
				return Math.floor(s * n);
			};
		};
		return (
			(n.prototype.getFieldBoosterData = function () {
				var e = [],
					t = 0,
					n;
				for (var r in this.fieldBoosterCounts)
					(n = {}), (n.alias = r), (n.count = this.fieldBoosterCounts[r]), (e[t] = n), (t += 1);
				return e;
			}),
			(n.prototype.getWhisperTip = function () {
				return this.getWordForTip("whisper");
			}),
			(n.prototype.getTotemTip = function (t) {
				var n,
					r,
					i = [],
					s,
					o,
					u = [],
					a = {},
					f,
					l,
					c,
					h;
				for (n = 0; n < this.data.letters.length; n++)
					(o = {
						index: n,
						letter: this.data.letters[n],
					}),
						u.push(o);
				_.extend(a, this.data.bonuses);
				if (!_.isEmpty(this.usedBonusIndexes))
					for (n = 0; n < this.usedBonusIndexes.length; n += 1)
						(l = a[n]), (c = []), (c[0] = l), (c[1] = this.usedBonusIndexes[n]), (a[n] = c);
				for (f in a)
					(l = a[f]),
						(letterBonus = null),
						(h = e.params.bonuses[f]),
						_.isArray(l)
							? l.forEach(function (e, t) {
									u[e].bonus = h;
							  })
							: (u[l].bonus = h);
				for (n = 0; n < this.data.words.length; n += 1)
					if (
						$.inArray(this.data.words[n], this.tipExclude) < 0 &&
						_.contains(this.data.indexes[n], t)
					) {
						var p = 0,
							d = 1,
							v = 1;
						s = this.data.indexes[n];
						for (r = 0; r < s.length; r += 1) {
							v = 1;
							if (u[s[r]].bonus)
								switch (u[s[r]].bonus.type) {
									case "word":
										d *= u[s[r]].bonus.value;
										break;
									case "letter":
										v *= u[s[r]].bonus.value;
								}
							var m = (r + 1) * v;
							p += m;
						}
						(p *= d),
							i.push({
								word: this.data.words[n],
								indexes: this.data.indexes[n],
								score: p,
							});
					}
				return (
					(i = _.sortBy(i, "score").reverse()),
					this.tipExclude.push(i[0].word),
					{
						word: i[0].word,
						indexes: i[0].indexes,
					}
				);
			}),
			(n.prototype.tipExcludeDeleteWord = function (e) {
				for (var t = 0; t <= this.tipExclude.length; t++)
					this.tipExclude[t] == e && this.tipExclude.splice(t, 1);
			}),
			(n.prototype.cellCheckForTotem = function (e) {
				for (var t = 0; t < this.data.words.length; t += 1)
					if (
						$.inArray(this.data.words[t], this.tipExclude) < 0 &&
						_.contains(this.data.indexes[t], e)
					)
						return !0;
				return !1;
			}),
			(n.prototype.addActiveBooster = function (e) {
				this.activeBoosters.push(e);
			}),
			(n.prototype.removeActiveBooster = function (e) {
				var t = this.activeBoosters.indexOf(e);
				this.activeBoosters.splice(t, 1);
			}),
			(n.prototype.getBonusIndex = function () {
				var e = Math.floor(Math.random() * this.availableBonusIndexes.length),
					t = this.availableBonusIndexes[e];
				return (
					(this.availableBonusIndexes = _.without(this.availableBonusIndexes, t)),
					console.log("this.availableBonusIndexes: ", this.availableBonusIndexes),
					this.usedBonusIndexes.push(t),
					console.log("this.usedBonusIndexes: ", this.usedBonusIndexes),
					t
				);
			}),
			n
		);
	}),
	define("models/clan/boosters", ["gate"], function (e) {
		var t = Backbone.Model.extend({
			initialize: function () {
				this.listenTo(e, "fieldBoosterGetInfo", function (e) {
					e.state != "error" && this.setBoostersInfo(e.fieldBoosterInfo);
				}),
					this.listenTo(e, "fieldBoosterBuy", function (t) {
						t.state != "error" && e.fieldBoosterGetInfo("clan");
					});
			},
			setBoostersInfo: function (e, t) {
				var n = [
						"freezing",
						"fire",
						"whisper",
						"rotation",
						"replacement",
						"bonuses",
						"time_letter",
						"totem",
					],
					r = {};
				(e = _.sortBy(e, function (e) {
					return e.position.clan;
				})),
					_.each(e, function (e, t) {
						_.indexOf(n, e.alias) != -1 &&
							((r[t] = e),
							r[t].conditions.clan ||
								(r[t].conditions.clan = {
									level: {
										from: 0,
									},
								}));
					}),
					this.set(r, t);
			},
			getIcons: function () {
				var e = {};
				for (var t in this.attributes)
					e[this.attributes[t].alias] = this.attributes[t].imageActiveUrl;
				return e;
			},
			getParams: function (e) {
				return _.find(this.attributes, function (t) {
					return t.alias == e;
				}).params;
			},
			isAvailable: function (e) {
				for (var t in this.attributes)
					if (this.attributes[t].conditions.game.level.from <= e) return !0;
				return !1;
			},
		});
		return new t();
	}),
	define(
		"widgets/fields/clan",
		[
			"gate",
			"widgets/fields/abstract",
			"application",
			"widgets/fields/timer",
			"models/clan/main",
			"models/clan/boosters",
		],
		function (e, t, n, r, i, s) {
			var o = t.extend({
				initialize: function (e) {
					this.afterInitialize(e),
						(this.whisperTip = {}),
						(this.hiddenTip = []),
						(this.totemCells = []),
						(this.totemCellsUsed = []),
						(this.totemCellFocusDelayTime = 60),
						this.render();
				},
				endGame: function () {
					(this.totemCellsUsed = []),
						this.isTotemActive && (this.model.fieldBoosterCounts.totem -= 1),
						(this.stop = !0);
				},
				boosterActionTime: function (e) {
					var t = this,
						n = $(".b-game__boosters__item[data-alias=" + e.alias + "]");
					e.actionTime
						? (this.model.addActiveBooster(e.alias),
						  n.addClass("b-game__boosters__item_active"),
						  n.find(".b-game__boosters__item__timer").text(e.actionTime),
						  (this[e.alias + "Timer"] = new r({
								count: e.actionTime,
								reverse: !0,
								autoStart: !0,
								success: function () {
									n.removeClass("b-game__boosters__item_active"), t.boosterActionTimeEnd(e);
								},
								process: function (n) {
									t.boosterUpdateTimer(e.alias, n.time);
								},
						  })))
						: e.count == 0
						? (n.removeClass("b-game__boosters__item_filled"),
						  n.removeClass("b-game__boosters__item_active"))
						: (n.removeClass("b-game__boosters__item_active"), this.boosterCooldown(e)),
						this.saveModelState();
				},
				boosterActionTimeEnd: function (e) {
					this.boosterCooldown(e), this.model.removeActiveBooster(e.alias);
					switch (e.alias) {
						case "freezing":
							this.freezingEnd();
							break;
						case "fire":
							this.fireEnd();
							break;
						case "whisper":
							this.whisperEnd();
							break;
						case "time_letter":
							this.time_letterEnd();
							break;
						case "bonuses":
							this.bonusesEnd();
					}
				},
				boosterCooldown: function (e) {
					_this = this;
					var t = $(".b-game__boosters__item[data-alias=" + e.alias + "]");
					if (e.cooldown && e.count !== 0) {
						t.addClass("b-game__boosters__item_cooldown"),
							t.find(".b-game__boosters__item__timer").text(e.cooldown);
						var n = new r({
							count: e.cooldown,
							reverse: !0,
							autoStart: !0,
							success: function () {
								t.removeClass("b-game__boosters__item_cooldown");
							},
							process: function (t) {
								_this.stop && this.stop(!0), _this.boosterUpdateTimer(e.alias, t.time);
							},
						});
					} else t.removeClass("b-game__boosters__item_filled");
				},
				boosterUpdateTimer: function (e, t) {
					$(".b-game__boosters__item[data-alias=" + e + "]")
						.find(".b-game__boosters__item__timer")
						.text(t);
				},
				freezing: function (e) {
					(_this = this),
						this.boosterActionTime(e),
						(this.isFreezAcitve = !0),
						this.timer.stop(!0),
						n.methods.play("freeze_start"),
						n.methods.play("freeze_loop"),
						this.roundTimeRemaining <= 10 &&
							(n.methods.stop("timer_loop"), n.methods.stop("timer_preend")),
						$(".b-game").addClass("b-game_freezing");
				},
				freezingEnd: function () {
					(_this = this),
						this.timer.start({
							count: this.roundTimeRemaining,
						}),
						(this.isFreezAcitve = !1),
						n.methods.stop("freeze_loop"),
						$(".b-game").removeClass("b-game_freezing");
				},
				rotation: function (e) {
					var t = this,
						r,
						i,
						s,
						o,
						u,
						a,
						f,
						l,
						c,
						h,
						p,
						d,
						v,
						m = this.fieldParams.size,
						g = this.fieldParams.shift;
					n.methods.play("turn"),
						(r = this.cellArray[0].sizeX),
						(i = this.cellArray[0].sizeY),
						(o = r * 5),
						(u = i * 5),
						(a = this.wrapper.offsetLeft),
						(f = this.wrapper.offsetTop);
					for (var y = 0; y < this.cellArray.length; y++)
						(s = this.cellArray[y]),
							(l = s.middleX),
							(c = s.middleY),
							(h = l - o / 2),
							(p = c - u / 2),
							(d = p),
							(v = -h),
							(s.middleX = d + o / 2),
							(s.middleY = v + u / 2),
							(s.x = (s.middleX - r / 2) / r),
							(s.y = (s.middleY - i / 2) / i),
							(s.position = s.x + s.y * 5),
							s.drawCell({
								style: "simple",
								context: this.ctx.background,
							});
					this.cellArray = _.sortBy(this.cellArray, "position");
					for (y = 0; y < this.cellArray.length; y++) this.allCells.push(y);
					this.eventualCells = this.allCells;
					if (this.totemCellsUsed.length > 0) {
						console.log("totemCellsUsed: ", this.totemCellsUsed);
						var b = $('.b-game__boosters__item[data-alias="totem"] img')[0];
						this.ctx.totem.clearRect(0, 0, m, m);
						for (y = 0; y < this.totemCellsUsed.length; y += 1) {
							var w = _.find(this.cellArray, function (e) {
									return e.index == t.totemCellsUsed[y];
								}).position,
								E = w % 5,
								S = Math.floor(w / 5);
							this.ctx.totem.drawImage(
								b,
								E * this.cellArray[0].sizeX + g,
								S * this.cellArray[0].sizeY + g,
								50,
								50
							);
						}
					}
					this.boosterActionTime(e);
				},
				fire: function (e) {
					(_this = this),
						this.boosterActionTime(e),
						(this.model.scoreBoost = 2),
						n.methods.play("fire_start"),
						n.methods.play("fire_loop"),
						$(".b-game").addClass("b-game_fire");
				},
				fireEnd: function () {
					(this.model.scoreBoost = 1),
						n.methods.stop("fire_loop"),
						$(".b-game").removeClass("b-game_fire");
				},
				whisper: function (e) {
					n.methods.play("whisper"),
						this.boosterActionTime(e),
						(this.whisperTip = this.model.getWhisperTip()),
						this.tipCells.length && $("#wordHint").hide(),
						$("#whisperHint").show().html(this.whisperTip.word);
				},
				whisperEnd: function () {
					var e = s.getParams("whisper");
					$("#whisperHint").html("").hide(),
						this.whisperTip.word ||
							(this.whisperTimer.stop(!0),
							this.boosterCooldown(e),
							$(".b-game__boosters__item[data-alias=" + e.alias + "]").removeClass(
								"b-game__boosters__item_active"
							)),
						(this.whisperTip = {});
				},
				time_letter: function (e) {
					(_this = this),
						this.boosterActionTime(e),
						$(".b-game").addClass("b-game_time_letter"),
						$(".b-game__head__time__boost").css({
							opacity: 0,
							marginTop: "6px",
						}),
						this.listenTo(this, "wordExist", function (e) {
							_this.time_letterProcess(e.word);
						});
				},
				time_letterProcess: function (e) {
					e.length > 0 && this.updateTimer((e.length * s.getParams("time_letter").msWord) / 1e3);
				},
				time_letterEnd: function () {
					this.stopListening(this, "wordExist"), $(".b-game").removeClass("b-game_time_letter");
				},
				updateTimer: function (e) {
					this.timer.stop(!0),
						(this.roundTimeRemaining += e),
						$("#timer").text(this.getHRTime(this.roundTimeRemaining)),
						this.isFreezAcitve ||
							this.timer.start({
								count: this.roundTimeRemaining,
							}),
						$(".b-game__head__time__boost")
							.text("+" + e + "с")
							.animate(
								{
									opacity: 1,
									marginTop: "-4px",
								},
								200,
								function () {
									$(".b-game__head__time__boost").delay(250).animate(
										{
											opacity: 0,
											marginTop: "6px",
										},
										100
									);
								}
							);
				},
				totem: function (e) {
					var t,
						n = this.fieldParams.size;
					(this.isTotemActive = !0),
						$("#totem").show(),
						$(".b-game__boosters__item_filled").addClass("b-game__boosters__item_inactive"),
						$(".b-game__boosters__item[data-alias=" + e.alias + "]")
							.removeClass("b-game__boosters__item_inactive")
							.addClass("b-game__boosters__item_active")
							.find(".b-game__boosters__item__timer")
							.html(""),
						(this.hiddenTip = this.tipCells),
						(this.tipCells = []),
						this.ctx.background.clearRect(0, 0, n, n);
					for (var r = 0; r < this.cellArray.length; r++)
						(t = this.cellArray[r]),
							!t.bonus &&
							!_.contains(this.totemCellsUsed, t.index) &&
							this.model.cellCheckForTotem(t.index)
								? (t.drawCell({
										style: "simple",
										context: this.ctx.background,
								  }),
								  this.totemCells.push(t))
								: (this.ctx.background.save(),
								  (this.ctx.background.globalAlpha = 0.4),
								  t.drawCell({
										style: "simple",
										context: this.ctx.background,
								  }),
								  this.ctx.background.restore(),
								  console.log("totem block index:", r));
					console.log("game model:", this.model),
						console.log("totem cells: ", this.totemCells),
						console.log("totem used cells:", this.totemCellsUsed);
				},
				totemProcess: function (e) {
					var t,
						n,
						r,
						i,
						o,
						u,
						a = this.fieldParams.size,
						f = this.fieldParams.shift;
					(this.ctx.totem = $("#totem")[0].getContext("2d")),
						(this.mouse.x =
							(e.pageX - this.container.offsetLeft - this.wrapper.offsetLeft) * 2 -
							this.fieldParams.shift),
						(this.mouse.y =
							(e.pageY - this.container.offsetTop - this.wrapper.offsetTop) * 2 -
							this.fieldParams.shift);
					if (this.mouse.x > a || this.mouse.y > a) return !1;
					(t = Math.floor(this.mouse.x / this.cellArray[0].sizeX)),
						(n = Math.floor(this.mouse.y / this.cellArray[0].sizeY)),
						(r = t + n * 5),
						console.log(r),
						(i = _.find(this.totemCells, function (e) {
							return e.position == r;
						})),
						(this.model.availableBonusIndexes = _.without(
							this.model.availableBonusIndexes,
							i.index
						)),
						console.log(s.getIcons().totem);
					if (i) {
						var l = $('.b-game__boosters__item[data-alias="totem"] img')[0];
						this.ctx.totem.drawImage(
							l,
							t * this.cellArray[0].sizeX + f,
							n * this.cellArray[0].sizeY + f,
							50,
							50
						),
							(o = this.model.getTotemTip(i.index));
						var c = o.indexes.length;
						console.log(o), this.totemCellsUsed.push(i.index);
						for (var h = 0; h < c; h += 1) {
							var p = _.find(this.cellArray, function (e) {
								return e.index == o.indexes[h];
							}).position;
							(u = {
								position: p,
								index: o.indexes[h],
								letter: o.word[h],
							}),
								this.cellArray[p].bonus && (u.bonus = this.cellArray[p].bonus),
								this.totemFocusCell(h, p, u);
						}
						this.printWord(o.word), this.totemEnd(c);
					}
				},
				totemEnd: function (e) {
					var t = this,
						n,
						r = s.getParams("totem");
					setTimeout(function () {
						(t.isTotemActive = !1),
							t.boosterActionTime(r),
							(t.heldCells = []),
							(t.tipCells = t.hiddenTip),
							t.endGesture(),
							(t.totemCells = []),
							$(".b-game__boosters__item_filled").removeClass("b-game__boosters__item_inactive");
						for (n = 0; n < t.cellArray.length; n++)
							t.cellArray[n].drawCell({
								style: "simple",
								context: t.ctx.background,
							});
						$("#totem").hide();
					}, e * t.totemCellFocusDelayTime + 100);
				},
				totemFocusCell: function (e, t, n) {
					var r = this,
						i = this.totemCellFocusDelayTime * e;
					setTimeout(function () {
						r.heldCells.push(t), r.model.addLetter(n), r.playFocusSound(e);
					}, i);
				},
				replacement: function (t) {
					n.methods.play("change");
					var r = i.get("clanData").task.fieldParams,
						s = r.minWordsCount,
						o = r.maxWordsCount;
					e.generateNewField(s, o);
					var u = this.fieldParams.size;
					this.listenToOnce(e, "generateNewField", function (e) {
						_.isEmpty(this.totemCellsUsed) ||
							((this.totemCellsUsed = []), this.ctx.totem.clearRect(0, 0, u, u)),
							(this.model.data = this.model.sortData(e.fields[0])),
							this.model.setGameData(this.model.data),
							this.createCellArray(),
							this.drawCellArray(),
							this.bonusesTimer && this.bonusesTimer.counter && this.addBonuses();
					}),
						this.whisperTip.word && this.whisperEnd(),
						this.tipCells.length > 0 &&
							((this.tipCells = []), this.ctx.cells.clearRect(0, 0, u, u), this.clearTip()),
						this.boosterActionTime(t);
				},
				bonuses: function (e) {
					n.methods.play("additional_score"), this.addBonuses(), this.boosterActionTime(e);
				},
				addBonuses: function () {
					var e, t;
					for (var r = 0; r < 4; r++)
						(e = this.model.getBonusIndex()),
							(t = _.find(this.cellArray, function (t) {
								return t.index == e;
							})),
							(t.bonus = n.params.bonuses[r]);
					this.drawCellArray();
				},
				bonusesEnd: function () {
					var e = this,
						t;
					this.model.usedBonusIndexes.forEach(function (n) {
						(t = _.find(e.cellArray, function (e) {
							return e.index == n;
						})),
							delete t.bonus;
					}),
						(this.model.usedBonusIndexes = []),
						this.drawCellArray();
				},
				afterCheckWord: function () {
					var e = this;
					$("#whisperHint").hide(),
						setTimeout(function () {
							e.scoreFlagView.hide(),
								$("#word").html(""),
								e.clearTip(),
								e.tipCells.length
									? e.tipEnable(e.tipWord)
									: e.whisperTip && $("#whisperHint").show().text(e.whisperTip.word);
						}, 600);
				},
				checkIsCurrentWordATip: function (e) {
					var t = this.fieldParams.size;
					this.tipWord == e &&
						((this.tipCells = []), this.ctx.cells.clearRect(0, 0, t, t), this.clearTip()),
						this.whisperTip.word == e && ((this.whisperTip = {}), this.whisperEnd());
				},
				printWord: function (e) {
					this.whisperTip && $("#whisperHint").hide().html(""),
						$("#wordHint").hide(),
						$("#wordHintLettersHL").html(""),
						$("#word").show().html(e);
				},
				playExistWordSound: function (e) {
					this.model.scoreBoost == 2
						? (n.methods.stop("doubling"), n.methods.play("doubling"))
						: (n.methods.stop(e), n.methods.play(e));
				},
				playFocusSound: function (e) {
					(e = e > 14 ? 14 : e),
						this.model.scoreBoost == 2
							? (n.methods.stop("fire_tap_" + e), n.methods.play("fire_tap_" + e))
							: n.methods.play("select_letter_" + e);
				},
				tipAlert: function () {},
				tipAvailable: function () {
					$("#showTipButton").removeClass("b-game__boosters__item_cooldown");
				},
				tipEnable: function (e) {
					console.log("tipEnable: ", e),
						this.whisperTip && $("#whisperHint").hide(),
						$("#wordHint").show(),
						$("#wordHintLetters").html(e);
				},
				tipOnCoolDown: function () {
					var e = this;
					$("#tipCoolDownTimer").html(e.getTipCDTime()),
						$("#showTipButton").addClass("b-game__boosters__item_cooldown"),
						this.tipEvailableTimer.start({
							name: "TipEvailableTimer",
						});
				},
			});
			return o;
		}
	),
	define("text!widgets/clan/boosters.html!strip", [], function () {
		return '<div class="b-boosters">\n    <div class="b-boosters__head">\n        <div class="b-boosters__head__ctrls">\n            <div id="backButton" class="b-btn-back b-btn-back_boosters"></div>\n            <div id="showInfoPopup" class="b-boosters__head__ctrls__info soundingButton"> \n                <div class="btn-info"></div>\n              </div>\n        </div>\n        <div class="b-boosters__head__title">Выбери усиление</div>\n    </div>\n    <div class="b-boosters-i">\n        <div class="b-boosters__cells">\n            <div class="b-boosters__cells-i">\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div id="showIntelligenceInfoPopup" class="b-boosters__cells__counter b-boosters__cells__counter_empty"> <!-- b-boosters__cells__counter_full -->\n                    <div class="b-boosters__cells__counter__pic">\n                        <div class="b-boosters__cells__counter__pic-i" ></div> <!-- style="height: 0%;" -->\n                        <div class="b-boosters__cells__counter__pic__icon"></div>\n                        <div class="b-boosters__cells__counter__pic__full">\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_1"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_2"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_3"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_4"></div>\n                        </div>\n                    </div>\n                    <div class="b-boosters__cells__counter__data">\n                        <span class="b-boosters__cells__counter__data__value">0</span>/<span class="b-boosters__cells__counter__data__total"><%= intelligenceValue %></span>\n                    </div>\n                </div>\n                <!-- counter -->\n            </div>\n        </div>\n        <!-- /.b-boosters__cells -->\n\n        <div class="b-boosters__list">\n            <div class="b-boosters__list-i">\n            <% \n                var items = boosters.attributes;\n                for (var i in items) { %>\n                <div data-list-id=\'<%= i %>\' class="b-boosters__list__item <% if (!items[i].isAvailable) print(\'b-boosters__list__item_inactive\') %>">\n                    <div class="b-boosters__list__item__counter"><%= items[i].count %></div>\n                    <div class="b-boosters__list__item__icon">\n                        <img src="<%= items[i].imageActiveUrl %>" alt="" class="b-boosters__list__item__icon-i">\n                    </div>\n                    <div class="b-boosters__list__item__title"><%= items[i].title %></div>\n                    <div class="b-boosters__list__item__weight">\n                        <img class="b-boosters__list__item__weight__icon" src="<%=Application.params.staticUrl%>images/app/boosters/intelligence.png" alt=""> &times; \n                        <span class="b-boosters__list__item__weight-i"><%= items[i].intelligence %></span>\n                    </div>\n                    <div class="b-boosters__list__item__ctrl">\n                        <div class="b-boosters__list__item__ctrl-i"><%= items[i].cost.coins %></div>\n                    </div>\n                    <div class="b-boosters__list__item__info">\n                        <% if (!items[i].isAvailable && items[i].conditions.clan.level.from) { %>\n                            Откроется на&nbsp;<%= items[i].conditions.clan.level.from %>&nbsp;ур.\n                        <% } %>\n                    </div>\n                </div>\n                <!-- /.b-boosters__list__item -->\n            <% } %>\n            </div>\n        </div>\n        <!-- /.b-boosters__list -->\n\n        <div class="b-boosters-onboarding-cover"></div>\n\n        <div class="b-boosters__btn">\n            <div id="clanBattleBtn" class="b-btn soundingButton">\n                В бой\n                <span id="taskCost" class="b-coin b-coin_btn"></span>\n            </div>\n        </div>\n\n    </div>\n    \n</div>\n<!-- /.b-boosters -->\n';
	}),
	define(
		"widgets/clan/boosters",
		[
			"gate",
			"widget",
			"application",
			"controllers/onboarding",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/clan/main",
			"models/clan/boosters",
			"models/user",
			"text!widgets/clan/boosters.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = t.extend({
				events: {
					"click #backButton": function () {
						u.setScreen({
							screen: "clanTask",
						}),
							$(".l-screen").removeClass("l-screen_game");
					},
					"click #showInfoPopup": "showInfoPopup",
					"click #showIntelligenceInfoPopup": "showIntelligenceInfoPopup",
					"click .b-boosters__list__item__ctrl": function (e) {
						var t = $(e.target).closest(".b-boosters__list__item").attr("data-list-id");
						this.buyBooster(t);
					},
					"click .b-boosters__list__item__icon": function (e) {
						var t = $(e.target).closest(".b-boosters__list__item").attr("data-list-id");
						this.addBooster(t);
					},
					"click .b-boosters__cells__item__icon": function (e) {
						var t = $(e.target).closest(".b-boosters__cells__item").attr("data-cell-id");
						this.removeBooster(t);
					},
					"click #clanBattleBtn": "startBattle",
				},
				el: "#boosters",
				initialize: function (e) {
					var t = this;
					(this.params = e),
						(this.model = f),
						(this.template = _.template(c)),
						(this.viewParam = {
							Application: n,
							boosters: f,
							intelligenceValue: this.params.intelligenceValue,
						}),
						this.listenTo(this.model, "change", function () {
							t.updateBoosterCounter(this.model.changed);
						}),
						a.on("change", this.onClanModelChange, this),
						(this.timer = setInterval(function () {
							t.setButtonState();
						}, 1e4));
				},
				afterRender: function () {
					$(".b-boosters__list__item").each(function () {
						var e = $(this),
							t = +e.find(".b-boosters__list__item__counter").text();
						t == 0 && e.addClass("b-boosters__list__item_empty");
					}),
						_.size(f.attributes) > 6 && $(this.el).children().eq(0).addClass("b-boosters_all"),
						$("#clanBattleBtn").removeClass("b-btn_blue").addClass("b-btn_green"),
						$("#taskCost").hide(),
						(this.taskType = "free"),
						this.setButtonState(),
						(this.boostersOnboardingStatus = r.get("boosters")),
						console.log("this.boostersOnboardingStatus: ", this.boostersOnboardingStatus),
						this.boostersOnboardingStatus || this.showOnboarding(1),
						this.boostersOnboardingStatus == 1 && this.showOnboarding(2),
						this.boostersOnboardingStatus == 3 && this.showOnboarding(4),
						$(".b-boosters-onboarding-cover").off("click"),
						$(".b-boosters-onboarding-cover").on("click", this.closeOnboarding.bind(this));
				},
				onClanModelChange: function () {
					this.setButtonState();
				},
				setButtonState: function () {
					if (u.get("screen") != "clanBattle") return;
					var e = a.get("clanData").task,
						t = e.tsLastBattle;
					if (t) {
						var n = a.calcMsToFreeBattle();
						n > 0
							? ($("#clanBattleBtn").removeClass("b-btn_green").addClass("b-btn_blue"),
							  $("#taskCost").show().text(e.costNewBattle),
							  (this.taskType = "coins"))
							: ($("#clanBattleBtn").removeClass("b-btn_blue").addClass("b-btn_green"),
							  $("#taskCost").hide(),
							  (this.taskType = "free"));
					}
				},
				startBattle: function () {
					var e = $("#clanBattleBtn");
					if (!e.hasClass("g-disabled")) {
						e.addClass("g-disabled");
						var t = this,
							n = a.get("clanData").task.costNewBattle;
						if (l.get("balance") < n && this.taskType == "coins")
							this.showBuyCoinsPopup(), e.removeClass("g-disabled");
						else {
							var r = [];
							$(".b-boosters__cells__item").each(function () {
								var e = $(this);
								if (e.hasClass("b-boosters__cells__item_filled")) {
									var n = t.model.get(e.attr("data-cell-id")).alias,
										i = +e.find(".b-boosters__cells__item__counter").text();
									r.push({
										count: i,
										alias: n,
									});
								}
							});
							switch (this.taskType) {
								case "coins":
									i.sendDesignEvent("Screen_actions:booster_clan:to_battle_coin"),
										i.sendResourceEvent("coins", -n, "clanBattle", "Consumed"),
										i.sendDesignEvent("spend_virtual_currency:Reason:clan_try");
									break;
								case "free":
									i.sendDesignEvent("Screen_actions:booster_clan:to_battle_free");
							}
							this.trigger("startBattle", {
								selectedBoosters: r,
								type: this.taskType,
							});
						}
					}
				},
				addBooster: function (e) {
					var t = r.get("boosters");
					if (!t) return this.closeOnboarding(), !1;
					t == 2 && this.showOnboarding(3);
					var s,
						o,
						u = $(".b-boosters__list__item[data-list-id=" + e + "]"),
						a = u.find(".b-boosters__list__item__counter"),
						f = this.model.get(e).intelligence;
					if (
						u.hasClass("b-boosters__list__item_empty") ||
						u.hasClass("b-boosters__list__item_inactive")
					)
						return !1;
					if (this.checkFlask(f)) {
						if (u.hasClass("b-boosters__list__item_active"))
							(s = $(".b-boosters__cells__item[data-cell-id=" + e + "]")),
								(o = s.find(".b-boosters__cells__item__counter")),
								n.methods.play("click");
						else {
							var l = $(".b-boosters__cells__item").not(".b-boosters__cells__item_filled");
							if (!l.length) return !1;
							(s = l.eq(0)),
								(o = s.find(".b-boosters__cells__item__counter")),
								s.attr("data-cell-id", e).addClass("b-boosters__cells__item_filled"),
								s.find("img").attr("src", this.model.get(e).imageActiveUrl),
								u.addClass("b-boosters__list__item_active"),
								n.methods.play("click");
						}
						o.text(+o.text() + 1),
							a.text(+a.text() - 1),
							this.updateFlask(f),
							this.intelligenceAlert(),
							+a.text() == 0 && u.addClass("b-boosters__list__item_empty"),
							i.sendDesignEvent("Screen_actions:booster_clan:put");
					}
				},
				removeBooster: function (e) {
					var t = $(".b-boosters__list__item[data-list-id=" + e + "]"),
						r = t.find(".b-boosters__list__item__counter"),
						i = $(".b-boosters__cells__item[data-cell-id=" + e + "]"),
						s = i.find(".b-boosters__cells__item__counter"),
						o = this.model.get(e).intelligence;
					r.text(+r.text() + 1),
						s.text(+s.text() - 1),
						this.updateFlask(-o),
						this.intelligenceAlert(),
						+s.text() == 0 &&
							(i.attr("data-cell-id", "").removeClass("b-boosters__cells__item_filled"),
							t.removeClass("b-boosters__list__item_active")),
						+r.text() > 0 && t.removeClass("b-boosters__list__item_empty"),
						n.methods.play("click");
				},
				checkFlask: function (e) {
					var t = +$(".b-boosters__cells__counter__data__value").text(),
						n = this.params.intelligenceValue;
					return t + e <= n ? !0 : !1;
				},
				updateFlask: function (e) {
					var t = $(".b-boosters__cells__counter__data__value"),
						r = n.params.services.intelligence,
						i = $(".b-boosters__cells__counter"),
						s = $(".b-boosters__cells__counter__pic-i");
					t.text(+t.text() + e),
						s.css("height", (+t.text() / +r) * 100 + "%"),
						t.text() > 0
							? i.removeClass("b-boosters__cells__counter_empty")
							: i.addClass("b-boosters__cells__counter_empty"),
						t.text() == r
							? i.addClass("b-boosters__cells__counter_full")
							: i.removeClass("b-boosters__cells__counter_full");
				},
				intelligenceAlert: function () {
					var e = this;
					$(".b-boosters__list__item").each(function () {
						var t = $(this).find(".b-boosters__list__item__weight-i");
						e.checkFlask(+t.text())
							? t.parent().removeClass("b-boosters__list__item__weight_hl")
							: t.parent().addClass("b-boosters__list__item__weight_hl");
					});
				},
				buyBooster: function (t) {
					var r = this.model.get(t);
					n.methods.play("click"),
						l.get("balance") >= r.cost.coins
							? (console.log("buy booster id:", t), e.fieldBoosterBuy(r.alias))
							: this.showBuyCoinsPopup(),
						i.sendDesignEvent("Screen_actions:booster_clan:buy"),
						i.sendResourceEvent("coins", -r.cost.coins, "booster", "Consumed"),
						i.sendDesignEvent("spend_virtual_currency:Reason:booster_clan");
				},
				updateBoosterCounter: function (e) {
					var t = _.keys(e)[0],
						n = $(".b-boosters__list__item[data-list-id=" + t + "]"),
						r = n.find(".b-boosters__list__item__counter"),
						i = this.model.get(t).count;
					if (n.hasClass("b-boosters__list__item_active")) {
						var s = $(".b-boosters__cells__item[data-cell-id=" + t + "]"),
							o = s.find(".b-boosters__cells__item__counter"),
							u = +o.text();
						r.text(i - u);
					} else r.text(i);
					+r.text() > 0 && n.removeClass("b-boosters__list__item_empty");
				},
				showBuyCoinsPopup: function () {
					purchase
						? o.add({
								type: "buyCoins",
						  })
						: o.add({
								type: "text",
								params: {
									header: "",
									text: "Недостаточно монет.",
									list: null,
									cursiv: null,
								},
						  });
				},
				showInfoPopup: function () {
					s.showInfoPopup("boosters");
				},
				showIntelligenceInfoPopup: function () {
					o.add({
						type: "static",
						params: {
							template: "boostersFlask",
						},
					});
				},
				showOnboarding: function (e) {
					$(".b-boosters-onboarding-cover").show();
					switch (e) {
						case 1:
							$(".b-boosters__list__item").addClass("b-boosters__list__item_onboarding"),
								$(".b-boosters__list__item_onboarding")
									.eq(0)
									.addClass("b-onboarding b-onboarding_boosters-start")
									.append(
										"<div class='b-onboarding__text' style='display: block'><div class='b-onboarding__text-i'>Усилители помогут тебе получить больше очков.</div></div>"
									),
								$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this));
							break;
						case 2:
							$(".b-boosters__cells")
								.addClass("b-onboarding b-onboarding_boosters-cells")
								.append(
									"<div class='b-onboarding__text' style='display: block'><div class='b-onboarding__text-i'>Всего с&nbsp;собой можно взять 3&nbsp;типа Усилений, поместив их в&nbsp;свободные слоты.</div></div>"
								),
								$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this)),
								$(".b-boosters__cells").on("click", this.closeOnboarding.bind(this));
							break;
						case 3:
							$(".b-boosters__cells").addClass("b-boosters__cells_onboarding"),
								$(".b-boosters__cells__counter")
									.addClass("b-onboarding b-onboarding_boosters-flask")
									.append(
										"<div class='b-onboarding__text' style='display: block'><div class='b-onboarding__text-i'>Обрати внимание, что&nbsp;шкала Интеллекта заполняется с&nbsp;каждым добавленным Усилителем.</div></div>"
									),
								$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this)),
								$(".b-boosters__cells").on("click", this.closeOnboarding.bind(this));
							break;
						case 4:
							$(".b-boosters").append(
								"<div class='b-onboarding-popup b-onboarding-popup_boosters' style='display: block;'><div class='b-onboarding-popup__text'>Все неиспользованные за игру Усилители сохраняются на следующие игры.</div></div>"
							),
								$(".b-onboarding-popup ").on("click", this.closeOnboarding.bind(this));
					}
				},
				closeOnboarding: function () {
					var e = r.get("boosters");
					$(".b-boosters-onboarding-cover").hide(),
						$(".b-onboarding__text").off("click"),
						$(".b-boosters__cells").off("click"),
						e ||
							($(".b-boosters__list__item_onboarding")
								.eq(0)
								.removeClass("b-onboarding b-onboarding_boosters-start")
								.find(".b-onboarding__text")
								.remove(),
							$(".b-boosters__list__item").removeClass("b-boosters__list__item_onboarding"),
							r.set("boosters", 1),
							this.showOnboarding(2)),
						e == 1 &&
							($(".b-boosters__cells")
								.removeClass("b-onboarding b-onboarding_boosters-cells")
								.find(".b-onboarding__text")
								.remove(),
							r.set("boosters", 2)),
						e == 2 &&
							($(".b-boosters__cells").removeClass("b-boosters__cells_onboarding"),
							$(".b-boosters__cells__counter")
								.removeClass("b-onboarding b-onboarding_boosters-flask")
								.find(".b-onboarding__text")
								.remove(),
							r.set("boosters", 3),
							this.showOnboarding(4)),
						e == 3 &&
							($(".b-boosters").find(".b-onboarding-popup").remove(),
							$(".b-onboarding-popup ").off("click"),
							r.set("boosters", 4));
				},
			});
			return h;
		}
	),
	define("text!screens/clan/game.html!strip", [], function () {
		return '<div class="b-game l-game"> <!-- fire freezing time_letter -->\n    <div class="l-game__top">\n\n        <div class="b-game__head">\n            <div class="b-game__head-i">\n                <div class="b-game__head__points">\n                    <i class="b-game__head__points__icon"></i>\n                    <div class="b-game__head__points__label">Очки</div>\n                    <div id="score" class="b-game__head__points-i">0</div>\n                </div>\n                <div class="b-game__head__words">\n                    <div class="b-game__head__words__label">Слова</div>\n                    <div class="b-game__head__words-i">\n                        <span id="foundWordsCount" class="b-game__head__words__count">0</span>\n                        /\n                        <span id="fieldWordsCount" class="b-game__head__words__total"></span>\n                    </div>\n                </div>\n                <div class="b-game__head__time">\n                    <i class="b-game__head__time__icon"></i>\n                    <div class="b-game__head__time__label">Время</div>\n                    <div id="timer" class="b-game__head__time-i"></div>\n                    <div class="b-game__head__time__boost"></div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-game__head -->\n\n        <div class="b-game__word">\n            <div id=\'scoreFlag\' class="b-game__word__points" style="display: none">\n                <div id=\'wordScorePreText\' class="b-game__word__points__label">Супер!</div>\n                <div id="wordScore" class="b-game__word__points-i"></div>\n            </div>\n            <span id=\'word\' class="b-game__word-i"></span>\n            <span id=\'wordHint\' class="b-game__word__hint" style="display: none;">\n                <span class="b-game__word__hint__letters">\n                    <span id="wordHintLetters" class="b-game__word__hint__letters-i"></span><span id="wordHintLettersHL" class="b-game__word__hint__letters__hl"></span>\n                </span>\n            </span>\n            <span id=\'whisperHint\' class="b-game__word__whisper" style="display: none;"></span>\n            <% if(platform == \'desktop\') { %>\n            <div id=\'confirmWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_confirm" style="display: none;"></div>\n            <div id=\'dropWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_cancel" style="display: none;"></div>\n            <% } %>\n        </div>\n        <!-- /.b-game__word -->\n    \n    </div>\n    <!-- /.l-game__top -->\n\n    <div class="b-game__area l-game__area">\n        <div class="l-game__field">\n            <div id=\'canvasContainer\' class="b-game__canvas">\n                <canvas id="arrows" style="z-index:1; position:absolute;"></canvas>\n                <canvas id="background" style="z-index:2; position:absolute;"></canvas>\n                <canvas id="cells" style="z-index:3; position:absolute;"></canvas>\n                <canvas id="totem" style="z-index:4; position:absolute;" style="display: none;"></canvas>\n                <canvas id="chaseBonuses" style="z-index:5; position:absolute;"></canvas>\n            </div>\n            <div id="startContainer" class="b-game__start">\n                <img id="startImage" class="b-game__start-img" src="<%= Application.params.staticUrl %>images/app/game-area-start.png" alt="" />\n            </div>\n        </div>\n        <!-- /.l-game__field -->\n        <div class="l-game__ctrls">\n            <div class="b-game__boosters">\n                <div class="b-game__boosters__item"> <!-- inactive active cooldown -->\n                    <div class="b-game__boosters__item__icon">\n                        <img src="" alt="" class="b-game__boosters__item__icon-i">\n                    </div>\n                    <div class="b-game__boosters__item__counter"></div>\n                    <div class="b-game__boosters__item__timer"></div>\n                </div>\n                <div class="b-game__boosters__item">\n                    <div class="b-game__boosters__item__icon">\n                        <img src="" alt="" class="b-game__boosters__item__icon-i">\n                    </div>\n                    <div class="b-game__boosters__item__counter"></div>\n                    <div class="b-game__boosters__item__timer"></div>\n                </div>\n                <div class="b-game__boosters__item">\n                    <div class="b-game__boosters__item__icon">\n                        <img src="" alt="" class="b-game__boosters__item__icon-i">\n                    </div>\n                    <div class="b-game__boosters__item__counter"></div>\n                    <div class="b-game__boosters__item__timer"></div> \n                </div>\n                <div id="showTipButton" class="b-game__boosters__item b-game__boosters__item_filled b-game__boosters__item_inactive">\n                    <div class="b-game__boosters__item__icon">\n                        <img id="coinTip" src="<%=Application.params.staticUrl%>images/app/boosters/hint.png" alt="" class="b-game__boosters__item__icon-i">\n                    </div>\n                    <div id="freeTip" class="b-game__boosters__item__counter"></div>\n                    <div id="tipCost" class="b-game__boosters__item__cost"></div>\n                    <div id="tipCoolDownTimer" class="b-game__boosters__item__timer"></div>\n                </div>\n            </div>\n            <!-- /.b-game__boosters -->\n        </div>\n        <!-- /.l-game__ctrls -->\n\n    </div>\n    <!-- /.b-game__area .l-game__area -->\n\n</div>\n<!-- /.b-game .l-game -->\n\n<div id="boosters" class="b-clan-boosters"></div>';
	}),
	define(
		"screens/clan/game",
		[
			"widget",
			"gate",
			"application",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"controllers/gameCheat",
			"collections/popups",
			"models/user",
			"models/appState",
			"models/game/clan",
			"models/clan/boosters",
			"widgets/fields/clan",
			"widgets/clan/boosters",
			"text!screens/clan/game.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = e.extend({
				el: "#screenContainer",
				template: _.template(d),
				events: {
					"click #showTipButton": "showTip",
					"click .b-game__boosters__item": "useFieldBooster",
				},
				initialize: function (e) {
					console.warn("game.initialize params", e),
						(this.params = e),
						console.log("clan battle params: ", this.params),
						(this.viewParam = {
							Application: n,
						}),
						this.boosterGetInfo();
				},
				initializeWidgets: function () {},
				boosterGetInfo: function () {
					this.listenTo(t, "boosterGetInfo", function (e) {
						(this.tipCostRate = 1),
							(this.intelligenceValue = n.params.services.intelligence),
							(this.clanWordScoreRates = []);
						var t = e.boosterInfo;
						for (var r = 0; r < t.length; r += 1)
							switch (t[r].type) {
								case "tipCost":
									this.tipCostRate = t[r].params.rate;
									break;
								case "intelligence":
									this.intelligenceValue = t[r].value;
									break;
								case "clanWordScoreRate":
									this.clanWordScoreRates.push(t[r]);
							}
						this.clanWordScoreRates.length > 0 &&
							(this.clanWordScoreRates = s.combineRewardsParams(this.clanWordScoreRates));
					}),
						t.boosterGetInfo();
				},
				afterRender: function () {
					$(".l-screen").addClass("l-screen_game"),
						(this.fieldSize = this.getFieldSize()),
						this.setTipButtonType(),
						this.fieldBoosterGetInfo(),
						this.listenTo(t, "getTip", function () {
							a.get("balance") < n.params.services.getATip &&
								!purchase &&
								$("#showTipButton").addClass("b-game__boosters__item_inactive");
						});
				},
				fieldBoosterGetInfo: function () {
					var e = this;
					this.listenToOnce(t, "fieldBoosterGetInfo", function (t) {
						(this.boostersWidget = new p({
							intelligenceValue: this.intelligenceValue,
						})),
							this.boostersWidget.render(),
							this.listenToOnce(this.boostersWidget, "startBattle", function (t) {
								var n = t;
								e.clanBattleStart(n.type, n.selectedBoosters);
							});
					}),
						t.fieldBoosterGetInfo("clan");
				},
				clanBattleStart: function (e, r) {
					var i = this;
					this.listenTo(t, "clanBattleStart", function (r) {
						var r = r,
							s = 120,
							u = r.fieldBoosterData || [];
						(this.defaultTipCost = 25),
							(this.tipCostIndex = 1),
							(this.tipFreeIndex = 1),
							(this.battleNumber = r.battleNumber);
						if (r.fields == undefined)
							return (
								t.clanGetOwn(),
								$(".l-screen").removeClass("l-screen_game"),
								f.setScreen({
									screen: "clanTask",
								}),
								!1
							);
						this.clanGetOwn(r),
							$(i.boostersWidget.el).remove(),
							this.updateTipButtonCost(),
							this.renderBoosters(u),
							this.initGameField(),
							console.log("clan battle data: ", r),
							(this.gameModel = new l(r.fields[0], {
								clanWordScoreRates: i.clanWordScoreRates,
								chase: r.chase,
							})),
							console.log("gameModel: ", this.gameModel),
							(this.field = new h({
								model: this.gameModel,
								screen: this,
								roundTime: s,
								fieldSize: this.fieldSize,
							})),
							(this.CheatController = new o("clan", this.params.taskId, this.field)),
							this.listenToOnce(this.field, "backgroundComplete", function () {
								t.clanBattleStartPayment(e),
									$(".b-game__boosters__item").removeClass("b-game__boosters__item_inactive"),
									a.get("balance") < n.params.services.getATip &&
										!purchase &&
										$("#showTipButton").addClass("b-game__boosters__item_inactive");
							}),
							$("#fieldWordsCount").text(this.gameModel.getFieldWordsCount()),
							$(".b-game__head__words").fadeIn();
					}),
						t.clanBattleStart(e, r);
				},
				clanGetOwn: function (e) {
					this.listenToOnce(t, "clanGetOwn", function (e) {
						e.clanData.task.state &&
							(u.add({
								type: "text",
								params: {
									header: "Что-то пошло нет так",
									text: "Кто-то другой уже завершил задание",
									list: null,
									cursiv: null,
								},
							}),
							f.setScreen({
								screen: "clanTask",
							}),
							$(".l-screen").removeClass("l-screen_game"));
					}),
						t.clanGetOwn();
				},
				getFieldSize: function () {
					var e = $(".l-game__field"),
						t = e.width(),
						n = e.height(),
						r = t <= n ? t : n,
						i = 410,
						s = i;
					return r < i && (s = r), s;
				},
				initGameField: function () {
					var e = this.fieldSize,
						t = 2;
					$("#canvasContainer").css({
						width: e,
						height: e,
					}),
						$("#canvasContainer canvas")
							.attr({
								width: e * t,
								height: e * t,
							})
							.css({
								width: e,
								height: e,
							}),
						$(".b-game__boosters").css("width", e);
				},
				save: function () {
					console.warn("save", this.gameModel, this.gameModel.isUpdated);
					var e = this.gameModel.getResult(),
						t = this.gameModel.getFieldBoosterData(),
						n = this.tipCostIndex - 1 + this.tipFreeIndex - 1,
						i = !1;
					r.clanTaskStorage.set({
						taskId: this.params.taskId,
						battleNumber: this.battleNumber,
						results: e,
						fieldBoosterData: t,
						tipCount: n,
						isRVRateActivated: i,
					}),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				sendResult: function () {
					var e = this.gameModel.getResult(),
						t = this.gameModel.getFieldBoosterData(),
						n = this.tipCostIndex - 1 + this.tipFreeIndex - 1,
						i = !1;
					console.warn("gameModel", this.gameModel),
						r.sendClanBattleResult({
							taskId: this.params.taskId,
							battleNumber: this.battleNumber,
							results: e,
							fieldBoosterData: t,
							tipCount: n,
							isRVRateActivated: i,
						}),
						this.CheatController.sendInfo(),
						f.setScreen({
							screen: "clanTask",
							params: {
								result: e,
							},
						}),
						$(".l-screen").removeClass("l-screen_game");
				},
				renderBoosters: function (e) {
					console.log("field boosters: ", e);
					var t = e.length,
						n = c.getIcons();
					t > 0 &&
						e.forEach(function (e, t) {
							var r = $(".b-game__boosters__item").eq(t),
								i = r.find(".b-game__boosters__item__counter"),
								s = r.find(".b-game__boosters__item__icon-i");
							r
								.addClass("b-game__boosters__item_filled b-game__boosters__item_inactive")
								.attr("data-alias", e.alias),
								i.text(e.count),
								s.attr("src", n[e.alias]);
						});
				},
				showTip: function () {
					if (
						$("#showTipButton").hasClass("b-game__boosters__item_inactive") ||
						$("#showTipButton").hasClass("b-game__boosters__item_cooldown")
					)
						return !1;
					if (this.field.isBackgroundComplete) {
						var e = a.get("freeTips"),
							t = this.getCurrentTipCost();
						e > 0
							? (this.field.showTip(),
							  this.useTip(this.tipFreeIndex, "freeTips"),
							  ++this.tipFreeIndex,
							  (e -= 1),
							  a.set({
									freeTips: e,
							  }),
							  this.setTipButtonType(),
							  i.sendDesignEvent("Screen_actions:Play_field_clan:hint"))
							: a.get("balance") >= t
							? (this.field.showTip(),
							  this.updateBalance(t),
							  this.useTip(this.tipCostIndex, "coins"),
							  ++this.tipCostIndex,
							  this.updateTipButtonCost(),
							  i.sendDesignEvent("Screen_actions:Play_field_clan:hint"))
							: purchase &&
							  u.add({
									type: "buyCoins",
							  });
					}
				},
				getCurrentTipCost: function () {
					return Math.floor(this.defaultTipCost * this.tipCostRate) * this.tipCostIndex;
				},
				updateBalance: function (e) {
					var t = a.get("balance");
					(t -= e),
						a.set({
							balance: t,
						});
				},
				updateTipButtonCost: function () {
					$("#tipCost").text(this.getCurrentTipCost());
				},
				setTipButtonType: function () {
					var e = a.get("freeTips");
					e > 0
						? ($("#freeTip").show().text(e), $("#tipCost").addClass("g-hidden"))
						: ($("#freeTip").hide(), $("#tipCost").removeClass("g-hidden")),
						a.get("balance") < this.getCurrentTipCost() &&
							!purchase &&
							$("#showTipButton").addClass("b-btn-cheat_disabled");
				},
				useTip: function (e, t) {
					r.useTip({
						place: "clan",
						id: this.params.taskId,
						indexes: [e],
						usageType: t,
					}),
						i.sendResourceEvent("coins", -this.getCurrentTipCost(), "hint", "Consumed"),
						i.sendDesignEvent("spend_virtual_currency:Reason:tip_clan");
				},
				useFieldBooster: function (e) {
					var t = $(e.currentTarget);
					if (
						this.field.timer.counter == 0 ||
						!t.hasClass("b-game__boosters__item_filled") ||
						t.hasClass("b-game__boosters__item_cooldown") ||
						t.hasClass("b-game__boosters__item_inactive") ||
						t.hasClass("b-game__boosters__item_active")
					)
						return !1;
					var n,
						r = t.attr("data-alias"),
						s = t.find(".b-game__boosters__item__counter");
					if (r) {
						_.has(this.gameModel.fieldBoosterCounts, r)
							? (this.gameModel.fieldBoosterCounts[r] += 1)
							: (this.gameModel.fieldBoosterCounts[[r]] = 1),
							console.log(this.gameModel.fieldBoosterCounts),
							s.text(+s.text() - 1),
							(n = c.getParams(r)),
							(n.alias = r),
							(n.count = +s.text()),
							this.field[r](n);
						switch (r) {
							case "freezing":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_freeze");
								break;
							case "fire":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_double");
								break;
							case "rotation":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_rotate");
								break;
							case "whisper":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_whisper");
								break;
							case "bonuses":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_bonus");
								break;
							case "replacement":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_swap");
								break;
							case "time_letter":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_time");
								break;
							case "totem":
								i.sendDesignEvent("Screen_actions:Play_field_clan:use_totem");
						}
					}
				},
				showProVersionPopup: function (e) {
					u.add({
						type: "proVersion",
						params: {
							reason: "unratedCountGames",
							type: e,
						},
					});
				},
				renderPopup: function (e) {
					console.log("renderPopup in clan game screen");
					var t = ["buyCoins", "static", "usedesk.info"];
					$("#popup").html(""),
						$("#cover").hide(),
						console.log("popupObj", e),
						console.log("index in types", t.indexOf(e.type)),
						t.indexOf(e.type) != -1 && e && ($("#cover").show(), e.render());
				},
			});
			return v;
		}
	),
	define("text!screens/clan/usersList-members.html!strip", [], function () {
		return '<%\nvar user = _.findWhere(clanData.members, {id: UserModel.id});\nvar userPermissions = (!_.isEmpty(userClanPermissionInfo))? _.findWhere(userClanPermissionInfo, {role: user.role}).permissions : {};\n%>\n\n<div class="b-clan-head">\n    <div class="b-clan-head__nav">\n        <div id="backButton" class="b-btn-back b-clan-head__back"></div>\n    </div>\n    <div id="clanSettings" class="b-clan-head__settings soundingButton"></div>\n\n    <div class="b-clan-scarf">\n        <div class="b-clan-scarf-i">\n            <div class="b-clan-scarf__icon">\n                <img class="b-clan-scarf__icon-i" src="<%=clanData.main.avatar%>" alt="">\n            </div>\n            <div class="b-clan-scarf__text">\n                <div class="b-clan-scarf__title">\n                    <%=clanData.main.name%>\n                </div>\n                <div class="b-clan-scarf__slogan">\n                    <%=clanData.main.message%>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-clan-scarf -->\n\n    <div class="b-clan-info">\n        <div class="b-clan-info__rate">\n            <div class="b-clan-info__label">Рейтинг</div>\n            <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.topPosition%></span></div>\n            <div id="clanTop" class="b-clan-info__ctrl soundingButton">Все кланы</div>\n        </div>\n        <div class="b-clan-info-i">\n            <% if (clanData.main.checkpoint) { %>\n            <div id="clanMilestone" class="b-clan-info__milestone">\n                <img class="b-clan-info__milestone__icon" src="<%=Application.params.staticUrl%>images/app/clan/milestone.png" alt="">\n                <div class="b-clan-info__milestone__data">\n                    <span class="b-clan-info__milestone__data-i"><%=clanData.main.level%></span> \n                    / \n                    <%=(clanData.main.level + clanData.main.checkpoint.progress.steps - clanData.main.checkpoint.progress.complete)%>\n                </div>\n            </div>\n            <% } else { %>\n                <img class="b-clan-info__flag" src="<%=Application.params.staticUrl%>images/app/icon-flag.png" alt="">\n            <% } %>\n        </div>\n        <div class="b-clan-info__list">\n            <div class="b-clan-info__label">Игроки</div>\n            <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.members.length%></span> / <%=clanData.main.maxMemberCount%></div>\n            <% if (clanRequestData.length > 0 && userPermissions.hasClanRequestControlPermission) { %>\n                <div id="clanRequests" class="b-clan-info__ctrl soundingButton">Заявки<span class="b-clan-info__ctrl__counter"><%=clanRequestData.length %></span></div>\n            <% } else { %>\n                <div class="b-clan-info__ctrl soundingButton">Перепись</div>\n            <% } %>\n        </div>\n    </div>\n    <!-- /.b-clan-info -->\n    \n</div>\n<!-- /.b-clan-head -->\n\n\n<div class="b-clan-members b-clan-members_own">\n\n    <div class="b-clan-members__wrap">\n        <div class="b-clan-members__title">СПИСОК ИГРОКОВ</div>\n        <div class="b-clan-members__list">\n\n            <% \n            var selfIndex = 0;\n            var selfData = {};\n            //var membersList = _.sortBy(clanData.members, \'rate\').reverse();\n            var membersList = clanData.members.slice().sort(function(a, b) {\n                if (a.rate > b.rate) return -1;\n                if (a.rate < b.rate) return 1;\n                if (a.rate == b.rate) {\n                    if (a.role == 3) {\n                        return -1;\n                    } else if (b.role == 3) {\n                        return 1\n                    } else if (a.role > b.role) {\n                        return -1;    \n                    } else if (a.role < b.role) {\n                        return 1;\n                    } else {\n                        if (a.playerName > b.playerName) return 1;\n                        if (a.playerName < b.playerName) return -1;\n                        if (a.playerName == b.playerName) return 0;\n                    }\n                }\n            });\n\n            membersList.forEach(function(obj, index) {\n            %>\n            <div data-user-id="<%=obj.id%>" class="b-clan-members__item <%=(obj.id == UserModel.id)? \'b-clan-members__item_self\' : \'\'%>">\n                <% if (clanData.members.length != 1) { %>\n                <div class="b-clan-members__item-number<%=(index < 3)? \n                    \' b-clan-members__item-number_\' + (index + 1) : \'\'%>"><%=index+1%></div>\n                <% } %>\n                <div class="b-clan-members__item-avatar soundingButton">\n                    <div class="b-user">\n                        <% if (obj.customAvatar && obj.customAvatar.length > 0) { %>\n                        <div class="custom-avatar b-user__custom-avatar">\n                            <% for (i = 0; i < obj.customAvatar.length; i += 1) { %>\n                            <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=obj.customAvatar[i]%>.png" alt="" />\n                            <% } %>\n                        </div>\n                        <% } else { %>\n                        <div class="b-user__pic">\n                            <img class="b-user__pic-i" src="<%=obj.avatarUrl%>" alt="" />\n                        </div>\n                        <% } %>\n                        <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(obj.uwins)%>.png" class="b-user__rank" />\n                    </div>\n                </div>\n                <div class="b-clan-members__item-data">\n                    <div class="b-clan-members__item-name"><%=obj.playerName%></div>\n                    <span class="b-clan-members__item-role b-clan-members__item-role_leader"><%=methods.getClanRole(obj.role)%></span>\n                    <span class="b-clan-members__item-status b-clan-members__item-status_<%=(obj.isOnline)? \'online\' : \'offline\'%>"></span>\n                    <% if (userPermissions.hasLastBattleTimeViewPermission) { %>\n                    <% if (obj.lastBattleTime) { %>\n                    <div class="b-clan-members__item-time">Последний бой: <%=methods.getFormattedTime(moment().diff(moment(obj.lastBattleTime * 1000)))%></div>\n                    <% } else { %>\n                    <div class="b-clan-members__item-time">Еще не участвовал в битвах</div>\n                    <% } %>\n                    <% } %>\n                </div>\n                <div class="b-clan-members__item-rate">&times;&nbsp;<%=obj.rate%></div>\n            </div>\n            <!-- /.b-clan-member__item -->\n            <%\n                if (obj.id == UserModel.id) {\n                    selfIndex = index + 1;\n                }\n            });\n            %>\n\n            <% if (clanData.members.length == 1) { %>\n            <div class="b-clan-members__empty">\n                <div class="b-clan-members__empty-i">Здесь будут отображаться участники твоего&nbsp;клана</div>\n            </div>\n            <!-- /.b-clan-member__empty -->\n            <% } %>\n\n        </div>\n        <!-- /.b-clan-task__list -->\n\n        <div data-user-id="<%=user.id%>" class="b-clan-members__item b-clan-members__item_self b-clan-members__item_fixed">\n            <% if (clanData.members.length != 1) { %>\n            <div class="b-clan-members__item-number<%=(selfIndex < 3)? \' b-clan-members__item-number_\' + selfIndex : \'\'%>"><%=selfIndex%></div>                \n            <% } %>\n            <div class="b-clan-members__item-avatar">\n                <div class="b-user">\n                    <% if (user.customAvatar && user.customAvatar.length > 0) { %>\n                    <div class="custom-avatar b-user__custom-avatar">\n                        <% for (i = 0; i < user.customAvatar.length; i += 1) { %>\n                        <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=user.customAvatar[i]%>.png" alt="" />\n                        <% } %>\n                    </div>\n                    <% } else { %>\n                    <div class="b-user__pic">\n                        <img class="b-user__pic-i" src="<%=user.avatarUrl%>" alt="" />\n                    </div>\n                    <% } %>\n                    <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(user.uwins)%>.png" class="b-user__rank" />\n                </div>\n            </div>\n            <div class="b-clan-members__item-data">\n                <div class="b-clan-members__item-name">Ты</div>\n                <span class="b-clan-members__item-role"><%=methods.getClanRole(user.role)%></span>\n                <span id="clanExit" class="b-clan-members__item-exit"></span>\n            </div>\n            <div class="b-clan-members__item-rate">&times;&nbsp;<%=user.rate%></div>\n        </div>\n        <!-- /.b-clan-members__item [fixed] -->\n    </div>\n    \n</div>\n<!-- /.b-clan-members -->\n';
	}),
	define("text!screens/clan/usersList-requests.html!strip", [], function () {
		return '    \n    <div class="b-clan-head">\n        <div class="b-clan-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div id="clanSettings" class="b-clan-head__settings soundingButton"></div>\n\n        <div class="b-clan-scarf">\n            <div class="b-clan-scarf-i">\n                <div class="b-clan-scarf__icon">\n                    <img class="b-clan-scarf__icon-i" src="<%=clanData.main.avatar%>" alt="">\n                </div>\n                <div class="b-clan-scarf__text">\n                    <div class="b-clan-scarf__title">\n                        <%=clanData.main.name%>\n                    </div>\n                    <div class="b-clan-scarf__slogan">\n                        <%=clanData.main.message%>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-clan-scarf -->\n\n        <div class="b-clan-info">\n            <div class="b-clan-info__rate">\n                <div class="b-clan-info__label">Рейтинг</div>\n                <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.topPosition%></span></div>\n                <div id="clanTop" class="b-clan-info__ctrl soundingButton">Все кланы</div>\n            </div>\n            <div class="b-clan-info-i">\n                <img class="b-clan-info__flag" src="<%=Application.params.staticUrl%>images/app/icon-flag.png" alt="">\n            </div>\n            <div class="b-clan-info__list">\n                <div class="b-clan-info__label">Игроки</div>\n                <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.membersCount%></span> / <%=clanData.main.maxMemberCount%></div>\n                <div id="clanMembers" class="b-clan-info__ctrl soundingButton">Перепись</div>\n            </div>\n        </div>\n        <!-- /.b-clan-info -->\n        \n    </div>\n    <!-- /.b-clan-head -->\n   \n\n    <div class="b-clan-members b-clan-members_own">\n\n        <div class="b-clan-members__wrap">\n            <div class="b-clan-members__title">СПИСОК ЗАЯВОК</div>\n            <div class="b-clan-members__list">\n\n                <% \n                var requestList = _.sortBy(clanRequestData, \'user.rate\').reverse();\n                requestList.forEach(function(obj) {\n                    var user = obj.user;\n                %>\n                <div data-user-id="<%=obj.userId%>" class="b-clan-members__item">\n\n                    <div class="b-clan-members__item-avatar">\n                        <div class="b-user">\n                            <% if (user.customAvatar && user.customAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < user.customAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=user.customAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                            <% } else { %>\n                            <div class="b-user__pic">\n                                <img class="b-user__pic-i" src="<%=user.avatarUrl%>" alt="" />\n                            </div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(user.uwins)%>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-clan-members__item-data">\n                        <div class="b-clan-members__item-name"><%=user.playerName%></div>\n                        <div class="b-clan-members__ctrl">\n                            <span data-user-id="<%=obj.userId%>" class="b-clan-members__ctrl-item b-clan-members__ctrl-item_accept">Принять</span>\n                            <span data-user-id="<%=obj.userId%>" class="b-clan-members__ctrl-item b-clan-members__ctrl-item_cancel">Отклонить</span>\n                        </div>\n                    </div>\n                    <div class="b-clan-members__item-rate">&times;&nbsp;<%=user.rate%></div>\n                </div>\n                <!-- /.b-clan-member__item -->\n                <% }); %>\n            </div>\n            <!-- /.b-clan-task__list -->\n\n        </div>\n        \n    </div>\n    <!-- /.b-clan-members -->\n\n';
	}),
	define(
		"screens/clan/usersList",
		[
			"gate",
			"widget",
			"application",
			"methods",
			"controllers/gameanalytics",
			"collections/popups",
			"models/appState",
			"models/clan/main",
			"models/user",
			"controllers/analytic",
			"widgets/clan/settings-btn",
			"text!screens/clan/usersList-members.html!strip",
			"text!screens/clan/usersList-requests.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = t.extend({
				templates: {
					members: c,
					requests: h,
				},
				el: "#screenContainer",
				events: {
					"click #clanRequests": "clanRequestsHandler",
					"click #clanMembers": "clanMembersHandler",
					"click .b-clan-members__item-rate": "showRatePopup",
					"click #clanExit": "clanExit",
					"click #backButton": function () {
						o.previousScreen();
					},
					"click #clanMilestone": "showClanMilestoneInfo",
					"click #clanTop": function () {
						o.setScreen({
							screen: "clanTop",
						});
					},
					"click .b-clan-members__item-avatar": "userProfileHandler",
					"click .b-clan-members__ctrl-item_accept": function (t) {
						var n = $(t.target).attr("data-user-id");
						u.get("clanData").members.length == u.get("clanData").main.maxMemberCount
							? s.add({
									type: "clanJoinError",
									params: {
										type: "fullClan",
									},
							  })
							: (e.playerInfoGetClan(n),
							  this.listenTo(e, "playerInfoGetClan", function (t) {
									_.isNull(t.clan.previousClan) &&
										f.event({
											category: "user",
											action: "Clan_join",
										}),
										e.clanRequestAccept(u.get("clanData").main.clanId, n);
							  }));
					},
					"click .b-clan-members__ctrl-item_cancel": function (t) {
						var n = $(t.target).attr("data-user-id");
						e.clanRequestCancel(u.get("clanData").main.clanId, n),
							i.sendDesignEvent("Clan_entry:Reason:applicaltion_rejected");
					},
				},
				setTemplate: function (e) {
					this.template = _.template(this.templates[e]);
				},
				initialize: function (e) {
					(this.model = u),
						this.listenTo(u, "change", this.onChangeModel),
						(this.type = e.type),
						this.setTemplate(this.type),
						(this.viewParam = {
							Application: n,
							methods: r,
							UserModel: a,
						});
				},
				afterRender: function () {},
				initializeWidgets: function () {
					this.widgets = [new l()];
				},
				onChangeModel: function () {
					this.render();
				},
				clanExit: function () {
					s.add({
						type: "clanExit",
					});
				},
				showRatePopup: function (e) {
					if (this.type == "members") {
						var t = $(e.target).parents(".b-clan-members__item").attr("data-user-id"),
							n = _.findWhere(u.get("clanData").members, {
								id: t,
							});
						s.add({
							type: "clanMemberRate",
							params: {
								member: n,
							},
						});
					}
				},
				showClanMilestoneInfo: function () {
					var e = this.model.get("clanData"),
						t = {
							level:
								e.main.level +
								e.main.checkpoint.progress.steps -
								e.main.checkpoint.progress.complete,
							reward: e.main.checkpoint.reward,
						};
					s.add({
						type: "clanMilestone",
						params: {
							data: t,
						},
					});
				},
				userProfileHandler: function (e) {
					var t = $(e.target).parents(".b-clan-members__item").attr("data-user-id");
					o.setScreen({
						screen: "userInfo",
						params: {
							id: t,
						},
					});
				},
				clanMembersHandler: function () {
					(this.type = "members"), this.setTemplate(this.type), this.render();
				},
				clanRequestsHandler: function () {
					(this.type = "requests"), this.setTemplate(this.type), this.render();
				},
			});
			return p;
		}
	),
	define("text!screens/clan/start.html!strip", [], function () {
		return '\n    <div class="b-screen-head">\n        <div class="b-screen-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div class="b-screen-head__title">Кланы</div>\n        <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n            <div class="btn-info"></div>\n        </div>\n    </div>\n    <!-- /.b-screen-head -->\n\n    <div class="clan-list">\n				\n        <div class="clan-list__search">\n            <div class="clan-list__search-content">\n                <form id="clanSearch" action="#" class="clan-list__search-form">\n                    <input id="clanSearchText" type="text" name="" class="clan-list__search-input" autocomplete="off" placeholder="Введи название клана или (#)код" />\n                    <img id="clanSearchClear" class="clan-list__search-clear" src="<%=Application.params.staticUrl%>images/app/clan/close.png" alt="&times;" />\n                    <input id="clanSearchSubmit" type="submit" value="" class="clan-list__search-submit" />\n                </form>\n            </div>\n        </div>\n        <!-- /.clan-list__search -->\n\n        <div id="clanList" class="clan-list__content">\n        \n            <div class="clan-list__info">\n\n                <div class="clan-list__info-list">\n                    <div class="clan-list__info-item">\n                        <img class="clan-list__info-icon" src="<%=Application.params.staticUrl%>images/app/icons/swords.png" alt="" />\n                        <div class="clan-list__info-text">Выполняй задания клана</div>\n                    </div>\n                    <!-- /.clan-list__info-item -->\n                    <div class="clan-list__info-item">\n                        <img class="clan-list__info-icon" src="<%=Application.params.staticUrl%>images/app/icons/chest-legend.png" alt="" />\n                        <div class="clan-list__info-text">Получай награды</div>\n                    </div>\n                    <!-- /.clan-list__info-item -->\n                    <div class="clan-list__info-item">\n                        <img class="clan-list__info-icon" src="<%=Application.params.staticUrl%>images/app/icons/cup.png" alt="" />\n                        <div class="clan-list__info-text">Соревнуйся с другими кланами</div>\n                    </div>\n                    <!-- /.clan-list__info-item -->\n                    <div class="clan-list__info-item">\n                        <img class="clan-list__info-icon" src="<%=Application.params.staticUrl%>images/app/icons/message.png" alt="" />\n                        <div class="clan-list__info-text">Общайся с соклановцами</div>\n                    </div>\n                    <!-- /.clan-list__info-item -->\n                </div>\n                <!-- /.clan-list__info-list -->\n    \n                <div id="clanCreateBtn" class="clan-list__info-btn b-btn b-btn_blue">\n                    Создай свой клан\n                </div>\n                <!-- /.clan-list__info-btn -->\n\n                <div class="clan-list__info-alt">\n                    Или вступай в клан из списка ниже:\n                </div>\n            </div>\n            <!-- /.clan-list__info -->\n\n            <% if (!_.isEmpty(inviteBanner)) { %>\n            <div class="clan-list__reward" style="background: url(<%=inviteBanner.background.url%>) no-repeat; background-size: cover;">\n                <div class="clan-list__reward-content">\n                    <img class="clan-list__reward-icon" src="<%=inviteBanner.image.url%>" alt="" />\n                    <div class="clan-list__reward-text">\n                        <p>\n                            <%=inviteBanner.title%>\n                        </p>\n                        <p><%=inviteBanner.text%></p>\n                    </div>\n                    <% if (!_.isEmpty(inviteBanner.actionButtons)) { %>\n                    <div class="clan-list__reward-ctrl">\n                        <div id="inviteBannerBtn" class="clan-list__reward-ctrl-btn b-btn b-btn_blue"><%=inviteBanner.actionButtons[0].text%></div>\n                    </div>\n                    <% } %>\n                </div>\n            </div>\n            <!-- /.clan-list__reward -->\n            <% } %>\n            \n            \n            <div class="clan-list__table">\n                \n                <div class="clan-list__table-content">\n                    <div class="clan-list__table-head">\n                        <div class="clan-list__table-column-title">УРОВЕНЬ</div>\n                        <div class="clan-list__table-column-title">ИГРОКИ</div>\n                    </div>\n\n                    <% if (!_.isEmpty(clanList)) { %>\n                    <div id="clanListItems">\n                    <% clanList.forEach(function(data) { %>\n                        <% if(data.main.membersCount > 0) { %>\n                        <div data-clan-id="<%=data.main.clanId%>" class="clan-list__item">\n                            <div class="clan-list__item-level"><%=data.main.level%></div>\n                            <img class="clan-list__item-avatar" src="<%=data.main.avatar%>" alt="" />\n                            <div class="clan-list__item-name">\n                                <%=data.main.name%>\n                                <% if (!_.isEmpty(ClanModel.get(\'userRequestData\'))) { \n                                    if (ClanModel.get(\'userRequestData\')[0].clanId == data.main.clanId) {    \n                                %>\n                                <span class="clan-list__item-name-status">Заявка отправлена</span>\n                                <%\n                                    }\n                                } %>\n                            </div>\n                            <div class="clan-list__item-members">\n                                <span class="clan-list__item-members-data"><%=data.main.membersCount%></span>/<%=data.main.maxMemberCount%>\n                            </div>\n                        </div>\n                        <% } %>\n                    <!-- /.clan-list__item -->\n                    <% }); %>\n                    </div>\n                    <!-- <div id="clanListLoad" class="clan-list__ctrl">Ещё</div> -->\n                    <% } %>\n\n                </div>\n                \n            </div>\n            <!-- /.clan-list__table -->\n            \n        </div>\n        <% if (!_.isEmpty(clanFind)) { %>\n        <div id="clanSearchList" class="clan-list__content">\n            <div class="clan-list__table clan-list__table_search">\n                \n                <div class="clan-list__table-content">\n                    <div class="clan-list__table-head">\n                        <div class="clan-list__table-column-title">УРОВЕНЬ</div>\n                        <div class="clan-list__table-column-title">ИГРОКИ</div>\n                    </div>\n                    \n                    <% clanFind.forEach(function(data) { %>\n                    <div data-clan-id="<%=data.main.clanId%>" class="clan-list__item">\n                        <div class="clan-list__item-level"><%=data.main.level%></div>\n                        <img class="clan-list__item-avatar" src="<%=data.main.avatar%>" alt="" />\n                        <div class="clan-list__item-name"><%=data.main.name%></div>\n                        <div class="clan-list__item-members">\n                            <span class="clan-list__item-members-data"><%=data.main.membersCount%></span>/<%=data.main.maxMemberCount%>\n                        </div>\n                    </div>\n                    <!-- /.clan-list__item -->\n                    <% }); %>\n                </div>\n                \n            </div>\n            <!-- /.clan-list__table -->\n        </div>\n        <% } %>\n\n        <div id="clanSearchEmpty" class="clan-list__empty-search g-hidden">\n            <div class="clan-list__empty-search-text">Ничего не найдено</div>\n        </div>\n\n    </div>\n    <!-- /.clan-list -->\n';
	}),
	define(
		"screens/clan/start",
		[
			"gate",
			"widget",
			"application",
			"collections/popups",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"models/appState",
			"models/clan/main",
			"text!screens/clan/start.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a) {
			var f = t.extend({
				template: _.template(a),
				el: "#screenContainer",
				events: {
					"click #clanCreateBtn": "clanCreate",
					"click #backButton": function () {
						o.previousScreen();
					},
					"click .clan-list__item": function (e) {
						var t = $(e.currentTarget).attr("data-clan-id");
						i.sendDesignEvent("Screen_actions:Clan_main:clan_profile"),
							o.setScreen({
								screen: "clanView",
								params: {
									id: t,
								},
							});
					},
					"submit #clanSearch": "clanSearchSubmitHandler",
					"click #clanSearchClear": "clanSearchClearHandler",
					"click #inviteBannerBtn": "inviteBannerHandler",
					"click #showInfoPopup": "showInfoPopup",
					"click #clanListLoad": "clanListLoad",
				},
				initialize: function (t) {
					var r = this;
					(this.model = t.model),
						(this.model.clanFind = {}),
						(this.skip = this.model.clanList.length),
						(this.scroll = 0),
						(this.viewParam = {
							Application: n,
							ClanModel: u,
						}),
						this.listenTo(e, "clanGetUserList", function (e) {
							_.isArray(e.clanList) && !_.isEmpty(e.clanList)
								? (e.clanList.forEach(function (e) {
										r.model.clanList.push(e);
								  }),
								  (r.skip = r.model.clanList.length),
								  r.render())
								: $("#clanListLoad").hide();
						});
				},
				afterRender: function () {
					$("#clanList").scrollTop(this.scroll);
				},
				clanSearchSubmitHandler: function (t) {
					console.log("clan search");
					var n = $("#clanSearchText").val();
					n &&
						(e.clanFind($("#clanSearchText").val()),
						this.listenToOnce(e, "clanFind", function (e) {
							_.isEmpty(e.clanList)
								? ($("#clanList").hide(),
								  $("#clanSearchList").hide(),
								  $("#clanSearchEmpty").removeClass("g-hidden"),
								  $("#clanSearchClear").show())
								: ((this.model.clanFind = e.clanList),
								  this.render(),
								  $("#clanList").hide(),
								  $("#clanSearchList").show(),
								  $("#clanSearchClear").show()),
								$("#clanSearchText").val(n).focus();
						}),
						i.sendDesignEvent("Screen_actions:Clan_main:clan_main_search")),
						t.preventDefault();
				},
				clanSearchClearHandler: function () {
					$("#clanList").show(),
						$("#clanSearchList").hide(),
						$("#clanSearchEmpty").addClass("g-hidden"),
						$("#clanSearchClear").hide(),
						$("#clanSearchText").val("");
				},
				inviteBannerHandler: function () {
					var t = this.model.inviteBanner;
					t.actionButtons.length &&
						(e.send(t.actionButtons[0].callback),
						$(".clan-list__reward").slideUp(),
						(this.model.inviteBanner = {}));
				},
				clanListLoad: function () {
					(this.scroll = $("#clanList").scrollTop()), e.clanGetUserList(this.skip);
				},
				clanCreate: function () {
					var e = u.get("userRequestData");
					e.length && _.isEmpty(e[0]) == 0
						? r.add({
								type: "clanCreateError",
								params: {
									type: "clearRequest",
								},
						  })
						: o.setScreen({
								screen: "clanSettings",
								params: {
									mode: "create",
								},
						  });
				},
				showInfoPopup: function () {
					i.sendDesignEvent("Screen_actions:Clan_main:clan_main_rules"), s.showInfoPopup("clan");
				},
			});
			return f;
		}
	),
	define("text!screens/clan/view.html!strip", [], function () {
		return '\n\n\n\n    <% if (this.model) { %>\n    \n    <div class="b-clan-head">\n        <!-- <div id="backButton" class="b-btn-back b-clan-head__back"></div> -->\n        <div class="b-clan-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div id="clanSettings" class="b-clan-head__settings">\n            <div id="clanSettingsBtn" class="b-clan-head__settings__icon"></div>\n        </div>\n\n        <div class="b-clan-scarf">\n            <div class="b-clan-scarf-i">\n                <div class="b-clan-scarf__icon">\n                    <img class="b-clan-scarf__icon-i" src="<%=clanData.main.avatar%>" alt="">\n                </div>\n                <div class="b-clan-scarf__text">\n                    <div class="b-clan-scarf__title">\n                        <%=clanData.main.name%>\n                    </div>\n                    <div class="b-clan-scarf__slogan">\n                        <%=clanData.main.message%>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-clan-scarf -->\n\n        <div class="b-clan-info">\n            <div class="b-clan-info__rate">\n                <div class="b-clan-info__label">Рейтинг</div>\n                <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.topPosition%></span></div>\n                <div id="clanTop" class="b-clan-info__ctrl soundingButton">Все кланы</div>\n            </div>\n            <div class="b-clan-info-i">\n                <img class="b-clan-info__flag" src="<%=Application.params.staticUrl%>images/app/icon-flag.png" alt="">\n            </div>\n            <div class="b-clan-info__list">\n                <div class="b-clan-info__label">Игроки</div>\n                <div class="b-clan-info__data"><span class="b-clan-info__data-i"><%=clanData.main.membersCount%></span> / <%=clanData.main.maxMemberCount%></div>\n            </div>\n        </div>\n        <!-- /.b-clan-info -->\n        \n    </div>\n    <!-- /.b-clan-head -->\n   \n\n    <div class="b-clan-members">\n\n        <div class="b-clan-members__wrap">\n            <div class="b-clan-members__title">СПИСОК ИГРОКОВ</div>\n            <div class="b-clan-members__list">\n\n                <% \n                var selfIndex = 0;\n                var selfData = {};\n                //var membersList = _.sortBy(clanData.members, \'rate\').reverse();\n\n                if (clanData.members && clanData.members.length > 0) {\n                var membersList = clanData.members.slice().sort(function(a, b) {\n                    if (a.rate > b.rate) return -1;\n                    if (a.rate < b.rate) return 1;\n                    if (a.rate == b.rate) {\n                        if (a.role == 3) {\n                            return -1;\n                        } else if (b.role == 3) {\n                            return 1\n                        } else if (a.role > b.role) {\n                            return -1;    \n                        } else if (a.role < b.role) {\n                            return 1;\n                        } else {\n                            if (a.playerName > b.playerName) return 1;\n                            if (a.playerName < b.playerName) return -1;\n                            if (a.playerName == b.playerName) return 0;\n                        }\n                    }\n                });\n\n                membersList.forEach(function(obj, index) {\n                %>\n                <div data-user-id="<%=obj.id%>" class="b-clan-members__item">\n                    <% if (clanData.members.length != 1) { %>\n                    <div class="b-clan-members__item-number<%=(index < 3)? \n                        \' b-clan-members__item-number_\' + (index + 1) : \'\'%>"><%=index+1%></div>\n                    <% } %>\n                    <div class="b-clan-members__item-avatar soundingButton">\n                        <div class="b-user">\n                            <div class="b-user__pic">\n                                <img class="b-user__pic-i" src="<%=obj.avatarUrl%>" alt="" />\n                            </div>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(obj.uwins)%>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-clan-members__item-data">\n                        <div class="b-clan-members__item-name"><%=obj.playerName%></div>\n                        <span class="b-clan-members__item-role b-clan-members__item-role_leader"><%=methods.getClanRole(obj.role)%></span>\n                        <span class="b-clan-members__item-status b-clan-members__item-status_<%=(obj.isOnline)? \'online\' : \'offline\'%>"></span>\n                    </div>\n                    <div class="b-clan-members__item-rate">&times;&nbsp;<%=obj.rate%></div>\n                </div>\n                <!-- /.b-clan-member__item -->\n                <%\n                });\n                }\n                %>\n\n            </div>\n            <!-- /.b-clan-task__list -->\n\n        </div>\n        \n    </div>\n    <!-- /.b-clan-members -->\n\n    \n    <%\n    var minRating = clanData.main.params.minRating;\n    var minLevel = clanData.main.params.minLevel;\n    var minRatingDefined = clanData.main.params.minRating > 0;\n    var minLevelDefined = clanData.main.params.minLevel > 1; \n    %>\n\n    <% if (minRatingDefined && minLevelDefined) { %>\n    <div class="b-clan-view__params">\n        Для вступления необходимо: \n        <span class="b-clan-view__params-value"><%=minRating%></span> <img class="b-clan-view__params-icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt=""> \n        и уровень <span class="b-clan-view__params-value"><%=minLevel%></span>\n    </div>\n    <!-- /.b-clan-view__params -->\n    <% } else if (minRatingDefined) { %>\n    <div class="b-clan-view__params">\n        Для вступления необходимо: \n        <span class="b-clan-view__params-value"><%=minRating%></span> <img class="b-clan-view__params-icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt=""> \n    </div>\n    <!-- /.b-clan-view__params -->\n    <% } else if (minLevelDefined) { %>\n    <div class="b-clan-view__params">\n        Для вступления необходимо: \n        уровень <span class="b-clan-view__params-value"><%=minLevel%></span>\n    </div>\n    <!-- /.b-clan-view__params -->\n    <% } %>\n\n    <div class="b-clan-view__ctrl">\n        <% \n        var request = false;\n        var buttonText = \'\';\n        if (clanData.main.public) {\n            buttonText = \'Вступить в клан\';\n        } else {\n            var userRequestData = ClanModel.get(\'userRequestData\');\n            if (userRequestData.length) {\n                userRequestData.forEach(function(el) {\n                    if (el.clanId == clanData.main.clanId) {\n                        request = true; \n                    }\n                });\n            }\n            buttonText = \'Оставить заявку на вступление\';\n        }\n        %>\n\n        <% if (request) { %>\n        <div class="b-btn b-btn_blue b-clan-view__ctrl-i g-disabled">\n            Заявка отправлена\n        </div>\n        <% } else { %>\n        <div id="clanJoinBtn" class="b-btn b-btn_blue b-clan-view__ctrl-i soundingButton">\n            <%=buttonText%>\n        </div>\n        <% } %>\n    </div>\n\n    <% } else { %>\n    <div class="l-loader">\n        <div class="b-loader">\n            <img class="b-loader-i" alt="" src="<%= Application.params.staticUrl %>images/app/loader.gif">\n        </div>\n    </div>\n    <% } %>\n\n';
	}),
	define(
		"screens/clan/view",
		[
			"gate",
			"widget",
			"application",
			"methods",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"models/clan/main",
			"controllers/analytic",
			"collections/popups",
			"text!screens/clan/view.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = t.extend({
				template: _.template(l),
				el: "#screenContainer",
				events: {
					"click .b-clan-members__item-avatar": function (e) {
						var t = $(e.target).parents(".b-clan-members__item").attr("data-user-id");
						s.setScreen({
							screen: "userInfo",
							params: {
								id: t,
							},
						});
					},
					"click .b-clan-members__item-rate": "showRatePopup",
					"click #clanJoinBtn": "clanJoinHandler",
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #clanTop": function () {
						s.setScreen({
							screen: "clanTop",
						});
					},
					"click #clanSettingsBtn": "clanSettingsHandler",
				},
				initialize: function (t) {
					var i = this;
					(this.model = !1),
						(this.viewParam = {
							methods: r,
							Application: n,
							ClanModel: u,
						}),
						e.clanGet(t.id),
						this.listenTo(u, "change", function () {
							i.render();
						}),
						this.listenToOnce(e, "clanGet", function (e) {
							(i.model = e), i.render();
						}),
						_.isEmpty(u.get("clanData")) &&
							this.listenToOnce(e, "clanGetOwn", function (e) {
								s.clearPath(),
									s.setScreen({
										screen: "clan",
										params: {
											welcomeMessage: !0,
											userId: o.get("id"),
										},
									});
							}),
						this.listenToOnce(e, "clanJoin", function (e) {
							e.state == "error"
								? $("#clanJoinBtn").addClass("g-disabled").attr("id", "")
								: s.clearPath();
						}),
						this.listenToOnce(e, "clanRequest", function (e) {
							e.state == "error" && $(".b-clan-view__ctrl-i").text("Заявка не отправлена");
						}),
						this.listenToOnce(e, "clanQuite", function () {
							i.model.clanData.main.public
								? e.clanJoin(i.model.clanData.main.clanId)
								: e.clanRequest(i.model.clanData.main.clanId);
						});
				},
				afterRender: function () {},
				clanJoinHandler: function () {
					var t = n.methods.levelForUwins(o.get("uwins")),
						r = o.get("rating"),
						s = this.model.clanData.main.params.minLevel - t,
						l = this.model.clanData.main.params.minRating - r,
						c = this.model.clanData.main.name;
					this.model.clanData.members &&
					this.model.clanData.members.length == this.model.clanData.main.maxMemberCount
						? f.add({
								type: "clanJoinError",
								params: {
									type: "fullClan",
								},
						  })
						: _.isEmpty(u.get("clanData"))
						? !_.isEmpty(u.get("userRequestData")) && !_.isEmpty(u.get("userRequestData")[0])
							? f.add({
									type: "clanJoinError",
									params: {
										type: "clearRequest",
										data: {
											name: c,
											public: this.model.clanData.main.public,
											clanId: this.model.clanData.main.clanId,
										},
									},
							  })
							: s > 0 && l > 0
							? f.add({
									type: "clanJoinError",
									params: {
										type: "all",
										data: {
											name: c,
											level: s,
											rating: l,
										},
									},
							  })
							: s > 0
							? f.add({
									type: "clanJoinError",
									params: {
										type: "level",
										data: {
											name: c,
											level: s,
										},
									},
							  })
							: l > 0
							? f.add({
									type: "clanJoinError",
									params: {
										type: "rating",
										data: {
											name: c,
											rating: l,
										},
									},
							  })
							: this.model.clanData.main.public
							? (e.playerInfoGetClan(o.get("id")),
							  this.listenTo(e, "playerInfoGetClan", function (t) {
									_.isNull(t.clan.previousClan) &&
										a.event({
											category: "user",
											action: "Clan_join",
										}),
										e.clanJoin(this.model.clanData.main.clanId);
							  }),
							  $("#clanJoinBtn").addClass("g-disabled").attr("id", ""),
							  i.sendDesignEvent("Clan_entry:Reason:join_clan"))
							: (e.clanRequest(this.model.clanData.main.clanId),
							  $("#clanJoinBtn").addClass("g-disabled").attr("id", "").text("Заявка отправлена"),
							  i.sendDesignEvent("Clan_entry:Reason:apply_clan"))
						: f.add({
								type: "clanJoinError",
								params: {
									type: "exitClan",
									data: {
										name: c,
										public: this.model.clanData.main.public,
										clanId: this.model.clanData.main.clanId,
									},
								},
						  });
				},
				clanSettingsHandler: function () {
					s.setScreen({
						screen: "clanSettings",
						params: {
							mode: "view",
							model: new Backbone.Model(this.model),
						},
					});
				},
				showRatePopup: function (e) {
					var t = $(e.target).parents(".b-clan-members__item").attr("data-user-id"),
						n = _.findWhere(this.model.clanData.members, {
							id: t,
						});
					console.log("member: ", n),
						f.add({
							type: "clanMemberRate",
							params: {
								member: n,
							},
						});
				},
			});
			return c;
		}
	),
	define("text!screens/clan/top.html!strip", [], function () {
		return '\n    <div class="b-screen-head">\n        <div class="b-screen-head__nav">\n            <div id="backButton" class="b-btn-back"></div>\n        </div>\n        <div class="b-screen-head__title">Рейтинг кланов</div>\n        <div id="showInfoPopup" class="b-screen-head__info soundingButton"> \n            <div class="btn-info"></div>\n        </div>\n    </div>\n    <!-- /.b-screen-head -->\n\n    <div class="clan-list clan-top">\n				\n        <div class="clan-list__search">\n            <div class="clan-list__search-i">\n                <form id="clanSearch" action="#" class="clan-list__search-form">\n                    <input id="clanSearchText" type="text" name="" class="clan-list__search-input" autocomplete="off" placeholder="Введи название клана или (#)код" />\n                    <img id="clanSearchClear" class="clan-list__search-clear" src="<%=Application.params.staticUrl%>images/app/clan/close.png" alt="&times;" />\n                    <input id="clanSearchSubmit" type="submit" value="" class="clan-list__search-submit" />\n                </form>\n            </div>\n        </div>\n        <!-- /.clan-list__search -->\n\n        \n        <div id="clanList" class="clan-top__table">\n                        \n            <div class="clan-top__table-content">\n                <div class="clan-top__table-head">\n                    <div class="clan-top__table-column-rank">РАНГ</div>\n                    <div class="clan-top__table-column-name">НАЗВАНИЕ</div>\n                    <div class="clan-top__table-column-level">УРОВЕНЬ</div>\n                </div>\n                <div id="clanListItems">\n                    <% if (!_.isEmpty(clanList)) { %>\n                    <% clanList.forEach(function(data, index) { %>\n                    <div data-clan-id="<%=data.main.clanId%>" class="clan-top__item <%=(data.main.topPosition <= 3)? \'clan-top__item_\' + data.main.topPosition : \'\'  %>">\n                        <div class="clan-top__item-rank"><%=data.main.topPosition%></div>\n                        <img class="clan-top__item-avatar" src="<%=data.main.avatar%>" alt="" />\n                        <div class="clan-top__item-name"><%=data.main.name%></div>\n                        <div class="clan-top__item-level"><%=data.main.level%></div>\n                    </div>\n                    <!-- /.clan-list__item -->\n                    <% }); %>\n                    <% } %>\n                </div>\n\n                <div id="clanListLoad" class="clan-top__ctrl">Ещё</div>\n            </div>\n\n            <% if (!_.isEmpty(ClanModel.get(\'clanData\'))) { %>\n            <div data-clan-id="<%=ClanModel.get(\'clanData\').main.clanId%>" class="clan-top__item clan-top__item_fixed <%=(ClanModel.get(\'clanData\').main.topPosition <= 3)? \'clan-top__item_\' + ClanModel.get(\'clanData\').main.topPosition : \'\'  %>">\n                <div class="clan-top__item-rank"><%=ClanModel.get(\'clanData\').main.topPosition%></div>\n                <img class="clan-top__item-avatar" src="<%=ClanModel.get(\'clanData\').main.avatar%>" alt="" />\n                <div class="clan-top__item-name">\n                    <span class="clan-top__item-label">Твой клан</span>\n                    <%=ClanModel.get(\'clanData\').main.name%>\n                </div>\n                <div class="clan-top__item-level"><%=ClanModel.get(\'clanData\').main.level%></div>\n            </div>\n            <!-- /.clan-top__item -->\n            <% } %>\n\n        </div>\n    \n\n        <% if (!_.isEmpty(clanFind)) { %>\n        <div id="clanSearchList" class="clan-top__table clan-top__table_search">\n            \n            <div class="clan-top__table-content">\n                <div class="clan-top__table-head">\n                    <div class="clan-top__table-column-rank">РАНГ</div>\n                    <div class="clan-top__table-column-name">НАЗВАНИЕ</div>\n                    <div class="clan-top__table-column-level">УРОВЕНЬ</div>\n                </div>\n                \n                <% clanFind.forEach(function(data) { %>\n                <div data-clan-id="<%=data.main.clanId%>" class="clan-top__item">\n                    <div class="clan-top__item-rank"><%=data.main.topPosition%></div>\n                    <img class="caln-top__item-avatar" src="<%=data.main.avatar%>" alt="" />\n                    <div class="clan-top__item-name"><%=data.main.name%></div>\n                    <div class="clan-top__item-level"><%=data.main.level%></div>\n                </div>\n                <!-- /.clan-top__item -->\n                <% }); %>\n            </div>\n        </div>\n        <!-- /.clan-list__table -->\n    \n        <% } %>\n\n\n        <div id="clanSearchEmpty" class="clan-top__empty-search g-hidden">\n            <div class="clan-top__empty-search-text">Ничего не найдено</div>\n        </div>\n\n    </div>\n    <!-- /.clan-list .clan-top -->\n';
	}),
	define(
		"screens/clan/top",
		[
			"gate",
			"widget",
			"application",
			"methods",
			"controllers/usedesk",
			"models/appState",
			"models/clan/main",
			"text!screens/clan/top.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click .clan-top__item": "clanView",
					"click #backButton": function () {
						s.previousScreen();
					},
					"click #menuButton": function () {
						$(".tss-label").click();
					},
					"submit #clanSearch": "clanSearchSubmitHandler",
					"click #clanSearchClear": "clanSearchClearHandler",
					"click #clanListLoad": "clanListLoad",
					"click #showInfoPopup": "showInfoPopup",
				},
				initialize: function (t) {
					var i = this;
					(this.model = {}),
						(this.model.clanFind = {}),
						(this.model.clanList = []),
						(this.skip = 0),
						(this.scroll = 0),
						(this.viewParam = {
							methods: r,
							Application: n,
							ClanModel: o,
						}),
						e.clanGetTop(),
						this.listenTo(e, "clanGetTop", function (e) {
							_.isArray(e.clanList) && !_.isEmpty(e.clanList)
								? (e.clanList.forEach(function (e) {
										i.model.clanList.push(e);
								  }),
								  (i.skip = i.model.clanList.length),
								  i.render())
								: $("#clanListLoad").hide();
						});
				},
				afterRender: function () {
					$("#clanList .clan-top__table-content").scrollTop(this.scroll);
				},
				clanSearchSubmitHandler: function (t) {
					console.log("clan search");
					var n = $("#clanSearchText").val();
					n &&
						(e.clanFind($("#clanSearchText").val()),
						this.listenToOnce(e, "clanFind", function (e) {
							_.isEmpty(e.clanList)
								? ($("#clanList").hide(),
								  $("#clanSearchList").hide(),
								  $("#clanSearchEmpty").removeClass("g-hidden"),
								  $("#clanSearchClear").show())
								: ((this.model.clanFind = e.clanList),
								  this.render(),
								  $("#clanList").hide(),
								  $("#clanSearchList").show(),
								  $("#clanSearchClear").show()),
								$("#clanSearchText").val(n).focus();
						})),
						t.preventDefault();
				},
				clanSearchClearHandler: function () {
					$("#clanList").show(),
						$("#clanSearchList").hide(),
						$("#clanSearchEmpty").addClass("g-hidden"),
						$("#clanSearchClear").hide(),
						$("#clanSearchText").val("");
				},
				clanListLoad: function () {
					(this.scroll = $("#clanList .clan-top__table-content").scrollTop()),
						e.clanGetTop(this.skip);
				},
				clanView: function (e) {
					var t = $(e.currentTarget).attr("data-clan-id");
					_.isEmpty(o.get("clanData"))
						? s.setScreen({
								screen: "clanView",
								params: {
									id: t,
								},
						  })
						: t == o.get("clanData").main.clanId
						? s.setScreen({
								screen: "clan",
						  })
						: s.setScreen({
								screen: "clanView",
								params: {
									id: t,
								},
						  });
				},
				showInfoPopup: function () {
					i.showInfoPopup("clan");
				},
			});
			return a;
		}
	),
	define("text!widgets/clan/safe/head.html!strip", [], function () {
		return '<%\n\nvar msToFinish = moment(tsOpeningFinish * 1000).diff(moment());\nvar userId = UserModel.get(\'id\');\nvar openingTopProgress = ClanSafeModel.get(\'openingTopProgress\');\nvar scores = (openingTopProgress[userId])? openingTopProgress[userId].scores : 0;\nvar currentCodeLevel = ClanSafeController.getCurrentCodeLevel(scores) || 0;\nvar code = ClanSafeModel.get(\'codes\')[currentCodeLevel];\nvar progressPercent = Math.floor(scores * 100 / code);\nvar progressCanBeSkipped = (msToFinish > 0 && scores != code && scores != 0)\n\nvar cssMod = (currentCodeLevel == \'overload\')? \'overload\' : \'level\' + (currentCodeLevel + 1);\n%>\n\n<div class="clan-task__description clan-task-description clan-task-description_safe">\n    <div class="clan-task-description__icon"></div>\n    <div class="clan-task-description__text">\n        Каждый из участников взлома сейфа должен\n        набрать очков точно как в одном из кодов.\n    </div>\n</div>\n<div class="clan-task__head-content">\n    <div class="clan-task-progress <%= (progressCanBeSkipped)? \'clan-task-progress_skip\' : \'\' %> clan-task-progress_<%= cssMod %>">\n        <div class="clan-task-progress__content">\n            <div id="clanBattleProgressScale" \n                class="clan-task-progress__scale" \n                style="width:<%= (scores == code || currentCodeLevel == \'overload\')? \'100\' : progressPercent %>%;"></div>\n            <div class="clan-task-progress__text">\n            <% if (currentCodeLevel == \'overload\') { %>\n            Ты набрал слишком много очков\n            <% } else if (scores == code) { %>\n                <% if (currentCodeLevel == 2) { %>\n                Ты подобрал код максимального уровня!\n                <% } else { %>\n                Ты подобрал код <%= currentCodeLevel + 1 %> уровня\n                <% } %>\n            <% } else { %>\n            Осталось набрать \n            <span class="clan-task-progress__points"><%= code - scores %></span> \n            для кода <%= currentCodeLevel + 1 %> уровня\n            <% } %>\n            </div>\n        </div>\n        <% if (progressCanBeSkipped) { %>\n        <div id="clanSafeResetResults" class="clan-task-progress__ctrl">Сбросить прогресс</div>\n        <% } %>\n    </div>\n    <% if (msToFinish > 0) { %>\n    <div class="clan-task__time clan-task-time" id="clanSafeTime">\n        До окончания: \n        <span class="clan-task-time__data">\n            <%=Application.methods.getDaysHoursMinutesFromMS(msToFinish)%>\n        </span>\n    </div>\n    <% } else { %>\n    <div class="clan-task__time clan-task-time clan-task-time_expired">Время вышло!</div>\n    <% } %>\n</div>';
	}),
	define(
		"widgets/clan/safe/head",
		[
			"gate",
			"widget",
			"application",
			"controllers/clanSafe",
			"collections/popups",
			"models/clan/safe/main",
			"models/user",
			"text!widgets/clan/safe/head.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = t.extend({
				template: _.template(u),
				el: "#clanSafeHead",
				events: {
					"click #clanSafeResetResults": function () {
						i.add({
							type: "clanSafeResetResults",
						});
					},
				},
				initialize: function () {
					(this.model = s),
						this.listenTo(s, "change", this.render),
						(this.viewParam = {
							Application: n,
							ClanSafeModel: s,
							UserModel: o,
							ClanSafeController: r,
						});
				},
				afterRender: function () {},
			});
			return a;
		}
	),
	define("text!widgets/clan/safe/list.html!strip", [], function () {
		return '<%\n\nvar openingTopProgress = ClanSafeModel.get(\'openingTopProgress\');\n\n%>\n\n<div class="clan-task__members-title">участники взлома</div>\n\n<% if (_.isEmpty(openingTopProgress)) { %>\n<div class="clan-task__members-empty">Пока никто не сыграл</div>\n<% } else { %>\n    <%\n    var topWithReward = {};\n    var topWithoutReward = {};\n    var clanData = ClanModel.get(\'clanData\');\n    var content = ClanSafeModel.get(\'content\');\n    \n    _.each(openingTopProgress, function(value, key, list) {\n        if (openingTopProgress[key].hasReward === true) {\n            topWithReward[key] = value;\n        } else {\n            topWithoutReward[key] = value;\n        }\n    });\n    var sortedIdsTopWithReward = _.keys(topWithReward).sort(function(a,b){return (topWithReward[b].scores - topWithReward[a].scores)});\n    var sortedIdsTopWithoutReward = _.keys(topWithoutReward).sort(function(a,b){return (topWithoutReward[a].scores - topWithoutReward[b].scores)});\n    \n    var index = 0;\n    var selfIndex = 0;\n    var userId = UserModel.get(\'id\');\n    %>\n<div class="clan-task__members-list">\n    <%\n    if (!_.isEmpty(sortedIdsTopWithReward)) {\n        sortedIdsTopWithReward.forEach(function(el, i) { \n            var id = el;\n            var member = _.findWhere(clanData.members, {id: id});\n            var scores = topWithReward[id].scores;\n            var currentCodeLevel = ClanSafeController.getCurrentCodeLevel(scores);\n            var cssMod = \'\';\n            if (currentCodeLevel !== null) {\n                cssMod = \'level\' + (currentCodeLevel + 1);\n            }\n            var rewards = content[currentCodeLevel].rewards;\n            var lootbox = content[currentCodeLevel].lootbox;\n            member = (member == undefined)? {id: id, playerName: "Вышедший игрок"} : member ;\n            ++index;\n            if (userId == id) {\n                selfIndex = index;\n            }\n    %>\n    <div class="clan-task__member <%= (userId == id)? \'clan-task__member_self\' : \'\' %>">\n        <div class="clan-task__member-number"><%= index %></div>\n        <div class="clan-task__member-name clan-task__member-name_click"\n            data-member-id="<%= id %>"><%= member.playerName %></div>\n        <div class="clan-task__member-reward">\n            <% if (!_.isEmpty(rewards)) { %> \n            <% _.each(rewards, function(reward, index) { %>\n                <% if (reward.rewardType == \'coinsOnceConst\') { %>\n            <span class="clan-task-reward">\n                +<%= reward.count %>\n                <img class="clan-task-reward__icon"src="<%=Application.params.staticUrl%>images/app/icons/coin.png" alt="" />\n            </span>\n                <% } %>\n                <% if (reward.rewardType == \'ratingOnceConst\') { %>\n            <span class="clan-task-reward">\n                +<%= reward.count %> \n                <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="" />\n            </span>\n                <% } %>  \n            <% }); %>\n            <% } %>\n            <% if (lootbox && lootbox.image) { %>\n            <span data-lootbox-index="<%= currentCodeLevel %>" class="clan-task-reward lootBox">\n                <img class="clan-task-reward__icon" src="<%= lootbox.image %>" alt="" />\n            </span>\n            <% } %>\n        </div>\n        <div class="clan-task__member-code clan-task__member-code_<%= cssMod %>"><%= scores %></div>\n    </div>\n    <!-- /.clan-task__member -->\n    <%\n        });\n    } \n    %>\n\n    <%\n    if (!_.isEmpty(sortedIdsTopWithoutReward)) {\n        sortedIdsTopWithoutReward.forEach(function(el, i) { \n            var id = el;\n            var member = _.findWhere(clanData.members, {id: id});\n            var scores = topWithoutReward[id].scores;\n            var currentCodeLevel = ClanSafeController.getCurrentCodeLevel(scores);\n            var cssClass = \'\';\n            if (currentCodeLevel !== null) {\n                cssClass = (currentCodeLevel == \'overload\')? \'clan-task__member-code_overload\' : \'\';\n            }\n            member = (member == undefined)? {id: id, playerName: "Вышедший игрок"} : member ;\n            ++index;\n            if (userId == id) {\n                selfIndex = index;\n            }\n    %>\n    <div class="clan-task__member <%= (userId == id)? \'clan-task__member_self\' : \'\' %>">\n        <div class="clan-task__member-number"><%= index %></div>\n        <div class="clan-task__member-name clan-task__member-name_click"\n            data-member-id="<%= id %>"><%= member.playerName %></div>\n        <div class="clan-task__member-reward"></div>\n        <div class="clan-task__member-code <%= cssClass %>"><%= scores %></div>\n    </div>\n    <!-- /.clan-task__member -->\n    <%\n        });\n    } \n    %>\n</div>\n<!-- /.clan-task__members-list -->\n\n<%\nselfIndex = (selfIndex)? selfIndex : \'\';\nvar userData = openingTopProgress[userId];\nvar userScores = (userData)? userData.scores : null;\nvar userHasReward = (userData)? userData.hasReward : null;\n%>\n<% if (userScores !== null) { %>\n<div class="clan-task__member clan-task__member_self clan-task__member_fixed">\n<%\nvar userCurrentCodeLevel = ClanSafeController.getCurrentCodeLevel(userScores);\nvar cssClass = \'\';\nif (userCurrentCodeLevel !== null) {\n    if (userHasReward !== null && userHasReward) {\n        cssClass = \'clan-task__member-code_level\' + (userCurrentCodeLevel + 1);\n    } else {\n        cssClass = (userCurrentCodeLevel == \'overload\')? \'clan-task__member-code_overload\' : \'\';\n    }\n}\n%>\n    <div class="clan-task__member-number"><%= selfIndex %></div>\n    <div class="clan-task__member-name">Ты</div>\n    <div class="clan-task__member-reward">\n    <% if (userHasReward !== null && userHasReward) { %>\n        <%\n        var rewards = content[userCurrentCodeLevel].rewards;\n        var lootbox = content[userCurrentCodeLevel].lootbox;\n        %>\n        <% if (!_.isEmpty(rewards)) { %>\n        <% _.each(rewards, function(reward, index) { %>\n            <% if (reward.rewardType == \'coinsOnceConst\') { %>\n        <span class="clan-task-reward">\n            +<%= reward.count %>\n            <img class="clan-task-reward__icon"src="<%=Application.params.staticUrl%>images/app/icons/coin.png" alt="" />\n        </span>\n            <% } %>\n            <% if (reward.rewardType == \'ratingOnceConst\') { %>\n        <span class="clan-task-reward">\n            +<%= reward.count %> \n            <img class="clan-task-reward__icon" src="<%=Application.params.staticUrl%>images/app/icons/rate.png" alt="" />\n        </span>\n            <% } %>  \n        <% }); %>\n        <% } %>\n        <% if (lootbox && lootbox.image) { %>\n        <span data-lootbox-index="<%= userCurrentCodeLevel %>" class="clan-task-reward lootBox">\n            <img class="clan-task-reward__icon" src="<%= lootbox.image %>" alt="" />\n        </span>\n        <% } %>\n    <% } %>\n    </div>\n    <div class="clan-task__member-code <%= cssClass %>">\n        <%= userScores %>\n    </div>\n</div>\n<!-- /.clan-task__member [fixed] -->\n<% } %>\n\n<% } %>\n';
	}),
	define(
		"widgets/clan/safe/list",
		[
			"gate",
			"widget",
			"application",
			"controllers/clanSafe",
			"collections/popups",
			"models/appState",
			"models/clan/main",
			"models/clan/safe/main",
			"models/user",
			"text!widgets/clan/safe/list.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = t.extend({
				template: _.template(f),
				el: "#clanSafeList",
				events: {
					"click .clan-task__member-name_click": function (e) {
						var t = $(e.target).attr("data-member-id");
						s.setScreen({
							screen: "userInfo",
							params: {
								id: t,
							},
						});
					},
					"click .lootBox": "showLootboxInfo",
				},
				initialize: function () {
					(this.model = u),
						this.listenTo(u, "change", this.render),
						(this.viewParam = {
							Application: n,
							ClanModel: o,
							ClanSafeModel: u,
							UserModel: a,
							ClanSafeController: r,
						});
				},
				afterRender: function () {},
				showLootboxInfo: function (e) {
					var t = $(e.currentTarget),
						n = t.data("lootbox-index"),
						r = u.get("content")[n].lootbox;
					i.add({
						type: "clanSafeRewardInfo",
						params: {
							reward: r,
						},
					});
				},
			});
			return l;
		}
	),
	define("text!widgets/clan/safe/foot.html!strip", [], function () {
		return '<%\n\nvar userId = UserModel.get(\'id\');\nvar openingTopProgress = ClanSafeModel.get(\'openingTopProgress\');\nvar scores = (openingTopProgress[userId])? openingTopProgress[userId].scores : 0;\nvar currentCodeLevel = ClanSafeController.getCurrentCodeLevel(scores) || 0;\n\nvar user = _.findWhere(ClanModel.get(\'clanData\').members, {id: userId});\nvar userClanPermissions = _.findWhere(ClanModel.get(\'userClanPermissionInfo\'), {role: user.role}).permissions;\n\nvar i, codeItem;\n\nvar hackIsActive = this.model.hackIsActive();\n\nvar userProgress = openingTopProgress[userId];\nvar userHasReward = (userProgress)? userProgress.hasReward : null;\nvar maxLevel = (currentCodeLevel == 2)? true : false;\nvar overload = (currentCodeLevel == \'overload\')? true : false;\nvar canBeOpened = ClanSafeController.checkConditions();\n\n%>\n\n<% if (status == \'opening\') { %>\n\n    <% if (canBeOpened && maxLevel) { %>\n        <div class="clan-safe-info">\n            <div class="clan-safe-info__status">\n                <div class="clan-safe-info__status-icon"></div>\n                <div class="clan-safe-info__status-done">Все участники вскрытия сейфа получат награду!</div>\n            </div>\n        </div>\n        <div class="clan-safe-ctrl">\n            <% if (userClanPermissions.hasBreakingSafePermission) { %>\n            <div id="clanSafeOpenBtn" class="clan-safe-ctrl__btn b-btn b-btn_yellow-dark">Открыть сейф</div>\n            <% } else { %>\n            <div class="clan-safe-ctrl__info">Лидеры могут открыть сейф прямо сейчас!</div>\n            <% } %>\n        </div>\n    \n        <% } else if (canBeOpened && !maxLevel && userClanPermissions.hasBreakingSafePermission) { %>\n        <div class="clan-safe-foot">\n            <div id="clanSafeOpenButton" class="clan-safe-foot__btn b-btn b-btn_yellow-dark">Открыть сейф</div>\n        </div>\n        <div class="clan-safe-ctrl">\n            <div id="clanSafeBtn" class="clan-safe-ctrl__btn b-btn b-btn_green"><%= (userHasReward)? \'Продолжить взлом\' : \'На взлом!\' %></div>\n        </div>\n        <div id="clanSafeBattleTimer" class="clan-safe-battle-timer" style="display: none;">\n            До бесплатного боя \n            <span id="clanSafeBattleTimerData" class="clan-safe-battle-timer__data"></span>\n        </div>\n        <% } else if (hackIsActive) { %>\n            <% if (overload) { %>\n            <div class="clan-safe-info">\n                <div class="clan-safe-info__status">\n                    <div class="clan-safe-info__status-overload">\n                        Перебор! Можно cбросить прогресс\n                        и набрать очки заново. Если хотя бы один код\n                        окажется неверным, взлом сейфа не удастся.\n                    </div>\n                </div>\n            </div>\n            <div class="clan-safe-ctrl">\n                <div id="clanSafeSkipBtn" class="clan-safe-ctrl__btn b-btn b-btn_green">Сбросить прогресс</div>\n            </div>\n            <% } else { %>\n            <div class="clan-safe-info">\n                <div class="clan-safe-info__codes clan-safe-codes">\n                    <div class="clan-safe-codes__label">Коды:</div>\n                    <% for (i = 0; i < codes.length; i += 1) { %>\n                    <div class="clan-safe-codes__item clan-safe-code clan-safe-code_level<%= i + 1 %> <%= (currentCodeLevel == i)? \'clan-safe-code_active\' : \'\' %>">\n                        <div class="clan-safe-code__data">\n                            <% for (codeItem of codes[i].toString()) { %>\n                            <div class="clan-safe-code__item"><%= codeItem %></div>\n                            <% } %>\n                        </div>\n                        <div id="copyClanSafeCodeLevel<%= i + 1 %>" class="clan-safe-code__copy" data-clipboard-text="<%= codes[i] %>"></div>\n                    </div>\n                    <% } %>\n                </div>\n                <div class="clan-safe-info__rules clan-safe-rules">\n                    <div class="clan-safe-rules__btn">\n                        <div id="clanSafeRules" class="clan-safe-rules__btn-text">Правила и&nbsp;условия</div>\n                    </div>\n                </div>\n                <div class="clan-safe-info__copy-alert">\n                    <div class="clan-safe-info__copy-alert-text">Код скопирован</div>\n                </div>\n            </div>\n                <% if (maxLevel && !canBeOpened && userHasReward) { %>\n            <div class="clan-safe-ctrl">\n                <div class="clan-safe-ctrl__btn b-btn b-btn_green" id="clanChatBtn">Вдохновить остальных на битву</div>\n            </div>\n                <% } else { %>\n            <div class="clan-safe-ctrl">\n                <div id="clanSafeBtn" class="clan-safe-ctrl__btn b-btn b-btn_green"><%= (userHasReward)? \'Продолжить взлом\' : \'На взлом!\' %></div>\n            </div>\n            <div id="clanSafeBattleTimer" class="clan-safe-battle-timer" style="display: none;">\n                До бесплатного боя \n                <span id="clanSafeBattleTimerData" class="clan-safe-battle-timer__data"></span>\n            </div>\n                <% } %>\n            <% } %>\n\n        <% } else { %>\n            <%  if (userClanPermissions.hasBreakingSafePermission) { %>\n            <div class="clan-safe-info">\n                <div class="clan-safe-info__status">\n                    <div class="clan-safe-info__status-fail">Время вышло, взлом не удался. Нажми на кнопку, чтобы начать получение кодов от нового сейфа!</div>\n                </div>\n            </div>\n            <div class="clan-safe-ctrl">\n                <div id="newClanSafeBtn" class="clan-safe-ctrl__btn b-btn b-btn_blue">Новый сейф</div>\n            </div>\n            <% } else { %>\n            <div class="clan-safe-info">\n                <div class="clan-safe-info__status">\n                    <div class="clan-safe-info__status-fail">Взлом не удался. Попробуй в следующий раз!</div>\n                </div>\n            </div>\n            <div class="clan-safe-ctrl">\n                <div id="clanChatBtn" class="clan-safe-ctrl__btn b-btn b-btn_blue">В клановый чат</div>\n            </div>\n            <% } %>\n        <% } %>\n<% } %>\n\n<% if (status == \'open\') { %>\n<%\nvar clanSafeRewardAccept = ClanSafeUserActiveRewardModel.get(\'accept\');\n%>\n<div class="clan-safe-info">\n    <div class="clan-safe-info__status">\n        <div class="clan-safe-info__status-icon"> </div>\n        <div class="clan-safe-info__status-open">Сейф взломан!</div>\n    </div>\n</div>\n<!-- /.clan-safe-info -->\n<div class="clan-safe-ctrl">\n    <% if (clanSafeRewardAccept === false) { %>\n    <div id="clanSafeRewardBtn" class="clan-safe-ctrl__btn b-btn b-btn_blue">Забрать награду</div>\n    <% } else { %>\n    <div id="clanChatBtnWithRequest" class="clan-safe-ctrl__btn b-btn b-btn_blue">В клановый чат</div>\n    <% } %>\n</div>\n<!-- /.clan-safe-ctrl -->\n<% } %>\n\n<% if (status == \'broken\') { %>\n<div class="clan-safe-info">\n    <div class="clan-safe-info__status">\n        <div class="clan-safe-info__status-fail">Взлом не удался. Попробуй в следующий раз!</div>\n    </div>\n</div>\n<div class="clan-safe-ctrl">\n    <div id="clanChatBtn" class="clan-safe-ctrl__btn b-btn b-btn_blue">В клановый чат</div>\n</div>\n<% } %>\n\n\n';
	}),
	define(
		"widgets/clan/safe/foot",
		[
			"gate",
			"widget",
			"application",
			"clipboard",
			"controllers/clanSafe",
			"collections/popups",
			"models/appState",
			"models/clan/main",
			"models/clan/safe/main",
			"models/clan/safe/userActiveReward",
			"models/user",
			"text!widgets/clan/safe/foot.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c) {
			var h = t.extend({
				template: _.template(c),
				el: "#clanSafeFoot",
				events: {
					"click #clanSafeRules": function () {
						s.add({
							type: "clanSafeRules",
						});
					},
					"click .clan-safe-code__copy": "copyCodeToClipboard",
					"click #clanSafeOpenButton": "clanSafeOpen",
					"click #clanChatBtn": function () {
						o.setScreen({
							screen: "clan",
						});
					},
					"click #clanChatBtnWithRequest": function () {
						e.clanSafeGetInfo(),
							o.setScreen({
								screen: "clan",
							});
					},
					"click #clanSafeBtn": function () {
						o.setScreen({
							screen: "clanSafeGame",
						});
					},
					"click #clanSafeOpenBtn": function () {
						s.add({
							type: "clanSafeOpen",
						});
					},
					"click #clanSafeSkipBtn": function () {
						s.add({
							type: "clanSafeResetResults",
						});
					},
					"click #newClanSafeBtn": "newClanSafe",
					"click #clanSafeRewardBtn": "clanSafeGetReward",
				},
				initialize: function () {
					var t = this;
					(this.model = a),
						this.listenTo(a, "change", this.render),
						this.listenTo(e, "clanSafeInfo", function (e) {
							e.data.status == "open" &&
								s.add({
									type: "clanSafeGetReward",
								});
						}),
						this.listenTo(e, "clanSafeGetReward", function (e) {
							var n = _.isEmpty(e.userActiveReward) ? [] : e.userActiveReward.userReward;
							n.length > 0 &&
								s.add({
									type: "reward",
									params: {
										reward: n,
										context: "clanTask",
									},
								}),
								t.render();
						}),
						this.listenTo(e, "clanSafeUserActiveRewardInfo", this.render),
						(this.viewParam = {
							Application: n,
							ClanSafeController: i,
							UserModel: l,
							ClanModel: u,
							ClanSafeModel: a,
							ClanSafeUserActiveRewardModel: f,
						});
				},
				afterRender: function () {
					var e = this,
						t = this.model.hackIsActive();
					t &&
						(this.setHackButtonState(),
						(this.timer = setInterval(function () {
							e.setHackButtonState();
						}, 1e4)));
				},
				setHackButtonState: function () {
					var e = a.get("battleSettings"),
						t = e.lastFreeBattleTime;
					if (t) {
						var r = a.calcMsToFreeBattle();
						r > 0
							? ($("#clanSafeBtn").removeClass("b-btn_green").addClass("b-btn_blue"),
							  $("#clanSafeBattleTimer").show(),
							  $("#clanSafeBattleTimerData").text(n.methods.getHoursMinutesFromMS(r)))
							: ($("#clanSafeBtn").removeClass("b-btn_blue").addClass("b-btn_green"),
							  $("#clanSafeBattleTimer").hide(),
							  clearInterval(this.timer));
					}
				},
				clanSafeOpen: function () {
					s.add({
						type: "clanSafeOpen",
					});
				},
				newClanSafe: function () {
					var t = a.get("clanSafeId");
					e.clanSafeOpen(t),
						o.setScreen({
							screen: "clan",
						});
				},
				clanSafeGetReward: function () {
					e.clanSafeGetReward();
				},
				copyCodeToClipboard: function (e) {
					var t = this,
						n = $(e.currentTarget),
						i = n.attr("id");
					this.clipboard && this.clipboard.destroy(),
						(this.clipboard = new r("#" + i)),
						this.clipboard.on("success", function () {
							$(".clan-safe-info__copy-alert").fadeIn().delay(800).fadeOut(), t.clipboard.destroy();
						});
				},
			});
			return h;
		}
	),
	define("text!screens/clan/safe/index.html!strip", [], function () {
		return '\n<div id="clanHeadScarf" class="b-clan-head"></div>\n<!-- /.b-clan-head -->\n\n<div id="clanSafe" class="clan-task">\n    <div id="clanSafeHead" class="clan-task__head"></div>\n    <div id="clanSafeList" class="clan-task__members"></div>\n    <div id="clanSafeFoot" class="clan-task__foot"></div>\n</div>\n';
	}),
	define(
		"screens/clan/safe/index",
		[
			"widget",
			"application",
			"models/appState",
			"widgets/clan/headScarf",
			"widgets/clan/safe/head",
			"widgets/clan/safe/list",
			"widgets/clan/safe/foot",
			"text!screens/clan/safe/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = e.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {},
				initialize: function (e) {
					this.params = e;
				},
				afterRender: function () {},
				initializeWidgets: function () {
					this.widgets = [
						new r({
							infoCtrl: "clanSafe",
						}),
						new i(),
						new s(),
						new o(),
					];
				},
			});
			return a;
		}
	),
	define("text!widgets/clan/safe/boosters.html!strip", [], function () {
		return '<div class="b-boosters">\n    <div class="b-boosters__head">\n        <div class="b-boosters__head__ctrls">\n            <div id="backButton" class="b-btn-back b-btn-back_boosters"></div>\n            <div id="showInfoPopup" class="b-boosters__head__ctrls__info soundingButton"> \n                <div class="btn-info"></div>\n              </div>\n        </div>\n        <div class="b-boosters__head__title">Выбери усиление</div>\n    </div>\n    <div class="b-boosters-i">\n        <div class="b-boosters__cells">\n            <div class="b-boosters__cells-i">\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div class="b-boosters__cells__item">\n                    <div class="b-boosters__cells__item__icon">\n                        <img src="" alt="" class="b-boosters__cells__item__icon-i">\n                    </div>\n                    <div class="b-boosters__cells__item__counter">0</div>\n                </div>\n                <!-- cell -->\n\n                <div id="showIntelligenceInfoPopup" class="b-boosters__cells__counter b-boosters__cells__counter_empty"> <!-- b-boosters__cells__counter_full -->\n                    <div class="b-boosters__cells__counter__pic">\n                        <div class="b-boosters__cells__counter__pic-i" ></div> <!-- style="height: 0%;" -->\n                        <div class="b-boosters__cells__counter__pic__icon"></div>\n                        <div class="b-boosters__cells__counter__pic__full">\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_1"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_2"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_3"></div>\n                            <div class="b-boosters__cells__counter__pic__full__item b-boosters__cells__counter__pic__full__item_4"></div>\n                        </div>\n                    </div>\n                    <div class="b-boosters__cells__counter__data">\n                        <span class="b-boosters__cells__counter__data__value">0</span>/<span class="b-boosters__cells__counter__data__total"><%= intelligenceValue %></span>\n                    </div>\n                </div>\n                <!-- counter -->\n            </div>\n        </div>\n        <!-- /.b-boosters__cells -->\n\n        <div class="b-boosters__list">\n            <div class="b-boosters__list-i">\n            <% \n                var items = boosters.attributes;\n                for (var i in items) { %>\n                <div data-list-id=\'<%= i %>\' class="b-boosters__list__item <% if (!items[i].isAvailable) print(\'b-boosters__list__item_inactive\') %>">\n                    <div class="b-boosters__list__item__counter"><%= items[i].count %></div>\n                    <div class="b-boosters__list__item__icon">\n                        <img src="<%= items[i].imageActiveUrl %>" alt="" class="b-boosters__list__item__icon-i">\n                    </div>\n                    <div class="b-boosters__list__item__title"><%= items[i].title %></div>\n                    <div class="b-boosters__list__item__weight">\n                        <img class="b-boosters__list__item__weight__icon" src="<%=Application.params.staticUrl%>images/app/boosters/intelligence.png" alt=""> &times; \n                        <span class="b-boosters__list__item__weight-i"><%= items[i].intelligence %></span>\n                    </div>\n                    <div class="b-boosters__list__item__ctrl">\n                        <div class="b-boosters__list__item__ctrl-i"><%= items[i].cost.coins %></div>\n                    </div>\n                    <div class="b-boosters__list__item__info">\n                        <% if (!items[i].isAvailable && items[i].conditions.clan.level.from) { %>\n                            Откроется на&nbsp;<%= items[i].conditions.clan.level.from %>&nbsp;ур.\n                        <% } %>\n                    </div>\n                </div>\n                <!-- /.b-boosters__list__item -->\n            <% } %>\n            </div>\n        </div>\n        <!-- /.b-boosters__list -->\n\n        <div class="b-boosters__btn">\n            <div id="clanSafeBattleBtn" class="b-btn soundingButton">\n                На взлом!\n                <span id="clanSafeCost" class="b-coin b-coin_btn"></span>\n            </div>\n        </div>\n\n    </div>\n    \n</div>\n<!-- /.b-boosters -->\n';
	}),
	define(
		"widgets/clan/safe/boosters",
		[
			"gate",
			"widget",
			"application",
			"controllers/gameanalytics",
			"controllers/usedesk",
			"collections/popups",
			"models/appState",
			"models/clan/safe/main",
			"models/clan/boosters",
			"models/user",
			"text!widgets/clan/safe/boosters.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = t.extend({
				events: {
					"click #backButton": function () {
						o.setScreen({
							screen: "clanSafe",
						}),
							$(".l-screen").removeClass("l-screen_game");
					},
					"click #showInfoPopup": "showInfoPopup",
					"click #showIntelligenceInfoPopup": "showIntelligenceInfoPopup",
					"click .b-boosters__list__item__ctrl": function (e) {
						var t = $(e.target).closest(".b-boosters__list__item").attr("data-list-id");
						this.buyBooster(t);
					},
					"click .b-boosters__list__item__icon": function (e) {
						var t = $(e.target).closest(".b-boosters__list__item").attr("data-list-id");
						this.addBooster(t);
					},
					"click .b-boosters__cells__item__icon": function (e) {
						var t = $(e.target).closest(".b-boosters__cells__item").attr("data-cell-id");
						this.removeBooster(t);
					},
					"click #clanSafeBattleBtn": "startClanSafeBattle",
				},
				el: "#boosters",
				initialize: function (e) {
					var t = this;
					(this.params = e),
						(this.model = a),
						(this.template = _.template(l)),
						(this.viewParam = {
							Application: n,
							boosters: a,
							intelligenceValue: this.params.intelligenceValue,
						}),
						this.listenTo(this.model, "change", function () {
							t.updateBoosterCounter(this.model.changed);
						}),
						u.on("change", this.onClanSafeModelChange, this),
						(this.timer = setInterval(function () {
							t.setButtonState();
						}, 1e4));
				},
				afterRender: function () {
					$(".b-boosters__list__item").each(function () {
						var e = $(this),
							t = +e.find(".b-boosters__list__item__counter").text();
						t == 0 && e.addClass("b-boosters__list__item_empty");
					}),
						_.size(a.attributes) > 6 && $(this.el).children().eq(0).addClass("b-boosters_all"),
						$("#clanSafeBattleBtn").removeClass("b-btn_blue").addClass("b-btn_green"),
						$("#clanSafeCost").hide(),
						(this.taskType = "free"),
						this.setButtonState();
				},
				onClanSafeModelChange: function () {
					this.setButtonState();
				},
				setButtonState: function () {
					if (o.get("screen") != "clanSafeGame") return;
					var e = u.get("battleSettings"),
						t = e.lastFreeBattleTime;
					if (t) {
						var n = u.calcMsToFreeBattle();
						n > 0
							? ($("#clanSafeBattleBtn").removeClass("b-btn_green").addClass("b-btn_blue"),
							  $("#clanSafeCost").show().text(e.cost),
							  (this.taskType = "coins"))
							: ($("#clanSafeBattleBtn").removeClass("b-btn_blue").addClass("b-btn_green"),
							  $("#clanSafeCost").hide(),
							  (this.taskType = "free"));
					}
				},
				startClanSafeBattle: function () {
					var e = $("#clanSafeBattleBtn");
					if (!e.hasClass("g-disabled")) {
						e.addClass("g-disabled");
						var t = this,
							n = u.get("battleSettings").cost;
						if (f.get("balance") < n && this.taskType == "coins")
							this.showBuyCoinsPopup(), e.removeClass("g-disabled");
						else {
							$("#backButton").fadeOut(200);
							var r = [];
							$(".b-boosters__cells__item").each(function () {
								var e = $(this);
								if (e.hasClass("b-boosters__cells__item_filled")) {
									var n = t.model.get(e.attr("data-cell-id")).alias,
										i = +e.find(".b-boosters__cells__item__counter").text();
									r.push({
										count: i,
										alias: n,
									});
								}
							}),
								this.trigger("startClanSafeBattle", {
									selectedBoosters: r,
									type: this.taskType,
								});
						}
					}
				},
				addBooster: function (e) {
					var t,
						i,
						s = $(".b-boosters__list__item[data-list-id=" + e + "]"),
						o = s.find(".b-boosters__list__item__counter"),
						u = this.model.get(e).intelligence;
					if (
						s.hasClass("b-boosters__list__item_empty") ||
						s.hasClass("b-boosters__list__item_inactive")
					)
						return !1;
					if (this.checkFlask(u)) {
						if (s.hasClass("b-boosters__list__item_active"))
							(t = $(".b-boosters__cells__item[data-cell-id=" + e + "]")),
								(i = t.find(".b-boosters__cells__item__counter")),
								n.methods.play("click");
						else {
							var a = $(".b-boosters__cells__item").not(".b-boosters__cells__item_filled");
							if (!a.length) return !1;
							(t = a.eq(0)),
								(i = t.find(".b-boosters__cells__item__counter")),
								t.attr("data-cell-id", e).addClass("b-boosters__cells__item_filled"),
								t.find("img").attr("src", this.model.get(e).imageActiveUrl),
								s.addClass("b-boosters__list__item_active"),
								n.methods.play("click");
						}
						i.text(+i.text() + 1),
							o.text(+o.text() - 1),
							this.updateFlask(u),
							this.intelligenceAlert(),
							+o.text() == 0 && s.addClass("b-boosters__list__item_empty"),
							r.sendDesignEvent("Screen_actions:booster_clan:put");
					}
				},
				removeBooster: function (e) {
					var t = $(".b-boosters__list__item[data-list-id=" + e + "]"),
						r = t.find(".b-boosters__list__item__counter"),
						i = $(".b-boosters__cells__item[data-cell-id=" + e + "]"),
						s = i.find(".b-boosters__cells__item__counter"),
						o = this.model.get(e).intelligence;
					r.text(+r.text() + 1),
						s.text(+s.text() - 1),
						this.updateFlask(-o),
						this.intelligenceAlert(),
						+s.text() == 0 &&
							(i.attr("data-cell-id", "").removeClass("b-boosters__cells__item_filled"),
							t.removeClass("b-boosters__list__item_active")),
						+r.text() > 0 && t.removeClass("b-boosters__list__item_empty"),
						n.methods.play("click");
				},
				checkFlask: function (e) {
					var t = +$(".b-boosters__cells__counter__data__value").text(),
						n = this.params.intelligenceValue;
					return t + e <= n ? !0 : !1;
				},
				updateFlask: function (e) {
					var t = $(".b-boosters__cells__counter__data__value"),
						r = n.params.services.intelligence,
						i = $(".b-boosters__cells__counter"),
						s = $(".b-boosters__cells__counter__pic-i");
					t.text(+t.text() + e),
						s.css("height", (+t.text() / +r) * 100 + "%"),
						t.text() > 0
							? i.removeClass("b-boosters__cells__counter_empty")
							: i.addClass("b-boosters__cells__counter_empty"),
						t.text() == r
							? i.addClass("b-boosters__cells__counter_full")
							: i.removeClass("b-boosters__cells__counter_full");
				},
				intelligenceAlert: function () {
					var e = this;
					$(".b-boosters__list__item").each(function () {
						var t = $(this).find(".b-boosters__list__item__weight-i");
						e.checkFlask(+t.text())
							? t.parent().removeClass("b-boosters__list__item__weight_hl")
							: t.parent().addClass("b-boosters__list__item__weight_hl");
					});
				},
				buyBooster: function (t) {
					var i = this.model.get(t);
					n.methods.play("click"),
						f.get("balance") >= i.cost.coins
							? (console.log("buy booster id:", t), e.fieldBoosterBuy(i.alias))
							: this.showBuyCoinsPopup(),
						r.sendDesignEvent("Screen_actions:booster_clan:buy"),
						r.sendResourceEvent("coins", -i.cost.coins, "booster", "Consumed"),
						r.sendDesignEvent("spend_virtual_currency:Reason:booster_clan");
				},
				updateBoosterCounter: function (e) {
					var t = _.keys(e)[0],
						n = $(".b-boosters__list__item[data-list-id=" + t + "]"),
						r = n.find(".b-boosters__list__item__counter"),
						i = this.model.get(t).count;
					if (n.hasClass("b-boosters__list__item_active")) {
						var s = $(".b-boosters__cells__item[data-cell-id=" + t + "]"),
							o = s.find(".b-boosters__cells__item__counter"),
							u = +o.text();
						r.text(i - u);
					} else r.text(i);
					+r.text() > 0 && n.removeClass("b-boosters__list__item_empty");
				},
				showBuyCoinsPopup: function () {
					purchase
						? s.add({
								type: "buyCoins",
						  })
						: s.add({
								type: "text",
								params: {
									header: "",
									text: "Недостаточно монет.",
									list: null,
									cursiv: null,
								},
						  });
				},
				showInfoPopup: function () {
					i.showInfoPopup("boosters");
				},
				showIntelligenceInfoPopup: function () {
					s.add({
						type: "static",
						params: {
							template: "boostersFlask",
						},
					});
				},
			});
			return c;
		}
	),
	define(
		"screens/clan/safe/game",
		[
			"widget",
			"gate",
			"application",
			"controllers/gate",
			"controllers/gameanalytics",
			"controllers/wardrobe",
			"collections/popups",
			"models/appState",
			"models/user",
			"models/game/clan",
			"models/clan/boosters",
			"models/clan/safe/main",
			"widgets/fields/clan",
			"widgets/clan/safe/boosters",
			"text!screens/clan/game.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d) {
			var v = e.extend({
				el: "#screenContainer",
				template: _.template(d),
				events: {
					"click #showTipButton": "showTip",
					"click .b-game__boosters__item": "useFieldBooster",
				},
				initialize: function (e) {
					(this.clanSafeId = c.get("clanSafeId")),
						(this.viewParam = {
							Application: n,
						}),
						this.boosterGetInfo();
				},
				boosterGetInfo: function () {
					this.listenTo(t, "boosterGetInfo", function (e) {
						(this.tipCostRate = 1),
							(this.intelligenceValue = n.params.services.intelligence),
							(this.clanWordScoreRates = []);
						var t = e.boosterInfo;
						for (var r = 0; r < t.length; r += 1)
							switch (t[r].type) {
								case "tipCost":
									this.tipCostRate = t[r].params.rate;
									break;
								case "intelligence":
									this.intelligenceValue = t[r].value;
									break;
								case "clanWordScoreRate":
									this.clanWordScoreRates.push(t[r]);
							}
						this.clanWordScoreRates.length > 0 &&
							(this.clanWordScoreRates = s.combineRewardsParams(this.clanWordScoreRates));
					}),
						t.boosterGetInfo();
				},
				afterRender: function () {
					$(".l-screen").addClass("l-screen_game"),
						(this.fieldSize = this.getFieldSize()),
						this.setTipButtonType(),
						this.fieldBoosterGetInfo(),
						this.listenTo(t, "getTip", function () {
							a.get("balance") < n.params.services.getATip &&
								!purchase &&
								$("#showTipButton").addClass("b-game__boosters__item_inactive");
						});
				},
				fieldBoosterGetInfo: function () {
					var e = this;
					this.listenToOnce(t, "fieldBoosterGetInfo", function (t) {
						(this.boostersWidget = new p({
							intelligenceValue: this.intelligenceValue,
						})),
							this.boostersWidget.render(),
							this.listenToOnce(this.boostersWidget, "startClanSafeBattle", function (t) {
								var n = t;
								$(e.boostersWidget.el).remove(), e.clanSafeBattleStart(n.type, n.selectedBoosters);
							});
					}),
						t.fieldBoosterGetInfo("clan");
				},
				clanSafeBattleStart: function (e, r) {
					var i = this;
					this.listenTo(t, "clanSafeBattleStart", function (e) {
						var e = e,
							t = 120,
							r = e.fieldBoosterData || [];
						(this.defaultTipCost = 25),
							(this.tipCostIndex = 1),
							(this.tipFreeIndex = 1),
							(this.battleNumber = e.battleNumber);
						if (e.fields == undefined)
							return (
								$(".l-screen").removeClass("l-screen_game"),
								u.setScreen({
									screen: "clanTask",
								}),
								!1
							);
						this.updateTipButtonCost(),
							this.renderBoosters(r),
							this.initGameField(),
							console.log("safe battle data: ", e),
							(this.gameModel = new f(e.fields[0], {
								clanWordScoreRates: i.clanWordScoreRates,
							})),
							console.log("gameModel: ", this.gameModel),
							(this.field = new h({
								model: this.gameModel,
								screen: this,
								roundTime: t,
								fieldSize: this.fieldSize,
							})),
							this.listenToOnce(this.field, "backgroundComplete", function () {
								$(".b-game__boosters__item").removeClass("b-game__boosters__item_inactive"),
									a.get("balance") < n.params.services.getATip &&
										!purchase &&
										$("#showTipButton").addClass("b-game__boosters__item_inactive");
							}),
							$("#fieldWordsCount").text(this.gameModel.getFieldWordsCount()),
							$(".b-game__head__words").fadeIn();
					}),
						t.clanSafeBattleStart(e, r);
				},
				getFieldSize: function () {
					var e = $(".l-game__field"),
						t = e.width(),
						n = e.height(),
						r = t <= n ? t : n,
						i = 410,
						s = i;
					return r < i && (s = r), s;
				},
				initGameField: function () {
					var e = this.fieldSize,
						t = 2;
					$("#canvasContainer").css({
						width: e,
						height: e,
					}),
						$("#canvasContainer canvas")
							.attr({
								width: e * t,
								height: e * t,
							})
							.css({
								width: e,
								height: e,
							}),
						$(".b-game__boosters").css("width", e);
				},
				save: function () {
					console.warn("save", this.gameModel, this.gameModel.isUpdated),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				sendResult: function () {
					var e = this.gameModel.getResult(),
						n = this.gameModel.getFieldBoosterData(),
						r = this.tipCostIndex - 1 + this.tipFreeIndex - 1,
						i = !1;
					console.warn("gameModel", this.gameModel),
						t.clanSafeBattleResult({
							clanSafeId: this.clanSafeId,
							battleNumber: this.battleNumber,
							results: e,
							fieldBoosterData: n,
							tipCount: r,
							isRVRateActivated: i,
						}),
						u.setScreen({
							screen: "clanSafe",
							params: {
								result: e,
							},
						}),
						$(".l-screen").removeClass("l-screen_game");
				},
				renderBoosters: function (e) {
					console.log("field boosters: ", e);
					var t = e.length,
						n = l.getIcons();
					t > 0 &&
						e.forEach(function (e, t) {
							var r = $(".b-game__boosters__item").eq(t),
								i = r.find(".b-game__boosters__item__counter"),
								s = r.find(".b-game__boosters__item__icon-i");
							r
								.addClass("b-game__boosters__item_filled b-game__boosters__item_inactive")
								.attr("data-alias", e.alias),
								i.text(e.count),
								s.attr("src", n[e.alias]);
						});
				},
				showTip: function () {
					if (
						$("#showTipButton").hasClass("b-game__boosters__item_inactive") ||
						$("#showTipButton").hasClass("b-game__boosters__item_cooldown")
					)
						return !1;
					if (this.field.isBackgroundComplete) {
						var e = a.get("freeTips"),
							t = this.getCurrentTipCost();
						e > 0
							? (this.field.showTip(),
							  this.useTip(this.tipFreeIndex, "freeTips"),
							  ++this.tipFreeIndex,
							  (e -= 1),
							  a.set({
									freeTips: e,
							  }),
							  this.setTipButtonType())
							: a.get("balance") >= t
							? (this.field.showTip(),
							  this.updateBalance(t),
							  this.useTip(this.tipCostIndex, "coins"),
							  ++this.tipCostIndex,
							  this.updateTipButtonCost())
							: purchase &&
							  o.add({
									type: "buyCoins",
							  });
					}
				},
				getCurrentTipCost: function () {
					return Math.floor(this.defaultTipCost * this.tipCostRate) * this.tipCostIndex;
				},
				updateBalance: function (e) {
					var t = a.get("balance");
					(t -= e),
						a.set({
							balance: t,
						});
				},
				updateTipButtonCost: function () {
					$("#tipCost").text(this.getCurrentTipCost());
				},
				setTipButtonType: function () {
					var e = a.get("freeTips");
					e > 0
						? ($("#freeTip").show().text(e), $("#tipCost").addClass("g-hidden"))
						: ($("#freeTip").hide(), $("#tipCost").removeClass("g-hidden")),
						a.get("balance") < this.getCurrentTipCost() &&
							!purchase &&
							$("#showTipButton").addClass("b-btn-cheat_disabled");
				},
				useTip: function (e, t) {
					r.useTip({
						place: "clanSafe",
						id: this.clanSafeId,
						indexes: [e],
						usageType: t,
					}),
						i.sendResourceEvent("coins", -this.getCurrentTipCost(), "hint", "Consumed"),
						i.sendDesignEvent("spend_virtual_currency:Reason:tip_clan");
				},
				useFieldBooster: function (e) {
					var t = $(e.currentTarget);
					if (
						this.field.timer.counter == 0 ||
						!t.hasClass("b-game__boosters__item_filled") ||
						t.hasClass("b-game__boosters__item_cooldown") ||
						t.hasClass("b-game__boosters__item_inactive") ||
						t.hasClass("b-game__boosters__item_active")
					)
						return !1;
					var n,
						r = t.attr("data-alias"),
						i = t.find(".b-game__boosters__item__counter");
					r &&
						(_.has(this.gameModel.fieldBoosterCounts, r)
							? (this.gameModel.fieldBoosterCounts[r] += 1)
							: (this.gameModel.fieldBoosterCounts[[r]] = 1),
						console.log(this.gameModel.fieldBoosterCounts),
						i.text(+i.text() - 1),
						(n = l.getParams(r)),
						(n.alias = r),
						(n.count = +i.text()),
						this.field[r](n));
				},
				showProVersionPopup: function (e) {
					o.add({
						type: "proVersion",
						params: {
							reason: "unratedCountGames",
							type: e,
						},
					});
				},
				renderPopup: function (e) {
					console.log("renderPopup in clan game screen");
					var t = ["buyCoins", "static", "usedesk.info"];
					$("#popup").html(""),
						$("#cover").hide(),
						console.log("popupObj", e),
						console.log("index in types", t.indexOf(e.type)),
						t.indexOf(e.type) != -1 && e && ($("#cover").show(), e.render());
				},
			});
			return v;
		}
	),
	define("models/game/tutorial", ["application", "models/game/abstract"], function (e, t) {
		var n = function (e) {
			console.log("game data: ", e),
				t.apply(this, arguments),
				(this.data = e),
				(this.fieldIndexes = []),
				(this.getResult = function () {
					return (
						console.log("getResult from model"),
						{
							usedWords: this.foundWordsResults,
							scores: this.resultScores,
						}
					);
				});
		};
		return (
			(n.prototype.getFirstTip = function (e) {
				return (
					++this.tipCount,
					this.tipExclude.push(word),
					{
						word: e.word,
						indexes: e.indexes,
					}
				);
			}),
			n
		);
	}),
	define("text!screens/tutorial/game.html!strip", [], function () {
		return '    \n<div id="gameSplash" class="l-game-i"></div>\n\n<div class="b-game l-game">\n\n    <div class="l-game__top">\n\n        <div class="b-game__head">\n            <div class="b-game__head-i">\n                <div class="b-game__head__points">\n                    <i class="b-game__head__points__icon"></i>\n                    <div class="b-game__head__points__label">Очки</div>\n                    <div id="score" class="b-game__head__points-i"></div>\n                </div>\n                <div class="b-game__head__words">\n                    <div class="b-game__head__words__label">Слова</div>\n                    <div class="b-game__head__words-i">\n                        <span id="foundWordsCount" class="b-game__head__words__count">0</span>\n                        /\n                        <span id="fieldWordsCount" class="b-game__head__words__total"></span>\n                    </div>\n                </div>\n                <div class="b-game__head__time">\n                    <i class="b-game__head__time__icon"></i>\n                    <div class="b-game__head__time__label">Время</div>\n                    <div id="timer" class="b-game__head__time-i"></div>\n                </div>\n            </div>\n        </div>\n        <!-- /.b-game__head -->\n\n        <div class="b-game__word">\n            <div id=\'scoreFlag\' class="b-game__word__points" style="display: none">\n                <div id=\'wordScorePreText\' class="b-game__word__points__label">Супер!</div>\n                <div id="wordScore" class="b-game__word__points-i"></div>\n            </div>\n            <span id=\'word\' class="b-game__word-i"></span>\n            <span id=\'wordHint\' class="b-game__word__hint" style="display: none;">\n                <span class="b-game__word__hint__letters">\n                    <span id="wordHintLetters" class="b-game__word__hint__letters-i"></span><span id="wordHintLettersHL" class="b-game__word__hint__letters__hl"></span>\n                </span>\n            </span>\n            <% if(platform == \'desktop\') { %>\n                <div id=\'confirmWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_confirm" style="display: none;"></div>\n                <div id=\'dropWordButton\' class="wordControl b-game__word__ctrl b-game__word__ctrl_cancel" style="display: none;"></div>\n            <% } %>\n        </div>\n        <!-- /.b-game__word -->\n    \n    </div>\n    <!-- /.l-game__top -->\n\n    <div class="b-game__area l-game__area">\n\n        <div class="l-game__field">\n            <div id=\'canvasContainer\' class="b-game__canvas">\n                <canvas id="arrows" style="z-index:1; position:absolute;"></canvas>\n                <canvas id="background" style="z-index:2; position:absolute;"></canvas>\n                <canvas id="cells" style="z-index:3; position:absolute;"></canvas>\n                <canvas id="bonusMask" style="z-index:4; position:absolute; display: none;"></canvas>\n                <canvas id="hand" style="z-index:50; position:absolute;"></canvas>\n            </div>\n            <div id="startContainer" class="b-game__start">\n                <img id="startImage" class="b-game__start-img" src="<%= Application.params.staticUrl %>images/app/game-area-start.png" alt="" />\n            </div>\n        </div>\n        <!-- /.l-game__field -->\n        <div class="l-game__ctrls">\n            <div class="b-game__btn">\n\n                <div id="fakeTipButton" class="b-btn-cheat" style="display: none;">\n                    Подсказка\n                </div>\n                <div id="showTipButton" class="tip b-btn-cheat b-btn-cheat_disabled" style="display: none;">\n                    Подсказка\n                </div>\n\n                <div id="tipCoolDown" class="tip b-btn-cheat b-btn-cheat_timer" style="display: none">\n                    Подсказка\n                    <span id=\'tipCoolDownTimer\' class="b-timer">15</span>\n                </div>\n\n\n                <div class="tutorialTask">\n                    <span class="tutorialTask__text"></span>\n                </div>\n            </div>\n        </div>\n        <!-- /.l-game__ctrls -->\n\n        <div id="tutorialGameOnboarding" class="tutorialOnboarding tutorialOnboarding_game">\n            <div class="tutorialOnboarding__layout">\n                <div class="tutorialOnboarding__content">\n                    <div class="tutorialOnboarding__elephant"></div>\n                    <div class="tutorialOnboarding__grass1"></div>\n                    <div class="tutorialOnboarding__grass2"></div>\n                    <div class="tutorialOnboarding__grass3"></div>\n                    <div class="tutorialOnboarding__grass4"></div>\n                    <div class="tutorialOnboarding__text"></div>\n                </div>\n            </div>\n        </div>\n        <!-- /.tutorialOnboarding -->\n\n    </div>\n    <!-- /.b-game__area l-game__area -->\n\n</div>\n<!-- /.b-game .l-game -->\n\n<div class="tutorialTopCover tutorialTopCover_game"></div>\n<div class="tutorialBtmCover"></div>\n<div id="tutorialCover" class="tutorialCover tutorialCover_game"></div>\n<div id="tutorialScoreCover" class="tutorialCover tutorialCover_score"></div>\n<div id="tutorialTipCover" class="tutorialCover tutorialCover_tip"></div>\n<div id="tutorialTipBtn"></div>\n<img id="tutorialHand" class="tutorialHand tutorialHand_main" src="<%= Application.params.staticUrl %>images/app/tutorial/hand.png" alt="" />\n<% if (scheme == \'test\') { %>\n<a href="#" class="tutorialSkipBtn">Пропустить обучение</a>\n<% } %>';
	}),
	define("text!widgets/tutorial/gameSplash.html!strip", [], function () {
		return '<%\nvar i;\nvar userCustomAvatar = User.get(\'customAvatar\');\n%>\n\n<canvas id="elephant" height="80" style="margin-top:-42px; top: 50%; z-index:1000; position:absolute;"></canvas>\n\n<div class="b-screen-head">\n    <div class="b-screen-head__nav"></div>\n    <div id=\'searchLabel\' class="b-screen-head__title">&nbsp;</div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="b-search">\n\n    <div class="b-search-i">\n\n        <div id=\'userPreview\' class="b-search__you">\n            <div class="b-search__you-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-user">\n                            <% if (userCustomAvatar && userCustomAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < userCustomAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=userCustomAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                            <% } else { %>\n                            <div class="b-user__pic">\n                                <img alt="" src="<%= User.get(\'avatarUrl\') %>" class="b-user__pic-i">\n                            </div>\n                            <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value %>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="b-search__user__data">\n                        <div class="b-search__user__data-i">\n                        	<p class="b-search__user__data__name">Вы</p>\n                        	<p class="b-search__user__data__rank"><%= User.get(\'level\').name %></p>\n                        	<% if(!!User.get(\'loc\')){ %>\n                        	<p class="b-search__user__data__place">\n                        	    <%= User.get(\'loc\') %>\n                        	</p>\n                        	<% } %>\n                        	<% if(!!User.get(\'status\')){ %>\n                        	<p class="b-search__user__data__status">\n                        	    <%= User.get(\'status\') %>\n                        	</p>\n                        	<% } %>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div id=\'versusLabel\' class="b-search__status">\n            <img class="b-search__status__icon" alt="" src="<%= Application.params.staticUrl %>images/app/search-success.png">\n        </div>\n        <div id=\'opponentPreview\' class="b-search__rival">\n            <div class="b-search__rival-i">\n                <div class="b-search__user">\n                    <div class="b-search__user__avatar">\n                        <div class="b-dubina">\n                            <div class="b-dubina__pic">\n                                <img class="b-dubina__pic-i" src="<%= Application.params.staticUrl %>images/app/tutorial/dubina.png" alt="">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="b-search__user__data">\n                        <div class="b-search__user__data-i">\n                        	<p class="b-search__user__data__name">Дубина</p>\n                        	<p class="b-search__user__data__rank">Обучающий бот</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="b-search__splash">\n        <div class="b-search__splash-i">\n            <img class="b-search__splash__loader" src="<%= Application.params.staticUrl %>images/app/tournament-splash-loader.gif" alt="">\n            <div class="b-search__splash__text" id="adviceContainer"></div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"widgets/tutorial/gameSplash",
		[
			"widget",
			"application",
			"models/appState",
			"models/user",
			"text!widgets/tutorial/gameSplash.html!strip",
			"widgets/splash/elephant",
			"widgets/splash/advice",
			"tweenMax",
		],
		function (e, t, n, r, i, s, o) {
			var u = e.extend({
				isPreviewAnimationComplete: !1,
				el: "#gameSplash",
				initialize: function (e) {
					var n = this;
					(this.params = e),
						(this.viewParam = {
							User: r,
							Application: t,
						}),
						(this.animTL = new TimelineMax({
							onComplete: function () {
								(n.isPreviewAnimationComplete = !0), n.trigger("previewAnimationComplete");
							},
						})),
						(this.template = _.template(i));
				},
				startAnimation: function () {
					this.isPreviewAnimationComplete
						? (TweenMax.to($("#versusLabel"), 0.4, {
								opacity: 0,
						  }),
						  (this.elephant = new s({
								canvas: $("#elephant")[0],
						  })),
						  this.listenTo(this.elephant, "complete", function () {
								this.trigger("animationComplete");
						  }))
						: this.listenTo(this, "previewAnimationComplete", function () {
								this.startAnimation();
						  });
				},
				initializeWidgets: function () {
					this.widgets.advice = new o({
						el: "#adviceContainer",
					});
				},
				afterRender: function () {
					$("#elephant").attr("width", $(".l-wrapper-i").width()),
						this.animTL
							.from($("#userPreview"), 0.5, {
								top: "-600px",
							})
							.from($("#opponentPreview"), 0.5, {
								top: "600px",
							})
							.from(
								$("#searchLabel"),
								0.4,
								{
									opacity: 0,
								},
								"-=0.5"
							),
						t.methods.play("bomb");
				},
			});
			return u;
		}
	),
	define("widgets/tutorial/sprite", [], function () {
		var e = function (e) {
			_.extend(this, e);
		};
		return (
			(e.prototype.draw = function (e) {
				var e = _.extend(
						{
							x: this.x,
							y: this.y,
							frame: this.frame,
						},
						e || {}
					),
					t = e.floor ? Math.floor(e.x) : e.x,
					n = e.floor ? Math.floor(e.y) : e.y;
				this.context.drawImage(
					this.resource,
					0,
					0,
					this.width,
					this.height,
					t,
					n,
					Math.floor(this.width / 1),
					Math.floor(this.height / 1)
				);
			}),
			e
		);
	}),
	define(
		"widgets/tutorial/hand",
		["canvasWidget", "application", "widgets/tutorial/sprite", "params"],
		function (e, t, n, r) {
			var i = e.extend({
				waitTime: 0,
				currentWaitTime: 0,
				stopTime: !1,
				cX: r.cell.x,
				cY: r.cell.y,
				velocity: {
					basic: 4.2,
					fast: 10,
					x: 0,
					y: 0,
				},
				position: {
					x: 0,
					y: 0,
				},
				stop: !0,
				initialize: function (e) {
					var r = this;
					(this.canvas = $("#hand")),
						(this.canvasSize = this.canvas[0].width),
						(this.ctx = this.canvas[0].getContext("2d")),
						(this.mouseSprite = new n({
							context: this.ctx,
							resource: Resources.get(t.params.staticUrl + "images/app/tutorial/hand_field.png"),
							width: 153,
							height: 142,
							frame: 0,
						}));
				},
				checkInterval: function (e, t) {
					var n = t[0] < t[1] ? t[0] : t[1],
						r = t[0] < t[1] ? t[1] : t[0];
					return n <= e && e <= r;
				},
				executeRoute: function (e) {
					console.log("obj: ", e),
						(this.type = e.type),
						this.type == "swipe" ? (this.mouseSprite.frame = 1) : (this.mouseSprite.frame = 0),
						(this.route = e.route),
						(this.velocityType = e.velocity ? e.velocity : "basic"),
						(this.currentRoutePoint = 0),
						(this.curX = this.position.x = this.route[0][0]),
						(this.curY = this.position.y = this.route[0][1]),
						(this.stop = !1),
						this.render();
				},
				clickStepComplete: function () {
					this.stopTime
						? ((this.currentWaitTime = Date.now() - this.stopTime),
						  this.currentWaitTime > this.waitTime &&
								((this.stopTime = !1),
								(this.mouseSprite.frame = 0),
								(this.currentWaitTime = 0),
								this.moveToNextStep()))
						: ((this.mouseSprite.frame = 1),
						  this.trigger("stepComplete", this.currentRoutePoint),
						  (this.stopTime = Date.now()));
				},
				swipeStepComplete: function () {
					this.moveToNextStep();
				},
				moveToNextStep: function () {
					if (this.currentRoutePoint == this.route.length - 1) {
						this.stop = !0;
						return;
					}
					(this.curX = this.route[this.currentRoutePoint][0]),
						(this.curY = this.route[this.currentRoutePoint][1]),
						(this.position = {
							x: this.curX,
							y: this.curY,
						}),
						this.currentRoutePoint++,
						(this.nextX = this.route[this.currentRoutePoint][0]),
						(this.nextY = this.route[this.currentRoutePoint][1]);
					var e =
							this.nextX - this.curX == 0
								? 0
								: this.nextX - this.curX > 0
								? this.velocity[this.velocityType]
								: -this.velocity[this.velocityType],
						t =
							this.nextY - this.curY == 0
								? 0
								: this.nextY - this.curY > 0
								? this.velocity[this.velocityType]
								: -this.velocity[this.velocityType],
						n = e,
						r = e !== 0 ? (e * (this.nextY - this.curY)) / (this.nextX - this.curX) : t;
					(this.velocity.x = n),
						(this.velocity.y = r),
						console.warn("create new velocity", this.velocity);
				},
				calculatePosition: function () {
					this.type == "swipe" &&
						this.currentRoutePoint !== this.lastSwipeTiggeredStep &&
						((this.checkInterval(this.position.x, [
							this.nextX + (this.cX * 0.9) / 2,
							this.nextX - (this.cX * 0.9) / 2,
						]) &&
							this.checkInterval(this.position.y, [
								this.nextY + (this.cY * 0.9) / 2,
								this.nextY - (this.cY * 0.9) / 2,
							])) ||
							this.currentRoutePoint == 0) &&
						((this.lastSwipeTiggeredStep = this.currentRoutePoint),
						this.trigger("stepComplete", this.currentRoutePoint)),
						this.checkIsStepCompletePosition()
							? this[this.type + "StepComplete"]()
							: ((this.position.x += this.velocity.x), (this.position.y += this.velocity.y));
				},
				checkIsStepCompletePosition: function () {
					return this.currentRoutePoint !== 0
						? this.checkInterval(this.position.x, [
								this.nextX + this.velocity.x / 2,
								this.nextX - this.velocity.x / 2,
						  ]) &&
								this.checkInterval(this.position.y, [
									this.nextY + this.velocity.y / 2,
									this.nextY - this.velocity.y / 2,
								])
						: !0;
				},
				update: function () {
					return this.stop || this.calculatePosition(), this;
				},
				draw: function () {
					return (
						this.stop ||
							(this.ctx.clearRect(0, 0, this.canvasSize, this.canvasSize),
							this.mouseSprite.draw({
								x: this.position.x,
								y: this.position.y,
							})),
						this
					);
				},
				endRender: function () {
					var e = this;
					setTimeout(function () {
						e.ctx.clearRect(0, 0, e.canvasSize, e.canvasSize);
					}, 200),
						setTimeout(function () {
							e.trigger("routeComplete");
						}, 900);
				},
			});
			return i;
		}
	),
	define("widgets/fields/tutorial", ["widgets/fields/abstract", "application"], function (e, t) {
		var n = e.extend({
			initialize: function (e) {
				this.afterInitialize(e), this.render();
			},
			getTipCDTime: function () {
				return 5;
			},
			touchStart: function (e) {
				this.scoreFlagView.hide(), (this.gesture = !0), this.makeGesture(e.touches[0]);
			},
			touchEnd: function (e) {
				this.endGesture();
			},
			touchMove: function (e) {
				e.preventDefault(), this.gesture && this.makeGesture(e.touches[0]);
			},
			addEvents: function () {
				this.container.removeEventListener("mousedown", this.mouseDown),
					this.container.removeEventListener("mousemove", this.mouseMove),
					document.removeEventListener("mouseup", this.mouseUp),
					this.container.removeEventListener("touchstart", this.touchStart),
					this.container.removeEventListener("touchmove", this.touchMove),
					this.container.removeEventListener("touchend", this.touchEnd),
					document.addEventListener("mousedown", this.mouseDown, !1),
					document.addEventListener("mousemove", this.mouseMove, !1),
					document.addEventListener("mouseup", this.mouseUp, !1),
					document.addEventListener("touchstart", this.touchStart, !1),
					document.addEventListener("touchmove", this.touchMove, {
						passive: !1,
					}),
					document.addEventListener("touchend", this.touchEnd, !1);
			},
			endRender: function () {
				var e = this,
					t = this.fieldParams.size;
				document.removeEventListener("mousedown", this.mouseDown),
					document.removeEventListener("mousemove", this.mouseMove),
					document.removeEventListener("mouseup", this.mouseUp),
					document.removeEventListener("touchstart", this.touchStart),
					document.removeEventListener("touchmove", this.touchMove),
					document.removeEventListener("touchend", this.touchEnd),
					this.ctx.cells.clearRect(0, 0, t, t),
					this.ctx.arrows.clearRect(0, 0, t, t),
					this.listenTo(e, "backgroundRemoved", function () {
						e.timer.stop(!0),
							e.tipEvailableTimer.stop(!0),
							e.tipAlertTimer.stop(!0),
							e.screen.sendResult();
					}),
					this.removeBackground();
			},
			mouseDown: function (t) {
				this.screen.currentStep != 5 && e.prototype.mouseDown.apply(this, arguments);
			},
			afterCheckWord: function () {
				this.screen.currentStep != 5 && e.prototype.afterCheckWord.apply(this, arguments);
			},
			makeGesture: function (t) {
				this.enable &&
					(clearTimeout(this.screen.timer),
					(this.screen.onboardingShown || this.screen.handRouteIsActive) &&
						this.screen.hideOnboarding(t),
					e.prototype.makeGesture.apply(this, arguments));
			},
			endGesture: function (t) {
				if (
					this.screen.currentStep == 2 ||
					this.screen.currentStep == 4 ||
					this.screen.currentStep == 6
				)
					if (this.screen.gameModel.getWord().word != this.screen.word.word)
						return this.dropWord(), !1;
				this.enable && e.prototype.endGesture.apply(this, arguments);
			},
			enterWord: function () {
				e.prototype.endGesture.apply(this, arguments);
			},
			clear: function () {
				var e = this.fieldParams.size;
				(this.heldCells = []),
					(this.tipCells = []),
					(this.eventualCells = this.allCells),
					this.controls.hide(),
					(this.isGestureEnded = !0),
					this.ctx.cells.clearRect(0, 0, e, e),
					this.ctx.arrows.clearRect(0, 0, e, e);
			},
			showBonusMask: function () {
				var e = this.fieldParams,
					n,
					r,
					i,
					s = e.cell.x,
					o = e.cell.y,
					u = e.cellImg.x,
					a = e.cellImg.y,
					f = e.shift;
				this.ctx.bonusMask = $("#bonusMask")[0].getContext("2d");
				for (var l = 0; l < this.cellArray.length; l++)
					(n = this.cellArray[l]),
						n.bonus ||
							((r = n.position % 5),
							(i = Math.floor(n.position / 5)),
							this.ctx.bonusMask.drawImage(
								Resources.get(t.params.staticUrl + "images/app/field/cellMask.png"),
								0,
								0,
								u,
								a,
								Math.floor(r * s) + f,
								Math.floor(i * o) + f,
								s,
								o
							));
			},
			showFistTip: function (e) {
				var n = this.model.getFirstTip(e);
				console.log("first tutorial tip: ", n),
					(this.tipWord = n.word),
					(this.tipCells = n.indexes),
					console.log("tipCells: ", this.tipCells),
					t.methods.play("tip_click"),
					this.tipEnable(this.tipWord),
					this.tipOnCoolDown(this);
			},
			controls: {
				show: function () {},
				hide: function () {},
			},
			tipAlert: function () {
				return !1;
			},
		});
		return n;
	}),
	define(
		"screens/tutorial/game",
		[
			"widget",
			"gate",
			"application",
			"controllers/gameanalytics",
			"models/appState",
			"models/game/tutorial",
			"controllers/analytic",
			"models/tutorial",
			"models/onboarding",
			"text!screens/tutorial/game.html!strip",
			"widgets/tutorial/gameSplash",
			"widgets/tutorial/hand",
			"widgets/fields/tutorial",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = e.extend({
				el: "#screenContainer",
				template: _.template(f),
				events: {
					"click #showTipButton": "showTip",
					"click #tutorialCover": "hideOnboarding",
					"click #tutorialTipBtn": "showTutorialTip",
					"click .tutorialSkipBtn": "skipTutorial",
				},
				currentStep: 0,
				completedStep: 0,
				onboardingShown: !1,
				firstTip: !0,
				initialize: function (e) {
					o.pageview("Туториал : поле"),
						(this.viewParam = {
							Application: n,
						}),
						(this.roundNumber = u.get("currentRound") - 1),
						a.setTutorialStatus(this.roundNumber),
						(this.game = u.get("game")[this.roundNumber]);
				},
				initializeWidgets: function () {},
				afterRender: function () {
					function e() {
						var e = $(".l-game__field"),
							t = e.width(),
							n = e.height(),
							r = t <= n ? t : n,
							i = 410,
							s = i;
						return r < i && (s = r), s;
					}
					(this.gameModel = new s(this.game.gameData)),
						(this.gameSplash = new l()),
						this.gameSplash.startAnimation();
					var t = e(),
						n = 2,
						r = 0.08,
						i = Math.ceil((t * r) / 2),
						o = Math.floor((t - i * 2) / 5) * n;
					(this.cellSize = o),
						$(".l-screen").addClass("l-screen_game"),
						$("#canvasContainer").css({
							width: t,
							height: t,
						}),
						$("#canvasContainer canvas")
							.attr({
								width: t * n,
								height: t * n,
							})
							.css({
								width: t,
								height: t,
							}),
						$(".b-game__btn").css("width", t - t * r),
						this.listenTo(this.gameSplash, "animationComplete", function () {
							console.log("gameSplash animationComplete"), $(this.gameSplash.el).remove();
							var e = 120;
							(this.field = new h({
								model: this.gameModel,
								screen: this,
								roundTime: e,
								fieldSize: t,
							})),
								$("#fieldWordsCount").text(this.gameModel.getFieldWordsCount()),
								$(".b-game__head__words").fadeIn(),
								u.get("currentRound") == 1
									? ((this.hand = new c()),
									  this.listenTo(this.field, "backgroundComplete", this.nextStep, this))
									: ($("#showTipButton").show(), (this.field.enable = !0));
						}),
						this.gameSplash.render(),
						console.log("gameSplash render");
				},
				save: function () {
					var e = this.gameModel.getResult();
					console.log("currentResult: ", e),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				sendResult: function () {
					t.tutorialGameResult(this.roundNumber, this.gameModel.getResult()),
						this.listenToOnce(u, "change", function () {
							$(".l-screen").removeClass("l-screen_game"),
								i.setScreen({
									screen: "tutorialStats",
								});
						});
				},
				renderPopup: function (e) {
					$("#popup").html(""), $("#cover").hide();
				},
				showTip: function () {
					if (!this.field.isBackgroundComplete) return !1;
					this.firstTip && u.get("currentRound") == 1
						? ((this.firstTip = !1),
						  this.field.showFistTip(this.game.hints.tip_1),
						  $("#showTipButton").addClass("b-btn-cheat_disabled"),
						  r.sendDesignEvent("tutorial:Action:4_first_hint"))
						: this.currentStep != 6 &&
						  (this.field.showTip(), r.sendDesignEvent("tutorial:Action:use_hint"));
				},
				skipTutorial: function () {
					t.onboardingView({
						skipped: ["tutorial"],
					}),
						a.setTutorialStatus(0),
						i.setScreen({
							screen: "index",
						}),
						$(".l-screen").removeClass("l-screen_game");
				},
				nextStep: function () {
					console.log("nexStep");
					var e = this;
					(this.gaAction = ""),
						this.timer && clearTimeout(this.timer),
						this.field.clear(),
						this.field.scoreFlagView.hide(),
						(this.hand.stop = !0),
						this.currentStep != this.completedStep && this.hideOnboarding(),
						(this.handRouteIsActive = !1),
						(this.handRouteIndex = 0),
						this.currentStep++;
					switch (this.currentStep) {
						case 1:
							this.word = this.game.hints.word_1;
							break;
						case 2:
							(this.word = this.game.hints.word_2), (this.gaAction = "2_first_word");
							break;
						case 4:
							(this.word = this.game.hints.word_3), (this.gaAction = "3_second_word");
							break;
						case 6:
							(this.word = this.game.hints.tip_1), (this.gaAction = "5_third_word");
					}
					this.showOnboarding(),
						this["step" + this.currentStep](),
						$("#foundWordsCount").text(this.gameModel.getFoundWordsCount());
				},
				step1: function () {
					var e = this;
					(this.field.enable = !1), (this.handRouteIsActive = !0);
					var t = this.word,
						n = this.getRoute(this.word.indexes);
					this.listenTo(this.hand, "stepComplete", function (e) {
						this.field.focusCell(t.indexes[e]);
					}),
						this.listenToOnce(this.hand, "routeComplete", function () {
							this.stopListening(this.hand),
								(this.field.enable = !0),
								this.field.endGesture(),
								(this.field.enable = !1),
								this.field.clear(),
								$("#word").html(""),
								(this.timer = setTimeout(e.nextStep.bind(e), 1500)),
								$("#tutorialCover").show();
						}),
						setTimeout(function () {
							e.executeHandRoute(n);
						}, 2e3),
						this.field.timer.stop(!0);
				},
				step2: function () {
					var e = this;
					(this.field.enable = !0),
						this.field.timer.start({
							count: this.field.roundTimeRemaining,
						}),
						(this.onboardingTimer = setTimeout(e.hideOnboarding.bind(e), 5e3));
				},
				step3: function () {
					var e = this;
					e.field.timer.stop(!0),
						(this.field.enable = !1),
						$(".tutorialOnboarding__text").html(
							'Супер! <span class="tutorialOnboarding__hl">БОНУСНЫЕ БУКВЫ</span> увеличивают получаемые очки'
						),
						this.field.showBonusMask(),
						$("#bonusMask")
							.show()
							.css({
								opacity: 0,
							})
							.delay(300)
							.animate(
								{
									opacity: 0.8,
								},
								800,
								function () {
									$(this)
										.delay(3e3)
										.animate(
											{
												opacity: 0,
											},
											500,
											function () {
												$(this).hide(), $("#tutorialCover").show();
											}
										);
								}
							),
						(this.timer = setTimeout(e.nextStep.bind(e), 1e4));
				},
				step4: function () {
					var e = this;
					clearTimeout(this.timer),
						(this.field.enable = !0),
						this.field.timer.start({
							count: this.field.roundTimeRemaining,
						}),
						(this.onboardingTimer = setTimeout(e.hideOnboarding.bind(e), 5e3));
				},
				step5: function () {
					var e = this;
					clearTimeout(this.timer),
						(this.field.enable = !1),
						this.field.timer.stop(!0),
						$("#scoreFlag").show(),
						this.showScoreCover(),
						(this.timer = setTimeout(e.nextStep.bind(e), 4e3));
				},
				step6: function () {
					var e = this;
					this.field.timer.stop(!0),
						$("#fakeTipButton").fadeIn(),
						(this.timer = setTimeout(e.showTipCover, 500)),
						(this.onboardingTimer = setTimeout(e.showTutorialTip.bind(e), 1e4));
				},
				step7: function () {
					var e = this;
					this.field.timer.stop(!0),
						(this.field.enable = !1),
						this.field.roundTimeRemaining < 45 &&
							((this.field.roundTimeRemaining = 45),
							$("#timer").text(this.field.getHRTime(this.field.roundTimeRemaining))),
						$(".tutorialOnboarding__text").html(
							'Класс! Поищи ещё слова самостоятельно. У тебя осталось <span class="tutorialOnboarding__hl">' +
								this.field.getHRTime(this.field.roundTimeRemaining) +
								'</span> до конца игры. Если будет сложно — используй <span class="tutorialOnboarding__hl">ПОДСКАЗКУ</span>'
						),
						(this.onboardingTimer = setTimeout(e.hideOnboarding.bind(e), 1e4));
				},
				showOnboarding: function () {
					var e = this;
					(this.onboardingShown = !0), console.log("showOnboarding", this.currentStep);
					switch (this.currentStep) {
						case 1:
							setTimeout(function () {
								$(".tutorialOnboarding__text").html(
									"Вводи слова, соединяя буквы в любых направлениях, вот так."
								),
									$(".tutorialTopCover").fadeIn(),
									$(".tutorialBtmCover").fadeIn(),
									$("#tutorialGameOnboarding").stop(!0).fadeIn();
							}, 200);
							break;
						case 2:
							setTimeout(function () {
								$(".tutorialOnboarding__text").html(
									'Попробуй сам! Найди слово <span class="tutorialOnboarding__hl">' +
										e.word.word +
										"</span>"
								),
									$(".tutorialTask")
										.find(".tutorialTask__text")
										.html('Найди слово <span class="tutorialTask__hl">' + e.word.word + "</span>"),
									$("#tutorialGameOnboarding").stop(!0, !0).show(),
									$("#tutorialCover").show();
							}, 500);
							break;
						case 3:
							$(".tutorialTask").hide(),
								$(".tutorialBtmCover").show(),
								$("#tutorialGameOnboarding").stop(!0).show();
							break;
						case 4:
							setTimeout(function () {
								$(".tutorialOnboarding__text").html(
									'Введи слово <span class="tutorialOnboarding__hl">' +
										e.word.word +
										"</span>, оно проходит через бонус ×2"
								),
									$(".tutorialTask")
										.find(".tutorialTask__text")
										.html('Найди слово <span class="tutorialTask__hl">' + e.word.word + "</span>"),
									$("#tutorialGameOnboarding").stop(!0, !0).show(),
									$("#tutorialCover").show();
							}, 500);
							break;
						case 5:
							$(".tutorialTask").hide(),
								$(".tutorialOnboarding__text").html("Отлично, в 2 раза больше очков!"),
								$("#tutorialGameOnboarding").stop(!0, !0).show();
							break;
						case 6:
							setTimeout(function () {
								$(".tutorialOnboarding__text").html(
									'В игре есть <span class="tutorialOnboarding__hl">ПОДСКАЗКА</span>. Нажми на неё, чтобы подсветить одно из лучших слов на поле.'
								),
									$("#tutorialGameOnboarding")
										.removeClass("tutorialOnboarding_game")
										.addClass("tutorialOnboarding_tip")
										.stop(!0, !0)
										.show(),
									$("#tutorialTipBtn").show();
							}, 500);
							break;
						case 7:
							$(".tutorialBtmCover").show(),
								$(".tutorialTopCover").show(),
								$("#tutorialCover").show(),
								$("#tutorialGameOnboarding")
									.addClass("tutorialOnboarding_game")
									.removeClass("tutorialOnboarding_tip")
									.stop(!0, !0)
									.show();
					}
				},
				hideOnboarding: function (e) {
					console.log("hideOnboarding", this.currentStep);
					var t = this,
						n = e ? !0 : !1;
					switch (this.currentStep) {
						case 1:
							$(".tutorialTopCover").hide(),
								$("#tutorialGameOnboarding").fadeOut(150),
								n && ((this.completedStep = 1), this.nextStep());
							break;
						case 2:
							clearTimeout(this.onboardingTimer),
								this.onboardingShown &&
									($("#tutorialCover").hide(),
									$(".tutorialBtmCover").fadeOut(150),
									$("#tutorialGameOnboarding").fadeOut(150),
									$(".tutorialTask").fadeIn(200)),
								this.handRouteStart("fast"),
								setTimeout(function () {
									t.onboardingShown = !1;
								}, 200);
							break;
						case 3:
							this.stopListening(this.field, "word"),
								$("#tutorialCover").hide(),
								$("#tutorialGameOnboarding").fadeOut(150),
								n && ((this.completedStep = 3), this.nextStep());
							break;
						case 4:
							clearTimeout(this.onboardingTimer),
								this.onboardingShown &&
									($("#tutorialCover").hide(),
									$(".tutorialBtmCover").fadeOut(150),
									$("#tutorialGameOnboarding").fadeOut(150),
									$(".tutorialTask").fadeIn(150)),
								this.handRouteStart("fast");
							break;
						case 5:
							$("#tutorialScoreCover").fadeOut(150),
								$("#tutorialGameOnboarding").fadeOut(150),
								t.field.scoreFlagView.hide(),
								this.field.dropWord();
							break;
						case 6:
							clearTimeout(this.timer),
								clearTimeout(this.handCursorTimer),
								this.handRouteStart("fast");
							break;
						case 7:
							clearTimeout(this.timer),
								clearTimeout(this.onboardingTimer),
								(this.onboardingShown = !1),
								(this.handRouteIsActive = !1),
								this.stopListening(this.field, "word"),
								$("#showTipButton").removeClass("b-btn-cheat_disabled"),
								this.field.timer.start({
									count: this.field.roundTimeRemaining,
								}),
								(this.field.enable = !0),
								$("#tutorialCover").hide(),
								$(".tutorialTopCover").fadeOut(150),
								$(".tutorialBtmCover").fadeOut(150),
								$("#tutorialGameOnboarding").fadeOut(150),
								(this.completedStep = 7);
					}
				},
				showTutorialTip: function () {
					var e = this;
					clearTimeout(this.onboardingTimer),
						clearTimeout(this.handCursorTimer),
						$("#tutorialGameOnboarding").stop(!0).fadeOut(150),
						$("#tutorialTipCover").stop(!0).fadeOut(150),
						$("#tutorialHand").stop(!0).fadeOut(150),
						$("#tutorialTipBtn").hide(),
						$("#showTipButton").show(),
						$("#fakeTipButton").hide(),
						(this.field.enable = !0),
						this.field.timer.start({
							count: this.field.roundTimeRemaining,
						}),
						this.showTip(),
						(this.timer = setTimeout(function () {
							$(".tutorialOnboarding__text").html("Введи выделенное слово."),
								$("#tutorialGameOnboarding")
									.addClass("tutorialOnboarding_game")
									.removeClass("tutorialOnboarding_tip")
									.stop(!0, !0)
									.show(),
								$(".tutorialBtmCover").fadeIn(150),
								setTimeout(function () {
									$("#tutorialGameOnboarding").stop(!0, !0).fadeOut(150),
										$(".tutorialBtmCover").fadeOut(150);
								}, 2e3),
								(e.handCursorTimer = setTimeout(function () {
									e.handRouteStart("fast");
								}, 2e3));
						}, 4e3));
				},
				showScoreCover: function () {
					var e = $(".b-game__word__points"),
						t,
						n,
						r,
						i,
						s = $("#tutorialScoreCover"),
						o,
						u,
						a,
						f,
						l = $(".l-wrapper-i"),
						c = l.offset().left,
						h = l.offset().top;
					(t = e.width()),
						(n = e.height()),
						(r = e.offset().left),
						(i = e.offset().top),
						(o = t),
						(u = n),
						(f = r + t / 2 - c),
						(a = i + n / 2 - h),
						s
							.css({
								background:
									"radial-gradient(" +
									o +
									"px " +
									u +
									"px at " +
									f +
									"px " +
									a +
									"px, rgba(0, 21, 130, 0) 52.08%, #001582 100%)",
							})
							.fadeIn();
				},
				showTipCover: function () {
					var e = $(".l-wrapper-i"),
						t = e.offset().left,
						n = e.offset().top,
						r = e.height(),
						i = $("#fakeTipButton"),
						s,
						o,
						u,
						a,
						f = $("#tutorialTipCover"),
						l,
						c,
						h,
						p;
					(p = $("#tutorialHand")),
						(s = i.width()),
						(o = i.height()),
						(u = i.offset().left - t),
						(a = i.offset().top - n),
						(l = s / 2),
						(c = o),
						(h = ((a + o / 2) / r) * 100),
						f
							.css({
								background:
									"radial-gradient(" +
									l +
									"px " +
									c +
									"px at " +
									50 +
									"% " +
									h +
									"%, rgba(0, 21, 130, 0) 52.08%, #001582 100%)",
							})
							.fadeIn(200),
						p.css({
							left: u + s / 2,
							top: a - 52,
						}),
						(this.handCursorTimer = setTimeout(function () {
							p.fadeIn(300);
						}, 300)),
						$("#tutorialTipBtn").css({
							top: a,
							left: u,
							width: s,
							height: o,
						});
				},
				getRoute: function (e) {
					var t = [];
					for (var n = 0; n < e.length; n += 1)
						t.push([
							this.cellSize * (0.5 + (e[n] % 5)),
							this.cellSize * (0.5 + Math.floor(e[n] / 5)),
						]);
					return t;
				},
				handRouteIsActive: !1,
				handRouteIndex: 0,
				handRouteStart: function () {
					var e = this,
						t,
						n = this.currentStep;
					clearTimeout(this.handCursorTimer),
						(this.handRouteIsActive = !0),
						this.stopListening(this.hand, "routeComplete"),
						this.stopListening(this.field, "word"),
						(t = this.word),
						(this.handCursorTimer = setTimeout(function () {
							e.executeHandRoute(e.getRoute(t.indexes), "fast");
						}, 4e3)),
						this.listenTo(this.field, "word", function (i) {
							i.word == t.word &&
								(this.stopListening(this.hand, "routeComplete stepComplete"),
								(this.hand.stop = !0),
								(this.completedStep = n),
								(this.handRouteIsActive = !1),
								clearTimeout(e.handCursorTimer),
								this.gaAction && r.sendDesignEvent("tutorial:Action:" + this.gaAction),
								this.nextStep());
						}),
						this.listenTo(this.hand, "stepComplete", function (e) {
							this.handRouteIndex == 3 && this.field.focusCell(t.indexes[e]);
						}),
						this.listenTo(this.hand, "routeComplete", function () {
							this.handRouteIndex < 3
								? (this.handCursorTimer = setTimeout(function () {
										e.executeHandRoute(e.getRoute(t.indexes), "fast");
								  }, 4e3))
								: (clearTimeout(this.handCursorTimer),
								  this.stopListening(this.hand),
								  (this.field.enable = !0),
								  this.field.enterWord(),
								  this.field.clear(),
								  $("#word").html(""));
						});
				},
				executeHandRoute: function (e, t) {
					if (!this.handRouteIsActive) return !1;
					this.handRouteIndex++,
						this.handRouteIndex == 3 && (this.field.enable = !1),
						this.currentStep != 6 && this.field.clear(),
						this.hand.executeRoute({
							route: e,
							type: "swipe",
							velocity: t || "",
						});
				},
			});
			return p;
		}
	),
	define("text!widgets/tutorial/roundResult.html!strip", [], function () {
		return '\n<div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n    <p class="b-result__points__label">Очки</p>\n\n    <div class="b-result__points-i">\n        <div id=\'userScores\' style="width: 50%;" class="userPointsAnim b-result__points__you">\n            <div class="b-result__points__you-i">\n                <div id=\'userScoresValue\' class="b-result__points__you__data">\n                    <%= results[userId].scores %>\n                </div>\n            </div>\n        </div>\n        <div id=\'opponentScores\' style="width: 50%;" class="opponentPointsAnim b-result__points__rival">\n            <div class="b-result__points__rival-i">\n                <div id=\'opponentScoresValue\' class="b-result__points__rival__data">\n                    <%\n                    var opponentScore;\n                    opponentScore = results[opponentId].scores;\n                    print(opponentScore);\n                    %>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- /.b-result__points -->\n\n    <div class="b-result__words b-result__words_lose"> <!-- b-result__words_win -->\n        <p class="b-result__words__label">Слова</p>\n\n        <div class="b-result__words-i">\n            <div class="b-result__words__you">\n                <%= results[userId].usedWords.length %>\n            </div>\n            <div class="b-result__words__rival">\n                <%= results[opponentId].usedWords.length %>\n            </div>\n        </div>\n        <div class="b-result__words__tabs">\n            <div class="b-result__words__tabs-i">\n                <div class="showFoundWordsButton soundingButton b-result__words__tabs__item b-result__words__tabs__item_act">\n                        <div class="b-result__words__tabs__item-i">Найденные слова</div>\n                </div>\n                <div class="showAllWordsButton soundingButton b-result__words__tabs__item b-result__words__tabs__item_all <%= (User.checkProVersion()) ? \'\' : \'b-result__words__tabs__item_lock\' %>">\n                    <div class="b-result__words__tabs__item-i">Все слова (<%=allWords.length%>)</div>\n                </div>\n            </div>\n        </div>\n        <div class="b-result__words__list">\n            <div class="foundWordsList b-result__words__list-i">\n                <%\n                if (words.length > 0) {\n                    for (var i = 0, l = words.length; i < l; i++) {\n                        var word = words[i];\n                        var userScore = word[1].userScore ? word[1].userScore : \'-\';\n                        var opponentScore = word[1].opponentScore ? word[1].opponentScore : \'-\';\n                        print(\'<div class="b-result__words__list__item">\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_you">\' + userScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_rival">\' + opponentScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item-i">\' +\n                        \'<span class="b-result__words__list__item__data">\' + word[0] + \'</span>\' +\n                        \'</div>\' +\n                        \'</div>\');\n                    }\n                } else {\n                    print(\'<div class="b-result__words__list__empty">Ты не нашёл слов!</div>\')\n                }\n                %>\n            </div>\n            <div class="allWordsList b-result__words__list-i" style="display: none">\n                <%\n                if (!HideAllWords) {\n                    for (var i = 0, l = allWords.length; i < l; i++) {\n                        var word = allWords[i];\n                        print(\'<div class="b-result__words__list__item">\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_you">\' + word.userScore + \'</div>\' +\n                        \'<div class="b-result__words__list__item__points b-result__words__list__item__points_rival">\' + word.points + \'</div>\' +\n                        \'<div class="b-result__words__list__item-i">\' +\n                        \'<span class="b-result__words__list__item__data">\' + word.word + \'</span>\' +\n                        \'</div>\' +\n                        \'</div>\');\n                    }\n                }\n                %>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<!-- /.b-result__words -->\n\n<%\nvar currentRound = TutorialModel.get(\'currentRound\');\n%>\n\n<% if (currentRound == 4) { %>\n<div class="b-result__btn b-result__btn_play showResultButton">\n    Смотреть результат\n</div>\n<% } else { %>\n<div class="b-result__btn b-result__btn_play playWithBotButton">\n    Играть <span id="roundNumber"><%=currentRound%></span>-й\n    раунд\n</div>\n<% } %>\n\n<div class="b-result__ctrl b-result__ctrl_alt">\n    <div class="b-result__ctrl__text">или</div>\n    <span class="selectAnotherOpponentButton soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n</div>';
	}),
	define(
		"widgets/tutorial/roundResult",
		[
			"gate",
			"widget",
			"application",
			"social",
			"controllers/gameanalytics",
			"models/appState",
			"models/tutorial",
			"models/onboarding",
			"models/user",
			"models/pvp/result",
			"controllers/analytic",
			"collections/popups",
			"text!widgets/tutorial/roundResult.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h) {
			var p = t.extend({
				template: _.template(h),
				events: {
					"click .playWithBotButton": "playWithBot",
					"click .showAllWordsButton": "showAllWords",
					"click .showFoundWordsButton": "showFoundWords",
					"click .selectAnotherOpponentButton": "selectAnotherOpponent",
				},
				initialize: function (e) {
					(this.params = e),
						(this.roundNumber = this.params.roundNumber),
						(this.ctrlsIsBlocked = !1),
						(this.onboardingShown = !1),
						(this.onboardingTexts = {
							afterRound: {
								1: "В каждой игре 3 раунда. Сыграй еще 2 раунда с ботом, чтобы перейти к настоящей битве!",
								2: "Сыграй финальный раунд!",
								3: "Финал битвы здесь!",
							},
							result: "Поздравляем! Ты победил бота и прошел обучение.",
							resultFull:
								"Поздравляем. Твоя награда — 5 бесплатных подсказок! Используй их в играх с соперниками.",
						}),
						(this.viewParam = {
							Application: n,
							User: a,
							TutorialModel: o,
							HideAllWords: !a.checkProVersion(),
						}),
						(this.id = "#tutorialRound" + this.roundNumber),
						this.setElement($(this.id));
					var t = o.get("game")[this.roundNumber - 1],
						r = {
							gameData: t.gameData,
							results: t.results,
							opponentPlayer: {
								id: "dubina",
							},
							serverPlayer: {
								id: a.get("id"),
							},
						};
					(this.model = new f()),
						this.model.setWithParsing(r),
						this.renderRoundResult(),
						this.delegateEvents(this.events);
				},
				render: function () {},
				renderRoundResult: function () {
					$("#roundResultButtonsDiv").show();
					var e = this,
						t = this.template,
						n = this.model instanceof Backbone.Model ? this.model.toJSON() : this.model;
					this.$el.html(t(_.extend(this.viewParam, n))),
						console.log("round result model: ", n),
						n.userId in n.results &&
							n.opponentId in n.results &&
							this.viewParam.HideAllWords &&
							this.animateScoreBars(n),
						this.params.screen.roundsWithOpenedAllWords.indexOf(this.params.roundNumber) != "-1" &&
							this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_lock");
					var r = o.get("currentRound"),
						i = u.getTutorialStatus(),
						s = o.get("isNecessaryFullGame");
					(i = s && i < 3 && i == this.roundNumber ? i - 1 : i),
						console.log("this.roundNumber: ", this.roundNumber);
					if (r == this.roundNumber + 1 && i != this.roundNumber) {
						this.blockScreenCtrls();
						switch (this.roundNumber) {
							case 1:
								setTimeout(function () {
									e.showTutorialWordsOnboarding();
								}, 1500);
								break;
							case 2:
							case 3:
								setTimeout(function () {
									e.showEndRoundTutorialOnboarding();
								}, 1500);
						}
					}
				},
				blockScreenCtrls: function () {
					(this.ctrlsIsBlocked = !0),
						$(".b-result__head-blocker").show(),
						$(".b-result__round-blocker").show(),
						$("#tutorialMenuCover").show();
				},
				unblockScreenCtrls: function () {
					(this.ctrlsIsBlocked = !1),
						$(".b-result__head-blocker").hide(),
						$(".b-result__round-blocker").hide(),
						$("#tutorialMenuCover").hide();
				},
				animateScoreBars: function (e) {
					var t = this,
						r,
						i = e.results[e.userId].scores + e.results[e.opponentId].scores;
					i > 0 ? (r = (e.results[e.userId].scores / i).toFixed(2)) : (r = 0.5),
						n.methods.play("scores");
					var s = {
						user: 0,
						opponent: 0,
					};
					TweenMax.to(s, 1.25, {
						user: e.results[e.userId].scores,
						onUpdate: function () {
							$(t.id + " #userScoresValue").html(s.user.toFixed(0));
						},
						ease: Linear.easeNone,
					}),
						TweenMax.to(s, 1.25, {
							opponent: e.results[e.opponentId].scores,
							onUpdate: function () {
								$(t.id + " #opponentScoresValue").html(s.opponent.toFixed(0));
							},
							ease: Linear.easeNone,
						}),
						TweenMax.to(this.$("#userScores"), 1.25, {
							width: r * 100 + "%",
						}),
						TweenMax.to(this.$("#opponentScores"), 1.25, {
							width: (1 - r) * 100 + "%",
						});
				},
				playWithBot: function () {
					clearTimeout(this.timer);
					var e = "";
					switch (this.roundNumber) {
						case 1:
							e = "6_play_second_round";
							break;
						case 2:
							e = "7_play_third_round";
					}
					e && i.sendDesignEvent("tutorial:Action:" + e),
						s.setScreen({
							screen: "tutorialGame",
						});
				},
				showAllWords: function () {
					if (this.ctrlsIsBlocked) return !1;
					i.sendDesignEvent("Screen_actions:Result_screen:see_all_words"),
						a.checkProVersion() == 1 || !this.viewParam.HideAllWords
							? (l.event({
									category: "screen",
									action: "Результат игры",
									label: "Все слова",
							  }),
							  this.showAllWordsTab())
							: this.params.screen.roundsWithOpenedAllWords.indexOf(this.params.roundNumber) != "-1"
							? ((this.viewParam.HideAllWords = !1),
							  this.renderRoundResult(),
							  this.showAllWordsTab())
							: n.params.availableSocialRV
							? (c.add({
									type: "videoRewardWords",
							  }),
							  this.listenToOnce(r.ad, "getVideoForWords", function (e) {
									(this.viewParam.HideAllWords = !1),
										this.renderRoundResult(),
										this.showAllWordsTab(),
										this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_lock"),
										this.params.screen.roundsWithOpenedAllWords.push(this.params.roundNumber);
							  }))
							: c.add({
									type: "proVersion",
									params: {
										reason: "allWords",
									},
							  });
				},
				showAllWordsTab: function () {
					if (this.ctrlsIsBlocked) return !1;
					this.$(".showFoundWordsButton").removeClass("b-result__words__tabs__item_act"),
						this.$(".showAllWordsButton").addClass("b-result__words__tabs__item_act"),
						this.$(".foundWordsList").hide(),
						this.$(".allWordsList").show();
				},
				showFoundWords: function () {
					l.event({
						category: "screen",
						action: "Результат игры",
						label: "Найденные слова",
					}),
						i.sendDesignEvent("Screen_actions:Result_screen:see_words_found"),
						this.showFoundWordsTab();
				},
				showFoundWordsTab: function () {
					this.$(".showFoundWordsButton").addClass("b-result__words__tabs__item_act"),
						this.$(".showAllWordsButton").removeClass("b-result__words__tabs__item_act"),
						this.$(".foundWordsList").show(),
						this.$(".allWordsList").hide();
				},
				selectAnotherOpponent: function () {
					if (this.ctrlsIsBlocked) return !1;
					s.setScreen({
						screen: "index",
					});
				},
				showTutorialWordsOnboarding: function () {
					var e = this,
						t = this.roundNumber,
						n = $(".l-result")[0].scrollHeight,
						r = $(".b-result__words__list").eq(t - 1),
						i,
						s,
						o,
						u,
						a = $("#tutorialHand"),
						f,
						l,
						c,
						h,
						p = $(".l-wrapper-i"),
						d = p.offset().left,
						v = p.offset().top;
					$(".l-result")
						.css("paddingBottom", 1)
						.animate(
							{
								scrollTop: n,
							},
							400,
							function () {
								(i = r.width()),
									(s = r.height()),
									(o = r.offset().left),
									(u = r.offset().top),
									(f = i / 2),
									(l = s / 2),
									(c = o + i / 2 - d),
									(h = u + s / 2 - v),
									$("#tutorialWordsCover").css({
										background:
											"radial-gradient(" +
											f +
											"px " +
											l +
											"px at " +
											c +
											"px " +
											h +
											"px, rgba(0, 0, 0, 0) 59.38%, #000000 100%)",
									}),
									a.css({
										left: o + i / 2 - d,
										top: u + s - v - 32,
									});
							}
						),
						$("#tutorialWordsCover").fadeIn(),
						$(".tutorialOnboarding__text").html(
							"Тут можно посмотреть какие слова нашел соперник и сравнить со своими. Полистай список."
						),
						$("#tutorialResultOnboarding").addClass("tutorialOnboarding_words").stop(!0).fadeIn(),
						$(".tutorialTopCover").show(),
						(this.handTimer = setTimeout(function () {
							a.fadeIn(300);
						}, 600)),
						$("#tutorialWordsCover").on("click", function () {
							e.hideTutorialWordsOnboarding();
						}),
						$(".tutorialOnboarding_words").on("click", function () {
							e.hideTutorialWordsOnboarding();
						}),
						$("#tutorialHand").on("click", function () {
							e.hideTutorialWordsOnboarding();
						}),
						(this.timer = setTimeout(function () {
							e.hideTutorialWordsOnboarding();
						}, 1e4));
				},
				hideTutorialWordsOnboarding: function () {
					var e = this;
					clearTimeout(this.timer),
						clearTimeout(this.handTimer),
						console.log("hideTutorialWordsOnboarding"),
						$("#tutorialHand").stop(!0, !0).hide().off("click"),
						$(".tutorialOnboarding_words").off("click"),
						$("#tutorialWordsCover").off("click"),
						$(".tutorialTopCover").hide(),
						$("#tutorialWordsCover").fadeOut(200),
						$("#tutorialResultOnboarding").fadeOut(200, function () {
							$(this).removeClass("tutorialOnboarding_words");
						}),
						setTimeout(function () {
							e.showFirstRoundTutorialOnboarding();
						}, 5e3);
				},
				showFirstRoundTutorialOnboarding: function () {
					o.get("isNecessaryFullGame")
						? this.showEndRoundTutorialOnboarding()
						: this.showTipTutorialOnboarding();
				},
				showEndRoundTutorialOnboarding: function () {
					var e = this,
						t = $(".l-wrapper-i"),
						n = t.offset().left,
						r = t.offset().top,
						i = $(".l-result")[0].scrollHeight,
						s = this.roundNumber - 1,
						u = $("#tutorialHand"),
						a = o.get("isNecessaryFullGame"),
						f = $(".b-result__btn").eq(s),
						l,
						c,
						h,
						p;
					$(".l-result")
						.css("paddingBottom", 1)
						.animate(
							{
								scrollTop: i,
							},
							400,
							function () {
								(l = f.width()),
									(c = f.height()),
									(p = f.offset().top - r),
									(h = f.offset().left - n),
									u
										.removeClass("tutorialHand_words")
										.addClass("tutorialHand_main")
										.css({
											left: h + l / 2 + 12,
											top: p + c / 2 - 72,
										}),
									$("#tutorialNextRoundBtn")
										.css({
											width: l,
											height: c + 5,
											top: p,
											left: h,
										})
										.show();
							}
						);
					var d = function () {
						$(".tutorialOnboarding__text").html(e.onboardingTexts.afterRound[e.roundNumber]),
							$("#tutorialResultOnboarding").stop(!0).fadeIn(),
							$("#tutorialBtnCover").fadeIn(),
							(e.onboardingShown = !0),
							$("#tutorialBtnCover")
								.css({
									background:
										"radial-gradient(" +
										(l + 40) / 2 +
										"px " +
										((c + 16) / 2 + 5) +
										"px at " +
										(h + l / 2) +
										"px " +
										(p + c / 2) +
										"px, rgba(0, 0, 0, 0) 52.08%, #000000 100%)",
								})
								.fadeIn(),
							(e.handTimer = setTimeout(function () {
								u.fadeIn(300);
							}, 600)),
							(e.timer = setTimeout(function () {
								$("#tutorialNextRoundBtn").off("click"), e.hideEndRoundTutorialOnboarding();
							}, 1e4));
					};
					$("#tutorialCover").show(),
						(this.timer = setTimeout(function () {
							d();
						}, 600)),
						$("#tutorialCover").on("click", function () {
							if (e.onboardingShown) return !1;
							clearTimeout(e.timer), d();
						}),
						$("#tutorialResultOnboarding").on("click", function () {
							a ||
								(clearTimeout(e.timer),
								clearTimeout(e.handTimer),
								u.stop(!0, !0).fadeOut(200),
								$("#tutorialResultOnboarding").fadeOut(200).off("click"),
								$("#tutorialBtnCover").fadeOut(200),
								$("#tutorialCover").hide().off("click"),
								e.unblockScreenCtrls());
						}),
						$("#tutorialNextRoundBtn").on("click", function () {
							$(this).off("click"), e.hideEndRoundTutorialOnboarding();
						});
				},
				hideEndRoundTutorialOnboarding: function () {
					clearTimeout(this.timer),
						this.roundNumber == 3
							? (this.params.screen.showGameResult(),
							  (this.onboardingShown = !1),
							  $("#tutorialCover").off("click"),
							  $("#tutorialResultOnboarding").stop(!0).fadeOut(200),
							  $("#tutorialBtnCover").fadeOut(200),
							  $("#tutorialHand").fadeOut(200),
							  i.sendDesignEvent("tutorial:Action:8_result_screen"),
							  this.showGameResultTutorialOnboarding())
							: this.playWithBot();
				},
				showGameResultTutorialOnboarding: function () {
					var t = this,
						n = $(".l-result")[0].scrollHeight,
						r = $("#tutorialHand"),
						a = $(".l-wrapper-i"),
						f = a.offset().left,
						l = a.offset().top,
						c = o.get("isNecessaryFullGame"),
						h = c ? this.onboardingTexts.resultFull : this.onboardingTexts.result,
						p = $(".indexScreenBtn").eq(0),
						d,
						v,
						m,
						g;
					c ||
						(e.onboardingView({
							viewed: ["tutorial"],
						}),
						u.setTutorialStatus(0)),
						$("#tutorialCover").show(),
						$(".l-result")
							.css("paddingBottom", 1)
							.animate(
								{
									scrollTop: n,
								},
								400,
								function () {
									(d = p.width()),
										(v = p.height()),
										(g = p.offset().top - l),
										(m = p.offset().left - f),
										r.css({
											left: m + d / 2 + 12,
											top: g + v / 2 - 72,
										}),
										$("#tutorialNextRoundBtn")
											.css({
												width: d + 20,
												height: v + 10,
												top: g,
												left: m - 10,
											})
											.show();
								}
							);
					var y = function () {
						$(".tutorialOnboarding__text").html(h),
							$("#tutorialResultOnboarding").stop(!0).fadeIn(),
							$("#tutorialBtnCover").fadeIn(),
							$("#tutorialBtnCover")
								.css({
									background:
										"radial-gradient(" +
										(d + 80) / 2 +
										"px " +
										((v + 26) / 2 + 5) +
										"px at " +
										(m + d / 2) +
										"px " +
										(g + v / 2) +
										"px, rgba(0, 0, 0, 0) 54.17%, #000000 100%)",
								})
								.fadeIn(),
							(t.handTimer = setTimeout(function () {
								r.fadeIn(300);
							}, 600));
					};
					(this.timer = setTimeout(function () {
						y();
					}, 3e3)),
						$("#tutorialNextRoundBtn").on("click", function () {
							console.log("tutorialNextRoundBtn click"),
								u.setTutorialStatus(t.roundNumber),
								i.sendDesignEvent("tutorial:Action:9_main_screen"),
								s.setScreen({
									screen: "index",
								}),
								$(this).off("click");
						}),
						c ||
							$("#tutorialResultOnboarding").on("click", function () {
								t.hideGameResultTutorialOnboarding(), t.unblockScreenCtrls();
							});
				},
				hideGameResultTutorialOnboarding: function () {
					$("#tutorialResultOnboarding").off("click"),
						clearTimeout(_this.handTimer),
						$("#tutorialHand").stop(!0, !0).fadeOut(200),
						$("#tutorialBtnCover").fadeOut(200),
						$("#tutorialCover").hide().off("click"),
						$("#tutorialResultOnboarding").fadeOut(200).off("click");
				},
				showTipTutorialOnboarding: function () {
					var e = this;
					this.unblockScreenCtrls(),
						$("#tutorialCover").addClass("tutorialCover_results").fadeIn(),
						$(".tutorialOnboarding__text").html(
							"Поздравляем, первый раунд пройден. Твоя награда — 5 бесплатных подсказок! <br> Сыграй еще 2 раунда с ботом, чтобы завершить обучение."
						),
						$("#tutorialResultOnboarding").stop(!0).fadeIn(),
						$(".tutorialOnboarding").on("click", function () {
							e.hideTipTutorialOnboarding();
						});
				},
				hideTipTutorialOnboarding: function () {
					u.setTutorialStatus(1),
						$("#tutorialCover").stop(!0).fadeOut(200),
						$("#tutorialResultOnboarding").stop(!0).fadeOut(200);
				},
				showTipFullTutorialOnboarding: function () {
					$(".tutorialOnboarding__text").html(
						"Поздравляем. Твоя награда — 5 бесплатных подсказок! Используй их в играх с соперниками."
					);
				},
				showFinalTutorialOnboarding: function () {
					$(".tutorialOnboarding__text").html("Поздравляем! Ты победил бота и прошел обучение.");
				},
				showFinalFullTutorialOnboarding: function () {
					$(".tutorialOnboarding__text").html(
						"Поздравляем. Твоя награда — 5 бесплатных подсказок! Используй их в играх с соперниками."
					);
				},
			});
			return p;
		}
	),
	define("text!screens/tutorial/stats.html!strip", [], function () {
		return '<%\nvar tutorialGameEnded = (currentRound < 4)? false : true;\nvar roundCount = game.length;\n%>\n\n<div class="b-result__head">\n    <div class="b-result__head-i">\n        <div class="b-result__head__user">\n            <div class="b-result__head__user__rank"><%= User.get(\'level\').name %></div>\n            <div class="b-result__head__user-i resultMyAvatar">\n                <div class="b-user b-user_result">\n                    <div class="b-user__pic">\n                        <img alt="" src="<%= User.get(\'avatarUrl\') %>" class="b-user__pic-i">\n                    </div>\n                    <img src="<%= Application.params.laurelsUrl%>avatar-<%= User.get(\'level\').value %>.png" class="b-user__rank" />\n                </div>\n                <div class="b-result__head__user__name">Вы</div>\n            </div>\n        </div>\n\n        <div class="b-result__head__user b-result__head__user_rival">\n            <div class="b-result__head__user__rank">Обучающий бот</div>\n            <div class="b-result__head__user-i">\n                <div class="b-user b-user_result">\n                    <div class="b-user__pic">\n                        <img alt="" src="<%=Application.params.staticUrl%>images/app/tutorial/dubina.png" class="b-user__pic-i">\n                    </div>\n                </div>\n                <div class="b-result__head__user__name">Дубина</div>\n            </div>\n        </div>\n        <% if (!tutorialGameEnded) { %>\n            <div class="b-result__head__score">\n                <p class="b-result__head__score__label">Счет в игре</p>\n\n                <p class="b-result__head__score-i"><%=score.user %>:<%=score.dubina %></p>\n            </div>\n        <% } %>\n        <!-- /.b-result__head__score -->\n        <div class="b-result__head-blocker"></div>\n    </div>\n</div>\n<!-- /.b-result__head -->\n\n\n<div class="l-result">\n    <div class="b-result__round">\n        <%\n        for (var i = 1; i <= roundCount; i += 1) {\n            var id = (i + 1 <= currentRound) ? i : \'false\';\n            var modEnable = (i  >= currentRound) ? \' b-result__round__item_disabled\' : \'\';\n            var modCurrent = (i  == currentRound - 1) ? \' b-result__round__item_current\' : \'\';\n        %>\n        <div class="b-result__round__item <%=modEnable%> <%=modCurrent%>">\n            <div data-tutorialroundid="<%=id%>" value="<%=i%>" class="changeRoundButton b-result__round__item-i">\n                <img class="b-result__round__item__icon" src="<%=Application.params.staticUrl%>images/app/result/round-<%=i%>.png" alt="">\n            </div>\n            <p class="b-result__round__item__label">раунд</p>\n        </div>\n        <% } %>\n        <!-- /.b-result__round__item -->\n        <div class="b-result__round__item b-result__round__item_finish b-result__round__item_disabled">\n            <div  class="showResultButton b-result__round__item-i">\n                <img class="b-result__round__item__icon" src="<%= Application.params.staticUrl %>images/app/result/finish.png" alt="">\n            </div>\n            <p class="b-result__round__item__label">результат</p>\n        </div>\n        <!-- /.b-result__round__item -->\n        <div class="b-result__round-blocker"></div>\n    </div>\n    <!-- /.b-result__rounds -->\n\n    <div class="l-result-i">\n        <%\n        for (i = 1; i <= roundCount; i += 1) { %>\n            <div id="tutorialRound<%=i%>" class="round" style="display: none"><div class="b-loader"><img class="b-loader-i" alt="" src="<%=Application.params.staticUrl%>images/app/loader.gif"></div></div>\n        <% } %>\n\n        <div class="round gameResult" style="display: none">\n\n            <div class="b-result__points b-result__points_win"> <!-- b-result__points_lose -->\n                <p class="b-result__points__label">Cчет в игре</p>\n\n                <div class="b-result__points-i">\n                    <div  id="userScoresFinal" style="width: 50%;" class="b-result__points__you">\n                        <div class="b-result__points__you-i">\n                            <div id="userScoresFinalValue" class="b-result__points__you__data">\n                                <%=score.user%>\n                            </div>\n                        </div>\n                    </div>\n                    <div id="opponentScoresFinal" style="width: 50%;" class="b-result__points__rival">\n                        <div class="b-result__points__rival-i">\n                            <div id="opponentScoresFinalValue" class="b-result__points__rival__data">\n                                <%=score.dubina%>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.b-reslut__points -->\n\n            <div class="b-result__data">\n                <div class="b-result__data__icon">\n                    <img id=\'smilePicture\'\n                        alt=""\n                        src="<%= Application.params.staticUrl %>images/app/funFace/<%\n                        switch(true){\n                            case (score.dubina > score.user):\n                                print(\'lose\');\n                                break;\n                            case (score.dubina < score.user):\n                                print(\'win\');\n                                break;\n                            case (score.dubina == score.user):\n                                print(\'draw\');\n                                break;\n                        }\n                        %>.png"\n                        class="b-result__data__icon-i">\n                </div>\n                <div id=\'resultDescriptionContainer\' class="b-result__data-i">\n                    <h2 class="b-result__data__title">\n                        <%\n                        switch(true){\n                            case (score.dubina > score.user):\n                                print(\'ПОРАЖЕНИЕ\');\n                                break;\n                            case (score.dubina < score.user):\n                                print(\'ПОБЕДА\');\n                                break;\n                            case (score.dubina == score.user):\n                                print(\'НИЧЬЯ\');\n                                break;\n                        }\n                        %></h2>\n\n                    <p class="b-result__data__count"></p>\n\n                    <%\n                    var uwins = User.get(\'uwins\');\n                    var nextLevel = Application.methods.levelForUwins(uwins) + 1;\n                    if (nextLevel <= Application.params.MAX_LEVEL) {\n                        var nextLevelName = Application.methods.levelNameByLevel(nextLevel);\n                        var uwinsLeft = Application.methods.startUwinsForLevel(nextLevel) - uwins;\n                        print(\'<p class="b-result__data__rank">До уровня <span class="b-result__data__rank-i">\'+nextLevelName+\'</span><br /> \'+Application.methods.declension(uwinsLeft,[\'осталась\', \'осталось\', \'осталось\'])+\' \'+uwinsLeft+\' \'+Application.methods.declension(uwinsLeft,[\'победа\', \'победы\', \'побед\'])+\'</p>\')\n                    }\n                    %>\n\n                    <p class="b-result__data__stats">\n                        <span id="showRating" class="b-result__data__stats-i">Посмотреть рейтинг в сезоне</span>\n                    </p>\n                </div>\n            </div>\n            <!-- /.b-reslut__data -->\n\n            <div class="b-result__ctrl b-result__ctrl_alt">\n                <div class="b-result__ctrl__text">&nbsp;</div>\n                <span class="indexScreenBtn soundingButton b-result__ctrl-i">выбрать другого соперника</span>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- </div> -->\n\n\n<div id="tutorialResultOnboarding" class="tutorialOnboarding">\n    <div class="tutorialOnboarding__layout">\n        <div class="tutorialOnboarding__content">\n            <div class="tutorialOnboarding__elephant"></div>\n            <div class="tutorialOnboarding__grass1"></div>\n            <div class="tutorialOnboarding__grass2"></div>\n            <div class="tutorialOnboarding__grass3"></div>\n            <div class="tutorialOnboarding__grass4"></div>\n            <div class="tutorialOnboarding__text"></div>\n        </div>\n    </div>\n</div>\n<!-- /.tutorialOnboarding -->\n\n\n<div class="tutorialTopCover tutorialTopCover_results"></div>\n<div id="tutorialCover" class="tutorialCover"></div>\n<div id="tutorialWordsCover" class="tutorialCover tutorialCover_words"></div>\n<div id="tutorialBtnCover" class="tutorialCover tutorialCover_btn"></div>\n<div id="tutorialNextRoundBtn"></div>\n<img id="tutorialHand" class="tutorialHand tutorialHand_words" src="<%= Application.params.staticUrl %>images/app/tutorial/hand.png" alt="" />\n<% if (scheme == \'test\') { %>\n<a href="#" class="tutorialSkipBtn">Пропустить обучение</a>\n<% } %>\n<div id="tutorialMenuCover"></div>';
	}),
	define(
		"screens/tutorial/stats",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"models/appState",
			"models/user",
			"models/tutorial",
			"models/onboarding",
			"controllers/analytic",
			"widgets/tutorial/roundResult",
			"text!screens/tutorial/stats.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l) {
			var c = n.extend({
				el: "#screenContainer",
				template: _.template(l),
				widgets: [],
				isSmileAnimationComplete: !1,
				events: {
					"click .changeRoundButton": "showRound",
					"click .showResultButton": "showGameResult",
					"click #showRating": "showRating",
					"click .indexScreenBtn": function () {
						r.sendDesignEvent("tutorial:Action:9_main_screen"),
							i.setScreen({
								screen: "index",
							});
					},
					"click .tutorialSkipBtn": function () {
						e.onboardingView({
							skipped: ["tutorial"],
						}),
							u.setTutorialStatus(0),
							i.setScreen({
								screen: "index",
							});
					},
					"click .resultMyAvatar": "showMyStat",
				},
				initialize: function (e) {
					var n = this;
					(this.params = e || this.params),
						(this.roundsWithOpenedAllWords = []),
						(this.smileTimeLine = new TimelineMax()),
						(this.model = o),
						(this.viewParam = {
							Application: t,
							User: s,
						}),
						this.listenToOnce(this, "playResultSound", function (e) {
							e && t.methods.play(e);
						});
				},
				initializeWidgets: function () {
					var e = this.model.get("currentRound");
					for (var t = 1; t < e; t++)
						this.widgets.push(
							new f({
								roundNumber: t,
								screen: this,
							})
						);
				},
				afterRender: function () {
					var e = this.model.get("currentRound"),
						t = u.getTutorialStatus();
					console.log("currentRound: ", e),
						e != 4 || (e == 4 && t != 3)
							? $("#tutorialRound" + (e - 1)).show()
							: this.showGameResult(),
						e == 4 &&
							$(".b-result__round__item_finish").removeClass("b-result__round__item_disabled"),
						n.prototype.afterRender.apply(this, arguments);
				},
				animateScores: function (e) {
					e == 0 && (e = 0.5), t.methods.play("scores");
					var n = this.model.get("score"),
						r = {
							user: 0,
							opponent: 0,
						};
					TweenMax.to(r, 1.25, {
						user: n.user,
						onUpdate: function () {
							$("#userScoresFinalValue").html(r.user.toFixed(0));
						},
						ease: Linear.easeNone,
					}),
						TweenMax.to(r, 1.25, {
							opponent: n.dubina,
							onUpdate: function () {
								$("#opponentScoresFinalValue").html(r.opponent.toFixed(0));
							},
							ease: Linear.easeNone,
						}),
						TweenMax.to($("#userScoresFinal"), 1.25, {
							width: e * 100 + "%",
						}),
						TweenMax.to($("#opponentScoresFinal"), 1.25, {
							width: (1 - e) * 100 + "%",
						});
				},
				animateSmile: function () {
					if (!this.isSmileAnimationComplete) {
						var e = this.model.get("score");
						this.animateScores((e.user / (e.user + e.dubina)).toFixed(2)),
							this.smileTimeLine
								.from($("#smilePicture"), 2, {
									marginLeft: Math.PI * 91 * 1.2,
									rotation: 432,
								})
								.from($("#resultDescriptionContainer"), 0.8, {
									opacity: 0,
								}),
							(this.isSmileAnimationComplete = !0);
					}
				},
				showRound: function (e) {
					var t = $(e.currentTarget);
					console.log(t.data("tutorialroundid")),
						t.data("tutorialroundid") &&
							($(".round").hide(),
							$(".b-result__round__item").removeClass("b-result__round__item_current"),
							t.parent().addClass("b-result__round__item_current"),
							$("#tutorialRound" + t.data("tutorialroundid")).show(),
							console.log("this.widgets: ", this.widgets));
				},
				showGameResult: function () {
					if (this.model.get("currentRound") == 4) {
						var e = this.model.get("score"),
							t = "finish_no_sides";
						switch (!0) {
							case e.user > e.dubina:
								t = "finish_win";
								break;
							case e.user < e.dubina:
								t = "";
						}
						this.trigger("playResultSound", t),
							$(".round").hide(),
							$(".b-result__round__item").removeClass("b-result__round__item_current"),
							$(".b-result__round__item_finish").removeClass("b-result__round__item_disabled"),
							$(".showResultButton").parent().addClass("b-result__round__item_current"),
							$(".gameResult").show(),
							this.animateSmile();
					}
				},
				showRating: function () {
					r.sendDesignEvent("Screen_actions:Result_screen:rating"),
						i.setScreen({
							screen: "rating",
						});
				},
				showMyStat: function () {
					i.setScreen({
						screen: "userInfo",
						params: {
							id: s.get("id"),
						},
					});
				},
			});
			return c;
		}
	),
	define("text!screens/chase/shop.html!strip", [], function () {
		return '<%\n\nvar i;\nvar item;\nvar itemData;\nvar items = this.collection.models;\nvar index = 0;\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Ивентовый магазин</div>\n    <div class="b-screen-head__ctrl"></div>\n</div><!-- /.b-screen-head -->\n<div class="l-screen__main l-screen__main_chase-shop">\n    <div class="l-screen__main-content">\n        <div class="chase-shop">\n            <div class="chase-shop__head"\n                style="background-image: url(<%=chase.shopBackground.url%>);">\n                <div class="chase-shop__title">Обменяй игровые предметы <br>на уникальный контент!</div>\n                <div class="chase-shop__balance">\n                    <img class="chase-shop__balance-icon" src="<%=chase.bonusUrl%>" alt="">\n                        <span class="chase-shop__balance-data"> &times; <%=userChase.balance%></span>\n                        <span class="chase-shop__balance-scores">/ <%=userChase.scores%></span>\n                        <img id="chaseInfoButton" class="chase-shop__balance-info" src="<%= Application.params.staticUrl %>images/app/icons/info.png" alt="">\n                    </div>\n            </div>\n            <div class="chase-shop__list">\n            <% for (i = 0; i < items.length; i += 1) { \n                \n                item = items[i];\n                itemData = item.get(\'data\');\n\n                if (!item.get(\'isBought\')) {\n                    switch (item.get(\'type\')) { \n                        case \'item\': \n                            itemCategory = Application.params.wardrobeItemRarity[itemData.category];\n                %>\n                <div data-index="<%=index++%>" class="chase-shop__item">\n                    <div class="wardrobe-item wardrobe-item_<%=itemCategory%> wardrobe-item_shop wardrobe-shop__item-icon">\n                        <div class="wardrobe-item__wrap">\n                            <img class="wardrobe-item__icon" src="<%= Application.params.clothesUrl%><%=itemData.itemId%>.png" alt="" />\n                        </div>\n                    </div>\n                    <div class="chase-shop__item-data">\n                        <div class="chase-shop__item-name">\n                            <div class="chase-shop__item-name-text wardrobe-item-type wardrobe-item-type_<%=itemCategory%>">\n                                <%= itemData.name %>\n                            </div>\n                        </div>\n                        <div class="chase-shop__item-price">\n                            <%= item.get(\'price\') %> \n                            <img class="chase-shop__item-price-icon" src="<%= item.get(\'priceUrl\') %>" alt="">\n                        </div>\n                    </div>\n                </div>\n                        <% \n                            break; \n                        case \'coins\':\n                        %>\n                <div data-index="<%=index++%>" class="chase-shop__item chase-shop__item_coins"> \n                    <div class="chase-shop__item-icon"> <img class="chase-shop__item-icon-img" src="<%= Application.params.staticUrl %>images/app/chase/shop/coins.png" alt=""></div>\n                    <div class="chase-shop__item-data">\n                        <div class="chase-shop__item-name">\n                            <div class="chase-shop__item-name-text">Монеты</div>\n                        </div>\n                        <div class="chase-shop__item-count"><%= itemData.count %> шт.</div>\n                        <div class="chase-shop__item-price"> \n                            <%= item.get(\'price\') %> \n                            <img class="chase-shop__item-price-icon" src="<%= item.get(\'priceUrl\') %>" alt="">\n                        </div>\n                    </div>\n                </div>\n                        <% \n                            break; \n                        case \'papers\':\n                        %>\n                <div data-index="<%=index++%>" class="chase-shop__item chase-shop__item_papers"> \n                    <div class="chase-shop__item-icon"> <img class="chase-shop__item-icon-img" src="<%= Application.params.staticUrl %>images/app/chase/shop/papers.png" alt=""></div>\n                    <div class="chase-shop__item-data">\n                        <div class="chase-shop__item-name">\n                            <div class="chase-shop__item-name-text">Свитки</div>\n                        </div>\n                        <div class="chase-shop__item-count"><%= itemData.count %> шт.</div>\n                        <div class="chase-shop__item-price">\n                            <%= item.get(\'price\') %> \n                            <img class="chase-shop__item-price-icon" src="<%= item.get(\'priceUrl\') %>" alt="">\n                        </div>\n                    </div>\n                </div>\n                        <% \n                        break; \n                    } %>\n\n                <% } %>\n            <% } %>\n            </div>\n        </div>\n    </div>\n</div>';
	}),
	define(
		"screens/chase/shop",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/chase",
			"collections/popups",
			"models/appState",
			"text!screens/chase/shop.html!strip",
		],
		function (e, t, n, r, i, s, o, u) {
			var a = n.extend({
				template: _.template(u),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						o.previousScreen();
					},
					"click #chaseInfoButton": function () {
						i.showInfoPopup();
					},
					"click .chase-shop__item": "showSlider",
				},
				initialize: function (n) {
					var r = this;
					(this.model = i.getMainData()),
						(this.collection = i.getShopItems()),
						this.listenTo(this.collection, "reset add", function () {
							r.render();
						}),
						this.listenTo(e, "buyChaseShopItem", function (e) {
							s.add({
								type: "reward",
								params: {
									reward: e.rewardsInfo,
								},
							});
						}),
						(this.viewParam = {
							Application: t,
							chase: this.model.chase,
							userChase: this.model.userChase,
						});
				},
				showSlider: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index");
					s.add({
						type: "chase.shop",
						params: {
							data: this.collection,
							startIndex: n,
						},
					});
				},
				initializeWidgets: function () {
					this.widgets = [];
				},
				afterRenderWidgets: function () {},
				afterRender: function () {},
			});
			return a;
		}
	),
	define("text!screens/chase/rating.html!strip", [], function () {
		return '<%\n\nvar i, j;\nvar chase = this.model.get(\'chase\');\nvar chaseRewardList = chase.rewards;\nvar chaseRewardData;\n\nvar rewardList;\nvar reward;\nvar beelineReward;\n\nvar rewardType = {\n    coinsOnceConst: \'coins\',\n    ratingOnceConst: \'rate\',\n    papersOnceConst: \'papers\'\n}\n\nvar rating = this.data.rating;\nvar selfRating = this.data.userRating;\nvar user;\n\nvar displayLimit = 5;\n\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Лидеры ивента</div>\n    <div class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_chase-leaders">\n    <div class="l-screen__main-content">\n\n        <div class="chase-leaders">\n            <% if (rating.length > 0) { %>\n            <div class="chase-leaders__list chase-leaders__list_position">\n                <div class="chase-leaders__list-content">\n            <% } else { %>\n            <div class="chase-leaders__list">\n            <% } %>\n            \n                    <div class="chase-leaders__title">НАГРАДЫ</div>\n                    <div class="chase-leaders__rewards">\n                        <% for (i = 0; i < chaseRewardList.length; i += 1) { %>\n                        <%\n                            chaseRewardData = chaseRewardList[i];\n                            rewardList = chaseRewardData.userReward;\n                            beelineReward = _.findWhere(rewardList, {rewardType: \'beelineOnceConst\'});\n                        %>\n                        <% if (i == displayLimit && chaseRewardList.length > displayLimit) { %>\n                        <div id="rewardsCut" class="chase-leaders__rewards-cut">\n                        <% } %>\n                        <div class="chase-leaders__rewards-item chase-leaders__reward">\n                            <div class="chase-leaders__reward-title">ТОП <%=chaseRewardData.position.to%></div>\n                            <div class="chase-leaders__reward-data rewards-list">\n                            <% if (beelineReward) { %>\n                            <div class="rewards-list__beeline"> \n                                <div class="rewards-list__value"><%= beelineReward.text %></div>\n                                <div class="rewards-list__icon icon" style="background-image: url(<%=beelineReward.imageUrl%>)"></div>\n                                <a href="<%=beelineReward.descriptionUrl%>" target="_blank">\n                                    <img class="rewards-list__info" src="<%= Application.params.staticUrl %>images/app/icons/info.png" alt="">\n                                </a>\n                            </div>\n                            <% } %>\n                            <% for (j = 0; j < rewardList.length; j += 1) { %>\n                                <% reward = rewardList[j]; %>\n                                <% if (reward.rewardType == \'beelineOnceConst\') { \n                                    continue;\n                                } else { %>\n                                <div class="chase-leaders__reward-item rewards-list__item">\n                                    <div class="rewards-list__value">+<%=reward.count%></div>\n                                    <div class="rewards-list__icon icon icon_<%=rewardType[reward.rewardType]%>"></div>\n                                </div>\n                                <% } %>\n                            <% } %>\n                            </div>\n                        </div>\n                        <% } %>\n                        <% if (chaseRewardList.length > displayLimit) { %>\n                        </div>\n                        <div id="rewardsCutCtrl" class="chase-leaders__rewards-ctrl">Все награды</div>\n                        <% } %>\n                    </div>\n\n                    <div class="chase-leaders__list-title">ТЕКУЩИЙ РЕЙТИНГ</div>\n\n            <% if (rating.length > 0) { %>\n                    \n                <% for (i = 0; i < rating.length; i += 1) { \n                        user = rating[i];\n                    %>\n                    <div class="chase-leaders__item \n                        <%= (i % 2 == 0)? \'chase-leaders__item_even\' : \'chase-leaders__item_odd\'%> \n                        <%= (user.userId == UserModel.get(\'id\'))? \'chase-leaders__item_self\' : \'\'%>">\n                        <div class="chase-leaders__item-number"><%= user.place %></div>\n                        <div data-user-id="<%=user.userId%>" class="chase-leaders__item-avatar soundingButton">\n                            <div class="b-user">\n                            <% if (user.customAvatar && user.customAvatar.length > 0) { %>\n                                <div class="custom-avatar b-user__custom-avatar">\n                                    <% for (j = 0; j < user.customAvatar.length; j += 1) { %>\n                                    <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=user.customAvatar[j]%>.png" alt="" />\n                                    <% } %>\n                                </div>\n                            <% } else { %>\n                                <div class="b-user__pic">\n                                    <img class="b-user__pic-i" src="<%=user.avatarUrl%>" alt="" />\n                                </div>\n                            <% } %>\n                                <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(user.uwins)%>.png" class="b-user__rank" />\n                            </div>\n                        </div>\n                        <div class="chase-leaders__item-data">\n                            <div class="chase-leaders__item-name"><%=user.playerName%></div>\n                        </div>\n                        <div class="chase-leaders__item-scores"><%=user.chaseScores%></div>\n                    </div>\n                    <!-- /.chase-leaders__item -->\n                <% } %>\n                </div>\n\n                <div class="chase-leaders__item chase-leaders__item_self chase-leaders__item_fixed" \n                    data-user-id="<%=selfRating.userId%>">\n                    <div class="chase-leaders__item-number"><%=selfRating.place%></div>\n                    <div class="chase-leaders__item-avatar">\n                        <div class="b-user">\n                        <% if (selfRating.customAvatar && selfRating.customAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < selfRating.customAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=selfRating.customAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                        <% } else { %>\n                            <div class="b-user__pic">\n                                <img class="b-user__pic-i" src="<%=selfRating.avatarUrl%>" alt="" />\n                            </div>\n                        <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(selfRating.uwins)%>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="chase-leaders__item-data">\n                        <div class="chase-leaders__item-name">Ты</div>\n                    </div>\n                    <div class="chase-leaders__item-scores"><%=selfRating.chaseScores%></div>\n                </div>\n                <!-- /.chase-leaders__item [fixed] -->\n\n            <% } else { %>\n                <div class="chase-leaders__empty">\n                    <div class="chase-leaders__empty-text">Скоро здесь появятся первые результаты</div>\n                </div>\n            <% } %>\n            </div>\n        </div>\n\n    </div>\n</div>';
	}),
	define("text!screens/chase/history.html!strip", [], function () {
		return '\n<%\n\nvar i, j, k, counter = 0;\n\nvar userRewardList;\nvar userRewardData;\n\nvar history = this.data.history;\nvar historyGroupedList = ChaseController.getGroupedListForHistory(history);\nvar historyStatus = this.data.historyStatus;\nvar groupList;\nvar groupMaxPosition;\nvar user;\nvar groupRewards;\nvar reward;\nvar beelineReward;\nvar selfRating = this.data.userChase;\nvar rewardAvailable = this.model.get(\'userChase\').rewardAvailable;\nvar selfCustomAvatar = UserModel.get(\'customAvatar\');\nvar selfAvatar = UserModel.get(\'avatarUrl\');\nvar selfUwins = UserModel.get(\'uwins\');\nvar selfGroupRewards = null;\n\nvar onlyBeelineReward = false;\n\nvar rewardType = {\n    coinsOnceConst: \'coins\',\n    ratingOnceConst: \'rate\',\n    papersOnceConst: \'papers\'\n}\n%>\n\n<div class="l-screen__head b-screen-head">\n    <div class="b-screen-head__nav">\n        <div id="backButton" class="b-btn-back"></div>\n    </div>\n    <div class="b-screen-head__title">Лидеры ивента</div>\n    <div class="b-screen-head__ctrl"></div>\n</div>\n<!-- /.b-screen-head -->\n\n<div class="l-screen__main l-screen__main_chase-leaders">\n    <div class="l-screen__main-content">\n        <% if (history.length > 0 && historyStatus == 2) { %>\n        <div class="chase-leaders">\n            <div class="chase-leaders__list <%=(rewardAvailable)? \'\' : \'chase-leaders__list_position\'%>">\n                <div class="chase-leaders__list-content">\n                <% for (i = 0; i < historyGroupedList.length; i += 1) { %>\n                    <%\n                        groupList = historyGroupedList[i].groupList;\n                        groupRewards = historyGroupedList[i].groupRewards;\n                        groupMaxPosition = historyGroupedList[i].groupMaxPosition;\n                    %>\n                    <% for (j = 0; j < groupList.length; j += 1) { %>\n                    <%\n                        user = groupList[j];\n                        if (user.userId == UserModel.get(\'id\')) {\n                            selfGroupRewards = groupRewards;\n                        }\n                    %>\n                    <% if (i == 0 && j == 0) { %>\n                    <div class="chase-leaders__title">1-е МЕСТО</div>\n                    <% } %>\n                    <% if (i != 0 && j == 0) { %>\n                    <div class="chase-leaders__list-title">ТОП <%=groupMaxPosition%></div>\n                    <% } %>\n                    <div class="chase-leaders__item \n                        <%= (user.userId == UserModel.get(\'id\'))? \'chase-leaders__item_self\' : \'\'%>\n                        <%=(counter % 2 == 0)? \'chase-leaders__item_even\' : \'chase-leaders__item_odd\'%>">\n                        <div class="chase-leaders__item-number"><%=user.place%></div>\n                        <div data-user-id="<%=user.userId%>" class="chase-leaders__item-avatar soundingButton">\n                            <div class="b-user">\n                            <% if (user.customAvatar && user.customAvatar.length > 0) { %>\n                                <div class="custom-avatar b-user__custom-avatar">\n                                    <% for (k = 0; k < user.customAvatar.length; k += 1) { %>\n                                    <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=user.customAvatar[k]%>.png" alt="" />\n                                    <% } %>\n                                </div>\n                            <% } else { %>\n                                <div class="b-user__pic">\n                                    <img class="b-user__pic-i" src="<%=user.avatarUrl%>" alt="" />\n                                </div>\n                            <% } %>\n                                <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(user.uwins)%>.png" class="b-user__rank" />\n                            </div>\n                        </div>\n                        <div class="chase-leaders__item-data">\n                            <div class="chase-leaders__item-name"><%=user.playerName%></div>\n                            <div class="chase-leaders__item-reward">\n                                <div class="rewards-list rewards-list_chase">\n                                    <% beelineReward = _.findWhere(groupRewards, {rewardType: \'beelineOnceConst\'}); %>\n                                    <% if (beelineReward) { %>\n                                    <div class="rewards-list__beeline"> \n                                        <div class="rewards-list__icon icon" style="background-image: url(<%=beelineReward.imageUrl%>)"></div>\n                                        <div class="rewards-list__value"><%= beelineReward.text %></div>\n                                        <a href="<%=beelineReward.descriptionUrl%>" target="_blank">\n                                            <img class="rewards-list__info" src="<%= Application.params.staticUrl %>images/app/icons/info.png" alt="">\n                                        </a>\n                                    </div>\n                                    <% } %>\n                                    <% for (k = 0; k < groupRewards.length; k += 1) { %>\n                                    <% reward = groupRewards[k]; %>\n                                        <% if (reward.rewardType == \'beelineOnceConst\') { \n                                            continue;\n                                        } else { %>\n                                    <div class="rewards-list__item">\n                                        <div class="rewards-list__value">+<%=reward.count%></div>\n                                        <div class="rewards-list__icon icon icon_<%=rewardType[reward.rewardType]%>"></div>\n                                    </div>\n                                        <% } %>\n                                    <% } %>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /.chase-leaders__item -->\n                    <% counter++ %>\n                    <% } %>\n                <% } %>\n                </div>\n\n\n                <% if (selfGroupRewards) { \n                    beelineReward = _.findWhere(selfGroupRewards, {rewardType: \'beelineOnceConst\'});\n                } else {\n                    beelineReward = null;\n                } %>\n\n                <% if (selfGroupRewards && selfGroupRewards.length == 1 && beelineReward) { \n                    onlyBeelineReward = true;\n                } %>\n\n                <% if (rewardAvailable && !onlyBeelineReward) { %> \n                <div class="chase-leaders__ctrl">\n                    <div id="takeUserChaseReward" class="b-btn b-btn_blue">Забрать награду</div>\n                </div>\n                <!-- /.chase-leaders__ctrl -->\n                <% } else { %>\n                <div class="chase-leaders__item chase-leaders__item_self chase-leaders__item_fixed">\n                    <div class="chase-leaders__item-number"><%=selfRating.place%></div>\n                    <div class="chase-leaders__item-avatar">\n                        <div class="b-user">\n                        <% if (selfCustomAvatar && selfCustomAvatar.length > 0) { %>\n                            <div class="custom-avatar b-user__custom-avatar">\n                                <% for (i = 0; i < selfCustomAvatar.length; i += 1) { %>\n                                <img class="custom-avatar__item" src="https://cdn.wordbyword.me/content/user/customAvatar/element/<%=selfCustomAvatar[i]%>.png" alt="" />\n                                <% } %>\n                            </div>\n                        <% } else { %>\n                            <div class="b-user__pic">\n                                <img class="b-user__pic-i" src="<%=selfAvatar%>" alt="" />\n                            </div>\n                        <% } %>\n                            <img src="<%= Application.params.laurelsUrl%>avatar-<%= Application.methods.levelForUwins(selfUwins)%>.png" class="b-user__rank" />\n                        </div>\n                    </div>\n                    <div class="chase-leaders__item-data">\n                        <div class="chase-leaders__item-name">Ты</div>\n\n                        <% if (onlyBeelineReward) { %>\n                        <div class="chase-leaders__item-reward">\n                            <div class="rewards-list rewards-list_chase">\n                                <div class="rewards-list__beeline"> \n                                    <div class="rewards-list__icon icon" style="background-image: url(<%=beelineReward.imageUrl%>)"></div>\n                                    <div class="rewards-list__value"><%=beelineReward.text%></div>\n                                    <a href="<%=beelineReward.descriptionUrl%>" target="_blank">\n                                        <img class="rewards-list__info" src="<%= Application.params.staticUrl %>images/app/icons/info.png" alt="">\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <% } else if (selfGroupRewards) { %>\n                        <div class="chase-leaders__item-reward">\n                            <div class="rewards-list rewards-list_chase">\n                            <% if (beelineReward) { %>\n                                <div class="rewards-list__item"> \n                                    <div class="rewards-list__value">+1</div>\n                                    <div class="rewards-list__icon icon" style="background-image: url(<%=beelineReward.imageUrl%>)"></div>\n                                    <a href="<%=beelineReward.descriptionUrl%>" target="_blank">\n                                        <img class="rewards-list__info" src="<%= Application.params.staticUrl %>images/app/icons/info.png" alt="">\n                                    </a>\n                                </div>\n                            <% } %>\n                            <% for (k = 0; k < selfGroupRewards.length; k += 1) { %>\n                                <% reward = selfGroupRewards[k]; %>\n                                <% if (reward.rewardType == \'beelineOnceConst\') { \n                                    continue;\n                                } else { %>\n                                <div class="rewards-list__item">\n                                    <div class="rewards-list__value">+<%=reward.count%></div>\n                                    <div class="rewards-list__icon icon icon_<%=rewardType[reward.rewardType]%>"></div>\n                                </div>\n                                <% } %>\n                            <% } %>\n                            </div>\n                        </div>\n                        <% } %>\n\n                    </div>\n                </div>\n                <!-- /.chase-leaders__item [fixed] -->\n                <% } %>\n            </div>\n        </div>\n        <% } else { %>\n        <div class="chase-result-info">\n            <div class="chase-result-info__content">\n                <img class="chase-result-info__icon" src="<%=chase.avatarUrl%>" alt="">\n                <div class="chase-result-info__title">\n                    Событие завершено! </div>\n                <div class="chase-result-info__description">\n                    Результаты скоро будут объявлены. </div>\n                <div class="chase-result-info__alt">А пока не теряй времени, обменяй заработанные предметы в магазине ивента.</div>\n            </div>\n            <div class="chase-result-info__ctrl"> \n                <div id="chaseShopButton" class="b-btn b-btn_blue">Магазин</div>\n            </div>\n        </div>\n        <% } %>\n    </div>\n</div>';
	}),
	define(
		"screens/chase/leaders",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/chase",
			"collections/popups",
			"models/appState",
			"models/user",
			"text!screens/chase/rating.html!strip",
			"text!screens/chase/history.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f) {
			var l = n.extend({
				el: "#screenContainer",
				templates: {
					rating: a,
					history: f,
				},
				events: {
					"click #backButton": function () {
						o.previousScreen();
					},
					"click #chaseShopButton": "chaseShopButtonHandler",
					"click #takeUserChaseReward": "takeUserChaseRewardHandler",
					"click .chase-leaders__item-avatar": "userProfileHandler",
					"click #rewardsCutCtrl": "rewardsCutCtrlHandler",
				},
				initialize: function (n) {
					var r = this;
					(this.params = n),
						(this.type = this.params.type),
						(this.data = this.params.data),
						console.log("this.data: ", this.data),
						(this.template = _.template(this.templates[this.type])),
						(this.model = i.getMainData()),
						(this.viewParam = {
							Application: t,
							UserModel: u,
							ChaseController: i,
						}),
						this.listenTo(e, "takeUserChaseReward", function (t) {
							e.getChase(),
								s.add({
									type: "reward",
									params: {
										reward: t.rewardsInfo,
									},
								});
						}),
						this.listenTo(this.model, "change", function () {
							r.render();
						});
				},
				afterRenderWidgets: function () {},
				afterRender: function () {},
				chaseShopButtonHandler: function () {
					o.setScreen({
						screen: "chase.shop",
						params: {},
					});
				},
				userProfileHandler: function (e) {
					var t = $(e.currentTarget),
						n = t.data("user-id");
					o.setScreen({
						screen: "userInfo",
						params: {
							id: n,
						},
					});
				},
				takeUserChaseRewardHandler: function () {
					e.takeUserChaseReward();
				},
				rewardsCutCtrlHandler: function () {
					var e = $("#rewardsCut"),
						t = $("#rewardsCutCtrl"),
						n = "Все награды",
						r = t.text(),
						i = r == n ? "Свернуть" : n;
					e.slideToggle(), t.text(i);
				},
			});
			return l;
		}
	),
	define("text!screens/seasonPass/index.html!strip", [], function () {
		return '<%\n\nvar info = this.model.get(\'info\');\nvar levels = this.model.get(\'levels\');\n\nvar chest = SeasonPassChestModel.get(\'data\');\n\nvar key = _.last(levels).freeReward;\nvar keyInfo = key.userRewards[0].info;\nvar keyLevelNumber = levels.length - 1;\nvar keyAlias = key.userRewards[0].type;\nvar keyIsTaken = (_.indexOf(chest.userKeys, keyAlias) != -1 || key.isTaken)? true : false;\n\nvar i;\nvar level;\nvar freeReward, freeRewardSlot;\nvar purchasedReward, purchasedRewardSlot;\n\n%>\n\n<div class="season-pass season-pass_screen">\n    <div class="season-pass__head" style="background-image: url(\'<%= info.headerImage %>\')">\n        <div class="season-pass__heading">\n            <div class="season-pass__heading-back">\n                <div id="backButton" class="b-btn-back"></div>\n            </div>\n            <div class="season-pass__heading-info">\n                <div id="seasonPassInfoBtn" class="btn-info"></div>\n            </div>\n            <div class="season-pass__heading-title">Награды сезона</div>\n        </div>\n        <div class="season-pass__timer">\n            <div class="season-pass__timer-label">До завершения:</div>\n            <div class="season-pass__timer-icon">\n                <canvas class="season-pass__timer-icon-canvas" id="seasonPassTimerCanvas" width="24" height="24"></canvas>\n            </div>\n            <div id="seasonPassTimer" class="season-pass__timer-data"></div>\n        </div>\n        <div class="season-pass__info">Получи награды, зарабатывая жетоны в личных боях и в ежедневных заданиях.</div>\n        <div class="season-pass__progress">\n            <div class="season-pass__progress-bar">\n                <div class="season-pass__progress-bar-scale" style="width: <%= (key.isAvailable)? \'100\' : Math.floor(info.currentLevelTokensCount / levels[info.currentLevel].tokens * 100) %>%"></div>\n                <div class="season-pass__progress-bar-data"><%= (key.isAvailable)? \'Завершено\' : info.currentLevelTokensCount + \' / \' + levels[info.currentLevel].tokens %></div>\n            </div>\n            <div class="season-pass__progress-icon"></div>\n            <div class="season-pass__progress-status \n                <%= (!key.isAvailable)? \'season-pass__progress-status_level\' : \'\'%> \n                <%= (key.isAvailable && !keyIsTaken)? \'season-pass__progress-status_key\' : \'\' %>\n                <%= (key.isAvailable && keyIsTaken)? \'season-pass__progress-status_complete\' : \'\' %>" id="seasonPassProgressStatus">\n                <div class="season-pass__progress-pointer">\n                    <img class="season-pass__progress-pointer-img" \n                        src="<%= Application.params.staticUrl %>images/app/season-pass/status-pointer<%= (key.isAvailable)? \'-complete\' : \'\' %>.png">\n                </div>\n                <% if (key.isAvailable) { %>\n                    <% if (!keyIsTaken) { %>\n                <div class="season-pass__progress-key">\n                    <img class="season-pass__progress-key-img" id="seasonPassProgressStatusKey" src="<%= Application.params.seasonPassStotsUrl + keyInfo.alias + \'.png\' %>">\n                </div>\n                    <% } %>\n                <div class="season-pass__progress-complete <%= (!keyIsTaken)? \'g-hidden\' : \'\' %>" id="seasonPassProgressStatusComplete"></div>\n                <% } else { %>\n                <div class="season-pass__progress-level"><%= info.currentLevel + 1 %></div>\n                <% } %>\n            </div>\n        </div>\n        <% if (info.isTicketPurchased) { %>\n        <div class="season-pass__btn season-pass__btn_active">\n            <div class="season-pass__btn-icon"></div>\n            <div class="season-pass__btn-text"> Пропуск активен</div>\n        </div>\n        <% } else { %>\n        <div id="seasonPassTicketBtn" class="season-pass__btn">\n            <div class="season-pass__btn-icon"></div>\n            <div class="season-pass__btn-text">Включить пропуск</div>\n        </div>\n        <% } %>\n    </div>\n    <!-- /seasonPass head -->\n\n    <div id="seasonPassContent" class="season-pass__content">\n        <div class="season-pass__rewards">\n            <% for (i = 0; i < levels.length - 1; i += 1) { %>\n\n            <% \n            level = levels[i];\n            freeReward = level.freeReward;\n            purchasedReward = level.purchasedReward;\n            %>\n            <div id="level<%= i %>" class="season-pass__level \n                <%= (i < info.currentLevel)? \'season-pass__level_complete\' : \'\' %> \n                <%= (i == info.currentLevel - 1 && i + 1 != keyLevelNumber)? \'season-pass__level_lastOpen\' : \'\' %> \n                <%= (i == info.currentLevel)? \'season-pass__level_current\' : \'\' %>">\n                <% if (i == 0) { %>\n                <div class="season-pass__level-head">\n                    <div class="season-pass__level-title season-pass__level-title_free">\n                        <div class="season-pass__level-title-text">Бесплатно</div>\n                    </div>\n                    <div class="season-pass__level-title">\n                        <div class="season-pass__level-title-text">Словесный пропуск</div>\n                    </div>\n                </div>\n                <% } %>\n                <div class="season-pass__level-content">\n                    <div class="season-pass__level-data">\n                        <div class="season-pass__level-number"><%= i + 1 %></div>\n                        <div class="season-pass__level-progress <%= (i == 0)? \'season-pass__level-progress_first\' : \'\' %>">\n                            <% if (i == 0 || i < info.currentLevel) { %>\n                            <div class="season-pass__level-progress-data"></div>\n                            <% } else if (i == info.currentLevel) { %>\n                            <div class="season-pass__level-progress-data" style="height: <%= Math.floor(info.currentLevelTokensCount / level.tokens * 100) %>%"></div>\n                            <% } else { %>\n                            <div class="season-pass__level-progress-data"></div>\n                            <% } %>\n                        </div>\n                    </div>\n                    <div data-index="<%= i %>" class="season-pass__reward season-pass__reward_free \n                        <%= (!_.isEmpty(freeReward.lootBox) && !freeReward.isAvailable)? \'season-pass__reward_lootBox\' : \'\' %> \n                        <%= (freeReward.rewardType == \'clothesItem\' && !freeReward.isAvailable)? \'season-pass__reward_clothesItem\' : \'\' %> \n                        <%= (freeReward.isAvailable && !freeReward.isTaken)? \'season-pass__reward_available\' : \'\' %> \n                        <%= (freeReward.isTaken)? \'season-pass__reward_taken\' : \'\' %>" \n                        id="<%= (i == 0)? \'onboardingSlot\' : \'\' %>">\n                        <% if (i == 0) { %>\n                        <div class="b-onboarding__text">\n                            <div class="b-onboarding__text-i">Первую награду можно забрать уже сейчас. Нажми, чтобы забрать.</div>\n                        </div>\n                        <% } %>\n                        <div class="season-pass__reward-slot">\n                            <div class="season-pass__reward-status <%= (freeReward.isTaken)? \'season-pass__reward-status_taken\' : \'\' %>"></div>\n                            <div class="season-pass__reward-icon">\n                                <img class="season-pass__reward-icon-img" src="<%= freeReward.image %>">\n                            </div>\n                        </div>\n                        <div class="season-pass__reward-info"><%= SeasonPassController.getRewardInfoText(freeReward) %></div>\n                    </div>\n                    <div data-index="<%= i %>" class="season-pass__reward \n                        <%= (info.currentLevel > i)? \'season-pass__reward_open\' : \'\' %> \n                        <%= (!_.isEmpty(purchasedReward.lootBox) && !purchasedReward.isAvailable)? \'season-pass__reward_lootBox\' : \'\' %> \n                        <%= (purchasedReward.rewardType == \'clothesItem\' && !purchasedReward.isAvailable)? \'season-pass__reward_clothesItem\' : \'\' %> \n                        <%= (info.isTicketPurchased && purchasedReward.isAvailable && !purchasedReward.isTaken)? \'season-pass__reward_available\' : \'\' %> \n                        <%= (info.isTicketPurchased && purchasedReward.isTaken)? \'season-pass__reward_taken\' : \'\' %>">\n                        <div class="season-pass__reward-slot">\n                            <div class="season-pass__reward-status \n                                <%= (info.isTicketPurchased && purchasedReward.isTaken)? \'season-pass__reward-status_taken\' : \'\' %>\n                                <%= (!info.isTicketPurchased)? \'season-pass__reward-status_lock\' : \'\' %>"></div>\n                            <div class="season-pass__reward-icon">\n                                <img class="season-pass__reward-icon-img" src="<%= purchasedReward.image %>">\n                            </div>\n                        </div>\n                        <div class="season-pass__reward-info"><%= SeasonPassController.getRewardInfoText(purchasedReward) %></div>\n                    </div>\n                </div>\n            </div>\n            <% } %>\n            \n            <div class="season-pass__key <%= (key.isAvailable)? \'season-pass__key_open\' : \'\'%> <%= (keyIsTaken)? \'season-pass__key_taken\' : \'\'%>" id="seasonPassKey">\n                <div class="season-pass__key-icon" id="seasonPassKeyIcon">\n                    <% if (!keyIsTaken) { %>\n                    <img id="seasonPassKeyIconImg" class="season-pass__key-icon-img" src="<%= Application.params.seasonPassStotsUrl + keyInfo.alias + \'.png\' %>">\n                    <% } %>\n                </div>\n                <div class="season-pass__key-content">\n                <% if (keyIsTaken) { %>\n                    <div class="season-pass__key-title">Ключ получен!</div>\n                    <div class="season-pass__key-info">Заработай больше ключей в новых сезонах.</div>\n                <% } else { %>\n                    <div class="season-pass__key-title"><%= keyInfo.name %></div>\n                    <% if (key.isAvailable) { %>\n                    <div class="season-pass__key-btn <%= (chest.keysCount == chest.userKeys.length)? \'g-disabled\' : \'\'%>" id="seasonPassKeyBtn">Забрать</div>\n                    <div class="season-pass__key-info g-hidden">Заработай больше ключей в новых сезонах.</div>\n                    <% } else { %>\n                    <div class="season-pass__key-info">Собери все награды, чтобы забрать ключ из сезона.</div>\n                    <% } %>\n                <% } %>\n                </div>\n                <div class="season-pass__key-progress">\n                    <% if (key.isAvailable || info.currentLevel < levels.length - 1) { %>\n                    <div class="season-pass__key-progress-data"></div>\n                    <% } else { %>\n                    <div class="season-pass__level-progress-data" style="height: <%= Math.floor(info.currentLevelTokensCount / _.last(levels).tokens * 100) %>%"></div>\n                    <% } %>\n                </div>\n            </div>\n            <!-- /key -->\n\n        </div>\n        <!-- /rewards -->\n\n        <div class="season-pass__bonus" style="background-image: url(\'<%= chest.backgroundImage %>\')">\n            <div class="season-pass__bonus-title">Бонусная награда!</div>\n            <div class="season-pass__bonus-description">Собери все ключи и открой сундук.</div>\n            <div class="season-pass__bonus-keys">\n                <% for (i = 0; i < chest.keysCount; i += 1) { %>\n                    <% if (chest.userKeys[i]) { %>\n                    <div class="season-pass__bonus-keys-item">\n                        <img class="season-pass__bonus-keys-icon" src="<%= Application.params.seasonPassStotsUrl + chest.userKeys[i] + \'.png\' %>">\n                    </div>\n                    <% } else { %>\n                    <div class="season-pass__bonus-keys-item" id="<%= (i == chest.userKeys.length)? \'seasonPassKeySlot\' : \'\' %>">\n                        <img class="season-pass__bonus-keys-icon" id="<%= (i == chest.userKeys.length)? \'seasonPassKeySlotImg\' : \'\' %>" src="<%= Application.params.staticUrl %>images/app/season-pass/key.png">\n                        <% if (i == chest.userKeys.length) { %>\n                        <img class="season-pass__bonus-keys-shine" id="seasonPassKeySlotShine" src="<%= Application.params.staticUrl %>images/app/season-pass/key-shine.png">\n                        <% } %>\n                    </div>\n                    <% } %>\n                <% } %>\n            </div>\n            <div class="season-pass__bonus-chest \n                <%= (chest.state == \'closed\')? \'season-pass__bonus-chest_closed\' : \'\' %>\n                <%= (chest.isRewardAvailable)? \'season-pass__bonus-chest_available\' : \'\' %>">\n                <img id="seasonPassChest" class="season-pass__bonus-chest-icon" src="<%= chest.closedChestImage %>">\n            </div>\n        </div>\n        <!-- / bonus chest -->\n    </div>\n\n</div>';
	}),
	define(
		"screens/seasonPass/index",
		[
			"gate",
			"application",
			"widget",
			"controllers/gameanalytics",
			"controllers/onboarding",
			"controllers/usedesk",
			"controllers/seasonPass",
			"collections/popups",
			"models/user",
			"models/seasonPass/main",
			"models/seasonPass/chest",
			"models/appState",
			"models/wardrobe/patterns",
			"text!screens/seasonPass/index.html!strip",
		],
		function (e, t, n, r, i, s, o, u, a, f, l, c, h, p) {
			var d = n.extend({
				template: _.template(p),
				el: "#screenContainer",
				events: {
					"click #backButton": function () {
						c.previousScreen();
					},
					"click #seasonPassInfoBtn": function () {
						s.showInfoPopup("seasonPass");
					},
					"click .season-pass__reward_lootBox": "showRewardInfo",
					"click .season-pass__reward_clothesItem": "showRewardInfo",
					"click .season-pass__reward_available": "availableRewardHandler",
					"click #seasonPassTicketBtn": "ticketPurchaseHandler",
					"click #seasonPassKeyBtn": "keyHandler",
					"click #seasonPassChest": "seasonPassChestHandler",
				},
				initialize: function (e) {
					var n = this;
					(this.scroll = 0),
						(this.timerInterval = 10),
						(this.model = f),
						(this.firstRewardTaken = this.model.get("levels")[0].freeReward.isTaken),
						(this.onboardingShown = i.get("seasonPassSlot")),
						this.listenTo(this.model, "change", this.reRender),
						this.listenTo(l, "change", this.reRender),
						(this.viewParam = {
							Application: t,
							SeasonPassChestModel: l,
							UserModel: a,
							SeasonPassController: o,
						}),
						i.get("seasonPassSlot") && o.showPlannedPurchasePopup();
				},
				reRender: function () {
					(this.scroll = $("#seasonPassContent").scrollTop()), this.render();
				},
				afterRender: function () {
					this.scrollContent(),
						this.initOnboarding(),
						o.drawTimerCanvas(),
						this.timerUpdate(),
						this.timerStart();
				},
				scrollContent: function () {
					var e = o.getCurrentLevel();
					e > 1 && this.scroll == 0 && this.firstRewardTaken
						? this.scrollToReward()
						: $("#seasonPassContent").scrollTop(this.scroll);
				},
				scrollToReward: function () {
					var e = 0,
						t,
						n,
						r,
						i,
						s,
						u,
						a,
						f = $("#seasonPassContent"),
						l = f.height(),
						c = f.offset().top,
						h = !1,
						p = o.getKeyLevel();
					(i = $(".season-pass__reward_available").first()),
						(s = i ? i.data("index") : null),
						(u = $(".season-pass__reward_taken").last()),
						(a = u ? u.data("index") : null),
						s != null
							? (t = $("#level" + s))
							: a != p - 1
							? (t = $("#level" + a))
							: ((t = $("#seasonPassKey")), (h = !0)),
						(n = t.height()),
						(r = t.offset().top),
						h ? (e = r - c) : (e = r - c + n / 2 - l / 2),
						f.scrollTop(e);
				},
				availableRewardHandler: function (t) {
					var n = $(t.currentTarget);
					n.removeClass("season-pass__reward_available");
					var r = n.data("index"),
						i = this.getRewardType(n),
						s = this.model.get("levels")[r],
						o = s.levelId,
						a = s[i + "Reward"],
						f =
							a.userRewards &&
							!_.isEmpty(a.userRewards) &&
							a.userRewards[0].rewardType == "clothesPatternsOnceConst";
					if (!_.isEmpty(a.lootBox) || !f) e.seasonPassGetLevelReward(o, i);
					else if (f) {
						var l = a.userRewards[0].info.category,
							c = h.getCurrentCountByCategory(l),
							p = h.getMaxCountByCategory(l);
						c >= p
							? (u.add({
									type: "wardrobe.patternLimit",
									params: {
										category: l,
										currentCount: c,
										maxCount: p,
									},
							  }),
							  n.addClass("season-pass__reward_available"))
							: e.seasonPassGetLevelReward(o, i);
					}
				},
				getRewardType: function (e) {
					return e.hasClass("season-pass__reward_free") ? "free" : "purchased";
				},
				ticketPurchaseHandler: function () {
					o.showPurchasePopup();
				},
				showRewardInfo: function (e) {
					var t = $(e.currentTarget),
						n = t.data("index"),
						r = this.getRewardType(t);
					u.add({
						type: "seasonPass.rewardInfo",
						params: {
							reward: this.model.get("levels")[n][r + "Reward"],
						},
					});
				},
				initOnboarding: function () {
					this.firstRewardTaken && !this.onboardingShown
						? i.set("seasonPassSlot", !0)
						: this.onboardingShown || this.showOnboarding();
				},
				showOnboarding: function () {
					$("#cover").show(),
						$("#seasonPassContent").css({
							overflow: "visible",
						}),
						$("#onboardingSlot").addClass("b-onboarding b-onboarding_seasonPass-slot"),
						$("#cover").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding").on("click", this.closeOnboarding.bind(this)),
						$(".b-onboarding__text").on("click", this.closeOnboarding.bind(this));
				},
				closeOnboarding: function (e) {
					$("#seasonPassContent").css({
						overflow: "auto",
					}),
						$("#cover").off("click"),
						$(".b-onboarding").off("click"),
						$(".b-onboarding__text").off("click"),
						$("#cover").hide(),
						$("#onboardingSlot").removeClass("b-onboarding b-onboarding_seasonPass-slot"),
						i.set("seasonPassSlot", !0),
						(this.onboardingShown = !0);
				},
				timerStart: function () {
					var e = this,
						t = o.getElapsedTimeInterval();
					t < 60 + this.timerInterval && (this.timerInterval = 1),
						this.timerStop(),
						(this.timer = setInterval(this.timerUpdate.bind(e), this.timerInterval * 1e3));
				},
				timerStop: function () {
					this.timer && clearInterval(this.timer);
				},
				timerUpdate: function () {
					var e = o.getElapsedTimeInterval();
					e < 0
						? (this.timerStop(),
						  c.setScreen({
								screen: "index",
						  }))
						: e < 60 + this.timerInterval && this.timerInterval != 1
						? ((this.timerInterval = 1), this.timerStop(), this.timerStart())
						: $("#seasonPassTimer").text(t.methods.getFormattedTime(e * 1e3));
				},
				keyHandler: function () {
					var t = l.get("data"),
						n = t.keysCount,
						r = t.userKeys.length;
					if (n > r) {
						var i = $("#seasonPassKeyBtn");
						i.addClass("g-disabled").attr("id", "");
						var s = this.model.get("levels")[o.getKeyLevel()].levelId,
							a = "free",
							f = $("#seasonPassProgressStatus"),
							c = $("#seasonPassProgressStatusKey"),
							h = $("#seasonPassProgressStatusComplete"),
							p = $("#seasonPassKey"),
							d = $("#seasonPassKeyIcon"),
							v = $("#seasonPassKeyIconImg"),
							m = $("#seasonPassKeySlot"),
							g = $("#seasonPassKeySlotImg"),
							y = $("#seasonPassKeySlotShine"),
							b = {
								x: d.offset().left,
								y: d.offset().top,
							},
							w = {
								x: m.offset().left - b.x,
								y: m.offset().top - b.y,
							};
						v.css({
							position: "absolute",
						}),
							v.css({
								transform: "scale(1.4)",
							}),
							v.animate(
								{
									azimuth: 1,
								},
								400,
								function () {
									v.animate(
										{
											top: w.y,
											left: w.x,
										},
										400,
										function () {
											v.css({
												transform: "scale(1)",
											}),
												g.css({
													opacity: 0,
												}),
												p
													.addClass("season-pass__key_taken")
													.find(".season-pass__key-content")
													.html(
														'<div class="season-pass__key-title">Ключ получен!</div> <div class="season-pass__key-info">Заработай больше ключей в новых сезонах.</div>'
													),
												v.animate(
													{
														azimuth: 1,
													},
													200,
													function () {
														y.show(),
															f
																.addClass("season-pass__progress-status_complete")
																.removeClass("season-pass__progress-status_key"),
															c.addClass("g-hidden"),
															h.removeClass("g-hidden"),
															e.seasonPassGetLevelReward(s, a);
													}
												);
										}
									);
								}
							);
					} else
						u.add({
							type: "seasonPass.keysCount",
						});
				},
				seasonPassChestHandler: function (t) {
					var n = $(t.currentTarget);
					n.parent().hasClass("season-pass__bonus-chest_available")
						? e.chestOpen()
						: u.add({
								type: "seasonPass.rewardInfo",
								params: {
									reward: l.get("data"),
								},
						  });
				},
			});
			return d;
		}
	),
	define(
		"views/app",
		[
			"backbone",
			"gate",
			"application",
			"models/appState",
			"models/user",
			"models/life",
			"collections/popups",
			"collections/campaigns",
			"views/widgets/campaign",
			"collections/currentTourneys",
			"controllers/lastPlayedRound",
			"controllers/popups",
			"controllers/notifications",
			"widgets/sideBar/sideBar",
			"screens/index",
			"screens/achievements",
			"screens/notifications",
			"screens/finder",
			"screens/quest/list",
			"screens/quest/disabled",
			"screens/pvp/game",
			"screens/pvp/result",
			"screens/balance/products",
			"screens/balance/freeCoins",
			"screens/wardrobe/index",
			"screens/wardrobe/workshop",
			"screens/wardrobe/dissection",
			"screens/wardrobe/create",
			"screens/wardrobe/shop",
			"screens/wardrobe/shopBundle",
			"screens/profile/index",
			"screens/profile/rating",
			"screens/profile/games",
			"screens/profile/clan",
			"screens/profile/tourney",
			"screens/profile/library",
			"screens/profile/achievement",
			"screens/dailyReward",
			"screens/dailyWord/view",
			"screens/dailyWord/dictionary",
			"screens/dailyWord/offer",
			"screens/settings/index",
			"screens/help/index",
			"screens/help/howToPlay",
			"screens/help/feedback",
			"screens/help/usedeskKB",
			"screens/chat/list",
			"screens/chat/messages",
			"screens/chat/finder",
			"screens/chat/blockedOpponentsList",
			"screens/tourneys/index",
			"screens/tourneys/disabled",
			"screens/tourneys/game",
			"screens/tourneys/roundResult",
			"screens/tourneys/result",
			"screens/tourneys/history",
			"screens/tourneys/top",
			"screens/tourneys/balance",
			"screens/rating",
			"screens/season",
			"screens/library",
			"screens/clan/index",
			"screens/clan/settings",
			"screens/clan/task",
			"screens/clan/game",
			"screens/clan/usersList",
			"screens/clan/start",
			"screens/clan/view",
			"screens/clan/top",
			"screens/clan/safe/index",
			"screens/clan/safe/game",
			"screens/tutorial/game",
			"screens/tutorial/stats",
			"screens/chase/shop",
			"screens/chase/leaders",
			"screens/seasonPass/index",
		],
		function (
			e,
			t,
			n,
			r,
			i,
			s,
			o,
			u,
			a,
			f,
			l,
			c,
			h,
			p,
			d,
			v,
			m,
			g,
			y,
			b,
			w,
			E,
			S,
			x,
			T,
			N,
			C,
			k,
			L,
			A,
			O,
			M,
			_,
			D,
			P,
			H,
			B,
			j,
			F,
			I,
			q,
			R,
			U,
			z,
			W,
			X,
			V,
			J,
			K,
			Q,
			G,
			Y,
			Z,
			et,
			tt,
			nt,
			rt,
			it,
			st,
			ot,
			ut,
			at,
			ft,
			lt,
			ct,
			ht,
			pt,
			dt,
			vt,
			mt,
			gt,
			yt,
			bt,
			wt,
			Et,
			St
		) {
			var xt = e.View.extend({
				el: "#app",
				screens: {},
				campaigns: [],
				getScreenList: function () {
					return {
						index: d,
						achievements: v,
						finder: g,
						notifications: m,
						chatList: V,
						chat: J,
						chatFinder: K,
						blockedOpponentsList: Q,
						settings: R,
						help: U,
						howToPlay: z,
						feedback: W,
						"usedesk.KB": X,
						products: S,
						freeCoins: x,
						dailyReward: j,
						"dailyWord.view": F,
						"dailyWord.dictionary": I,
						"dailyWord.offer": q,
						"wardrobe.index": T,
						"wardrobe.workshop": N,
						"wardrobe.dissection": C,
						"wardrobe.create": k,
						"wardrobe.shop": L,
						"wardrobe.shop.bundle": A,
						"tourney.index": G,
						"tourney.disabled": Y,
						"tourney.game": Z,
						"tourney.roundResult": et,
						"tourney.result": tt,
						"tourney.history": nt,
						"tourney.top": rt,
						"tourney.balance": it,
						rating: st,
						season: ot,
						library: ut,
						quest: y,
						questDisabled: b,
						"pvp.game": w,
						"pvp.result": E,
						userInfo: O,
						profileRating: M,
						profileGames: _,
						profileClan: D,
						profileTourney: P,
						profileLibrary: H,
						profileAchievement: B,
						clan: at,
						clanSettings: ft,
						clanTask: lt,
						clanBattle: ct,
						clanUsersList: ht,
						clanStart: pt,
						clanView: dt,
						clanTop: vt,
						clanSafe: mt,
						clanSafeGame: gt,
						tutorialGame: yt,
						tutorialStats: bt,
						"chase.shop": wt,
						"chase.leaders": Et,
						seasonPass: St,
					};
				},
				initialize: function () {
					(this.model = r),
						(this.screens = this.getScreenList()),
						this.model.on("screenChange", this.setScreen, this),
						t.getFriends(i),
						this.model.setScreen({
							screen: "index",
						});
					if (n.params.campaignTargets.length > 0)
						for (var e = 0; e < n.params.campaignTargets.length; e++)
							this.campaigns.push(new a(n.params.campaignTargets[e]));
					$("#screenContainer").removeClass("l-screen_splash"), new p();
				},
				setScreen: function (e) {
					if (e.isNew) {
						var t = this.model.get("screen"),
							n = this.model.get("params") ? this.model.get("params") : {};
						if (!this.screens[t].prototype.checkScreenCondition(n)) return;
						this.model.screenObj = new this.screens[t](n);
					}
					this.activeScreen ? this.activeScreen.clearEvents() : "",
						(this.activeScreen = this.model.screenObj),
						this.render();
				},
				render: function () {
					this.activeScreen.render(), this.model.trigger("screenRender"), c.render(), h.render();
					if (this.campaigns.length > 0)
						for (var e = 0; e < this.campaigns.length; e++) this.campaigns[e].render();
					return this;
				},
			});
			return xt;
		}
	),
	(function (e, t, n, r) {
		e.ion = e.ion || {};
		if (ion.sound) return;
		var i = function (t) {
				t || (t = "undefined");
				if (e.console) {
					console.warn && typeof console.warn == "function"
						? console.warn(t)
						: console.log && typeof console.log == "function" && console.log(t);
					var r = n && n("#debug");
					if (r && r.length) {
						var i = r.html();
						r.html(i + t + "<br/>");
					}
				}
			},
			s = function (e, t) {
				var n;
				t = t || {};
				for (n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
				return t;
			};
		if (typeof Audio != "function" && typeof Audio != "object") {
			var o = function () {
				i("HTML5 Audio is not supported in this browser");
			};
			(ion.sound = o),
				(ion.sound.play = o),
				(ion.sound.stop = o),
				(ion.sound.pause = o),
				(ion.sound.preload = o),
				(ion.sound.destroy = o),
				o();
			return;
		}
		var u = /iPad|iPhone|iPod/.test(t.appVersion),
			a = 0,
			f = {},
			l = {},
			c;
		!f.supported && u
			? (f.supported = ["mp3", "mp4", "aac"])
			: f.supported || (f.supported = ["mp3", "ogg", "mp4", "aac", "wav"]);
		var h = function (e) {
			var t = e.alias || e.name;
			l[t] || ((l[t] = new v(e)), l[t].init());
		};
		(ion.sound = function (e) {
			s(e, f),
				(f.path = f.path || ""),
				(f.volume = f.volume || 1),
				(f.preload = f.preload || !1),
				(f.multiplay = f.multiplay || !1),
				(f.loop = f.loop || !1),
				(f.sprite = f.sprite || null),
				(f.scope = f.scope || null),
				(f.ready_callback = f.ready_callback || null),
				(f.ended_callback = f.ended_callback || null),
				(a = f.sounds.length);
			if (!a) {
				i("No sound-files provided!");
				return;
			}
			for (c = 0; c < a; c++) h(f.sounds[c]);
		}),
			(ion.sound.VERSION = "3.0.7"),
			(ion.sound._method = function (e, t, n) {
				if (t) l[t] && l[t][e](n);
				else
					for (c in l) {
						if (!l.hasOwnProperty(c) || !l[c]) continue;
						l[c][e](n);
					}
			}),
			(ion.sound.preload = function (e, t) {
				(t = t || {}),
					s(
						{
							preload: !0,
						},
						t
					),
					ion.sound._method("init", e, t);
			}),
			(ion.sound.destroy = function (e) {
				ion.sound._method("destroy", e);
				if (e) l[e] = null;
				else
					for (c in l) {
						if (!l.hasOwnProperty(c)) continue;
						l[c] && (l[c] = null);
					}
			}),
			(ion.sound.play = function (e, t) {
				ion.sound._method("play", e, t);
			}),
			(ion.sound.stop = function (e, t) {
				ion.sound._method("stop", e, t);
			}),
			(ion.sound.pause = function (e, t) {
				ion.sound._method("pause", e, t);
			}),
			(ion.sound.volume = function (e, t) {
				ion.sound._method("volume", e, t);
			}),
			n && (n.ionSound = ion.sound);
		var p = e.AudioContext || e.webkitAudioContext,
			d;
		p && (d = new p());
		var v = function (e) {
			(this.options = s(f)),
				delete this.options.sounds,
				s(e, this.options),
				(this.request = null),
				(this.streams = {}),
				(this.result = {}),
				(this.ext = 0),
				(this.url = ""),
				(this.loaded = !1),
				(this.decoded = !1),
				(this.no_file = !1),
				(this.autoplay = !1);
		};
		v.prototype = {
			init: function (e) {
				e && s(e, this.options), this.options.preload && this.load();
			},
			destroy: function () {
				var e;
				for (c in this.streams) (e = this.streams[c]), e && (e.destroy(), (e = null));
				(this.streams = {}),
					(this.result = null),
					(this.options.buffer = null),
					(this.options = null),
					this.request &&
						(this.request.removeEventListener("load", this.ready.bind(this), !1),
						this.request.removeEventListener("error", this.error.bind(this), !1),
						this.request.abort(),
						(this.request = null));
			},
			createUrl: function () {
				var e = "";
				this.options.cache && (e = "?" + new Date().valueOf()),
					(this.url =
						this.options.path +
						encodeURIComponent(this.options.name) +
						"." +
						this.options.supported[this.ext] +
						e);
			},
			load: function () {
				if (this.no_file) {
					i('No sources for "' + this.options.name + '" sound :(');
					return;
				}
				if (this.request) return;
				this.createUrl(),
					(this.request = new XMLHttpRequest()),
					this.request.open("GET", this.url, !0),
					(this.request.responseType = "arraybuffer"),
					this.request.addEventListener("load", this.ready.bind(this), !1),
					this.request.addEventListener("error", this.error.bind(this), !1),
					this.request.send();
			},
			reload: function () {
				this.ext++,
					this.options.supported[this.ext]
						? this.load()
						: ((this.no_file = !0), i('No sources for "' + this.options.name + '" sound :('));
			},
			ready: function (e) {
				this.result = e.target;
				if (this.result.readyState !== 4) {
					this.reload();
					return;
				}
				if (this.result.status !== 200 && this.result.status !== 0) {
					i(this.url + " was not found on server!"), this.reload();
					return;
				}
				this.request.removeEventListener("load", this.ready.bind(this), !1),
					this.request.removeEventListener("error", this.error.bind(this), !1),
					(this.request = null),
					(this.loaded = !0),
					this.decode();
			},
			decode: function () {
				if (!d) return;
				d.decodeAudioData(this.result.response, this.setBuffer.bind(this), this.error.bind(this));
			},
			setBuffer: function (e) {
				(this.options.buffer = e), (this.decoded = !0);
				var t = {
					name: this.options.name,
					alias: this.options.alias,
					ext: this.options.supported[this.ext],
					duration: this.options.buffer.duration,
				};
				this.options.ready_callback &&
					typeof this.options.ready_callback == "function" &&
					this.options.ready_callback.call(this.options.scope, t);
				if (this.options.sprite)
					for (c in this.options.sprite)
						(this.options.start = this.options.sprite[c][0]),
							(this.options.end = this.options.sprite[c][1]),
							(this.streams[c] = new m(this.options, c));
				else this.streams[0] = new m(this.options);
				this.autoplay && ((this.autoplay = !1), this.play());
			},
			error: function () {
				this.reload();
			},
			play: function (e) {
				delete this.options.part, e && s(e, this.options);
				if (!this.loaded) {
					(this.autoplay = !0), this.load();
					return;
				}
				if (this.no_file || !this.decoded) return;
				if (this.options.sprite)
					if (this.options.part) this.streams[this.options.part].play(this.options);
					else for (c in this.options.sprite) this.streams[c].play(this.options);
				else this.streams[0].play(this.options);
			},
			stop: function (e) {
				if (this.options.sprite)
					if (e) this.streams[e.part].stop();
					else for (c in this.options.sprite) this.streams[c].stop();
				else this.streams[0].stop();
			},
			pause: function (e) {
				if (this.options.sprite)
					if (e) this.streams[e.part].pause();
					else for (c in this.options.sprite) this.streams[c].pause();
				else this.streams[0].pause();
			},
			volume: function (e) {
				var t;
				if (!e) return;
				s(e, this.options);
				if (this.options.sprite)
					if (this.options.part)
						(t = this.streams[this.options.part]), t && t.setVolume(this.options);
					else for (c in this.options.sprite) (t = this.streams[c]), t && t.setVolume(this.options);
				else (t = this.streams[0]), t && t.setVolume(this.options);
			},
		};
		var m = function (e, t) {
			(this.alias = e.alias),
				(this.name = e.name),
				(this.sprite_part = t),
				(this.buffer = e.buffer),
				(this.start = e.start || 0),
				(this.end = e.end || this.buffer.duration),
				(this.multiplay = e.multiplay || !1),
				(this.volume = e.volume || 1),
				(this.scope = e.scope),
				(this.ended_callback = e.ended_callback),
				this.setLoop(e),
				(this.source = null),
				(this.gain = null),
				(this.playing = !1),
				(this.paused = !1),
				(this.time_started = 0),
				(this.time_ended = 0),
				(this.time_played = 0),
				(this.time_offset = 0);
		};
		m.prototype = {
			destroy: function () {
				this.stop(),
					(this.buffer = null),
					(this.source = null),
					this.gain && this.gain.disconnect(),
					this.source && this.source.disconnect(),
					(this.gain = null),
					(this.source = null);
			},
			setLoop: function (e) {
				e.loop === !0
					? (this.loop = 9999999)
					: typeof e.loop == "number"
					? (this.loop = +e.loop - 1)
					: (this.loop = !1);
			},
			update: function (e) {
				this.setLoop(e), "volume" in e && (this.volume = e.volume);
			},
			play: function (e) {
				e && this.update(e);
				if (!this.multiplay && this.playing) return;
				(this.gain = d.createGain()),
					(this.source = d.createBufferSource()),
					(this.source.buffer = this.buffer),
					this.source.connect(this.gain),
					this.gain.connect(d.destination),
					(this.gain.gain.value = this.volume),
					(this.source.onended = this.ended.bind(this)),
					this._play();
			},
			_play: function () {
				var e, t;
				this.paused
					? ((e = this.start + this.time_offset), (t = this.end - this.time_offset))
					: ((e = this.start), (t = this.end));
				if (t <= 0) {
					this.clear();
					return;
				}
				typeof this.source.start == "function"
					? this.source.start(0, e, t)
					: this.source.noteOn(0, e, t),
					(this.playing = !0),
					(this.paused = !1),
					(this.time_started = new Date().valueOf());
			},
			stop: function () {
				this.playing &&
					this.source &&
					(typeof this.source.stop == "function" ? this.source.stop(0) : this.source.noteOff(0)),
					this.clear();
			},
			pause: function () {
				if (this.paused) {
					this.play();
					return;
				}
				if (!this.playing) return;
				this.source && this.source.stop(0), (this.paused = !0);
			},
			ended: function () {
				(this.playing = !1),
					(this.time_ended = new Date().valueOf()),
					(this.time_played = (this.time_ended - this.time_started) / 1e3),
					(this.time_offset += this.time_played);
				if (this.time_offset >= this.end || this.end - this.time_offset < 0.015)
					this._ended(), this.clear(), this.loop && (this.loop--, this.play());
			},
			_ended: function () {
				var e = {
					name: this.name,
					alias: this.alias,
					part: this.sprite_part,
					start: this.start,
					duration: this.end,
				};
				this.ended_callback &&
					typeof this.ended_callback == "function" &&
					this.ended_callback.call(this.scope, e);
			},
			clear: function () {
				(this.time_played = 0), (this.time_offset = 0), (this.paused = !1), (this.playing = !1);
			},
			setVolume: function (e) {
				(this.volume = e.volume), this.gain && (this.gain.gain.value = this.volume);
			},
		};
		if (d) return;
		var g = function () {
			var e = new Audio(),
				t = e.canPlayType("audio/mpeg"),
				n = e.canPlayType("audio/ogg"),
				r = e.canPlayType('audio/mp4; codecs="mp4a.40.2"'),
				i,
				s;
			for (s = 0; s < f.supported.length; s++)
				(i = f.supported[s]),
					!t && i === "mp3" && f.supported.splice(s, 1),
					!n && i === "ogg" && f.supported.splice(s, 1),
					!r && i === "aac" && f.supported.splice(s, 1),
					!r && i === "mp4" && f.supported.splice(s, 1);
			e = null;
		};
		g(),
			(v.prototype = {
				init: function (e) {
					e && s(e, this.options), (this.inited = !0), this.options.preload && this.load();
				},
				destroy: function () {
					var e;
					for (c in this.streams) (e = this.streams[c]), e && (e.destroy(), (e = null));
					(this.streams = {}), (this.loaded = !1), (this.inited = !1);
				},
				load: function () {
					var e;
					(this.options.preload = !0),
						(this.options._ready = this.ready),
						(this.options._scope = this);
					if (this.options.sprite)
						for (c in this.options.sprite)
							(e = this.options.sprite[c]),
								(this.options.start = e[0]),
								(this.options.end = e[1]),
								(this.streams[c] = new m(this.options, c));
					else this.streams[0] = new m(this.options);
				},
				ready: function (e) {
					if (this.loaded) return;
					this.loaded = !0;
					var t = {
						name: this.options.name,
						alias: this.options.alias,
						ext: this.options.supported[this.ext],
						duration: e,
					};
					this.options.ready_callback &&
						typeof this.options.ready_callback == "function" &&
						this.options.ready_callback.call(this.options.scope, t),
						this.autoplay && ((this.autoplay = !1), this.play());
				},
				play: function (e) {
					if (!this.inited) return;
					delete this.options.part, e && s(e, this.options), console.log(1);
					if (!this.loaded) {
						this.options.preload ? (this.autoplay = !0) : ((this.autoplay = !0), this.load());
						return;
					}
					if (this.options.sprite)
						if (this.options.part) this.streams[this.options.part].play(this.options);
						else for (c in this.options.sprite) this.streams[c].play(this.options);
					else this.streams[0].play(this.options);
				},
				stop: function (e) {
					if (!this.inited) return;
					if (this.options.sprite)
						if (e) this.streams[e.part].stop();
						else for (c in this.options.sprite) this.streams[c].stop();
					else this.streams[0].stop();
				},
				pause: function (e) {
					if (!this.inited) return;
					if (this.options.sprite)
						if (e) this.streams[e.part].pause();
						else for (c in this.options.sprite) this.streams[c].pause();
					else this.streams[0].pause();
				},
				volume: function (e) {
					var t;
					if (!e) return;
					s(e, this.options);
					if (this.options.sprite)
						if (this.options.part)
							(t = this.streams[this.options.part]), t && t.setVolume(this.options);
						else
							for (c in this.options.sprite) (t = this.streams[c]), t && t.setVolume(this.options);
					else (t = this.streams[0]), t && t.setVolume(this.options);
				},
			}),
			(m = function (e, t) {
				(this.name = e.name),
					(this.alias = e.alias),
					(this.sprite_part = t),
					(this.multiplay = e.multiplay),
					(this.volume = e.volume),
					(this.preload = e.preload),
					(this.path = f.path),
					(this.start = e.start || 0),
					(this.end = e.end || 0),
					(this.scope = e.scope),
					(this.ended_callback = e.ended_callback),
					(this._scope = e._scope),
					(this._ready = e._ready),
					this.setLoop(e),
					(this.sound = null),
					(this.url = null),
					(this.loaded = !1),
					(this.start_time = 0),
					(this.paused_time = 0),
					(this.played_time = 0),
					this.init();
			}),
			(m.prototype = {
				init: function () {
					(this.sound = new Audio()),
						(this.sound.volume = this.volume),
						this.createUrl(),
						this.sound.addEventListener("ended", this.ended.bind(this), !1),
						this.sound.addEventListener("canplaythrough", this.can_play_through.bind(this), !1),
						this.sound.addEventListener("timeupdate", this._update.bind(this), !1),
						this.load();
				},
				destroy: function () {
					this.stop(),
						this.sound.removeEventListener("ended", this.ended.bind(this), !1),
						this.sound.removeEventListener("canplaythrough", this.can_play_through.bind(this), !1),
						this.sound.removeEventListener("timeupdate", this._update.bind(this), !1),
						(this.sound = null),
						(this.loaded = !1);
				},
				createUrl: function () {
					var e = new Date().valueOf();
					this.url = this.path + encodeURIComponent(this.name) + "." + f.supported[0] + "?" + e;
				},
				can_play_through: function () {
					this.preload && this.ready();
				},
				load: function () {
					(this.sound.src = this.url),
						(this.sound.preload = this.preload ? "auto" : "none"),
						this.preload && this.sound.load();
				},
				setLoop: function (e) {
					e.loop === !0
						? (this.loop = 9999999)
						: typeof e.loop == "number"
						? (this.loop = +e.loop - 1)
						: (this.loop = !1);
				},
				update: function (e) {
					this.setLoop(e), "volume" in e && (this.volume = e.volume);
				},
				ready: function () {
					if (this.loaded || !this.sound) return;
					(this.loaded = !0),
						this._ready.call(this._scope, this.sound.duration),
						this.end || (this.end = this.sound.duration);
				},
				play: function (e) {
					e && this.update(e);
					if (!this.multiplay && this.playing) return;
					this._play();
				},
				_play: function () {
					if (this.paused) this.paused = !1;
					else
						try {
							this.sound.currentTime = this.start;
						} catch (e) {}
					(this.playing = !0),
						(this.start_time = new Date().valueOf()),
						(this.sound.volume = this.volume),
						this.sound.play();
				},
				stop: function () {
					if (!this.playing) return;
					(this.playing = !1), (this.paused = !1), this.sound.pause(), this.clear();
					try {
						this.sound.currentTime = this.start;
					} catch (e) {}
				},
				pause: function () {
					this.paused
						? this._play()
						: ((this.playing = !1),
						  (this.paused = !0),
						  this.sound.pause(),
						  (this.paused_time = new Date().valueOf()),
						  (this.played_time += this.paused_time - this.start_time));
				},
				_update: function () {
					if (!this.start_time) return;
					var e = new Date().valueOf(),
						t = e - this.start_time,
						n = (this.played_time + t) / 1e3;
					n >= this.end && this.playing && (this.stop(), this._ended());
				},
				ended: function () {
					this.playing && (this.stop(), this._ended());
				},
				_ended: function () {
					this.playing = !1;
					var e = {
						name: this.name,
						alias: this.alias,
						part: this.sprite_part,
						start: this.start,
						duration: this.end,
					};
					this.ended_callback &&
						typeof this.ended_callback == "function" &&
						this.ended_callback.call(this.scope, e),
						this.loop && setTimeout(this.looper.bind(this), 15);
				},
				looper: function () {
					this.loop--, this.play();
				},
				clear: function () {
					(this.start_time = 0), (this.played_time = 0), (this.paused_time = 0);
				},
				setVolume: function (e) {
					(this.volume = e.volume), this.sound && (this.sound.volume = this.volume);
				},
			});
	})(window, navigator, window.jQuery || window.$),
	define("jqueryIonSound", ["jquery"], function () {}),
	define("controllers/sound", ["application", "jqueryIonSound"], function (e) {
		function t() {
			$.ionSound({
				sounds: this.sounds,
				volume: this.volume,
				path: "https://cdn.wordbyword.me/sounds/social/",
				preload: !0,
				supported: ["mp3", "ogg"],
				cache: !1,
			}),
				this.attachButtonClickEvent();
		}
		return (
			(t.prototype.volume = 0.8),
			(t.prototype.sounds = [
				{
					name: "tick",
				},
				{
					name: "click",
				},
				{
					name: "popup",
				},
				{
					name: "game_start_1",
				},
				{
					name: "game_start_2",
				},
				{
					name: "right",
				},
				{
					name: "super",
				},
				{
					name: "wau",
				},
				{
					name: "wrong",
				},
				{
					name: "repeated_word",
				},
				{
					name: "tip_ready",
				},
				{
					name: "tip_click",
				},
				{
					name: "bomb",
				},
				{
					name: "message_out",
				},
				{
					name: "message_in",
				},
				{
					name: "achievement",
				},
				{
					name: "finish_win",
				},
				{
					name: "finish_no_sides",
				},
				{
					name: "coins",
				},
				{
					name: "get_invite",
				},
				{
					name: "scores",
				},
				{
					name: "select_letter_1",
				},
				{
					name: "select_letter_2",
				},
				{
					name: "select_letter_3",
				},
				{
					name: "select_letter_4",
				},
				{
					name: "select_letter_5",
				},
				{
					name: "select_letter_6",
				},
				{
					name: "select_letter_7",
				},
				{
					name: "select_letter_8",
				},
				{
					name: "select_letter_9",
				},
				{
					name: "select_letter_10",
				},
				{
					name: "select_letter_11",
				},
				{
					name: "select_letter_12",
				},
				{
					name: "select_letter_13",
				},
				{
					name: "select_letter_14",
				},
				{
					name: "select_letter_15",
				},
				{
					name: "doubling",
				},
				{
					name: "fire_tap_1",
				},
				{
					name: "fire_tap_2",
				},
				{
					name: "fire_tap_3",
				},
				{
					name: "fire_tap_4",
				},
				{
					name: "fire_tap_5",
				},
				{
					name: "fire_tap_6",
				},
				{
					name: "fire_tap_7",
				},
				{
					name: "fire_tap_8",
				},
				{
					name: "fire_tap_9",
				},
				{
					name: "fire_tap_10",
				},
				{
					name: "fire_tap_11",
				},
				{
					name: "fire_tap_12",
				},
				{
					name: "fire_tap_13",
				},
				{
					name: "fire_tap_14",
				},
				{
					name: "turn",
				},
				{
					name: "change",
				},
				{
					name: "additional_score",
				},
				{
					name: "freeze_start",
				},
				{
					name: "freeze_loop",
					loop: !0,
				},
				{
					name: "fire_start",
				},
				{
					name: "fire_loop",
					loop: !0,
				},
				{
					name: "whisper",
				},
				{
					name: "timer_loop",
					loop: !0,
				},
				{
					name: "timer_preend",
				},
				{
					name: "timer_end",
				},
			]),
			(t.prototype.attachButtonClickEvent = function () {
				$(document).on("click", ".soundingButton", function () {
					e.params.sound && $.ionSound.play("click");
				}),
					$(document).on("click", ".b-btn-back", function () {
						e.params.sound && $.ionSound.play("click");
					}),
					$(document).on("visibilitychange", function () {
						document.visibilityState === "hidden" && $.ionSound.stop();
					});
			}),
			new t()
		);
	}),
	requirejs.config({
		paths: {
			jquery: "/js/libs/jquery",
			jqueryIonSound: "/js/libs/jquery.ion.sound",
			backbone: "/js/libs/backbone",
			resources: "/js/libs/resources-load",
			underscore: "/js/libs/underscore",
			simplebar: "/js/libs/simplebar",
			cryptojs: "/js/libs/crypto-js",
			clipboard: "/js/libs/clipboard.min",
			gameanalytics: "/js/libs/gameanalytics.min",
			vk: "/js/libs/vk-bridge",
			uuidv4: "/js/libs/uuidv4.min",
			itemslide: "/js/libs/itemslide.min",
			text: "/js/libs/require-text",
			moment: "/js/libs/moment",
			tweenMax: "/js/libs/tweenMax",
			sideswipe: "/js/libs/touch-sideswipe",
			application: "application",
			params: "params",
			methods: "methods",
			status: "status",
			popups: "views/popups",
			screens: "views/screens",
			widgets: "views/widgets",
			gate: "gates/gate-" + social,
			social: "controllers/social/factory",
			widget: "views/abstract/simpleWidget",
			canvasWidget: "views/abstract/canvasWidget",
			popupWidget: "views/abstract/popupWidget",
		},
		shim: {
			jqueryIonSound: {
				deps: ["jquery"],
			},
			itemslide: {
				deps: ["jquery"],
			},
		},
	}),
	require([
		"controllers/analytic",
		"widgets/splash/advice",
		"controllers/gameanalytics",
		"controllers/wardrobe",
		"controllers/badge/wardrobe",
		"controllers/dailyWord",
		"controllers/seasonPass",
		"controllers/clanSafe",
		"controllers/notifications",
		"gate",
		"moment",
		"status",
		"application",
		"models/user",
		"models/appState",
		"models/life",
		"models/gamePart",
		"models/clan/main",
		"models/library",
		"models/quest",
		"models/onboarding",
		"models/tutorial",
		"models/wardrobe/papers",
		"collections/popups",
		"views/app",
		"resources",
		"controllers/sound",
	], function (e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T) {
		$(function () {
			function r() {
				var e = socialPlatform == "html5_ios" ? "" : "/";
				l.locale("ru"),
					(window.requestAnimFrame = (function () {
						return (
							window.requestAnimationFrame ||
							window.webkitRequestAnimationFrame ||
							window.mozRequestAnimationFrame ||
							window.oRequestAnimationFrame ||
							window.msRequestAnimationFrame ||
							function (e, t) {
								window.setTimeout(e, 1e3 / 60);
							}
						);
					})()),
					(window.clearAnimation = (function () {
						return (
							window.cancelRequestAnimationFrame ||
							window.webkitCancelRequestAnimationFrame ||
							window.mozCancelRequestAnimationFrame ||
							window.oCancelRequestAnimationFrame ||
							window.msCancelRequestAnimationFrame ||
							function (e) {
								clearTimeout(e);
							}
						);
					})()),
					Resources.load([
						e + "images/app/field/cellMask.png",
						e + "images/app/field/cellSimple.png",
						e + "images/app/field/cellHold.png",
						e + "images/app/field/cellTip.png",
						e + "images/app/field/cellTipStart.png",
						e + "images/app/field/bonusLetter2.png",
						e + "images/app/field/bonusWord2.png",
						e + "images/app/field/bonusLetter3.png",
						e + "images/app/field/bonusWord3.png",
						e + "images/app/field/textBlack.png",
						e + "images/app/field/textWhite.png",
						e + "images/app/field/textTip.png",
						e + "images/app/field/textTipStart.png",
						e + "images/app/field/arrow.png",
						e + "images/app/howto/btn-word-cancel.png",
						e + "images/app/howto/btn-word-confirm.png",
						e + "images/app/sprites/elephant.png",
						e + "images/app/sprites/mouse.png",
						e + "images/app/sprites/cells.png",
						e + "images/app/sprites/textBlack.png",
						e + "images/app/sprites/textWhite.png",
						e + "images/app/tutorial/hand_field.png",
					]);
			}

			function i() {
				c("app")
					.dependence([
						"auth",
						"socket",
						"images",
						"social",
						"life",
						"gamePart",
						"clan",
						"clanSafe",
						"library",
						"quest",
						"wardrobe",
						"papers",
						"tutorial",
						"chase",
						"seasonPass",
					])
					.done(function () {
						n.sendDesignEvent("Session_start"), new T();
					}),
					Resources.onReady(function () {
						c("images").resolve();
					}),
					f.on("auth", function (e) {
						e.state != "error" && c("auth").resolve();
					}),
					c("socket").done(function () {
						c("social").done(function () {
							f.auth();
						}),
							c("social").isReady() || f.socialInit();
					}),
					f.on("userInfo", function (e) {
						a.setByType(e), p.setUserInfo(e.info);
					}),
					f.on("userQuestInfo", function (e) {
						a.setByType(e), b.update(e);
					}),
					(window.onbeforeunload = function () {
						f.socket.onclose = function () {};
					});
			}
			e.pageview("Загрузка"),
				new t({
					el: "#loaderText",
				}),
				r(),
				i();
		});
	}),
	define("main", function () {});
